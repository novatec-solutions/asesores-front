{"version":3,"file":"default-src_app_shared_material_module_ts.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAC2D;AACF;AACF;AACA;AACA;AACM;AACA;AACI;AACC;AACC;AACF;AACV;AACE;AACO;AACH;AACiB;AACnB;;AA2CpD,MAAM,cAAc;;4EAAd,cAAc;2GAAd,cAAc;+GAxChB;YACP,uEAAgB;YAChB,qEAAe;YACf,uEAAgB;YAChB,iEAAa;YACb,mEAAc;YACd,iEAAa;YACb,iEAAa;YACb,uEAAmB;YACnB,iEAAa;YACb,oEAAc;YACd,4EAAkB;YAClB,6EAAkB;YAClB,8EAAmB;YACnB,4EAAkB;YAClB,2EAAiB;YACjB,yFAAwB;YACxB,sEAAe;SAChB,EAEC,uEAAgB;QAChB,qEAAe;QACf,uEAAgB;QAChB,iEAAa;QACb,mEAAc;QACd,iEAAa;QACb,iEAAa;QACb,uEAAmB;QACnB,iEAAa;QACb,oEAAc;QACd,4EAAkB;QAClB,6EAAkB;QAClB,8EAAmB;QACnB,4EAAkB;QAClB,2EAAiB;QACjB,yFAAwB;QACxB,sEAAe;mIAIN,cAAc,cAvCvB,uEAAgB;QAChB,qEAAe;QACf,uEAAgB;QAChB,iEAAa;QACb,mEAAc;QACd,iEAAa;QACb,iEAAa;QACb,uEAAmB;QACnB,iEAAa;QACb,oEAAc;QACd,4EAAkB;QAClB,6EAAkB;QAClB,8EAAmB;QACnB,4EAAkB;QAClB,2EAAiB;QACjB,yFAAwB;QACxB,sEAAe,aAGf,uEAAgB;QAChB,qEAAe;QACf,uEAAgB;QAChB,iEAAa;QACb,mEAAc;QACd,iEAAa;QACb,iEAAa;QACb,uEAAmB;QACnB,iEAAa;QACb,oEAAc;QACd,4EAAkB;QAClB,6EAAkB;QAClB,8EAAmB;QACnB,4EAAkB;QAClB,2EAAiB;QACjB,yFAAwB;QACxB,sEAAe;;;;;;;;;;;;;;;;;;;ACxDwB;AACH;AACG;AACI;AACxC,kCAAkC,mDAAK;AAC9C,0BAA0B,oDAAM;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,mDAAU;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,kEAAuB;AACzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,sEAA2B;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;ACjF2C;AACpC;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,mDAAU;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;ACpBO;AACP;AACA;;;;;;;;;;;;;;;;;;;;;;ACFA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;;AACA,IAAIc,QAAQ,GAAG,CAAf;AACA;AACA;AACA;AACA;AACA;;AACA,MAAMC,aAAa,GAAG,IAAId,yDAAJ,CAAmB,cAAnB,CAAtB;AACA;AACA;AACA;;AACA,MAAMe,YAAN,CAAmB;AACfC,EAAAA,WAAW,GAAG;AACV;AACA,SAAKC,aAAL,GAAqB,IAAIP,yCAAJ,EAArB;AACA;;AACA,SAAKQ,oBAAL,GAA4B,IAAIR,yCAAJ,EAA5B;AACA;;AACA,SAAKS,EAAL,GAAW,iBAAgBN,QAAQ,EAAG,EAAtC;AACA,SAAKO,MAAL,GAAc,KAAd;AACH;AACD;;;AACS,MAALC,KAAK,GAAG;AACR,WAAO,KAAKD,MAAZ;AACH;;AACQ,MAALC,KAAK,CAACA,KAAD,EAAQ;AACb,SAAKD,MAAL,GAAcX,4EAAqB,CAACY,KAAD,CAAnC;AACH;AACD;;;AACAC,EAAAA,OAAO,GAAG;AACN,QAAI,KAAKF,MAAT,EAAiB;AACb,WAAKF,oBAAL,CAA0BK,IAA1B,CAA+B,IAA/B;AACH;AACJ;AACD;;;AACAC,EAAAA,QAAQ,GAAG;AACP,SAAKN,oBAAL,C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","sources":["./src/app/shared/material.module.ts","./node_modules/rxjs/_esm2015/internal/operators/delay.js","./node_modules/rxjs/_esm2015/internal/operators/mapTo.js","./node_modules/rxjs/_esm2015/internal/util/isDate.js","./node_modules/@angular/cdk/fesm2015/accordion.mjs","./node_modules/@angular/cdk/fesm2015/table.mjs","./node_modules/@angular/cdk/fesm2015/text-field.mjs","./node_modules/@angular/material/fesm2015/card.mjs","./node_modules/@angular/material/fesm2015/datepicker.mjs","./node_modules/@angular/material/fesm2015/dialog.mjs","./node_modules/@angular/material/fesm2015/divider.mjs","./node_modules/@angular/material/fesm2015/expansion.mjs","./node_modules/@angular/material/fesm2015/grid-list.mjs","./node_modules/@angular/material/fesm2015/icon.mjs","./node_modules/@angular/material/fesm2015/input.mjs","./node_modules/@angular/material/fesm2015/list.mjs","./node_modules/@angular/material/fesm2015/menu.mjs","./node_modules/@angular/material/fesm2015/progress-spinner.mjs","./node_modules/@angular/material/fesm2015/sidenav.mjs","./node_modules/@angular/material/fesm2015/table.mjs","./node_modules/@angular/material/fesm2015/toolbar.mjs"],"sourcesContent":["import { NgModule } from '@angular/core';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatListModule } from '@angular/material/list';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatExpansionModule } from '@angular/material/expansion';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatPaginatorModule } from '@angular/material/paginator';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatGridListModule } from '@angular/material/grid-list';\nimport { MatNativeDateModule } from '@angular/material/core';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatDialogModule } from '@angular/material/dialog';\n\n@NgModule({\n  imports: [    \n    MatToolbarModule,\n    MatButtonModule,\n    MatSidenavModule,\n    MatIconModule,\n    MatInputModule,\n    MatMenuModule,\n    MatListModule,\n    MatNativeDateModule,\n    MatCardModule,\n    MatTableModule,\n    MatExpansionModule,\n    MatFormFieldModule,\n    MatDatepickerModule,\n    MatPaginatorModule,\n    MatGridListModule,\n    MatProgressSpinnerModule,\n    MatDialogModule\n  ],\n  exports:[    \n    MatToolbarModule,\n    MatButtonModule,\n    MatSidenavModule,\n    MatIconModule,\n    MatInputModule,\n    MatMenuModule,\n    MatListModule,\n    MatNativeDateModule,\n    MatCardModule,\n    MatTableModule,\n    MatExpansionModule,\n    MatFormFieldModule,\n    MatDatepickerModule,\n    MatPaginatorModule,\n    MatGridListModule,\n    MatProgressSpinnerModule,\n    MatDialogModule\n  ],\n  declarations: []\n})\nexport class MaterialModule {}\n","import { async } from '../scheduler/async';\nimport { isDate } from '../util/isDate';\nimport { Subscriber } from '../Subscriber';\nimport { Notification } from '../Notification';\nexport function delay(delay, scheduler = async) {\n    const absoluteDelay = isDate(delay);\n    const delayFor = absoluteDelay ? (+delay - scheduler.now()) : Math.abs(delay);\n    return (source) => source.lift(new DelayOperator(delayFor, scheduler));\n}\nclass DelayOperator {\n    constructor(delay, scheduler) {\n        this.delay = delay;\n        this.scheduler = scheduler;\n    }\n    call(subscriber, source) {\n        return source.subscribe(new DelaySubscriber(subscriber, this.delay, this.scheduler));\n    }\n}\nclass DelaySubscriber extends Subscriber {\n    constructor(destination, delay, scheduler) {\n        super(destination);\n        this.delay = delay;\n        this.scheduler = scheduler;\n        this.queue = [];\n        this.active = false;\n        this.errored = false;\n    }\n    static dispatch(state) {\n        const source = state.source;\n        const queue = source.queue;\n        const scheduler = state.scheduler;\n        const destination = state.destination;\n        while (queue.length > 0 && (queue[0].time - scheduler.now()) <= 0) {\n            queue.shift().notification.observe(destination);\n        }\n        if (queue.length > 0) {\n            const delay = Math.max(0, queue[0].time - scheduler.now());\n            this.schedule(state, delay);\n        }\n        else {\n            this.unsubscribe();\n            source.active = false;\n        }\n    }\n    _schedule(scheduler) {\n        this.active = true;\n        const destination = this.destination;\n        destination.add(scheduler.schedule(DelaySubscriber.dispatch, this.delay, {\n            source: this, destination: this.destination, scheduler: scheduler\n        }));\n    }\n    scheduleNotification(notification) {\n        if (this.errored === true) {\n            return;\n        }\n        const scheduler = this.scheduler;\n        const message = new DelayMessage(scheduler.now() + this.delay, notification);\n        this.queue.push(message);\n        if (this.active === false) {\n            this._schedule(scheduler);\n        }\n    }\n    _next(value) {\n        this.scheduleNotification(Notification.createNext(value));\n    }\n    _error(err) {\n        this.errored = true;\n        this.queue = [];\n        this.destination.error(err);\n        this.unsubscribe();\n    }\n    _complete() {\n        this.scheduleNotification(Notification.createComplete());\n        this.unsubscribe();\n    }\n}\nclass DelayMessage {\n    constructor(time, notification) {\n        this.time = time;\n        this.notification = notification;\n    }\n}\n","import { Subscriber } from '../Subscriber';\nexport function mapTo(value) {\n    return (source) => source.lift(new MapToOperator(value));\n}\nclass MapToOperator {\n    constructor(value) {\n        this.value = value;\n    }\n    call(subscriber, source) {\n        return source.subscribe(new MapToSubscriber(subscriber, this.value));\n    }\n}\nclass MapToSubscriber extends Subscriber {\n    constructor(destination, value) {\n        super(destination);\n        this.value = value;\n    }\n    _next(x) {\n        this.destination.next(this.value);\n    }\n}\n","export function isDate(value) {\n    return value instanceof Date && !isNaN(+value);\n}\n","import * as i0 from '@angular/core';\nimport { InjectionToken, Directive, Input, EventEmitter, Optional, Inject, SkipSelf, Output, NgModule } from '@angular/core';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { Subject, Subscription } from 'rxjs';\nimport * as i1 from '@angular/cdk/collections';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Used to generate unique ID for each accordion. */\nlet nextId$1 = 0;\n/**\n * Injection token that can be used to reference instances of `CdkAccordion`. It serves\n * as alternative token to the actual `CdkAccordion` class which could cause unnecessary\n * retention of the class and its directive metadata.\n */\nconst CDK_ACCORDION = new InjectionToken('CdkAccordion');\n/**\n * Directive whose purpose is to manage the expanded state of CdkAccordionItem children.\n */\nclass CdkAccordion {\n    constructor() {\n        /** Emits when the state of the accordion changes */\n        this._stateChanges = new Subject();\n        /** Stream that emits true/false when openAll/closeAll is triggered. */\n        this._openCloseAllActions = new Subject();\n        /** A readonly id value to use for unique selection coordination. */\n        this.id = `cdk-accordion-${nextId$1++}`;\n        this._multi = false;\n    }\n    /** Whether the accordion should allow multiple expanded accordion items simultaneously. */\n    get multi() {\n        return this._multi;\n    }\n    set multi(multi) {\n        this._multi = coerceBooleanProperty(multi);\n    }\n    /** Opens all enabled accordion items in an accordion where multi is enabled. */\n    openAll() {\n        if (this._multi) {\n            this._openCloseAllActions.next(true);\n        }\n    }\n    /** Closes all enabled accordion items in an accordion where multi is enabled. */\n    closeAll() {\n        this._openCloseAllActions.next(false);\n    }\n    ngOnChanges(changes) {\n        this._stateChanges.next(changes);\n    }\n    ngOnDestroy() {\n        this._stateChanges.complete();\n        this._openCloseAllActions.complete();\n    }\n}\nCdkAccordion.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: CdkAccordion, deps: [], target: i0.ɵɵFactoryTarget.Directive });\nCdkAccordion.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.1.0\", type: CdkAccordion, selector: \"cdk-accordion, [cdkAccordion]\", inputs: { multi: \"multi\" }, providers: [{ provide: CDK_ACCORDION, useExisting: CdkAccordion }], exportAs: [\"cdkAccordion\"], usesOnChanges: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: CdkAccordion, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'cdk-accordion, [cdkAccordion]',\n                    exportAs: 'cdkAccordion',\n                    providers: [{ provide: CDK_ACCORDION, useExisting: CdkAccordion }],\n                }]\n        }], propDecorators: { multi: [{\n                type: Input\n            }] } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Used to generate unique ID for each accordion item. */\nlet nextId = 0;\n/**\n * An basic directive expected to be extended and decorated as a component.  Sets up all\n * events and attributes needed to be managed by a CdkAccordion parent.\n */\nclass CdkAccordionItem {\n    constructor(accordion, _changeDetectorRef, _expansionDispatcher) {\n        this.accordion = accordion;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._expansionDispatcher = _expansionDispatcher;\n        /** Subscription to openAll/closeAll events. */\n        this._openCloseAllSubscription = Subscription.EMPTY;\n        /** Event emitted every time the AccordionItem is closed. */\n        this.closed = new EventEmitter();\n        /** Event emitted every time the AccordionItem is opened. */\n        this.opened = new EventEmitter();\n        /** Event emitted when the AccordionItem is destroyed. */\n        this.destroyed = new EventEmitter();\n        /**\n         * Emits whenever the expanded state of the accordion changes.\n         * Primarily used to facilitate two-way binding.\n         * @docs-private\n         */\n        this.expandedChange = new EventEmitter();\n        /** The unique AccordionItem id. */\n        this.id = `cdk-accordion-child-${nextId++}`;\n        this._expanded = false;\n        this._disabled = false;\n        /** Unregister function for _expansionDispatcher. */\n        this._removeUniqueSelectionListener = () => { };\n        this._removeUniqueSelectionListener = _expansionDispatcher.listen((id, accordionId) => {\n            if (this.accordion &&\n                !this.accordion.multi &&\n                this.accordion.id === accordionId &&\n                this.id !== id) {\n                this.expanded = false;\n            }\n        });\n        // When an accordion item is hosted in an accordion, subscribe to open/close events.\n        if (this.accordion) {\n            this._openCloseAllSubscription = this._subscribeToOpenCloseAllActions();\n        }\n    }\n    /** Whether the AccordionItem is expanded. */\n    get expanded() {\n        return this._expanded;\n    }\n    set expanded(expanded) {\n        expanded = coerceBooleanProperty(expanded);\n        // Only emit events and update the internal value if the value changes.\n        if (this._expanded !== expanded) {\n            this._expanded = expanded;\n            this.expandedChange.emit(expanded);\n            if (expanded) {\n                this.opened.emit();\n                /**\n                 * In the unique selection dispatcher, the id parameter is the id of the CdkAccordionItem,\n                 * the name value is the id of the accordion.\n                 */\n                const accordionId = this.accordion ? this.accordion.id : this.id;\n                this._expansionDispatcher.notify(this.id, accordionId);\n            }\n            else {\n                this.closed.emit();\n            }\n            // Ensures that the animation will run when the value is set outside of an `@Input`.\n            // This includes cases like the open, close and toggle methods.\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n    /** Whether the AccordionItem is disabled. */\n    get disabled() {\n        return this._disabled;\n    }\n    set disabled(disabled) {\n        this._disabled = coerceBooleanProperty(disabled);\n    }\n    /** Emits an event for the accordion item being destroyed. */\n    ngOnDestroy() {\n        this.opened.complete();\n        this.closed.complete();\n        this.destroyed.emit();\n        this.destroyed.complete();\n        this._removeUniqueSelectionListener();\n        this._openCloseAllSubscription.unsubscribe();\n    }\n    /** Toggles the expanded state of the accordion item. */\n    toggle() {\n        if (!this.disabled) {\n            this.expanded = !this.expanded;\n        }\n    }\n    /** Sets the expanded state of the accordion item to false. */\n    close() {\n        if (!this.disabled) {\n            this.expanded = false;\n        }\n    }\n    /** Sets the expanded state of the accordion item to true. */\n    open() {\n        if (!this.disabled) {\n            this.expanded = true;\n        }\n    }\n    _subscribeToOpenCloseAllActions() {\n        return this.accordion._openCloseAllActions.subscribe(expanded => {\n            // Only change expanded state if item is enabled\n            if (!this.disabled) {\n                this.expanded = expanded;\n            }\n        });\n    }\n}\nCdkAccordionItem.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: CdkAccordionItem, deps: [{ token: CDK_ACCORDION, optional: true, skipSelf: true }, { token: i0.ChangeDetectorRef }, { token: i1.UniqueSelectionDispatcher }], target: i0.ɵɵFactoryTarget.Directive });\nCdkAccordionItem.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.1.0\", type: CdkAccordionItem, selector: \"cdk-accordion-item, [cdkAccordionItem]\", inputs: { expanded: \"expanded\", disabled: \"disabled\" }, outputs: { closed: \"closed\", opened: \"opened\", destroyed: \"destroyed\", expandedChange: \"expandedChange\" }, providers: [\n        // Provide `CDK_ACCORDION` as undefined to prevent nested accordion items from\n        // registering to the same accordion.\n        { provide: CDK_ACCORDION, useValue: undefined },\n    ], exportAs: [\"cdkAccordionItem\"], ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: CdkAccordionItem, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'cdk-accordion-item, [cdkAccordionItem]',\n                    exportAs: 'cdkAccordionItem',\n                    providers: [\n                        // Provide `CDK_ACCORDION` as undefined to prevent nested accordion items from\n                        // registering to the same accordion.\n                        { provide: CDK_ACCORDION, useValue: undefined },\n                    ],\n                }]\n        }], ctorParameters: function () {\n        return [{ type: CdkAccordion, decorators: [{\n                        type: Optional\n                    }, {\n                        type: Inject,\n                        args: [CDK_ACCORDION]\n                    }, {\n                        type: SkipSelf\n                    }] }, { type: i0.ChangeDetectorRef }, { type: i1.UniqueSelectionDispatcher }];\n    }, propDecorators: { closed: [{\n                type: Output\n            }], opened: [{\n                type: Output\n            }], destroyed: [{\n                type: Output\n            }], expandedChange: [{\n                type: Output\n            }], expanded: [{\n                type: Input\n            }], disabled: [{\n                type: Input\n            }] } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass CdkAccordionModule {\n}\nCdkAccordionModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: CdkAccordionModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nCdkAccordionModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: CdkAccordionModule, declarations: [CdkAccordion, CdkAccordionItem], exports: [CdkAccordion, CdkAccordionItem] });\nCdkAccordionModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: CdkAccordionModule });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: CdkAccordionModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    exports: [CdkAccordion, CdkAccordionItem],\n                    declarations: [CdkAccordion, CdkAccordionItem],\n                }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { CdkAccordion, CdkAccordionItem, CdkAccordionModule };\n","import { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { _VIEW_REPEATER_STRATEGY, _RecycleViewRepeaterStrategy, isDataSource, _DisposeViewRepeaterStrategy } from '@angular/cdk/collections';\nexport { DataSource } from '@angular/cdk/collections';\nimport { DOCUMENT } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { InjectionToken, Directive, Inject, Optional, Input, ContentChild, Injectable, Component, ChangeDetectionStrategy, ViewEncapsulation, EmbeddedViewRef, EventEmitter, Attribute, SkipSelf, Output, ViewChild, ContentChildren, NgModule } from '@angular/core';\nimport { Subject, from, BehaviorSubject, isObservable, of } from 'rxjs';\nimport { takeUntil, take } from 'rxjs/operators';\nimport * as i1 from '@angular/cdk/bidi';\nimport * as i2 from '@angular/cdk/platform';\nimport * as i3 from '@angular/cdk/scrolling';\nimport { ScrollingModule } from '@angular/cdk/scrolling';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Mixin to provide a directive with a function that checks if the sticky input has been\n * changed since the last time the function was called. Essentially adds a dirty-check to the\n * sticky value.\n * @docs-private\n */\nfunction mixinHasStickyInput(base) {\n    return class extends base {\n        constructor(...args) {\n            super(...args);\n            this._sticky = false;\n            /** Whether the sticky input has changed since it was last checked. */\n            this._hasStickyChanged = false;\n        }\n        /** Whether sticky positioning should be applied. */\n        get sticky() {\n            return this._sticky;\n        }\n        set sticky(v) {\n            const prevValue = this._sticky;\n            this._sticky = coerceBooleanProperty(v);\n            this._hasStickyChanged = prevValue !== this._sticky;\n        }\n        /** Whether the sticky value has changed since this was last called. */\n        hasStickyChanged() {\n            const hasStickyChanged = this._hasStickyChanged;\n            this._hasStickyChanged = false;\n            return hasStickyChanged;\n        }\n        /** Resets the dirty check for cases where the sticky state has been used without checking. */\n        resetStickyChanged() {\n            this._hasStickyChanged = false;\n        }\n    };\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Used to provide a table to some of the sub-components without causing a circular dependency.\n * @docs-private\n */\nconst CDK_TABLE = new InjectionToken('CDK_TABLE');\n/** Injection token that can be used to specify the text column options. */\nconst TEXT_COLUMN_OPTIONS = new InjectionToken('text-column-options');\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Cell definition for a CDK table.\n * Captures the template of a column's data row cell as well as cell-specific properties.\n */\nclass CdkCellDef {\n    constructor(/** @docs-private */ template) {\n        this.template = template;\n    }\n}\nCdkCellDef.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: CdkCellDef, deps: [{ token: i0.TemplateRef }], target: i0.ɵɵFactoryTarget.Directive });\nCdkCellDef.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.1.0\", type: CdkCellDef, selector: \"[cdkCellDef]\", ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: CdkCellDef, decorators: [{\n            type: Directive,\n            args: [{ selector: '[cdkCellDef]' }]\n        }], ctorParameters: function () { return [{ type: i0.TemplateRef }]; } });\n/**\n * Header cell definition for a CDK table.\n * Captures the template of a column's header cell and as well as cell-specific properties.\n */\nclass CdkHeaderCellDef {\n    constructor(/** @docs-private */ template) {\n        this.template = template;\n    }\n}\nCdkHeaderCellDef.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: CdkHeaderCellDef, deps: [{ token: i0.TemplateRef }], target: i0.ɵɵFactoryTarget.Directive });\nCdkHeaderCellDef.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.1.0\", type: CdkHeaderCellDef, selector: \"[cdkHeaderCellDef]\", ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: CdkHeaderCellDef, decorators: [{\n            type: Directive,\n            args: [{ selector: '[cdkHeaderCellDef]' }]\n        }], ctorParameters: function () { return [{ type: i0.TemplateRef }]; } });\n/**\n * Footer cell definition for a CDK table.\n * Captures the template of a column's footer cell and as well as cell-specific properties.\n */\nclass CdkFooterCellDef {\n    constructor(/** @docs-private */ template) {\n        this.template = template;\n    }\n}\nCdkFooterCellDef.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: CdkFooterCellDef, deps: [{ token: i0.TemplateRef }], target: i0.ɵɵFactoryTarget.Directive });\nCdkFooterCellDef.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.1.0\", type: CdkFooterCellDef, selector: \"[cdkFooterCellDef]\", ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: CdkFooterCellDef, decorators: [{\n            type: Directive,\n            args: [{ selector: '[cdkFooterCellDef]' }]\n        }], ctorParameters: function () { return [{ type: i0.TemplateRef }]; } });\n// Boilerplate for applying mixins to CdkColumnDef.\n/** @docs-private */\nclass CdkColumnDefBase {\n}\nconst _CdkColumnDefBase = mixinHasStickyInput(CdkColumnDefBase);\n/**\n * Column definition for the CDK table.\n * Defines a set of cells available for a table column.\n */\nclass CdkColumnDef extends _CdkColumnDefBase {\n    constructor(_table) {\n        super();\n        this._table = _table;\n        this._stickyEnd = false;\n    }\n    /** Unique name for this column. */\n    get name() {\n        return this._name;\n    }\n    set name(name) {\n        this._setNameInput(name);\n    }\n    /**\n     * Whether this column should be sticky positioned on the end of the row. Should make sure\n     * that it mimics the `CanStick` mixin such that `_hasStickyChanged` is set to true if the value\n     * has been changed.\n     */\n    get stickyEnd() {\n        return this._stickyEnd;\n    }\n    set stickyEnd(v) {\n        const prevValue = this._stickyEnd;\n        this._stickyEnd = coerceBooleanProperty(v);\n        this._hasStickyChanged = prevValue !== this._stickyEnd;\n    }\n    /**\n     * Overridable method that sets the css classes that will be added to every cell in this\n     * column.\n     * In the future, columnCssClassName will change from type string[] to string and this\n     * will set a single string value.\n     * @docs-private\n     */\n    _updateColumnCssClassName() {\n        this._columnCssClassName = [`cdk-column-${this.cssClassFriendlyName}`];\n    }\n    /**\n     * This has been extracted to a util because of TS 4 and VE.\n     * View Engine doesn't support property rename inheritance.\n     * TS 4.0 doesn't allow properties to override accessors or vice-versa.\n     * @docs-private\n     */\n    _setNameInput(value) {\n        // If the directive is set without a name (updated programmatically), then this setter will\n        // trigger with an empty string and should not overwrite the programmatically set value.\n        if (value) {\n            this._name = value;\n            this.cssClassFriendlyName = value.replace(/[^a-z0-9_-]/gi, '-');\n            this._updateColumnCssClassName();\n        }\n    }\n}\nCdkColumnDef.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: CdkColumnDef, deps: [{ token: CDK_TABLE, optional: true }], target: i0.ɵɵFactoryTarget.Directive });\nCdkColumnDef.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.1.0\", type: CdkColumnDef, selector: \"[cdkColumnDef]\", inputs: { sticky: \"sticky\", name: [\"cdkColumnDef\", \"name\"], stickyEnd: \"stickyEnd\" }, providers: [{ provide: 'MAT_SORT_HEADER_COLUMN_DEF', useExisting: CdkColumnDef }], queries: [{ propertyName: \"cell\", first: true, predicate: CdkCellDef, descendants: true }, { propertyName: \"headerCell\", first: true, predicate: CdkHeaderCellDef, descendants: true }, { propertyName: \"footerCell\", first: true, predicate: CdkFooterCellDef, descendants: true }], usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: CdkColumnDef, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[cdkColumnDef]',\n                    inputs: ['sticky'],\n                    providers: [{ provide: 'MAT_SORT_HEADER_COLUMN_DEF', useExisting: CdkColumnDef }],\n                }]\n        }], ctorParameters: function () {\n        return [{ type: undefined, decorators: [{\n                        type: Inject,\n                        args: [CDK_TABLE]\n                    }, {\n                        type: Optional\n                    }] }];\n    }, propDecorators: { name: [{\n                type: Input,\n                args: ['cdkColumnDef']\n            }], stickyEnd: [{\n                type: Input,\n                args: ['stickyEnd']\n            }], cell: [{\n                type: ContentChild,\n                args: [CdkCellDef]\n            }], headerCell: [{\n                type: ContentChild,\n                args: [CdkHeaderCellDef]\n            }], footerCell: [{\n                type: ContentChild,\n                args: [CdkFooterCellDef]\n            }] } });\n/** Base class for the cells. Adds a CSS classname that identifies the column it renders in. */\nclass BaseCdkCell {\n    constructor(columnDef, elementRef) {\n        // If IE 11 is dropped before we switch to setting a single class name, change to multi param\n        // with destructuring.\n        const classList = elementRef.nativeElement.classList;\n        for (const className of columnDef._columnCssClassName) {\n            classList.add(className);\n        }\n    }\n}\n/** Header cell template container that adds the right classes and role. */\nclass CdkHeaderCell extends BaseCdkCell {\n    constructor(columnDef, elementRef) {\n        super(columnDef, elementRef);\n    }\n}\nCdkHeaderCell.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: CdkHeaderCell, deps: [{ token: CdkColumnDef }, { token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Directive });\nCdkHeaderCell.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.1.0\", type: CdkHeaderCell, selector: \"cdk-header-cell, th[cdk-header-cell]\", host: { attributes: { \"role\": \"columnheader\" }, classAttribute: \"cdk-header-cell\" }, usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: CdkHeaderCell, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'cdk-header-cell, th[cdk-header-cell]',\n                    host: {\n                        'class': 'cdk-header-cell',\n                        'role': 'columnheader',\n                    },\n                }]\n        }], ctorParameters: function () { return [{ type: CdkColumnDef }, { type: i0.ElementRef }]; } });\n/** Footer cell template container that adds the right classes and role. */\nclass CdkFooterCell extends BaseCdkCell {\n    constructor(columnDef, elementRef) {\n        var _a;\n        super(columnDef, elementRef);\n        if (((_a = columnDef._table) === null || _a === void 0 ? void 0 : _a._elementRef.nativeElement.nodeType) === 1) {\n            const tableRole = columnDef._table._elementRef.nativeElement.getAttribute('role');\n            const role = tableRole === 'grid' || tableRole === 'treegrid' ? 'gridcell' : 'cell';\n            elementRef.nativeElement.setAttribute('role', role);\n        }\n    }\n}\nCdkFooterCell.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: CdkFooterCell, deps: [{ token: CdkColumnDef }, { token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Directive });\nCdkFooterCell.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.1.0\", type: CdkFooterCell, selector: \"cdk-footer-cell, td[cdk-footer-cell]\", host: { classAttribute: \"cdk-footer-cell\" }, usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: CdkFooterCell, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'cdk-footer-cell, td[cdk-footer-cell]',\n                    host: {\n                        'class': 'cdk-footer-cell',\n                    },\n                }]\n        }], ctorParameters: function () { return [{ type: CdkColumnDef }, { type: i0.ElementRef }]; } });\n/** Cell template container that adds the right classes and role. */\nclass CdkCell extends BaseCdkCell {\n    constructor(columnDef, elementRef) {\n        var _a;\n        super(columnDef, elementRef);\n        if (((_a = columnDef._table) === null || _a === void 0 ? void 0 : _a._elementRef.nativeElement.nodeType) === 1) {\n            const tableRole = columnDef._table._elementRef.nativeElement.getAttribute('role');\n            const role = tableRole === 'grid' || tableRole === 'treegrid' ? 'gridcell' : 'cell';\n            elementRef.nativeElement.setAttribute('role', role);\n        }\n    }\n}\nCdkCell.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: CdkCell, deps: [{ token: CdkColumnDef }, { token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Directive });\nCdkCell.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.1.0\", type: CdkCell, selector: \"cdk-cell, td[cdk-cell]\", host: { classAttribute: \"cdk-cell\" }, usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: CdkCell, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'cdk-cell, td[cdk-cell]',\n                    host: {\n                        'class': 'cdk-cell',\n                    },\n                }]\n        }], ctorParameters: function () { return [{ type: CdkColumnDef }, { type: i0.ElementRef }]; } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @docs-private\n */\nclass _Schedule {\n    constructor() {\n        this.tasks = [];\n        this.endTasks = [];\n    }\n}\n/** Injection token used to provide a coalesced style scheduler. */\nconst _COALESCED_STYLE_SCHEDULER = new InjectionToken('_COALESCED_STYLE_SCHEDULER');\n/**\n * Allows grouping up CSSDom mutations after the current execution context.\n * This can significantly improve performance when separate consecutive functions are\n * reading from the CSSDom and then mutating it.\n *\n * @docs-private\n */\nclass _CoalescedStyleScheduler {\n    constructor(_ngZone) {\n        this._ngZone = _ngZone;\n        this._currentSchedule = null;\n        this._destroyed = new Subject();\n    }\n    /**\n     * Schedules the specified task to run at the end of the current VM turn.\n     */\n    schedule(task) {\n        this._createScheduleIfNeeded();\n        this._currentSchedule.tasks.push(task);\n    }\n    /**\n     * Schedules the specified task to run after other scheduled tasks at the end of the current\n     * VM turn.\n     */\n    scheduleEnd(task) {\n        this._createScheduleIfNeeded();\n        this._currentSchedule.endTasks.push(task);\n    }\n    /** Prevent any further tasks from running. */\n    ngOnDestroy() {\n        this._destroyed.next();\n        this._destroyed.complete();\n    }\n    _createScheduleIfNeeded() {\n        if (this._currentSchedule) {\n            return;\n        }\n        this._currentSchedule = new _Schedule();\n        this._getScheduleObservable()\n            .pipe(takeUntil(this._destroyed))\n            .subscribe(() => {\n            while (this._currentSchedule.tasks.length || this._currentSchedule.endTasks.length) {\n                const schedule = this._currentSchedule;\n                // Capture new tasks scheduled by the current set of tasks.\n                this._currentSchedule = new _Schedule();\n                for (const task of schedule.tasks) {\n                    task();\n                }\n                for (const task of schedule.endTasks) {\n                    task();\n                }\n            }\n            this._currentSchedule = null;\n        });\n    }\n    _getScheduleObservable() {\n        // Use onStable when in the context of an ongoing change detection cycle so that we\n        // do not accidentally trigger additional cycles.\n        return this._ngZone.isStable\n            ? from(Promise.resolve(undefined))\n            : this._ngZone.onStable.pipe(take(1));\n    }\n}\n_CoalescedStyleScheduler.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: _CoalescedStyleScheduler, deps: [{ token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Injectable });\n_CoalescedStyleScheduler.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: _CoalescedStyleScheduler });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: _CoalescedStyleScheduler, decorators: [{\n            type: Injectable\n        }], ctorParameters: function () { return [{ type: i0.NgZone }]; } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * The row template that can be used by the mat-table. Should not be used outside of the\n * material library.\n */\nconst CDK_ROW_TEMPLATE = `<ng-container cdkCellOutlet></ng-container>`;\n/**\n * Base class for the CdkHeaderRowDef and CdkRowDef that handles checking their columns inputs\n * for changes and notifying the table.\n */\nclass BaseRowDef {\n    constructor(\n    /** @docs-private */ template, _differs) {\n        this.template = template;\n        this._differs = _differs;\n    }\n    ngOnChanges(changes) {\n        // Create a new columns differ if one does not yet exist. Initialize it based on initial value\n        // of the columns property or an empty array if none is provided.\n        if (!this._columnsDiffer) {\n            const columns = (changes['columns'] && changes['columns'].currentValue) || [];\n            this._columnsDiffer = this._differs.find(columns).create();\n            this._columnsDiffer.diff(columns);\n        }\n    }\n    /**\n     * Returns the difference between the current columns and the columns from the last diff, or null\n     * if there is no difference.\n     */\n    getColumnsDiff() {\n        return this._columnsDiffer.diff(this.columns);\n    }\n    /** Gets this row def's relevant cell template from the provided column def. */\n    extractCellTemplate(column) {\n        if (this instanceof CdkHeaderRowDef) {\n            return column.headerCell.template;\n        }\n        if (this instanceof CdkFooterRowDef) {\n            return column.footerCell.template;\n        }\n        else {\n            return column.cell.template;\n        }\n    }\n}\nBaseRowDef.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: BaseRowDef, deps: [{ token: i0.TemplateRef }, { token: i0.IterableDiffers }], target: i0.ɵɵFactoryTarget.Directive });\nBaseRowDef.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.1.0\", type: BaseRowDef, usesOnChanges: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: BaseRowDef, decorators: [{\n            type: Directive\n        }], ctorParameters: function () { return [{ type: i0.TemplateRef }, { type: i0.IterableDiffers }]; } });\n// Boilerplate for applying mixins to CdkHeaderRowDef.\n/** @docs-private */\nclass CdkHeaderRowDefBase extends BaseRowDef {\n}\nconst _CdkHeaderRowDefBase = mixinHasStickyInput(CdkHeaderRowDefBase);\n/**\n * Header row definition for the CDK table.\n * Captures the header row's template and other header properties such as the columns to display.\n */\nclass CdkHeaderRowDef extends _CdkHeaderRowDefBase {\n    constructor(template, _differs, _table) {\n        super(template, _differs);\n        this._table = _table;\n    }\n    // Prerender fails to recognize that ngOnChanges in a part of this class through inheritance.\n    // Explicitly define it so that the method is called as part of the Angular lifecycle.\n    ngOnChanges(changes) {\n        super.ngOnChanges(changes);\n    }\n}\nCdkHeaderRowDef.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: CdkHeaderRowDef, deps: [{ token: i0.TemplateRef }, { token: i0.IterableDiffers }, { token: CDK_TABLE, optional: true }], target: i0.ɵɵFactoryTarget.Directive });\nCdkHeaderRowDef.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.1.0\", type: CdkHeaderRowDef, selector: \"[cdkHeaderRowDef]\", inputs: { columns: [\"cdkHeaderRowDef\", \"columns\"], sticky: [\"cdkHeaderRowDefSticky\", \"sticky\"] }, usesInheritance: true, usesOnChanges: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: CdkHeaderRowDef, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[cdkHeaderRowDef]',\n                    inputs: ['columns: cdkHeaderRowDef', 'sticky: cdkHeaderRowDefSticky'],\n                }]\n        }], ctorParameters: function () {\n        return [{ type: i0.TemplateRef }, { type: i0.IterableDiffers }, { type: undefined, decorators: [{\n                        type: Inject,\n                        args: [CDK_TABLE]\n                    }, {\n                        type: Optional\n                    }] }];\n    } });\n// Boilerplate for applying mixins to CdkFooterRowDef.\n/** @docs-private */\nclass CdkFooterRowDefBase extends BaseRowDef {\n}\nconst _CdkFooterRowDefBase = mixinHasStickyInput(CdkFooterRowDefBase);\n/**\n * Footer row definition for the CDK table.\n * Captures the footer row's template and other footer properties such as the columns to display.\n */\nclass CdkFooterRowDef extends _CdkFooterRowDefBase {\n    constructor(template, _differs, _table) {\n        super(template, _differs);\n        this._table = _table;\n    }\n    // Prerender fails to recognize that ngOnChanges in a part of this class through inheritance.\n    // Explicitly define it so that the method is called as part of the Angular lifecycle.\n    ngOnChanges(changes) {\n        super.ngOnChanges(changes);\n    }\n}\nCdkFooterRowDef.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: CdkFooterRowDef, deps: [{ token: i0.TemplateRef }, { token: i0.IterableDiffers }, { token: CDK_TABLE, optional: true }], target: i0.ɵɵFactoryTarget.Directive });\nCdkFooterRowDef.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.1.0\", type: CdkFooterRowDef, selector: \"[cdkFooterRowDef]\", inputs: { columns: [\"cdkFooterRowDef\", \"columns\"], sticky: [\"cdkFooterRowDefSticky\", \"sticky\"] }, usesInheritance: true, usesOnChanges: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: CdkFooterRowDef, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[cdkFooterRowDef]',\n                    inputs: ['columns: cdkFooterRowDef', 'sticky: cdkFooterRowDefSticky'],\n                }]\n        }], ctorParameters: function () {\n        return [{ type: i0.TemplateRef }, { type: i0.IterableDiffers }, { type: undefined, decorators: [{\n                        type: Inject,\n                        args: [CDK_TABLE]\n                    }, {\n                        type: Optional\n                    }] }];\n    } });\n/**\n * Data row definition for the CDK table.\n * Captures the header row's template and other row properties such as the columns to display and\n * a when predicate that describes when this row should be used.\n */\nclass CdkRowDef extends BaseRowDef {\n    // TODO(andrewseguin): Add an input for providing a switch function to determine\n    //   if this template should be used.\n    constructor(template, _differs, _table) {\n        super(template, _differs);\n        this._table = _table;\n    }\n}\nCdkRowDef.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: CdkRowDef, deps: [{ token: i0.TemplateRef }, { token: i0.IterableDiffers }, { token: CDK_TABLE, optional: true }], target: i0.ɵɵFactoryTarget.Directive });\nCdkRowDef.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.1.0\", type: CdkRowDef, selector: \"[cdkRowDef]\", inputs: { columns: [\"cdkRowDefColumns\", \"columns\"], when: [\"cdkRowDefWhen\", \"when\"] }, usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: CdkRowDef, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[cdkRowDef]',\n                    inputs: ['columns: cdkRowDefColumns', 'when: cdkRowDefWhen'],\n                }]\n        }], ctorParameters: function () {\n        return [{ type: i0.TemplateRef }, { type: i0.IterableDiffers }, { type: undefined, decorators: [{\n                        type: Inject,\n                        args: [CDK_TABLE]\n                    }, {\n                        type: Optional\n                    }] }];\n    } });\n/**\n * Outlet for rendering cells inside of a row or header row.\n * @docs-private\n */\nclass CdkCellOutlet {\n    constructor(_viewContainer) {\n        this._viewContainer = _viewContainer;\n        CdkCellOutlet.mostRecentCellOutlet = this;\n    }\n    ngOnDestroy() {\n        // If this was the last outlet being rendered in the view, remove the reference\n        // from the static property after it has been destroyed to avoid leaking memory.\n        if (CdkCellOutlet.mostRecentCellOutlet === this) {\n            CdkCellOutlet.mostRecentCellOutlet = null;\n        }\n    }\n}\n/**\n * Static property containing the latest constructed instance of this class.\n * Used by the CDK table when each CdkHeaderRow and CdkRow component is created using\n * createEmbeddedView. After one of these components are created, this property will provide\n * a handle to provide that component's cells and context. After init, the CdkCellOutlet will\n * construct the cells with the provided context.\n */\nCdkCellOutlet.mostRecentCellOutlet = null;\nCdkCellOutlet.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: CdkCellOutlet, deps: [{ token: i0.ViewContainerRef }], target: i0.ɵɵFactoryTarget.Directive });\nCdkCellOutlet.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.1.0\", type: CdkCellOutlet, selector: \"[cdkCellOutlet]\", ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: CdkCellOutlet, decorators: [{\n            type: Directive,\n            args: [{ selector: '[cdkCellOutlet]' }]\n        }], ctorParameters: function () { return [{ type: i0.ViewContainerRef }]; } });\n/** Header template container that contains the cell outlet. Adds the right class and role. */\nclass CdkHeaderRow {\n}\nCdkHeaderRow.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: CdkHeaderRow, deps: [], target: i0.ɵɵFactoryTarget.Component });\nCdkHeaderRow.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: CdkHeaderRow, selector: \"cdk-header-row, tr[cdk-header-row]\", host: { attributes: { \"role\": \"row\" }, classAttribute: \"cdk-header-row\" }, ngImport: i0, template: \"<ng-container cdkCellOutlet></ng-container>\", isInline: true, directives: [{ type: CdkCellOutlet, selector: \"[cdkCellOutlet]\" }], changeDetection: i0.ChangeDetectionStrategy.Default, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: CdkHeaderRow, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'cdk-header-row, tr[cdk-header-row]',\n                    template: CDK_ROW_TEMPLATE,\n                    host: {\n                        'class': 'cdk-header-row',\n                        'role': 'row',\n                    },\n                    // See note on CdkTable for explanation on why this uses the default change detection strategy.\n                    // tslint:disable-next-line:validate-decorators\n                    changeDetection: ChangeDetectionStrategy.Default,\n                    encapsulation: ViewEncapsulation.None,\n                }]\n        }] });\n/** Footer template container that contains the cell outlet. Adds the right class and role. */\nclass CdkFooterRow {\n}\nCdkFooterRow.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: CdkFooterRow, deps: [], target: i0.ɵɵFactoryTarget.Component });\nCdkFooterRow.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: CdkFooterRow, selector: \"cdk-footer-row, tr[cdk-footer-row]\", host: { attributes: { \"role\": \"row\" }, classAttribute: \"cdk-footer-row\" }, ngImport: i0, template: \"<ng-container cdkCellOutlet></ng-container>\", isInline: true, directives: [{ type: CdkCellOutlet, selector: \"[cdkCellOutlet]\" }], changeDetection: i0.ChangeDetectionStrategy.Default, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: CdkFooterRow, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'cdk-footer-row, tr[cdk-footer-row]',\n                    template: CDK_ROW_TEMPLATE,\n                    host: {\n                        'class': 'cdk-footer-row',\n                        'role': 'row',\n                    },\n                    // See note on CdkTable for explanation on why this uses the default change detection strategy.\n                    // tslint:disable-next-line:validate-decorators\n                    changeDetection: ChangeDetectionStrategy.Default,\n                    encapsulation: ViewEncapsulation.None,\n                }]\n        }] });\n/** Data row template container that contains the cell outlet. Adds the right class and role. */\nclass CdkRow {\n}\nCdkRow.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: CdkRow, deps: [], target: i0.ɵɵFactoryTarget.Component });\nCdkRow.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: CdkRow, selector: \"cdk-row, tr[cdk-row]\", host: { attributes: { \"role\": \"row\" }, classAttribute: \"cdk-row\" }, ngImport: i0, template: \"<ng-container cdkCellOutlet></ng-container>\", isInline: true, directives: [{ type: CdkCellOutlet, selector: \"[cdkCellOutlet]\" }], changeDetection: i0.ChangeDetectionStrategy.Default, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: CdkRow, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'cdk-row, tr[cdk-row]',\n                    template: CDK_ROW_TEMPLATE,\n                    host: {\n                        'class': 'cdk-row',\n                        'role': 'row',\n                    },\n                    // See note on CdkTable for explanation on why this uses the default change detection strategy.\n                    // tslint:disable-next-line:validate-decorators\n                    changeDetection: ChangeDetectionStrategy.Default,\n                    encapsulation: ViewEncapsulation.None,\n                }]\n        }] });\n/** Row that can be used to display a message when no data is shown in the table. */\nclass CdkNoDataRow {\n    constructor(templateRef) {\n        this.templateRef = templateRef;\n        this._contentClassName = 'cdk-no-data-row';\n    }\n}\nCdkNoDataRow.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: CdkNoDataRow, deps: [{ token: i0.TemplateRef }], target: i0.ɵɵFactoryTarget.Directive });\nCdkNoDataRow.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.1.0\", type: CdkNoDataRow, selector: \"ng-template[cdkNoDataRow]\", ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: CdkNoDataRow, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'ng-template[cdkNoDataRow]',\n                }]\n        }], ctorParameters: function () { return [{ type: i0.TemplateRef }]; } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * List of all possible directions that can be used for sticky positioning.\n * @docs-private\n */\nconst STICKY_DIRECTIONS = ['top', 'bottom', 'left', 'right'];\n/**\n * Applies and removes sticky positioning styles to the `CdkTable` rows and columns cells.\n * @docs-private\n */\nclass StickyStyler {\n    /**\n     * @param _isNativeHtmlTable Whether the sticky logic should be based on a table\n     *     that uses the native `<table>` element.\n     * @param _stickCellCss The CSS class that will be applied to every row/cell that has\n     *     sticky positioning applied.\n     * @param direction The directionality context of the table (ltr/rtl); affects column positioning\n     *     by reversing left/right positions.\n     * @param _isBrowser Whether the table is currently being rendered on the server or the client.\n     * @param _needsPositionStickyOnElement Whether we need to specify position: sticky on cells\n     *     using inline styles. If false, it is assumed that position: sticky is included in\n     *     the component stylesheet for _stickCellCss.\n     * @param _positionListener A listener that is notified of changes to sticky rows/columns\n     *     and their dimensions.\n     */\n    constructor(_isNativeHtmlTable, _stickCellCss, direction, _coalescedStyleScheduler, _isBrowser = true, _needsPositionStickyOnElement = true, _positionListener) {\n        this._isNativeHtmlTable = _isNativeHtmlTable;\n        this._stickCellCss = _stickCellCss;\n        this.direction = direction;\n        this._coalescedStyleScheduler = _coalescedStyleScheduler;\n        this._isBrowser = _isBrowser;\n        this._needsPositionStickyOnElement = _needsPositionStickyOnElement;\n        this._positionListener = _positionListener;\n        this._cachedCellWidths = [];\n        this._borderCellCss = {\n            'top': `${_stickCellCss}-border-elem-top`,\n            'bottom': `${_stickCellCss}-border-elem-bottom`,\n            'left': `${_stickCellCss}-border-elem-left`,\n            'right': `${_stickCellCss}-border-elem-right`,\n        };\n    }\n    /**\n     * Clears the sticky positioning styles from the row and its cells by resetting the `position`\n     * style, setting the zIndex to 0, and unsetting each provided sticky direction.\n     * @param rows The list of rows that should be cleared from sticking in the provided directions\n     * @param stickyDirections The directions that should no longer be set as sticky on the rows.\n     */\n    clearStickyPositioning(rows, stickyDirections) {\n        const elementsToClear = [];\n        for (const row of rows) {\n            // If the row isn't an element (e.g. if it's an `ng-container`),\n            // it won't have inline styles or `children` so we skip it.\n            if (row.nodeType !== row.ELEMENT_NODE) {\n                continue;\n            }\n            elementsToClear.push(row);\n            for (let i = 0; i < row.children.length; i++) {\n                elementsToClear.push(row.children[i]);\n            }\n        }\n        // Coalesce with sticky row/column updates (and potentially other changes like column resize).\n        this._coalescedStyleScheduler.schedule(() => {\n            for (const element of elementsToClear) {\n                this._removeStickyStyle(element, stickyDirections);\n            }\n        });\n    }\n    /**\n     * Applies sticky left and right positions to the cells of each row according to the sticky\n     * states of the rendered column definitions.\n     * @param rows The rows that should have its set of cells stuck according to the sticky states.\n     * @param stickyStartStates A list of boolean states where each state represents whether the cell\n     *     in this index position should be stuck to the start of the row.\n     * @param stickyEndStates A list of boolean states where each state represents whether the cell\n     *     in this index position should be stuck to the end of the row.\n     * @param recalculateCellWidths Whether the sticky styler should recalculate the width of each\n     *     column cell. If `false` cached widths will be used instead.\n     */\n    updateStickyColumns(rows, stickyStartStates, stickyEndStates, recalculateCellWidths = true) {\n        if (!rows.length ||\n            !this._isBrowser ||\n            !(stickyStartStates.some(state => state) || stickyEndStates.some(state => state))) {\n            if (this._positionListener) {\n                this._positionListener.stickyColumnsUpdated({ sizes: [] });\n                this._positionListener.stickyEndColumnsUpdated({ sizes: [] });\n            }\n            return;\n        }\n        const firstRow = rows[0];\n        const numCells = firstRow.children.length;\n        const cellWidths = this._getCellWidths(firstRow, recalculateCellWidths);\n        const startPositions = this._getStickyStartColumnPositions(cellWidths, stickyStartStates);\n        const endPositions = this._getStickyEndColumnPositions(cellWidths, stickyEndStates);\n        const lastStickyStart = stickyStartStates.lastIndexOf(true);\n        const firstStickyEnd = stickyEndStates.indexOf(true);\n        // Coalesce with sticky row updates (and potentially other changes like column resize).\n        this._coalescedStyleScheduler.schedule(() => {\n            const isRtl = this.direction === 'rtl';\n            const start = isRtl ? 'right' : 'left';\n            const end = isRtl ? 'left' : 'right';\n            for (const row of rows) {\n                for (let i = 0; i < numCells; i++) {\n                    const cell = row.children[i];\n                    if (stickyStartStates[i]) {\n                        this._addStickyStyle(cell, start, startPositions[i], i === lastStickyStart);\n                    }\n                    if (stickyEndStates[i]) {\n                        this._addStickyStyle(cell, end, endPositions[i], i === firstStickyEnd);\n                    }\n                }\n            }\n            if (this._positionListener) {\n                this._positionListener.stickyColumnsUpdated({\n                    sizes: lastStickyStart === -1\n                        ? []\n                        : cellWidths\n                            .slice(0, lastStickyStart + 1)\n                            .map((width, index) => (stickyStartStates[index] ? width : null)),\n                });\n                this._positionListener.stickyEndColumnsUpdated({\n                    sizes: firstStickyEnd === -1\n                        ? []\n                        : cellWidths\n                            .slice(firstStickyEnd)\n                            .map((width, index) => (stickyEndStates[index + firstStickyEnd] ? width : null))\n                            .reverse(),\n                });\n            }\n        });\n    }\n    /**\n     * Applies sticky positioning to the row's cells if using the native table layout, and to the\n     * row itself otherwise.\n     * @param rowsToStick The list of rows that should be stuck according to their corresponding\n     *     sticky state and to the provided top or bottom position.\n     * @param stickyStates A list of boolean states where each state represents whether the row\n     *     should be stuck in the particular top or bottom position.\n     * @param position The position direction in which the row should be stuck if that row should be\n     *     sticky.\n     *\n     */\n    stickRows(rowsToStick, stickyStates, position) {\n        // Since we can't measure the rows on the server, we can't stick the rows properly.\n        if (!this._isBrowser) {\n            return;\n        }\n        // If positioning the rows to the bottom, reverse their order when evaluating the sticky\n        // position such that the last row stuck will be \"bottom: 0px\" and so on. Note that the\n        // sticky states need to be reversed as well.\n        const rows = position === 'bottom' ? rowsToStick.slice().reverse() : rowsToStick;\n        const states = position === 'bottom' ? stickyStates.slice().reverse() : stickyStates;\n        // Measure row heights all at once before adding sticky styles to reduce layout thrashing.\n        const stickyOffsets = [];\n        const stickyCellHeights = [];\n        const elementsToStick = [];\n        for (let rowIndex = 0, stickyOffset = 0; rowIndex < rows.length; rowIndex++) {\n            if (!states[rowIndex]) {\n                continue;\n            }\n            stickyOffsets[rowIndex] = stickyOffset;\n            const row = rows[rowIndex];\n            elementsToStick[rowIndex] = this._isNativeHtmlTable\n                ? Array.from(row.children)\n                : [row];\n            const height = row.getBoundingClientRect().height;\n            stickyOffset += height;\n            stickyCellHeights[rowIndex] = height;\n        }\n        const borderedRowIndex = states.lastIndexOf(true);\n        // Coalesce with other sticky row updates (top/bottom), sticky columns updates\n        // (and potentially other changes like column resize).\n        this._coalescedStyleScheduler.schedule(() => {\n            var _a, _b;\n            for (let rowIndex = 0; rowIndex < rows.length; rowIndex++) {\n                if (!states[rowIndex]) {\n                    continue;\n                }\n                const offset = stickyOffsets[rowIndex];\n                const isBorderedRowIndex = rowIndex === borderedRowIndex;\n                for (const element of elementsToStick[rowIndex]) {\n                    this._addStickyStyle(element, position, offset, isBorderedRowIndex);\n                }\n            }\n            if (position === 'top') {\n                (_a = this._positionListener) === null || _a === void 0 ? void 0 : _a.stickyHeaderRowsUpdated({\n                    sizes: stickyCellHeights,\n                    offsets: stickyOffsets,\n                    elements: elementsToStick,\n                });\n            }\n            else {\n                (_b = this._positionListener) === null || _b === void 0 ? void 0 : _b.stickyFooterRowsUpdated({\n                    sizes: stickyCellHeights,\n                    offsets: stickyOffsets,\n                    elements: elementsToStick,\n                });\n            }\n        });\n    }\n    /**\n     * When using the native table in Safari, sticky footer cells do not stick. The only way to stick\n     * footer rows is to apply sticky styling to the tfoot container. This should only be done if\n     * all footer rows are sticky. If not all footer rows are sticky, remove sticky positioning from\n     * the tfoot element.\n     */\n    updateStickyFooterContainer(tableElement, stickyStates) {\n        if (!this._isNativeHtmlTable) {\n            return;\n        }\n        const tfoot = tableElement.querySelector('tfoot');\n        // Coalesce with other sticky updates (and potentially other changes like column resize).\n        this._coalescedStyleScheduler.schedule(() => {\n            if (stickyStates.some(state => !state)) {\n                this._removeStickyStyle(tfoot, ['bottom']);\n            }\n            else {\n                this._addStickyStyle(tfoot, 'bottom', 0, false);\n            }\n        });\n    }\n    /**\n     * Removes the sticky style on the element by removing the sticky cell CSS class, re-evaluating\n     * the zIndex, removing each of the provided sticky directions, and removing the\n     * sticky position if there are no more directions.\n     */\n    _removeStickyStyle(element, stickyDirections) {\n        for (const dir of stickyDirections) {\n            element.style[dir] = '';\n            element.classList.remove(this._borderCellCss[dir]);\n        }\n        // If the element no longer has any more sticky directions, remove sticky positioning and\n        // the sticky CSS class.\n        // Short-circuit checking element.style[dir] for stickyDirections as they\n        // were already removed above.\n        const hasDirection = STICKY_DIRECTIONS.some(dir => stickyDirections.indexOf(dir) === -1 && element.style[dir]);\n        if (hasDirection) {\n            element.style.zIndex = this._getCalculatedZIndex(element);\n        }\n        else {\n            // When not hasDirection, _getCalculatedZIndex will always return ''.\n            element.style.zIndex = '';\n            if (this._needsPositionStickyOnElement) {\n                element.style.position = '';\n            }\n            element.classList.remove(this._stickCellCss);\n        }\n    }\n    /**\n     * Adds the sticky styling to the element by adding the sticky style class, changing position\n     * to be sticky (and -webkit-sticky), setting the appropriate zIndex, and adding a sticky\n     * direction and value.\n     */\n    _addStickyStyle(element, dir, dirValue, isBorderElement) {\n        element.classList.add(this._stickCellCss);\n        if (isBorderElement) {\n            element.classList.add(this._borderCellCss[dir]);\n        }\n        element.style[dir] = `${dirValue}px`;\n        element.style.zIndex = this._getCalculatedZIndex(element);\n        if (this._needsPositionStickyOnElement) {\n            element.style.cssText += 'position: -webkit-sticky; position: sticky; ';\n        }\n    }\n    /**\n     * Calculate what the z-index should be for the element, depending on what directions (top,\n     * bottom, left, right) have been set. It should be true that elements with a top direction\n     * should have the highest index since these are elements like a table header. If any of those\n     * elements are also sticky in another direction, then they should appear above other elements\n     * that are only sticky top (e.g. a sticky column on a sticky header). Bottom-sticky elements\n     * (e.g. footer rows) should then be next in the ordering such that they are below the header\n     * but above any non-sticky elements. Finally, left/right sticky elements (e.g. sticky columns)\n     * should minimally increment so that they are above non-sticky elements but below top and bottom\n     * elements.\n     */\n    _getCalculatedZIndex(element) {\n        const zIndexIncrements = {\n            top: 100,\n            bottom: 10,\n            left: 1,\n            right: 1,\n        };\n        let zIndex = 0;\n        // Use `Iterable` instead of `Array` because TypeScript, as of 3.6.3,\n        // loses the array generic type in the `for of`. But we *also* have to use `Array` because\n        // typescript won't iterate over an `Iterable` unless you compile with `--downlevelIteration`\n        for (const dir of STICKY_DIRECTIONS) {\n            if (element.style[dir]) {\n                zIndex += zIndexIncrements[dir];\n            }\n        }\n        return zIndex ? `${zIndex}` : '';\n    }\n    /** Gets the widths for each cell in the provided row. */\n    _getCellWidths(row, recalculateCellWidths = true) {\n        if (!recalculateCellWidths && this._cachedCellWidths.length) {\n            return this._cachedCellWidths;\n        }\n        const cellWidths = [];\n        const firstRowCells = row.children;\n        for (let i = 0; i < firstRowCells.length; i++) {\n            let cell = firstRowCells[i];\n            cellWidths.push(cell.getBoundingClientRect().width);\n        }\n        this._cachedCellWidths = cellWidths;\n        return cellWidths;\n    }\n    /**\n     * Determines the left and right positions of each sticky column cell, which will be the\n     * accumulation of all sticky column cell widths to the left and right, respectively.\n     * Non-sticky cells do not need to have a value set since their positions will not be applied.\n     */\n    _getStickyStartColumnPositions(widths, stickyStates) {\n        const positions = [];\n        let nextPosition = 0;\n        for (let i = 0; i < widths.length; i++) {\n            if (stickyStates[i]) {\n                positions[i] = nextPosition;\n                nextPosition += widths[i];\n            }\n        }\n        return positions;\n    }\n    /**\n     * Determines the left and right positions of each sticky column cell, which will be the\n     * accumulation of all sticky column cell widths to the left and right, respectively.\n     * Non-sticky cells do not need to have a value set since their positions will not be applied.\n     */\n    _getStickyEndColumnPositions(widths, stickyStates) {\n        const positions = [];\n        let nextPosition = 0;\n        for (let i = widths.length; i > 0; i--) {\n            if (stickyStates[i]) {\n                positions[i] = nextPosition;\n                nextPosition += widths[i];\n            }\n        }\n        return positions;\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Returns an error to be thrown when attempting to find an unexisting column.\n * @param id Id whose lookup failed.\n * @docs-private\n */\nfunction getTableUnknownColumnError(id) {\n    return Error(`Could not find column with id \"${id}\".`);\n}\n/**\n * Returns an error to be thrown when two column definitions have the same name.\n * @docs-private\n */\nfunction getTableDuplicateColumnNameError(name) {\n    return Error(`Duplicate column definition name provided: \"${name}\".`);\n}\n/**\n * Returns an error to be thrown when there are multiple rows that are missing a when function.\n * @docs-private\n */\nfunction getTableMultipleDefaultRowDefsError() {\n    return Error(`There can only be one default row without a when predicate function.`);\n}\n/**\n * Returns an error to be thrown when there are no matching row defs for a particular set of data.\n * @docs-private\n */\nfunction getTableMissingMatchingRowDefError(data) {\n    return Error(`Could not find a matching row definition for the` +\n        `provided row data: ${JSON.stringify(data)}`);\n}\n/**\n * Returns an error to be thrown when there is no row definitions present in the content.\n * @docs-private\n */\nfunction getTableMissingRowDefsError() {\n    return Error('Missing definitions for header, footer, and row; ' +\n        'cannot determine which columns should be rendered.');\n}\n/**\n * Returns an error to be thrown when the data source does not match the compatible types.\n * @docs-private\n */\nfunction getTableUnknownDataSourceError() {\n    return Error(`Provided data source did not match an array, Observable, or DataSource`);\n}\n/**\n * Returns an error to be thrown when the text column cannot find a parent table to inject.\n * @docs-private\n */\nfunction getTableTextColumnMissingParentTableError() {\n    return Error(`Text column could not find a parent table for registration.`);\n}\n/**\n * Returns an error to be thrown when a table text column doesn't have a name.\n * @docs-private\n */\nfunction getTableTextColumnMissingNameError() {\n    return Error(`Table text column must have a name.`);\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** The injection token used to specify the StickyPositioningListener. */\nconst STICKY_POSITIONING_LISTENER = new InjectionToken('CDK_SPL');\n\n/**\n * Enables the recycle view repeater strategy, which reduces rendering latency. Not compatible with\n * tables that animate rows.\n */\nclass CdkRecycleRows {\n}\nCdkRecycleRows.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: CdkRecycleRows, deps: [], target: i0.ɵɵFactoryTarget.Directive });\nCdkRecycleRows.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.1.0\", type: CdkRecycleRows, selector: \"cdk-table[recycleRows], table[cdk-table][recycleRows]\", providers: [{ provide: _VIEW_REPEATER_STRATEGY, useClass: _RecycleViewRepeaterStrategy }], ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: CdkRecycleRows, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'cdk-table[recycleRows], table[cdk-table][recycleRows]',\n                    providers: [{ provide: _VIEW_REPEATER_STRATEGY, useClass: _RecycleViewRepeaterStrategy }],\n                }]\n        }] });\n/**\n * Provides a handle for the table to grab the view container's ng-container to insert data rows.\n * @docs-private\n */\nclass DataRowOutlet {\n    constructor(viewContainer, elementRef) {\n        this.viewContainer = viewContainer;\n        this.elementRef = elementRef;\n    }\n}\nDataRowOutlet.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: DataRowOutlet, deps: [{ token: i0.ViewContainerRef }, { token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Directive });\nDataRowOutlet.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.1.0\", type: DataRowOutlet, selector: \"[rowOutlet]\", ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: DataRowOutlet, decorators: [{\n            type: Directive,\n            args: [{ selector: '[rowOutlet]' }]\n        }], ctorParameters: function () { return [{ type: i0.ViewContainerRef }, { type: i0.ElementRef }]; } });\n/**\n * Provides a handle for the table to grab the view container's ng-container to insert the header.\n * @docs-private\n */\nclass HeaderRowOutlet {\n    constructor(viewContainer, elementRef) {\n        this.viewContainer = viewContainer;\n        this.elementRef = elementRef;\n    }\n}\nHeaderRowOutlet.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: HeaderRowOutlet, deps: [{ token: i0.ViewContainerRef }, { token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Directive });\nHeaderRowOutlet.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.1.0\", type: HeaderRowOutlet, selector: \"[headerRowOutlet]\", ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: HeaderRowOutlet, decorators: [{\n            type: Directive,\n            args: [{ selector: '[headerRowOutlet]' }]\n        }], ctorParameters: function () { return [{ type: i0.ViewContainerRef }, { type: i0.ElementRef }]; } });\n/**\n * Provides a handle for the table to grab the view container's ng-container to insert the footer.\n * @docs-private\n */\nclass FooterRowOutlet {\n    constructor(viewContainer, elementRef) {\n        this.viewContainer = viewContainer;\n        this.elementRef = elementRef;\n    }\n}\nFooterRowOutlet.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: FooterRowOutlet, deps: [{ token: i0.ViewContainerRef }, { token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Directive });\nFooterRowOutlet.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.1.0\", type: FooterRowOutlet, selector: \"[footerRowOutlet]\", ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: FooterRowOutlet, decorators: [{\n            type: Directive,\n            args: [{ selector: '[footerRowOutlet]' }]\n        }], ctorParameters: function () { return [{ type: i0.ViewContainerRef }, { type: i0.ElementRef }]; } });\n/**\n * Provides a handle for the table to grab the view\n * container's ng-container to insert the no data row.\n * @docs-private\n */\nclass NoDataRowOutlet {\n    constructor(viewContainer, elementRef) {\n        this.viewContainer = viewContainer;\n        this.elementRef = elementRef;\n    }\n}\nNoDataRowOutlet.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: NoDataRowOutlet, deps: [{ token: i0.ViewContainerRef }, { token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Directive });\nNoDataRowOutlet.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.1.0\", type: NoDataRowOutlet, selector: \"[noDataRowOutlet]\", ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: NoDataRowOutlet, decorators: [{\n            type: Directive,\n            args: [{ selector: '[noDataRowOutlet]' }]\n        }], ctorParameters: function () { return [{ type: i0.ViewContainerRef }, { type: i0.ElementRef }]; } });\n/**\n * The table template that can be used by the mat-table. Should not be used outside of the\n * material library.\n * @docs-private\n */\nconst CDK_TABLE_TEMPLATE = \n// Note that according to MDN, the `caption` element has to be projected as the **first**\n// element in the table. See https://developer.mozilla.org/en-US/docs/Web/HTML/Element/caption\n`\n  <ng-content select=\"caption\"></ng-content>\n  <ng-content select=\"colgroup, col\"></ng-content>\n  <ng-container headerRowOutlet></ng-container>\n  <ng-container rowOutlet></ng-container>\n  <ng-container noDataRowOutlet></ng-container>\n  <ng-container footerRowOutlet></ng-container>\n`;\n/**\n * Class used to conveniently type the embedded view ref for rows with a context.\n * @docs-private\n */\nclass RowViewRef extends EmbeddedViewRef {\n}\n/**\n * A data table that can render a header row, data rows, and a footer row.\n * Uses the dataSource input to determine the data to be rendered. The data can be provided either\n * as a data array, an Observable stream that emits the data array to render, or a DataSource with a\n * connect function that will return an Observable stream that emits the data array to render.\n */\nclass CdkTable {\n    constructor(_differs, _changeDetectorRef, _elementRef, role, _dir, _document, _platform, _viewRepeater, _coalescedStyleScheduler, _viewportRuler, \n    /**\n     * @deprecated `_stickyPositioningListener` parameter to become required.\n     * @breaking-change 13.0.0\n     */\n    _stickyPositioningListener) {\n        this._differs = _differs;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._elementRef = _elementRef;\n        this._dir = _dir;\n        this._platform = _platform;\n        this._viewRepeater = _viewRepeater;\n        this._coalescedStyleScheduler = _coalescedStyleScheduler;\n        this._viewportRuler = _viewportRuler;\n        this._stickyPositioningListener = _stickyPositioningListener;\n        /** Subject that emits when the component has been destroyed. */\n        this._onDestroy = new Subject();\n        /**\n         * Map of all the user's defined columns (header, data, and footer cell template) identified by\n         * name. Collection populated by the column definitions gathered by `ContentChildren` as well as\n         * any custom column definitions added to `_customColumnDefs`.\n         */\n        this._columnDefsByName = new Map();\n        /**\n         * Column definitions that were defined outside of the direct content children of the table.\n         * These will be defined when, e.g., creating a wrapper around the cdkTable that has\n         * column definitions as *its* content child.\n         */\n        this._customColumnDefs = new Set();\n        /**\n         * Data row definitions that were defined outside of the direct content children of the table.\n         * These will be defined when, e.g., creating a wrapper around the cdkTable that has\n         * built-in data rows as *its* content child.\n         */\n        this._customRowDefs = new Set();\n        /**\n         * Header row definitions that were defined outside of the direct content children of the table.\n         * These will be defined when, e.g., creating a wrapper around the cdkTable that has\n         * built-in header rows as *its* content child.\n         */\n        this._customHeaderRowDefs = new Set();\n        /**\n         * Footer row definitions that were defined outside of the direct content children of the table.\n         * These will be defined when, e.g., creating a wrapper around the cdkTable that has a\n         * built-in footer row as *its* content child.\n         */\n        this._customFooterRowDefs = new Set();\n        /**\n         * Whether the header row definition has been changed. Triggers an update to the header row after\n         * content is checked. Initialized as true so that the table renders the initial set of rows.\n         */\n        this._headerRowDefChanged = true;\n        /**\n         * Whether the footer row definition has been changed. Triggers an update to the footer row after\n         * content is checked. Initialized as true so that the table renders the initial set of rows.\n         */\n        this._footerRowDefChanged = true;\n        /**\n         * Whether the sticky column styles need to be updated. Set to `true` when the visible columns\n         * change.\n         */\n        this._stickyColumnStylesNeedReset = true;\n        /**\n         * Whether the sticky styler should recalculate cell widths when applying sticky styles. If\n         * `false`, cached values will be used instead. This is only applicable to tables with\n         * {@link fixedLayout} enabled. For other tables, cell widths will always be recalculated.\n         */\n        this._forceRecalculateCellWidths = true;\n        /**\n         * Cache of the latest rendered `RenderRow` objects as a map for easy retrieval when constructing\n         * a new list of `RenderRow` objects for rendering rows. Since the new list is constructed with\n         * the cached `RenderRow` objects when possible, the row identity is preserved when the data\n         * and row template matches, which allows the `IterableDiffer` to check rows by reference\n         * and understand which rows are added/moved/removed.\n         *\n         * Implemented as a map of maps where the first key is the `data: T` object and the second is the\n         * `CdkRowDef<T>` object. With the two keys, the cache points to a `RenderRow<T>` object that\n         * contains an array of created pairs. The array is necessary to handle cases where the data\n         * array contains multiple duplicate data objects and each instantiated `RenderRow` must be\n         * stored.\n         */\n        this._cachedRenderRowsMap = new Map();\n        /**\n         * CSS class added to any row or cell that has sticky positioning applied. May be overriden by\n         * table subclasses.\n         */\n        this.stickyCssClass = 'cdk-table-sticky';\n        /**\n         * Whether to manually add positon: sticky to all sticky cell elements. Not needed if\n         * the position is set in a selector associated with the value of stickyCssClass. May be\n         * overridden by table subclasses\n         */\n        this.needsPositionStickyOnElement = true;\n        /** Whether the no data row is currently showing anything. */\n        this._isShowingNoDataRow = false;\n        this._multiTemplateDataRows = false;\n        this._fixedLayout = false;\n        /**\n         * Emits when the table completes rendering a set of data rows based on the latest data from the\n         * data source, even if the set of rows is empty.\n         */\n        this.contentChanged = new EventEmitter();\n        // TODO(andrewseguin): Remove max value as the end index\n        //   and instead calculate the view on init and scroll.\n        /**\n         * Stream containing the latest information on what rows are being displayed on screen.\n         * Can be used by the data source to as a heuristic of what data should be provided.\n         *\n         * @docs-private\n         */\n        this.viewChange = new BehaviorSubject({\n            start: 0,\n            end: Number.MAX_VALUE,\n        });\n        if (!role) {\n            this._elementRef.nativeElement.setAttribute('role', 'table');\n        }\n        this._document = _document;\n        this._isNativeHtmlTable = this._elementRef.nativeElement.nodeName === 'TABLE';\n    }\n    /**\n     * Tracking function that will be used to check the differences in data changes. Used similarly\n     * to `ngFor` `trackBy` function. Optimize row operations by identifying a row based on its data\n     * relative to the function to know if a row should be added/removed/moved.\n     * Accepts a function that takes two parameters, `index` and `item`.\n     */\n    get trackBy() {\n        return this._trackByFn;\n    }\n    set trackBy(fn) {\n        if ((typeof ngDevMode === 'undefined' || ngDevMode) && fn != null && typeof fn !== 'function') {\n            console.warn(`trackBy must be a function, but received ${JSON.stringify(fn)}.`);\n        }\n        this._trackByFn = fn;\n    }\n    /**\n     * The table's source of data, which can be provided in three ways (in order of complexity):\n     *   - Simple data array (each object represents one table row)\n     *   - Stream that emits a data array each time the array changes\n     *   - `DataSource` object that implements the connect/disconnect interface.\n     *\n     * If a data array is provided, the table must be notified when the array's objects are\n     * added, removed, or moved. This can be done by calling the `renderRows()` function which will\n     * render the diff since the last table render. If the data array reference is changed, the table\n     * will automatically trigger an update to the rows.\n     *\n     * When providing an Observable stream, the table will trigger an update automatically when the\n     * stream emits a new array of data.\n     *\n     * Finally, when providing a `DataSource` object, the table will use the Observable stream\n     * provided by the connect function and trigger updates when that stream emits new data array\n     * values. During the table's ngOnDestroy or when the data source is removed from the table, the\n     * table will call the DataSource's `disconnect` function (may be useful for cleaning up any\n     * subscriptions registered during the connect process).\n     */\n    get dataSource() {\n        return this._dataSource;\n    }\n    set dataSource(dataSource) {\n        if (this._dataSource !== dataSource) {\n            this._switchDataSource(dataSource);\n        }\n    }\n    /**\n     * Whether to allow multiple rows per data object by evaluating which rows evaluate their 'when'\n     * predicate to true. If `multiTemplateDataRows` is false, which is the default value, then each\n     * dataobject will render the first row that evaluates its when predicate to true, in the order\n     * defined in the table, or otherwise the default row which does not have a when predicate.\n     */\n    get multiTemplateDataRows() {\n        return this._multiTemplateDataRows;\n    }\n    set multiTemplateDataRows(v) {\n        this._multiTemplateDataRows = coerceBooleanProperty(v);\n        // In Ivy if this value is set via a static attribute (e.g. <table multiTemplateDataRows>),\n        // this setter will be invoked before the row outlet has been defined hence the null check.\n        if (this._rowOutlet && this._rowOutlet.viewContainer.length) {\n            this._forceRenderDataRows();\n            this.updateStickyColumnStyles();\n        }\n    }\n    /**\n     * Whether to use a fixed table layout. Enabling this option will enforce consistent column widths\n     * and optimize rendering sticky styles for native tables. No-op for flex tables.\n     */\n    get fixedLayout() {\n        return this._fixedLayout;\n    }\n    set fixedLayout(v) {\n        this._fixedLayout = coerceBooleanProperty(v);\n        // Toggling `fixedLayout` may change column widths. Sticky column styles should be recalculated.\n        this._forceRecalculateCellWidths = true;\n        this._stickyColumnStylesNeedReset = true;\n    }\n    ngOnInit() {\n        this._setupStickyStyler();\n        if (this._isNativeHtmlTable) {\n            this._applyNativeTableSections();\n        }\n        // Set up the trackBy function so that it uses the `RenderRow` as its identity by default. If\n        // the user has provided a custom trackBy, return the result of that function as evaluated\n        // with the values of the `RenderRow`'s data and index.\n        this._dataDiffer = this._differs.find([]).create((_i, dataRow) => {\n            return this.trackBy ? this.trackBy(dataRow.dataIndex, dataRow.data) : dataRow;\n        });\n        this._viewportRuler\n            .change()\n            .pipe(takeUntil(this._onDestroy))\n            .subscribe(() => {\n            this._forceRecalculateCellWidths = true;\n        });\n    }\n    ngAfterContentChecked() {\n        // Cache the row and column definitions gathered by ContentChildren and programmatic injection.\n        this._cacheRowDefs();\n        this._cacheColumnDefs();\n        // Make sure that the user has at least added header, footer, or data row def.\n        if (!this._headerRowDefs.length &&\n            !this._footerRowDefs.length &&\n            !this._rowDefs.length &&\n            (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw getTableMissingRowDefsError();\n        }\n        // Render updates if the list of columns have been changed for the header, row, or footer defs.\n        const columnsChanged = this._renderUpdatedColumns();\n        const rowDefsChanged = columnsChanged || this._headerRowDefChanged || this._footerRowDefChanged;\n        // Ensure sticky column styles are reset if set to `true` elsewhere.\n        this._stickyColumnStylesNeedReset = this._stickyColumnStylesNeedReset || rowDefsChanged;\n        this._forceRecalculateCellWidths = rowDefsChanged;\n        // If the header row definition has been changed, trigger a render to the header row.\n        if (this._headerRowDefChanged) {\n            this._forceRenderHeaderRows();\n            this._headerRowDefChanged = false;\n        }\n        // If the footer row definition has been changed, trigger a render to the footer row.\n        if (this._footerRowDefChanged) {\n            this._forceRenderFooterRows();\n            this._footerRowDefChanged = false;\n        }\n        // If there is a data source and row definitions, connect to the data source unless a\n        // connection has already been made.\n        if (this.dataSource && this._rowDefs.length > 0 && !this._renderChangeSubscription) {\n            this._observeRenderChanges();\n        }\n        else if (this._stickyColumnStylesNeedReset) {\n            // In the above case, _observeRenderChanges will result in updateStickyColumnStyles being\n            // called when it row data arrives. Otherwise, we need to call it proactively.\n            this.updateStickyColumnStyles();\n        }\n        this._checkStickyStates();\n    }\n    ngOnDestroy() {\n        this._rowOutlet.viewContainer.clear();\n        this._noDataRowOutlet.viewContainer.clear();\n        this._headerRowOutlet.viewContainer.clear();\n        this._footerRowOutlet.viewContainer.clear();\n        this._cachedRenderRowsMap.clear();\n        this._onDestroy.next();\n        this._onDestroy.complete();\n        if (isDataSource(this.dataSource)) {\n            this.dataSource.disconnect(this);\n        }\n    }\n    /**\n     * Renders rows based on the table's latest set of data, which was either provided directly as an\n     * input or retrieved through an Observable stream (directly or from a DataSource).\n     * Checks for differences in the data since the last diff to perform only the necessary\n     * changes (add/remove/move rows).\n     *\n     * If the table's data source is a DataSource or Observable, this will be invoked automatically\n     * each time the provided Observable stream emits a new data array. Otherwise if your data is\n     * an array, this function will need to be called to render any changes.\n     */\n    renderRows() {\n        this._renderRows = this._getAllRenderRows();\n        const changes = this._dataDiffer.diff(this._renderRows);\n        if (!changes) {\n            this._updateNoDataRow();\n            this.contentChanged.next();\n            return;\n        }\n        const viewContainer = this._rowOutlet.viewContainer;\n        this._viewRepeater.applyChanges(changes, viewContainer, (record, _adjustedPreviousIndex, currentIndex) => this._getEmbeddedViewArgs(record.item, currentIndex), record => record.item.data, (change) => {\n            if (change.operation === 1 /* INSERTED */ && change.context) {\n                this._renderCellTemplateForItem(change.record.item.rowDef, change.context);\n            }\n        });\n        // Update the meta context of a row's context data (index, count, first, last, ...)\n        this._updateRowIndexContext();\n        // Update rows that did not get added/removed/moved but may have had their identity changed,\n        // e.g. if trackBy matched data on some property but the actual data reference changed.\n        changes.forEachIdentityChange((record) => {\n            const rowView = viewContainer.get(record.currentIndex);\n            rowView.context.$implicit = record.item.data;\n        });\n        this._updateNoDataRow();\n        this.updateStickyColumnStyles();\n        this.contentChanged.next();\n    }\n    /** Adds a column definition that was not included as part of the content children. */\n    addColumnDef(columnDef) {\n        this._customColumnDefs.add(columnDef);\n    }\n    /** Removes a column definition that was not included as part of the content children. */\n    removeColumnDef(columnDef) {\n        this._customColumnDefs.delete(columnDef);\n    }\n    /** Adds a row definition that was not included as part of the content children. */\n    addRowDef(rowDef) {\n        this._customRowDefs.add(rowDef);\n    }\n    /** Removes a row definition that was not included as part of the content children. */\n    removeRowDef(rowDef) {\n        this._customRowDefs.delete(rowDef);\n    }\n    /** Adds a header row definition that was not included as part of the content children. */\n    addHeaderRowDef(headerRowDef) {\n        this._customHeaderRowDefs.add(headerRowDef);\n        this._headerRowDefChanged = true;\n    }\n    /** Removes a header row definition that was not included as part of the content children. */\n    removeHeaderRowDef(headerRowDef) {\n        this._customHeaderRowDefs.delete(headerRowDef);\n        this._headerRowDefChanged = true;\n    }\n    /** Adds a footer row definition that was not included as part of the content children. */\n    addFooterRowDef(footerRowDef) {\n        this._customFooterRowDefs.add(footerRowDef);\n        this._footerRowDefChanged = true;\n    }\n    /** Removes a footer row definition that was not included as part of the content children. */\n    removeFooterRowDef(footerRowDef) {\n        this._customFooterRowDefs.delete(footerRowDef);\n        this._footerRowDefChanged = true;\n    }\n    /** Sets a no data row definition that was not included as a part of the content children. */\n    setNoDataRow(noDataRow) {\n        this._customNoDataRow = noDataRow;\n    }\n    /**\n     * Updates the header sticky styles. First resets all applied styles with respect to the cells\n     * sticking to the top. Then, evaluating which cells need to be stuck to the top. This is\n     * automatically called when the header row changes its displayed set of columns, or if its\n     * sticky input changes. May be called manually for cases where the cell content changes outside\n     * of these events.\n     */\n    updateStickyHeaderRowStyles() {\n        const headerRows = this._getRenderedRows(this._headerRowOutlet);\n        const tableElement = this._elementRef.nativeElement;\n        // Hide the thead element if there are no header rows. This is necessary to satisfy\n        // overzealous a11y checkers that fail because the `rowgroup` element does not contain\n        // required child `row`.\n        const thead = tableElement.querySelector('thead');\n        if (thead) {\n            thead.style.display = headerRows.length ? '' : 'none';\n        }\n        const stickyStates = this._headerRowDefs.map(def => def.sticky);\n        this._stickyStyler.clearStickyPositioning(headerRows, ['top']);\n        this._stickyStyler.stickRows(headerRows, stickyStates, 'top');\n        // Reset the dirty state of the sticky input change since it has been used.\n        this._headerRowDefs.forEach(def => def.resetStickyChanged());\n    }\n    /**\n     * Updates the footer sticky styles. First resets all applied styles with respect to the cells\n     * sticking to the bottom. Then, evaluating which cells need to be stuck to the bottom. This is\n     * automatically called when the footer row changes its displayed set of columns, or if its\n     * sticky input changes. May be called manually for cases where the cell content changes outside\n     * of these events.\n     */\n    updateStickyFooterRowStyles() {\n        const footerRows = this._getRenderedRows(this._footerRowOutlet);\n        const tableElement = this._elementRef.nativeElement;\n        // Hide the tfoot element if there are no footer rows. This is necessary to satisfy\n        // overzealous a11y checkers that fail because the `rowgroup` element does not contain\n        // required child `row`.\n        const tfoot = tableElement.querySelector('tfoot');\n        if (tfoot) {\n            tfoot.style.display = footerRows.length ? '' : 'none';\n        }\n        const stickyStates = this._footerRowDefs.map(def => def.sticky);\n        this._stickyStyler.clearStickyPositioning(footerRows, ['bottom']);\n        this._stickyStyler.stickRows(footerRows, stickyStates, 'bottom');\n        this._stickyStyler.updateStickyFooterContainer(this._elementRef.nativeElement, stickyStates);\n        // Reset the dirty state of the sticky input change since it has been used.\n        this._footerRowDefs.forEach(def => def.resetStickyChanged());\n    }\n    /**\n     * Updates the column sticky styles. First resets all applied styles with respect to the cells\n     * sticking to the left and right. Then sticky styles are added for the left and right according\n     * to the column definitions for each cell in each row. This is automatically called when\n     * the data source provides a new set of data or when a column definition changes its sticky\n     * input. May be called manually for cases where the cell content changes outside of these events.\n     */\n    updateStickyColumnStyles() {\n        const headerRows = this._getRenderedRows(this._headerRowOutlet);\n        const dataRows = this._getRenderedRows(this._rowOutlet);\n        const footerRows = this._getRenderedRows(this._footerRowOutlet);\n        // For tables not using a fixed layout, the column widths may change when new rows are rendered.\n        // In a table using a fixed layout, row content won't affect column width, so sticky styles\n        // don't need to be cleared unless either the sticky column config changes or one of the row\n        // defs change.\n        if ((this._isNativeHtmlTable && !this._fixedLayout) || this._stickyColumnStylesNeedReset) {\n            // Clear the left and right positioning from all columns in the table across all rows since\n            // sticky columns span across all table sections (header, data, footer)\n            this._stickyStyler.clearStickyPositioning([...headerRows, ...dataRows, ...footerRows], ['left', 'right']);\n            this._stickyColumnStylesNeedReset = false;\n        }\n        // Update the sticky styles for each header row depending on the def's sticky state\n        headerRows.forEach((headerRow, i) => {\n            this._addStickyColumnStyles([headerRow], this._headerRowDefs[i]);\n        });\n        // Update the sticky styles for each data row depending on its def's sticky state\n        this._rowDefs.forEach(rowDef => {\n            // Collect all the rows rendered with this row definition.\n            const rows = [];\n            for (let i = 0; i < dataRows.length; i++) {\n                if (this._renderRows[i].rowDef === rowDef) {\n                    rows.push(dataRows[i]);\n                }\n            }\n            this._addStickyColumnStyles(rows, rowDef);\n        });\n        // Update the sticky styles for each footer row depending on the def's sticky state\n        footerRows.forEach((footerRow, i) => {\n            this._addStickyColumnStyles([footerRow], this._footerRowDefs[i]);\n        });\n        // Reset the dirty state of the sticky input change since it has been used.\n        Array.from(this._columnDefsByName.values()).forEach(def => def.resetStickyChanged());\n    }\n    /**\n     * Get the list of RenderRow objects to render according to the current list of data and defined\n     * row definitions. If the previous list already contained a particular pair, it should be reused\n     * so that the differ equates their references.\n     */\n    _getAllRenderRows() {\n        const renderRows = [];\n        // Store the cache and create a new one. Any re-used RenderRow objects will be moved into the\n        // new cache while unused ones can be picked up by garbage collection.\n        const prevCachedRenderRows = this._cachedRenderRowsMap;\n        this._cachedRenderRowsMap = new Map();\n        // For each data object, get the list of rows that should be rendered, represented by the\n        // respective `RenderRow` object which is the pair of `data` and `CdkRowDef`.\n        for (let i = 0; i < this._data.length; i++) {\n            let data = this._data[i];\n            const renderRowsForData = this._getRenderRowsForData(data, i, prevCachedRenderRows.get(data));\n            if (!this._cachedRenderRowsMap.has(data)) {\n                this._cachedRenderRowsMap.set(data, new WeakMap());\n            }\n            for (let j = 0; j < renderRowsForData.length; j++) {\n                let renderRow = renderRowsForData[j];\n                const cache = this._cachedRenderRowsMap.get(renderRow.data);\n                if (cache.has(renderRow.rowDef)) {\n                    cache.get(renderRow.rowDef).push(renderRow);\n                }\n                else {\n                    cache.set(renderRow.rowDef, [renderRow]);\n                }\n                renderRows.push(renderRow);\n            }\n        }\n        return renderRows;\n    }\n    /**\n     * Gets a list of `RenderRow<T>` for the provided data object and any `CdkRowDef` objects that\n     * should be rendered for this data. Reuses the cached RenderRow objects if they match the same\n     * `(T, CdkRowDef)` pair.\n     */\n    _getRenderRowsForData(data, dataIndex, cache) {\n        const rowDefs = this._getRowDefs(data, dataIndex);\n        return rowDefs.map(rowDef => {\n            const cachedRenderRows = cache && cache.has(rowDef) ? cache.get(rowDef) : [];\n            if (cachedRenderRows.length) {\n                const dataRow = cachedRenderRows.shift();\n                dataRow.dataIndex = dataIndex;\n                return dataRow;\n            }\n            else {\n                return { data, rowDef, dataIndex };\n            }\n        });\n    }\n    /** Update the map containing the content's column definitions. */\n    _cacheColumnDefs() {\n        this._columnDefsByName.clear();\n        const columnDefs = mergeArrayAndSet(this._getOwnDefs(this._contentColumnDefs), this._customColumnDefs);\n        columnDefs.forEach(columnDef => {\n            if (this._columnDefsByName.has(columnDef.name) &&\n                (typeof ngDevMode === 'undefined' || ngDevMode)) {\n                throw getTableDuplicateColumnNameError(columnDef.name);\n            }\n            this._columnDefsByName.set(columnDef.name, columnDef);\n        });\n    }\n    /** Update the list of all available row definitions that can be used. */\n    _cacheRowDefs() {\n        this._headerRowDefs = mergeArrayAndSet(this._getOwnDefs(this._contentHeaderRowDefs), this._customHeaderRowDefs);\n        this._footerRowDefs = mergeArrayAndSet(this._getOwnDefs(this._contentFooterRowDefs), this._customFooterRowDefs);\n        this._rowDefs = mergeArrayAndSet(this._getOwnDefs(this._contentRowDefs), this._customRowDefs);\n        // After all row definitions are determined, find the row definition to be considered default.\n        const defaultRowDefs = this._rowDefs.filter(def => !def.when);\n        if (!this.multiTemplateDataRows &&\n            defaultRowDefs.length > 1 &&\n            (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw getTableMultipleDefaultRowDefsError();\n        }\n        this._defaultRowDef = defaultRowDefs[0];\n    }\n    /**\n     * Check if the header, data, or footer rows have changed what columns they want to display or\n     * whether the sticky states have changed for the header or footer. If there is a diff, then\n     * re-render that section.\n     */\n    _renderUpdatedColumns() {\n        const columnsDiffReducer = (acc, def) => acc || !!def.getColumnsDiff();\n        // Force re-render data rows if the list of column definitions have changed.\n        const dataColumnsChanged = this._rowDefs.reduce(columnsDiffReducer, false);\n        if (dataColumnsChanged) {\n            this._forceRenderDataRows();\n        }\n        // Force re-render header/footer rows if the list of column definitions have changed.\n        const headerColumnsChanged = this._headerRowDefs.reduce(columnsDiffReducer, false);\n        if (headerColumnsChanged) {\n            this._forceRenderHeaderRows();\n        }\n        const footerColumnsChanged = this._footerRowDefs.reduce(columnsDiffReducer, false);\n        if (footerColumnsChanged) {\n            this._forceRenderFooterRows();\n        }\n        return dataColumnsChanged || headerColumnsChanged || footerColumnsChanged;\n    }\n    /**\n     * Switch to the provided data source by resetting the data and unsubscribing from the current\n     * render change subscription if one exists. If the data source is null, interpret this by\n     * clearing the row outlet. Otherwise start listening for new data.\n     */\n    _switchDataSource(dataSource) {\n        this._data = [];\n        if (isDataSource(this.dataSource)) {\n            this.dataSource.disconnect(this);\n        }\n        // Stop listening for data from the previous data source.\n        if (this._renderChangeSubscription) {\n            this._renderChangeSubscription.unsubscribe();\n            this._renderChangeSubscription = null;\n        }\n        if (!dataSource) {\n            if (this._dataDiffer) {\n                this._dataDiffer.diff([]);\n            }\n            this._rowOutlet.viewContainer.clear();\n        }\n        this._dataSource = dataSource;\n    }\n    /** Set up a subscription for the data provided by the data source. */\n    _observeRenderChanges() {\n        // If no data source has been set, there is nothing to observe for changes.\n        if (!this.dataSource) {\n            return;\n        }\n        let dataStream;\n        if (isDataSource(this.dataSource)) {\n            dataStream = this.dataSource.connect(this);\n        }\n        else if (isObservable(this.dataSource)) {\n            dataStream = this.dataSource;\n        }\n        else if (Array.isArray(this.dataSource)) {\n            dataStream = of(this.dataSource);\n        }\n        if (dataStream === undefined && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw getTableUnknownDataSourceError();\n        }\n        this._renderChangeSubscription = dataStream\n            .pipe(takeUntil(this._onDestroy))\n            .subscribe(data => {\n            this._data = data || [];\n            this.renderRows();\n        });\n    }\n    /**\n     * Clears any existing content in the header row outlet and creates a new embedded view\n     * in the outlet using the header row definition.\n     */\n    _forceRenderHeaderRows() {\n        // Clear the header row outlet if any content exists.\n        if (this._headerRowOutlet.viewContainer.length > 0) {\n            this._headerRowOutlet.viewContainer.clear();\n        }\n        this._headerRowDefs.forEach((def, i) => this._renderRow(this._headerRowOutlet, def, i));\n        this.updateStickyHeaderRowStyles();\n    }\n    /**\n     * Clears any existing content in the footer row outlet and creates a new embedded view\n     * in the outlet using the footer row definition.\n     */\n    _forceRenderFooterRows() {\n        // Clear the footer row outlet if any content exists.\n        if (this._footerRowOutlet.viewContainer.length > 0) {\n            this._footerRowOutlet.viewContainer.clear();\n        }\n        this._footerRowDefs.forEach((def, i) => this._renderRow(this._footerRowOutlet, def, i));\n        this.updateStickyFooterRowStyles();\n    }\n    /** Adds the sticky column styles for the rows according to the columns' stick states. */\n    _addStickyColumnStyles(rows, rowDef) {\n        const columnDefs = Array.from(rowDef.columns || []).map(columnName => {\n            const columnDef = this._columnDefsByName.get(columnName);\n            if (!columnDef && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n                throw getTableUnknownColumnError(columnName);\n            }\n            return columnDef;\n        });\n        const stickyStartStates = columnDefs.map(columnDef => columnDef.sticky);\n        const stickyEndStates = columnDefs.map(columnDef => columnDef.stickyEnd);\n        this._stickyStyler.updateStickyColumns(rows, stickyStartStates, stickyEndStates, !this._fixedLayout || this._forceRecalculateCellWidths);\n    }\n    /** Gets the list of rows that have been rendered in the row outlet. */\n    _getRenderedRows(rowOutlet) {\n        const renderedRows = [];\n        for (let i = 0; i < rowOutlet.viewContainer.length; i++) {\n            const viewRef = rowOutlet.viewContainer.get(i);\n            renderedRows.push(viewRef.rootNodes[0]);\n        }\n        return renderedRows;\n    }\n    /**\n     * Get the matching row definitions that should be used for this row data. If there is only\n     * one row definition, it is returned. Otherwise, find the row definitions that has a when\n     * predicate that returns true with the data. If none return true, return the default row\n     * definition.\n     */\n    _getRowDefs(data, dataIndex) {\n        if (this._rowDefs.length == 1) {\n            return [this._rowDefs[0]];\n        }\n        let rowDefs = [];\n        if (this.multiTemplateDataRows) {\n            rowDefs = this._rowDefs.filter(def => !def.when || def.when(dataIndex, data));\n        }\n        else {\n            let rowDef = this._rowDefs.find(def => def.when && def.when(dataIndex, data)) || this._defaultRowDef;\n            if (rowDef) {\n                rowDefs.push(rowDef);\n            }\n        }\n        if (!rowDefs.length && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw getTableMissingMatchingRowDefError(data);\n        }\n        return rowDefs;\n    }\n    _getEmbeddedViewArgs(renderRow, index) {\n        const rowDef = renderRow.rowDef;\n        const context = { $implicit: renderRow.data };\n        return {\n            templateRef: rowDef.template,\n            context,\n            index,\n        };\n    }\n    /**\n     * Creates a new row template in the outlet and fills it with the set of cell templates.\n     * Optionally takes a context to provide to the row and cells, as well as an optional index\n     * of where to place the new row template in the outlet.\n     */\n    _renderRow(outlet, rowDef, index, context = {}) {\n        // TODO(andrewseguin): enforce that one outlet was instantiated from createEmbeddedView\n        const view = outlet.viewContainer.createEmbeddedView(rowDef.template, context, index);\n        this._renderCellTemplateForItem(rowDef, context);\n        return view;\n    }\n    _renderCellTemplateForItem(rowDef, context) {\n        for (let cellTemplate of this._getCellTemplates(rowDef)) {\n            if (CdkCellOutlet.mostRecentCellOutlet) {\n                CdkCellOutlet.mostRecentCellOutlet._viewContainer.createEmbeddedView(cellTemplate, context);\n            }\n        }\n        this._changeDetectorRef.markForCheck();\n    }\n    /**\n     * Updates the index-related context for each row to reflect any changes in the index of the rows,\n     * e.g. first/last/even/odd.\n     */\n    _updateRowIndexContext() {\n        const viewContainer = this._rowOutlet.viewContainer;\n        for (let renderIndex = 0, count = viewContainer.length; renderIndex < count; renderIndex++) {\n            const viewRef = viewContainer.get(renderIndex);\n            const context = viewRef.context;\n            context.count = count;\n            context.first = renderIndex === 0;\n            context.last = renderIndex === count - 1;\n            context.even = renderIndex % 2 === 0;\n            context.odd = !context.even;\n            if (this.multiTemplateDataRows) {\n                context.dataIndex = this._renderRows[renderIndex].dataIndex;\n                context.renderIndex = renderIndex;\n            }\n            else {\n                context.index = this._renderRows[renderIndex].dataIndex;\n            }\n        }\n    }\n    /** Gets the column definitions for the provided row def. */\n    _getCellTemplates(rowDef) {\n        if (!rowDef || !rowDef.columns) {\n            return [];\n        }\n        return Array.from(rowDef.columns, columnId => {\n            const column = this._columnDefsByName.get(columnId);\n            if (!column && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n                throw getTableUnknownColumnError(columnId);\n            }\n            return rowDef.extractCellTemplate(column);\n        });\n    }\n    /** Adds native table sections (e.g. tbody) and moves the row outlets into them. */\n    _applyNativeTableSections() {\n        const documentFragment = this._document.createDocumentFragment();\n        const sections = [\n            { tag: 'thead', outlets: [this._headerRowOutlet] },\n            { tag: 'tbody', outlets: [this._rowOutlet, this._noDataRowOutlet] },\n            { tag: 'tfoot', outlets: [this._footerRowOutlet] },\n        ];\n        for (const section of sections) {\n            const element = this._document.createElement(section.tag);\n            element.setAttribute('role', 'rowgroup');\n            for (const outlet of section.outlets) {\n                element.appendChild(outlet.elementRef.nativeElement);\n            }\n            documentFragment.appendChild(element);\n        }\n        // Use a DocumentFragment so we don't hit the DOM on each iteration.\n        this._elementRef.nativeElement.appendChild(documentFragment);\n    }\n    /**\n     * Forces a re-render of the data rows. Should be called in cases where there has been an input\n     * change that affects the evaluation of which rows should be rendered, e.g. toggling\n     * `multiTemplateDataRows` or adding/removing row definitions.\n     */\n    _forceRenderDataRows() {\n        this._dataDiffer.diff([]);\n        this._rowOutlet.viewContainer.clear();\n        this.renderRows();\n    }\n    /**\n     * Checks if there has been a change in sticky states since last check and applies the correct\n     * sticky styles. Since checking resets the \"dirty\" state, this should only be performed once\n     * during a change detection and after the inputs are settled (after content check).\n     */\n    _checkStickyStates() {\n        const stickyCheckReducer = (acc, d) => {\n            return acc || d.hasStickyChanged();\n        };\n        // Note that the check needs to occur for every definition since it notifies the definition\n        // that it can reset its dirty state. Using another operator like `some` may short-circuit\n        // remaining definitions and leave them in an unchecked state.\n        if (this._headerRowDefs.reduce(stickyCheckReducer, false)) {\n            this.updateStickyHeaderRowStyles();\n        }\n        if (this._footerRowDefs.reduce(stickyCheckReducer, false)) {\n            this.updateStickyFooterRowStyles();\n        }\n        if (Array.from(this._columnDefsByName.values()).reduce(stickyCheckReducer, false)) {\n            this._stickyColumnStylesNeedReset = true;\n            this.updateStickyColumnStyles();\n        }\n    }\n    /**\n     * Creates the sticky styler that will be used for sticky rows and columns. Listens\n     * for directionality changes and provides the latest direction to the styler. Re-applies column\n     * stickiness when directionality changes.\n     */\n    _setupStickyStyler() {\n        const direction = this._dir ? this._dir.value : 'ltr';\n        this._stickyStyler = new StickyStyler(this._isNativeHtmlTable, this.stickyCssClass, direction, this._coalescedStyleScheduler, this._platform.isBrowser, this.needsPositionStickyOnElement, this._stickyPositioningListener);\n        (this._dir ? this._dir.change : of())\n            .pipe(takeUntil(this._onDestroy))\n            .subscribe(value => {\n            this._stickyStyler.direction = value;\n            this.updateStickyColumnStyles();\n        });\n    }\n    /** Filters definitions that belong to this table from a QueryList. */\n    _getOwnDefs(items) {\n        return items.filter(item => !item._table || item._table === this);\n    }\n    /** Creates or removes the no data row, depending on whether any data is being shown. */\n    _updateNoDataRow() {\n        const noDataRow = this._customNoDataRow || this._noDataRow;\n        if (!noDataRow) {\n            return;\n        }\n        const shouldShow = this._rowOutlet.viewContainer.length === 0;\n        if (shouldShow === this._isShowingNoDataRow) {\n            return;\n        }\n        const container = this._noDataRowOutlet.viewContainer;\n        if (shouldShow) {\n            const view = container.createEmbeddedView(noDataRow.templateRef);\n            const rootNode = view.rootNodes[0];\n            // Only add the attributes if we have a single root node since it's hard\n            // to figure out which one to add it to when there are multiple.\n            if (view.rootNodes.length === 1 && (rootNode === null || rootNode === void 0 ? void 0 : rootNode.nodeType) === this._document.ELEMENT_NODE) {\n                rootNode.setAttribute('role', 'row');\n                rootNode.classList.add(noDataRow._contentClassName);\n            }\n        }\n        else {\n            container.clear();\n        }\n        this._isShowingNoDataRow = shouldShow;\n    }\n}\nCdkTable.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: CdkTable, deps: [{ token: i0.IterableDiffers }, { token: i0.ChangeDetectorRef }, { token: i0.ElementRef }, { token: 'role', attribute: true }, { token: i1.Directionality, optional: true }, { token: DOCUMENT }, { token: i2.Platform }, { token: _VIEW_REPEATER_STRATEGY }, { token: _COALESCED_STYLE_SCHEDULER }, { token: i3.ViewportRuler }, { token: STICKY_POSITIONING_LISTENER, optional: true, skipSelf: true }], target: i0.ɵɵFactoryTarget.Component });\nCdkTable.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: CdkTable, selector: \"cdk-table, table[cdk-table]\", inputs: { trackBy: \"trackBy\", dataSource: \"dataSource\", multiTemplateDataRows: \"multiTemplateDataRows\", fixedLayout: \"fixedLayout\" }, outputs: { contentChanged: \"contentChanged\" }, host: { properties: { \"class.cdk-table-fixed-layout\": \"fixedLayout\" }, classAttribute: \"cdk-table\" }, providers: [\n        { provide: CDK_TABLE, useExisting: CdkTable },\n        { provide: _VIEW_REPEATER_STRATEGY, useClass: _DisposeViewRepeaterStrategy },\n        { provide: _COALESCED_STYLE_SCHEDULER, useClass: _CoalescedStyleScheduler },\n        // Prevent nested tables from seeing this table's StickyPositioningListener.\n        { provide: STICKY_POSITIONING_LISTENER, useValue: null },\n    ], queries: [{ propertyName: \"_noDataRow\", first: true, predicate: CdkNoDataRow, descendants: true }, { propertyName: \"_contentColumnDefs\", predicate: CdkColumnDef, descendants: true }, { propertyName: \"_contentRowDefs\", predicate: CdkRowDef, descendants: true }, { propertyName: \"_contentHeaderRowDefs\", predicate: CdkHeaderRowDef, descendants: true }, { propertyName: \"_contentFooterRowDefs\", predicate: CdkFooterRowDef, descendants: true }], viewQueries: [{ propertyName: \"_rowOutlet\", first: true, predicate: DataRowOutlet, descendants: true, static: true }, { propertyName: \"_headerRowOutlet\", first: true, predicate: HeaderRowOutlet, descendants: true, static: true }, { propertyName: \"_footerRowOutlet\", first: true, predicate: FooterRowOutlet, descendants: true, static: true }, { propertyName: \"_noDataRowOutlet\", first: true, predicate: NoDataRowOutlet, descendants: true, static: true }], exportAs: [\"cdkTable\"], ngImport: i0, template: \"\\n  <ng-content select=\\\"caption\\\"></ng-content>\\n  <ng-content select=\\\"colgroup, col\\\"></ng-content>\\n  <ng-container headerRowOutlet></ng-container>\\n  <ng-container rowOutlet></ng-container>\\n  <ng-container noDataRowOutlet></ng-container>\\n  <ng-container footerRowOutlet></ng-container>\\n\", isInline: true, styles: [\".cdk-table-fixed-layout{table-layout:fixed}\\n\"], directives: [{ type: HeaderRowOutlet, selector: \"[headerRowOutlet]\" }, { type: DataRowOutlet, selector: \"[rowOutlet]\" }, { type: NoDataRowOutlet, selector: \"[noDataRowOutlet]\" }, { type: FooterRowOutlet, selector: \"[footerRowOutlet]\" }], changeDetection: i0.ChangeDetectionStrategy.Default, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: CdkTable, decorators: [{\n            type: Component,\n            args: [{ selector: 'cdk-table, table[cdk-table]', exportAs: 'cdkTable', template: CDK_TABLE_TEMPLATE, host: {\n                        'class': 'cdk-table',\n                        '[class.cdk-table-fixed-layout]': 'fixedLayout',\n                    }, encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.Default, providers: [\n                        { provide: CDK_TABLE, useExisting: CdkTable },\n                        { provide: _VIEW_REPEATER_STRATEGY, useClass: _DisposeViewRepeaterStrategy },\n                        { provide: _COALESCED_STYLE_SCHEDULER, useClass: _CoalescedStyleScheduler },\n                        // Prevent nested tables from seeing this table's StickyPositioningListener.\n                        { provide: STICKY_POSITIONING_LISTENER, useValue: null },\n                    ], styles: [\".cdk-table-fixed-layout{table-layout:fixed}\\n\"] }]\n        }], ctorParameters: function () {\n        return [{ type: i0.IterableDiffers }, { type: i0.ChangeDetectorRef }, { type: i0.ElementRef }, { type: undefined, decorators: [{\n                        type: Attribute,\n                        args: ['role']\n                    }] }, { type: i1.Directionality, decorators: [{\n                        type: Optional\n                    }] }, { type: undefined, decorators: [{\n                        type: Inject,\n                        args: [DOCUMENT]\n                    }] }, { type: i2.Platform }, { type: undefined, decorators: [{\n                        type: Inject,\n                        args: [_VIEW_REPEATER_STRATEGY]\n                    }] }, { type: _CoalescedStyleScheduler, decorators: [{\n                        type: Inject,\n                        args: [_COALESCED_STYLE_SCHEDULER]\n                    }] }, { type: i3.ViewportRuler }, { type: undefined, decorators: [{\n                        type: Optional\n                    }, {\n                        type: SkipSelf\n                    }, {\n                        type: Inject,\n                        args: [STICKY_POSITIONING_LISTENER]\n                    }] }];\n    }, propDecorators: { trackBy: [{\n                type: Input\n            }], dataSource: [{\n                type: Input\n            }], multiTemplateDataRows: [{\n                type: Input\n            }], fixedLayout: [{\n                type: Input\n            }], contentChanged: [{\n                type: Output\n            }], _rowOutlet: [{\n                type: ViewChild,\n                args: [DataRowOutlet, { static: true }]\n            }], _headerRowOutlet: [{\n                type: ViewChild,\n                args: [HeaderRowOutlet, { static: true }]\n            }], _footerRowOutlet: [{\n                type: ViewChild,\n                args: [FooterRowOutlet, { static: true }]\n            }], _noDataRowOutlet: [{\n                type: ViewChild,\n                args: [NoDataRowOutlet, { static: true }]\n            }], _contentColumnDefs: [{\n                type: ContentChildren,\n                args: [CdkColumnDef, { descendants: true }]\n            }], _contentRowDefs: [{\n                type: ContentChildren,\n                args: [CdkRowDef, { descendants: true }]\n            }], _contentHeaderRowDefs: [{\n                type: ContentChildren,\n                args: [CdkHeaderRowDef, {\n                        descendants: true,\n                    }]\n            }], _contentFooterRowDefs: [{\n                type: ContentChildren,\n                args: [CdkFooterRowDef, {\n                        descendants: true,\n                    }]\n            }], _noDataRow: [{\n                type: ContentChild,\n                args: [CdkNoDataRow]\n            }] } });\n/** Utility function that gets a merged list of the entries in an array and values of a Set. */\nfunction mergeArrayAndSet(array, set) {\n    return array.concat(Array.from(set));\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Column that simply shows text content for the header and row cells. Assumes that the table\n * is using the native table implementation (`<table>`).\n *\n * By default, the name of this column will be the header text and data property accessor.\n * The header text can be overridden with the `headerText` input. Cell values can be overridden with\n * the `dataAccessor` input. Change the text justification to the start or end using the `justify`\n * input.\n */\nclass CdkTextColumn {\n    constructor(\n    // `CdkTextColumn` is always requiring a table, but we just assert it manually\n    // for better error reporting.\n    // tslint:disable-next-line: lightweight-tokens\n    _table, _options) {\n        this._table = _table;\n        this._options = _options;\n        /** Alignment of the cell values. */\n        this.justify = 'start';\n        this._options = _options || {};\n    }\n    /** Column name that should be used to reference this column. */\n    get name() {\n        return this._name;\n    }\n    set name(name) {\n        this._name = name;\n        // With Ivy, inputs can be initialized before static query results are\n        // available. In that case, we defer the synchronization until \"ngOnInit\" fires.\n        this._syncColumnDefName();\n    }\n    ngOnInit() {\n        this._syncColumnDefName();\n        if (this.headerText === undefined) {\n            this.headerText = this._createDefaultHeaderText();\n        }\n        if (!this.dataAccessor) {\n            this.dataAccessor =\n                this._options.defaultDataAccessor || ((data, name) => data[name]);\n        }\n        if (this._table) {\n            // Provide the cell and headerCell directly to the table with the static `ViewChild` query,\n            // since the columnDef will not pick up its content by the time the table finishes checking\n            // its content and initializing the rows.\n            this.columnDef.cell = this.cell;\n            this.columnDef.headerCell = this.headerCell;\n            this._table.addColumnDef(this.columnDef);\n        }\n        else if (typeof ngDevMode === 'undefined' || ngDevMode) {\n            throw getTableTextColumnMissingParentTableError();\n        }\n    }\n    ngOnDestroy() {\n        if (this._table) {\n            this._table.removeColumnDef(this.columnDef);\n        }\n    }\n    /**\n     * Creates a default header text. Use the options' header text transformation function if one\n     * has been provided. Otherwise simply capitalize the column name.\n     */\n    _createDefaultHeaderText() {\n        const name = this.name;\n        if (!name && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw getTableTextColumnMissingNameError();\n        }\n        if (this._options && this._options.defaultHeaderTextTransform) {\n            return this._options.defaultHeaderTextTransform(name);\n        }\n        return name[0].toUpperCase() + name.slice(1);\n    }\n    /** Synchronizes the column definition name with the text column name. */\n    _syncColumnDefName() {\n        if (this.columnDef) {\n            this.columnDef.name = this.name;\n        }\n    }\n}\nCdkTextColumn.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: CdkTextColumn, deps: [{ token: CdkTable, optional: true }, { token: TEXT_COLUMN_OPTIONS, optional: true }], target: i0.ɵɵFactoryTarget.Component });\nCdkTextColumn.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: CdkTextColumn, selector: \"cdk-text-column\", inputs: { name: \"name\", headerText: \"headerText\", dataAccessor: \"dataAccessor\", justify: \"justify\" }, viewQueries: [{ propertyName: \"columnDef\", first: true, predicate: CdkColumnDef, descendants: true, static: true }, { propertyName: \"cell\", first: true, predicate: CdkCellDef, descendants: true, static: true }, { propertyName: \"headerCell\", first: true, predicate: CdkHeaderCellDef, descendants: true, static: true }], ngImport: i0, template: `\n    <ng-container cdkColumnDef>\n      <th cdk-header-cell *cdkHeaderCellDef [style.text-align]=\"justify\">\n        {{headerText}}\n      </th>\n      <td cdk-cell *cdkCellDef=\"let data\" [style.text-align]=\"justify\">\n        {{dataAccessor(data, name)}}\n      </td>\n    </ng-container>\n  `, isInline: true, directives: [{ type: CdkColumnDef, selector: \"[cdkColumnDef]\", inputs: [\"sticky\", \"cdkColumnDef\", \"stickyEnd\"] }, { type: CdkHeaderCellDef, selector: \"[cdkHeaderCellDef]\" }, { type: CdkHeaderCell, selector: \"cdk-header-cell, th[cdk-header-cell]\" }, { type: CdkCellDef, selector: \"[cdkCellDef]\" }, { type: CdkCell, selector: \"cdk-cell, td[cdk-cell]\" }], changeDetection: i0.ChangeDetectionStrategy.Default, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: CdkTextColumn, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'cdk-text-column',\n                    template: `\n    <ng-container cdkColumnDef>\n      <th cdk-header-cell *cdkHeaderCellDef [style.text-align]=\"justify\">\n        {{headerText}}\n      </th>\n      <td cdk-cell *cdkCellDef=\"let data\" [style.text-align]=\"justify\">\n        {{dataAccessor(data, name)}}\n      </td>\n    </ng-container>\n  `,\n                    encapsulation: ViewEncapsulation.None,\n                    // Change detection is intentionally not set to OnPush. This component's template will be provided\n                    // to the table to be inserted into its view. This is problematic when change detection runs since\n                    // the bindings in this template will be evaluated _after_ the table's view is evaluated, which\n                    // mean's the template in the table's view will not have the updated value (and in fact will cause\n                    // an ExpressionChangedAfterItHasBeenCheckedError).\n                    // tslint:disable-next-line:validate-decorators\n                    changeDetection: ChangeDetectionStrategy.Default,\n                }]\n        }], ctorParameters: function () {\n        return [{ type: CdkTable, decorators: [{\n                        type: Optional\n                    }] }, { type: undefined, decorators: [{\n                        type: Optional\n                    }, {\n                        type: Inject,\n                        args: [TEXT_COLUMN_OPTIONS]\n                    }] }];\n    }, propDecorators: { name: [{\n                type: Input\n            }], headerText: [{\n                type: Input\n            }], dataAccessor: [{\n                type: Input\n            }], justify: [{\n                type: Input\n            }], columnDef: [{\n                type: ViewChild,\n                args: [CdkColumnDef, { static: true }]\n            }], cell: [{\n                type: ViewChild,\n                args: [CdkCellDef, { static: true }]\n            }], headerCell: [{\n                type: ViewChild,\n                args: [CdkHeaderCellDef, { static: true }]\n            }] } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst EXPORTED_DECLARATIONS = [\n    CdkTable,\n    CdkRowDef,\n    CdkCellDef,\n    CdkCellOutlet,\n    CdkHeaderCellDef,\n    CdkFooterCellDef,\n    CdkColumnDef,\n    CdkCell,\n    CdkRow,\n    CdkHeaderCell,\n    CdkFooterCell,\n    CdkHeaderRow,\n    CdkHeaderRowDef,\n    CdkFooterRow,\n    CdkFooterRowDef,\n    DataRowOutlet,\n    HeaderRowOutlet,\n    FooterRowOutlet,\n    CdkTextColumn,\n    CdkNoDataRow,\n    CdkRecycleRows,\n    NoDataRowOutlet,\n];\nclass CdkTableModule {\n}\nCdkTableModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: CdkTableModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nCdkTableModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: CdkTableModule, declarations: [CdkTable,\n        CdkRowDef,\n        CdkCellDef,\n        CdkCellOutlet,\n        CdkHeaderCellDef,\n        CdkFooterCellDef,\n        CdkColumnDef,\n        CdkCell,\n        CdkRow,\n        CdkHeaderCell,\n        CdkFooterCell,\n        CdkHeaderRow,\n        CdkHeaderRowDef,\n        CdkFooterRow,\n        CdkFooterRowDef,\n        DataRowOutlet,\n        HeaderRowOutlet,\n        FooterRowOutlet,\n        CdkTextColumn,\n        CdkNoDataRow,\n        CdkRecycleRows,\n        NoDataRowOutlet], imports: [ScrollingModule], exports: [CdkTable,\n        CdkRowDef,\n        CdkCellDef,\n        CdkCellOutlet,\n        CdkHeaderCellDef,\n        CdkFooterCellDef,\n        CdkColumnDef,\n        CdkCell,\n        CdkRow,\n        CdkHeaderCell,\n        CdkFooterCell,\n        CdkHeaderRow,\n        CdkHeaderRowDef,\n        CdkFooterRow,\n        CdkFooterRowDef,\n        DataRowOutlet,\n        HeaderRowOutlet,\n        FooterRowOutlet,\n        CdkTextColumn,\n        CdkNoDataRow,\n        CdkRecycleRows,\n        NoDataRowOutlet] });\nCdkTableModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: CdkTableModule, imports: [[ScrollingModule]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: CdkTableModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    exports: EXPORTED_DECLARATIONS,\n                    declarations: EXPORTED_DECLARATIONS,\n                    imports: [ScrollingModule],\n                }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { BaseCdkCell, BaseRowDef, CDK_ROW_TEMPLATE, CDK_TABLE, CDK_TABLE_TEMPLATE, CdkCell, CdkCellDef, CdkCellOutlet, CdkColumnDef, CdkFooterCell, CdkFooterCellDef, CdkFooterRow, CdkFooterRowDef, CdkHeaderCell, CdkHeaderCellDef, CdkHeaderRow, CdkHeaderRowDef, CdkNoDataRow, CdkRecycleRows, CdkRow, CdkRowDef, CdkTable, CdkTableModule, CdkTextColumn, DataRowOutlet, FooterRowOutlet, HeaderRowOutlet, NoDataRowOutlet, STICKY_DIRECTIONS, STICKY_POSITIONING_LISTENER, StickyStyler, TEXT_COLUMN_OPTIONS, _COALESCED_STYLE_SCHEDULER, _CoalescedStyleScheduler, _Schedule, mixinHasStickyInput };\n","import * as i1 from '@angular/cdk/platform';\nimport { normalizePassiveListenerOptions, PlatformModule } from '@angular/cdk/platform';\nimport * as i0 from '@angular/core';\nimport { Injectable, EventEmitter, Directive, Output, Optional, Inject, Input, NgModule } from '@angular/core';\nimport { coerceElement, coerceNumberProperty, coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { EMPTY, Subject, fromEvent } from 'rxjs';\nimport { auditTime, takeUntil } from 'rxjs/operators';\nimport { DOCUMENT } from '@angular/common';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Options to pass to the animationstart listener. */\nconst listenerOptions = normalizePassiveListenerOptions({ passive: true });\n/**\n * An injectable service that can be used to monitor the autofill state of an input.\n * Based on the following blog post:\n * https://medium.com/@brunn/detecting-autofilled-fields-in-javascript-aed598d25da7\n */\nclass AutofillMonitor {\n    constructor(_platform, _ngZone) {\n        this._platform = _platform;\n        this._ngZone = _ngZone;\n        this._monitoredElements = new Map();\n    }\n    monitor(elementOrRef) {\n        if (!this._platform.isBrowser) {\n            return EMPTY;\n        }\n        const element = coerceElement(elementOrRef);\n        const info = this._monitoredElements.get(element);\n        if (info) {\n            return info.subject;\n        }\n        const result = new Subject();\n        const cssClass = 'cdk-text-field-autofilled';\n        const listener = ((event) => {\n            // Animation events fire on initial element render, we check for the presence of the autofill\n            // CSS class to make sure this is a real change in state, not just the initial render before\n            // we fire off events.\n            if (event.animationName === 'cdk-text-field-autofill-start' &&\n                !element.classList.contains(cssClass)) {\n                element.classList.add(cssClass);\n                this._ngZone.run(() => result.next({ target: event.target, isAutofilled: true }));\n            }\n            else if (event.animationName === 'cdk-text-field-autofill-end' &&\n                element.classList.contains(cssClass)) {\n                element.classList.remove(cssClass);\n                this._ngZone.run(() => result.next({ target: event.target, isAutofilled: false }));\n            }\n        });\n        this._ngZone.runOutsideAngular(() => {\n            element.addEventListener('animationstart', listener, listenerOptions);\n            element.classList.add('cdk-text-field-autofill-monitored');\n        });\n        this._monitoredElements.set(element, {\n            subject: result,\n            unlisten: () => {\n                element.removeEventListener('animationstart', listener, listenerOptions);\n            },\n        });\n        return result;\n    }\n    stopMonitoring(elementOrRef) {\n        const element = coerceElement(elementOrRef);\n        const info = this._monitoredElements.get(element);\n        if (info) {\n            info.unlisten();\n            info.subject.complete();\n            element.classList.remove('cdk-text-field-autofill-monitored');\n            element.classList.remove('cdk-text-field-autofilled');\n            this._monitoredElements.delete(element);\n        }\n    }\n    ngOnDestroy() {\n        this._monitoredElements.forEach((_info, element) => this.stopMonitoring(element));\n    }\n}\nAutofillMonitor.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: AutofillMonitor, deps: [{ token: i1.Platform }, { token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Injectable });\nAutofillMonitor.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: AutofillMonitor, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: AutofillMonitor, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: function () { return [{ type: i1.Platform }, { type: i0.NgZone }]; } });\n/** A directive that can be used to monitor the autofill state of an input. */\nclass CdkAutofill {\n    constructor(_elementRef, _autofillMonitor) {\n        this._elementRef = _elementRef;\n        this._autofillMonitor = _autofillMonitor;\n        /** Emits when the autofill state of the element changes. */\n        this.cdkAutofill = new EventEmitter();\n    }\n    ngOnInit() {\n        this._autofillMonitor\n            .monitor(this._elementRef)\n            .subscribe(event => this.cdkAutofill.emit(event));\n    }\n    ngOnDestroy() {\n        this._autofillMonitor.stopMonitoring(this._elementRef);\n    }\n}\nCdkAutofill.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: CdkAutofill, deps: [{ token: i0.ElementRef }, { token: AutofillMonitor }], target: i0.ɵɵFactoryTarget.Directive });\nCdkAutofill.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.1.0\", type: CdkAutofill, selector: \"[cdkAutofill]\", outputs: { cdkAutofill: \"cdkAutofill\" }, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: CdkAutofill, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[cdkAutofill]',\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: AutofillMonitor }]; }, propDecorators: { cdkAutofill: [{\n                type: Output\n            }] } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Directive to automatically resize a textarea to fit its content. */\nclass CdkTextareaAutosize {\n    constructor(_elementRef, _platform, _ngZone, \n    /** @breaking-change 11.0.0 make document required */\n    document) {\n        this._elementRef = _elementRef;\n        this._platform = _platform;\n        this._ngZone = _ngZone;\n        this._destroyed = new Subject();\n        this._enabled = true;\n        /**\n         * Value of minRows as of last resize. If the minRows has decreased, the\n         * height of the textarea needs to be recomputed to reflect the new minimum. The maxHeight\n         * does not have the same problem because it does not affect the textarea's scrollHeight.\n         */\n        this._previousMinRows = -1;\n        this._isViewInited = false;\n        /** Handles `focus` and `blur` events. */\n        this._handleFocusEvent = (event) => {\n            this._hasFocus = event.type === 'focus';\n        };\n        this._document = document;\n        this._textareaElement = this._elementRef.nativeElement;\n    }\n    /** Minimum amount of rows in the textarea. */\n    get minRows() {\n        return this._minRows;\n    }\n    set minRows(value) {\n        this._minRows = coerceNumberProperty(value);\n        this._setMinHeight();\n    }\n    /** Maximum amount of rows in the textarea. */\n    get maxRows() {\n        return this._maxRows;\n    }\n    set maxRows(value) {\n        this._maxRows = coerceNumberProperty(value);\n        this._setMaxHeight();\n    }\n    /** Whether autosizing is enabled or not */\n    get enabled() {\n        return this._enabled;\n    }\n    set enabled(value) {\n        value = coerceBooleanProperty(value);\n        // Only act if the actual value changed. This specifically helps to not run\n        // resizeToFitContent too early (i.e. before ngAfterViewInit)\n        if (this._enabled !== value) {\n            (this._enabled = value) ? this.resizeToFitContent(true) : this.reset();\n        }\n    }\n    get placeholder() {\n        return this._textareaElement.placeholder;\n    }\n    set placeholder(value) {\n        this._cachedPlaceholderHeight = undefined;\n        this._textareaElement.placeholder = value;\n        this._cacheTextareaPlaceholderHeight();\n    }\n    /** Sets the minimum height of the textarea as determined by minRows. */\n    _setMinHeight() {\n        const minHeight = this.minRows && this._cachedLineHeight ? `${this.minRows * this._cachedLineHeight}px` : null;\n        if (minHeight) {\n            this._textareaElement.style.minHeight = minHeight;\n        }\n    }\n    /** Sets the maximum height of the textarea as determined by maxRows. */\n    _setMaxHeight() {\n        const maxHeight = this.maxRows && this._cachedLineHeight ? `${this.maxRows * this._cachedLineHeight}px` : null;\n        if (maxHeight) {\n            this._textareaElement.style.maxHeight = maxHeight;\n        }\n    }\n    ngAfterViewInit() {\n        if (this._platform.isBrowser) {\n            // Remember the height which we started with in case autosizing is disabled\n            this._initialHeight = this._textareaElement.style.height;\n            this.resizeToFitContent();\n            this._ngZone.runOutsideAngular(() => {\n                const window = this._getWindow();\n                fromEvent(window, 'resize')\n                    .pipe(auditTime(16), takeUntil(this._destroyed))\n                    .subscribe(() => this.resizeToFitContent(true));\n                this._textareaElement.addEventListener('focus', this._handleFocusEvent);\n                this._textareaElement.addEventListener('blur', this._handleFocusEvent);\n            });\n            this._isViewInited = true;\n            this.resizeToFitContent(true);\n        }\n    }\n    ngOnDestroy() {\n        this._textareaElement.removeEventListener('focus', this._handleFocusEvent);\n        this._textareaElement.removeEventListener('blur', this._handleFocusEvent);\n        this._destroyed.next();\n        this._destroyed.complete();\n    }\n    /**\n     * Cache the height of a single-row textarea if it has not already been cached.\n     *\n     * We need to know how large a single \"row\" of a textarea is in order to apply minRows and\n     * maxRows. For the initial version, we will assume that the height of a single line in the\n     * textarea does not ever change.\n     */\n    _cacheTextareaLineHeight() {\n        if (this._cachedLineHeight) {\n            return;\n        }\n        // Use a clone element because we have to override some styles.\n        let textareaClone = this._textareaElement.cloneNode(false);\n        textareaClone.rows = 1;\n        // Use `position: absolute` so that this doesn't cause a browser layout and use\n        // `visibility: hidden` so that nothing is rendered. Clear any other styles that\n        // would affect the height.\n        textareaClone.style.position = 'absolute';\n        textareaClone.style.visibility = 'hidden';\n        textareaClone.style.border = 'none';\n        textareaClone.style.padding = '0';\n        textareaClone.style.height = '';\n        textareaClone.style.minHeight = '';\n        textareaClone.style.maxHeight = '';\n        // In Firefox it happens that textarea elements are always bigger than the specified amount\n        // of rows. This is because Firefox tries to add extra space for the horizontal scrollbar.\n        // As a workaround that removes the extra space for the scrollbar, we can just set overflow\n        // to hidden. This ensures that there is no invalid calculation of the line height.\n        // See Firefox bug report: https://bugzilla.mozilla.org/show_bug.cgi?id=33654\n        textareaClone.style.overflow = 'hidden';\n        this._textareaElement.parentNode.appendChild(textareaClone);\n        this._cachedLineHeight = textareaClone.clientHeight;\n        textareaClone.remove();\n        // Min and max heights have to be re-calculated if the cached line height changes\n        this._setMinHeight();\n        this._setMaxHeight();\n    }\n    _measureScrollHeight() {\n        const element = this._textareaElement;\n        const previousMargin = element.style.marginBottom || '';\n        const isFirefox = this._platform.FIREFOX;\n        const needsMarginFiller = isFirefox && this._hasFocus;\n        const measuringClass = isFirefox\n            ? 'cdk-textarea-autosize-measuring-firefox'\n            : 'cdk-textarea-autosize-measuring';\n        // In some cases the page might move around while we're measuring the `textarea` on Firefox. We\n        // work around it by assigning a temporary margin with the same height as the `textarea` so that\n        // it occupies the same amount of space. See #23233.\n        if (needsMarginFiller) {\n            element.style.marginBottom = `${element.clientHeight}px`;\n        }\n        // Reset the textarea height to auto in order to shrink back to its default size.\n        // Also temporarily force overflow:hidden, so scroll bars do not interfere with calculations.\n        element.classList.add(measuringClass);\n        // The measuring class includes a 2px padding to workaround an issue with Chrome,\n        // so we account for that extra space here by subtracting 4 (2px top + 2px bottom).\n        const scrollHeight = element.scrollHeight - 4;\n        element.classList.remove(measuringClass);\n        if (needsMarginFiller) {\n            element.style.marginBottom = previousMargin;\n        }\n        return scrollHeight;\n    }\n    _cacheTextareaPlaceholderHeight() {\n        if (!this._isViewInited || this._cachedPlaceholderHeight != undefined) {\n            return;\n        }\n        if (!this.placeholder) {\n            this._cachedPlaceholderHeight = 0;\n            return;\n        }\n        const value = this._textareaElement.value;\n        this._textareaElement.value = this._textareaElement.placeholder;\n        this._cachedPlaceholderHeight = this._measureScrollHeight();\n        this._textareaElement.value = value;\n    }\n    ngDoCheck() {\n        if (this._platform.isBrowser) {\n            this.resizeToFitContent();\n        }\n    }\n    /**\n     * Resize the textarea to fit its content.\n     * @param force Whether to force a height recalculation. By default the height will be\n     *    recalculated only if the value changed since the last call.\n     */\n    resizeToFitContent(force = false) {\n        // If autosizing is disabled, just skip everything else\n        if (!this._enabled) {\n            return;\n        }\n        this._cacheTextareaLineHeight();\n        this._cacheTextareaPlaceholderHeight();\n        // If we haven't determined the line-height yet, we know we're still hidden and there's no point\n        // in checking the height of the textarea.\n        if (!this._cachedLineHeight) {\n            return;\n        }\n        const textarea = this._elementRef.nativeElement;\n        const value = textarea.value;\n        // Only resize if the value or minRows have changed since these calculations can be expensive.\n        if (!force && this._minRows === this._previousMinRows && value === this._previousValue) {\n            return;\n        }\n        const scrollHeight = this._measureScrollHeight();\n        const height = Math.max(scrollHeight, this._cachedPlaceholderHeight || 0);\n        // Use the scrollHeight to know how large the textarea *would* be if fit its entire value.\n        textarea.style.height = `${height}px`;\n        this._ngZone.runOutsideAngular(() => {\n            if (typeof requestAnimationFrame !== 'undefined') {\n                requestAnimationFrame(() => this._scrollToCaretPosition(textarea));\n            }\n            else {\n                setTimeout(() => this._scrollToCaretPosition(textarea));\n            }\n        });\n        this._previousValue = value;\n        this._previousMinRows = this._minRows;\n    }\n    /**\n     * Resets the textarea to its original size\n     */\n    reset() {\n        // Do not try to change the textarea, if the initialHeight has not been determined yet\n        // This might potentially remove styles when reset() is called before ngAfterViewInit\n        if (this._initialHeight !== undefined) {\n            this._textareaElement.style.height = this._initialHeight;\n        }\n    }\n    _noopInputHandler() {\n        // no-op handler that ensures we're running change detection on input events.\n    }\n    /** Access injected document if available or fallback to global document reference */\n    _getDocument() {\n        return this._document || document;\n    }\n    /** Use defaultView of injected document if available or fallback to global window reference */\n    _getWindow() {\n        const doc = this._getDocument();\n        return doc.defaultView || window;\n    }\n    /**\n     * Scrolls a textarea to the caret position. On Firefox resizing the textarea will\n     * prevent it from scrolling to the caret position. We need to re-set the selection\n     * in order for it to scroll to the proper position.\n     */\n    _scrollToCaretPosition(textarea) {\n        const { selectionStart, selectionEnd } = textarea;\n        // IE will throw an \"Unspecified error\" if we try to set the selection range after the\n        // element has been removed from the DOM. Assert that the directive hasn't been destroyed\n        // between the time we requested the animation frame and when it was executed.\n        // Also note that we have to assert that the textarea is focused before we set the\n        // selection range. Setting the selection range on a non-focused textarea will cause\n        // it to receive focus on IE and Edge.\n        if (!this._destroyed.isStopped && this._hasFocus) {\n            textarea.setSelectionRange(selectionStart, selectionEnd);\n        }\n    }\n}\nCdkTextareaAutosize.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: CdkTextareaAutosize, deps: [{ token: i0.ElementRef }, { token: i1.Platform }, { token: i0.NgZone }, { token: DOCUMENT, optional: true }], target: i0.ɵɵFactoryTarget.Directive });\nCdkTextareaAutosize.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.1.0\", type: CdkTextareaAutosize, selector: \"textarea[cdkTextareaAutosize]\", inputs: { minRows: [\"cdkAutosizeMinRows\", \"minRows\"], maxRows: [\"cdkAutosizeMaxRows\", \"maxRows\"], enabled: [\"cdkTextareaAutosize\", \"enabled\"], placeholder: \"placeholder\" }, host: { attributes: { \"rows\": \"1\" }, listeners: { \"input\": \"_noopInputHandler()\" }, classAttribute: \"cdk-textarea-autosize\" }, exportAs: [\"cdkTextareaAutosize\"], ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: CdkTextareaAutosize, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'textarea[cdkTextareaAutosize]',\n                    exportAs: 'cdkTextareaAutosize',\n                    host: {\n                        'class': 'cdk-textarea-autosize',\n                        // Textarea elements that have the directive applied should have a single row by default.\n                        // Browsers normally show two rows by default and therefore this limits the minRows binding.\n                        'rows': '1',\n                        '(input)': '_noopInputHandler()',\n                    },\n                }]\n        }], ctorParameters: function () {\n        return [{ type: i0.ElementRef }, { type: i1.Platform }, { type: i0.NgZone }, { type: undefined, decorators: [{\n                        type: Optional\n                    }, {\n                        type: Inject,\n                        args: [DOCUMENT]\n                    }] }];\n    }, propDecorators: { minRows: [{\n                type: Input,\n                args: ['cdkAutosizeMinRows']\n            }], maxRows: [{\n                type: Input,\n                args: ['cdkAutosizeMaxRows']\n            }], enabled: [{\n                type: Input,\n                args: ['cdkTextareaAutosize']\n            }], placeholder: [{\n                type: Input\n            }] } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass TextFieldModule {\n}\nTextFieldModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: TextFieldModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nTextFieldModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: TextFieldModule, declarations: [CdkAutofill, CdkTextareaAutosize], imports: [PlatformModule], exports: [CdkAutofill, CdkTextareaAutosize] });\nTextFieldModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: TextFieldModule, imports: [[PlatformModule]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: TextFieldModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    declarations: [CdkAutofill, CdkTextareaAutosize],\n                    imports: [PlatformModule],\n                    exports: [CdkAutofill, CdkTextareaAutosize],\n                }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { AutofillMonitor, CdkAutofill, CdkTextareaAutosize, TextFieldModule };\n","import * as i0 from '@angular/core';\nimport { Directive, Input, Component, ViewEncapsulation, ChangeDetectionStrategy, Optional, Inject, NgModule } from '@angular/core';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\nimport { MatCommonModule } from '@angular/material/core';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Content of a card, needed as it's used as a selector in the API.\n * @docs-private\n */\nclass MatCardContent {\n}\nMatCardContent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatCardContent, deps: [], target: i0.ɵɵFactoryTarget.Directive });\nMatCardContent.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.1.0\", type: MatCardContent, selector: \"mat-card-content, [mat-card-content], [matCardContent]\", host: { classAttribute: \"mat-card-content\" }, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatCardContent, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'mat-card-content, [mat-card-content], [matCardContent]',\n                    host: { 'class': 'mat-card-content' },\n                }]\n        }] });\n/**\n * Title of a card, needed as it's used as a selector in the API.\n * @docs-private\n */\nclass MatCardTitle {\n}\nMatCardTitle.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatCardTitle, deps: [], target: i0.ɵɵFactoryTarget.Directive });\nMatCardTitle.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.1.0\", type: MatCardTitle, selector: \"mat-card-title, [mat-card-title], [matCardTitle]\", host: { classAttribute: \"mat-card-title\" }, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatCardTitle, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: `mat-card-title, [mat-card-title], [matCardTitle]`,\n                    host: {\n                        'class': 'mat-card-title',\n                    },\n                }]\n        }] });\n/**\n * Sub-title of a card, needed as it's used as a selector in the API.\n * @docs-private\n */\nclass MatCardSubtitle {\n}\nMatCardSubtitle.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatCardSubtitle, deps: [], target: i0.ɵɵFactoryTarget.Directive });\nMatCardSubtitle.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.1.0\", type: MatCardSubtitle, selector: \"mat-card-subtitle, [mat-card-subtitle], [matCardSubtitle]\", host: { classAttribute: \"mat-card-subtitle\" }, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatCardSubtitle, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: `mat-card-subtitle, [mat-card-subtitle], [matCardSubtitle]`,\n                    host: {\n                        'class': 'mat-card-subtitle',\n                    },\n                }]\n        }] });\n/**\n * Action section of a card, needed as it's used as a selector in the API.\n * @docs-private\n */\nclass MatCardActions {\n    constructor() {\n        /** Position of the actions inside the card. */\n        this.align = 'start';\n    }\n}\nMatCardActions.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatCardActions, deps: [], target: i0.ɵɵFactoryTarget.Directive });\nMatCardActions.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.1.0\", type: MatCardActions, selector: \"mat-card-actions\", inputs: { align: \"align\" }, host: { properties: { \"class.mat-card-actions-align-end\": \"align === \\\"end\\\"\" }, classAttribute: \"mat-card-actions\" }, exportAs: [\"matCardActions\"], ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatCardActions, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'mat-card-actions',\n                    exportAs: 'matCardActions',\n                    host: {\n                        'class': 'mat-card-actions',\n                        '[class.mat-card-actions-align-end]': 'align === \"end\"',\n                    },\n                }]\n        }], propDecorators: { align: [{\n                type: Input\n            }] } });\n/**\n * Footer of a card, needed as it's used as a selector in the API.\n * @docs-private\n */\nclass MatCardFooter {\n}\nMatCardFooter.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatCardFooter, deps: [], target: i0.ɵɵFactoryTarget.Directive });\nMatCardFooter.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.1.0\", type: MatCardFooter, selector: \"mat-card-footer\", host: { classAttribute: \"mat-card-footer\" }, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatCardFooter, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'mat-card-footer',\n                    host: { 'class': 'mat-card-footer' },\n                }]\n        }] });\n/**\n * Image used in a card, needed to add the mat- CSS styling.\n * @docs-private\n */\nclass MatCardImage {\n}\nMatCardImage.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatCardImage, deps: [], target: i0.ɵɵFactoryTarget.Directive });\nMatCardImage.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.1.0\", type: MatCardImage, selector: \"[mat-card-image], [matCardImage]\", host: { classAttribute: \"mat-card-image\" }, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatCardImage, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[mat-card-image], [matCardImage]',\n                    host: { 'class': 'mat-card-image' },\n                }]\n        }] });\n/**\n * Image used in a card, needed to add the mat- CSS styling.\n * @docs-private\n */\nclass MatCardSmImage {\n}\nMatCardSmImage.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatCardSmImage, deps: [], target: i0.ɵɵFactoryTarget.Directive });\nMatCardSmImage.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.1.0\", type: MatCardSmImage, selector: \"[mat-card-sm-image], [matCardImageSmall]\", host: { classAttribute: \"mat-card-sm-image\" }, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatCardSmImage, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[mat-card-sm-image], [matCardImageSmall]',\n                    host: { 'class': 'mat-card-sm-image' },\n                }]\n        }] });\n/**\n * Image used in a card, needed to add the mat- CSS styling.\n * @docs-private\n */\nclass MatCardMdImage {\n}\nMatCardMdImage.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatCardMdImage, deps: [], target: i0.ɵɵFactoryTarget.Directive });\nMatCardMdImage.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.1.0\", type: MatCardMdImage, selector: \"[mat-card-md-image], [matCardImageMedium]\", host: { classAttribute: \"mat-card-md-image\" }, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatCardMdImage, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[mat-card-md-image], [matCardImageMedium]',\n                    host: { 'class': 'mat-card-md-image' },\n                }]\n        }] });\n/**\n * Image used in a card, needed to add the mat- CSS styling.\n * @docs-private\n */\nclass MatCardLgImage {\n}\nMatCardLgImage.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatCardLgImage, deps: [], target: i0.ɵɵFactoryTarget.Directive });\nMatCardLgImage.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.1.0\", type: MatCardLgImage, selector: \"[mat-card-lg-image], [matCardImageLarge]\", host: { classAttribute: \"mat-card-lg-image\" }, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatCardLgImage, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[mat-card-lg-image], [matCardImageLarge]',\n                    host: { 'class': 'mat-card-lg-image' },\n                }]\n        }] });\n/**\n * Large image used in a card, needed to add the mat- CSS styling.\n * @docs-private\n */\nclass MatCardXlImage {\n}\nMatCardXlImage.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatCardXlImage, deps: [], target: i0.ɵɵFactoryTarget.Directive });\nMatCardXlImage.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.1.0\", type: MatCardXlImage, selector: \"[mat-card-xl-image], [matCardImageXLarge]\", host: { classAttribute: \"mat-card-xl-image\" }, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatCardXlImage, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[mat-card-xl-image], [matCardImageXLarge]',\n                    host: { 'class': 'mat-card-xl-image' },\n                }]\n        }] });\n/**\n * Avatar image used in a card, needed to add the mat- CSS styling.\n * @docs-private\n */\nclass MatCardAvatar {\n}\nMatCardAvatar.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatCardAvatar, deps: [], target: i0.ɵɵFactoryTarget.Directive });\nMatCardAvatar.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.1.0\", type: MatCardAvatar, selector: \"[mat-card-avatar], [matCardAvatar]\", host: { classAttribute: \"mat-card-avatar\" }, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatCardAvatar, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[mat-card-avatar], [matCardAvatar]',\n                    host: { 'class': 'mat-card-avatar' },\n                }]\n        }] });\n/**\n * A basic content container component that adds the styles of a Material design card.\n *\n * While this component can be used alone, it also provides a number\n * of preset styles for common card sections, including:\n * - mat-card-title\n * - mat-card-subtitle\n * - mat-card-content\n * - mat-card-actions\n * - mat-card-footer\n */\nclass MatCard {\n    // @breaking-change 9.0.0 `_animationMode` parameter to be made required.\n    constructor(_animationMode) {\n        this._animationMode = _animationMode;\n    }\n}\nMatCard.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatCard, deps: [{ token: ANIMATION_MODULE_TYPE, optional: true }], target: i0.ɵɵFactoryTarget.Component });\nMatCard.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: MatCard, selector: \"mat-card\", host: { properties: { \"class._mat-animation-noopable\": \"_animationMode === \\\"NoopAnimations\\\"\" }, classAttribute: \"mat-card mat-focus-indicator\" }, exportAs: [\"matCard\"], ngImport: i0, template: \"<ng-content></ng-content>\\n<ng-content select=\\\"mat-card-footer\\\"></ng-content>\\n\", styles: [\".mat-card{transition:box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);display:block;position:relative;padding:16px;border-radius:4px}._mat-animation-noopable.mat-card{transition:none;animation:none}.mat-card .mat-divider-horizontal{position:absolute;left:0;width:100%}[dir=rtl] .mat-card .mat-divider-horizontal{left:auto;right:0}.mat-card .mat-divider-horizontal.mat-divider-inset{position:static;margin:0}[dir=rtl] .mat-card .mat-divider-horizontal.mat-divider-inset{margin-right:0}.cdk-high-contrast-active .mat-card{outline:solid 1px}.mat-card-actions,.mat-card-subtitle,.mat-card-content{display:block;margin-bottom:16px}.mat-card-title{display:block;margin-bottom:8px}.mat-card-actions{margin-left:-8px;margin-right:-8px;padding:8px 0}.mat-card-actions-align-end{display:flex;justify-content:flex-end}.mat-card-image{width:calc(100% + 32px);margin:0 -16px 16px -16px}.mat-card-footer{display:block;margin:0 -16px -16px -16px}.mat-card-actions .mat-button,.mat-card-actions .mat-raised-button,.mat-card-actions .mat-stroked-button{margin:0 8px}.mat-card-header{display:flex;flex-direction:row}.mat-card-header .mat-card-title{margin-bottom:12px}.mat-card-header-text{margin:0 16px}.mat-card-avatar{height:40px;width:40px;border-radius:50%;flex-shrink:0;object-fit:cover}.mat-card-title-group{display:flex;justify-content:space-between}.mat-card-sm-image{width:80px;height:80px}.mat-card-md-image{width:112px;height:112px}.mat-card-lg-image{width:152px;height:152px}.mat-card-xl-image{width:240px;height:240px;margin:-8px}.mat-card-title-group>.mat-card-xl-image{margin:-8px 0 8px}@media(max-width: 599px){.mat-card-title-group{margin:0}.mat-card-xl-image{margin-left:0;margin-right:0}}.mat-card>:first-child,.mat-card-content>:first-child{margin-top:0}.mat-card>:last-child:not(.mat-card-footer),.mat-card-content>:last-child:not(.mat-card-footer){margin-bottom:0}.mat-card-image:first-child{margin-top:-16px;border-top-left-radius:inherit;border-top-right-radius:inherit}.mat-card>.mat-card-actions:last-child{margin-bottom:-8px;padding-bottom:0}.mat-card-actions:not(.mat-card-actions-align-end) .mat-button:first-child,.mat-card-actions:not(.mat-card-actions-align-end) .mat-raised-button:first-child,.mat-card-actions:not(.mat-card-actions-align-end) .mat-stroked-button:first-child{margin-left:0;margin-right:0}.mat-card-actions-align-end .mat-button:last-child,.mat-card-actions-align-end .mat-raised-button:last-child,.mat-card-actions-align-end .mat-stroked-button:last-child{margin-left:0;margin-right:0}.mat-card-title:not(:first-child),.mat-card-subtitle:not(:first-child){margin-top:-4px}.mat-card-header .mat-card-subtitle:not(:first-child){margin-top:-8px}.mat-card>.mat-card-xl-image:first-child{margin-top:-8px}.mat-card>.mat-card-xl-image:last-child{margin-bottom:-8px}\\n\"], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatCard, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-card', exportAs: 'matCard', encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, host: {\n                        'class': 'mat-card mat-focus-indicator',\n                        '[class._mat-animation-noopable]': '_animationMode === \"NoopAnimations\"',\n                    }, template: \"<ng-content></ng-content>\\n<ng-content select=\\\"mat-card-footer\\\"></ng-content>\\n\", styles: [\".mat-card{transition:box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);display:block;position:relative;padding:16px;border-radius:4px}._mat-animation-noopable.mat-card{transition:none;animation:none}.mat-card .mat-divider-horizontal{position:absolute;left:0;width:100%}[dir=rtl] .mat-card .mat-divider-horizontal{left:auto;right:0}.mat-card .mat-divider-horizontal.mat-divider-inset{position:static;margin:0}[dir=rtl] .mat-card .mat-divider-horizontal.mat-divider-inset{margin-right:0}.cdk-high-contrast-active .mat-card{outline:solid 1px}.mat-card-actions,.mat-card-subtitle,.mat-card-content{display:block;margin-bottom:16px}.mat-card-title{display:block;margin-bottom:8px}.mat-card-actions{margin-left:-8px;margin-right:-8px;padding:8px 0}.mat-card-actions-align-end{display:flex;justify-content:flex-end}.mat-card-image{width:calc(100% + 32px);margin:0 -16px 16px -16px}.mat-card-footer{display:block;margin:0 -16px -16px -16px}.mat-card-actions .mat-button,.mat-card-actions .mat-raised-button,.mat-card-actions .mat-stroked-button{margin:0 8px}.mat-card-header{display:flex;flex-direction:row}.mat-card-header .mat-card-title{margin-bottom:12px}.mat-card-header-text{margin:0 16px}.mat-card-avatar{height:40px;width:40px;border-radius:50%;flex-shrink:0;object-fit:cover}.mat-card-title-group{display:flex;justify-content:space-between}.mat-card-sm-image{width:80px;height:80px}.mat-card-md-image{width:112px;height:112px}.mat-card-lg-image{width:152px;height:152px}.mat-card-xl-image{width:240px;height:240px;margin:-8px}.mat-card-title-group>.mat-card-xl-image{margin:-8px 0 8px}@media(max-width: 599px){.mat-card-title-group{margin:0}.mat-card-xl-image{margin-left:0;margin-right:0}}.mat-card>:first-child,.mat-card-content>:first-child{margin-top:0}.mat-card>:last-child:not(.mat-card-footer),.mat-card-content>:last-child:not(.mat-card-footer){margin-bottom:0}.mat-card-image:first-child{margin-top:-16px;border-top-left-radius:inherit;border-top-right-radius:inherit}.mat-card>.mat-card-actions:last-child{margin-bottom:-8px;padding-bottom:0}.mat-card-actions:not(.mat-card-actions-align-end) .mat-button:first-child,.mat-card-actions:not(.mat-card-actions-align-end) .mat-raised-button:first-child,.mat-card-actions:not(.mat-card-actions-align-end) .mat-stroked-button:first-child{margin-left:0;margin-right:0}.mat-card-actions-align-end .mat-button:last-child,.mat-card-actions-align-end .mat-raised-button:last-child,.mat-card-actions-align-end .mat-stroked-button:last-child{margin-left:0;margin-right:0}.mat-card-title:not(:first-child),.mat-card-subtitle:not(:first-child){margin-top:-4px}.mat-card-header .mat-card-subtitle:not(:first-child){margin-top:-8px}.mat-card>.mat-card-xl-image:first-child{margin-top:-8px}.mat-card>.mat-card-xl-image:last-child{margin-bottom:-8px}\\n\"] }]\n        }], ctorParameters: function () {\n        return [{ type: undefined, decorators: [{\n                        type: Optional\n                    }, {\n                        type: Inject,\n                        args: [ANIMATION_MODULE_TYPE]\n                    }] }];\n    } });\n/**\n * Component intended to be used within the `<mat-card>` component. It adds styles for a\n * preset header section (i.e. a title, subtitle, and avatar layout).\n * @docs-private\n */\nclass MatCardHeader {\n}\nMatCardHeader.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatCardHeader, deps: [], target: i0.ɵɵFactoryTarget.Component });\nMatCardHeader.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: MatCardHeader, selector: \"mat-card-header\", host: { classAttribute: \"mat-card-header\" }, ngImport: i0, template: \"<ng-content select=\\\"[mat-card-avatar], [matCardAvatar]\\\"></ng-content>\\n<div class=\\\"mat-card-header-text\\\">\\n  <ng-content\\n      select=\\\"mat-card-title, mat-card-subtitle,\\n      [mat-card-title], [mat-card-subtitle],\\n      [matCardTitle], [matCardSubtitle]\\\"></ng-content>\\n</div>\\n<ng-content></ng-content>\\n\", changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatCardHeader, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-card-header', encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, host: { 'class': 'mat-card-header' }, template: \"<ng-content select=\\\"[mat-card-avatar], [matCardAvatar]\\\"></ng-content>\\n<div class=\\\"mat-card-header-text\\\">\\n  <ng-content\\n      select=\\\"mat-card-title, mat-card-subtitle,\\n      [mat-card-title], [mat-card-subtitle],\\n      [matCardTitle], [matCardSubtitle]\\\"></ng-content>\\n</div>\\n<ng-content></ng-content>\\n\" }]\n        }] });\n/**\n * Component intended to be used within the `<mat-card>` component. It adds styles for a preset\n * layout that groups an image with a title section.\n * @docs-private\n */\nclass MatCardTitleGroup {\n}\nMatCardTitleGroup.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatCardTitleGroup, deps: [], target: i0.ɵɵFactoryTarget.Component });\nMatCardTitleGroup.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: MatCardTitleGroup, selector: \"mat-card-title-group\", host: { classAttribute: \"mat-card-title-group\" }, ngImport: i0, template: \"<div>\\n  <ng-content\\n      select=\\\"mat-card-title, mat-card-subtitle,\\n      [mat-card-title], [mat-card-subtitle],\\n      [matCardTitle], [matCardSubtitle]\\\"></ng-content>\\n</div>\\n<ng-content select=\\\"img\\\"></ng-content>\\n<ng-content></ng-content>\\n\", changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatCardTitleGroup, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-card-title-group', encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, host: { 'class': 'mat-card-title-group' }, template: \"<div>\\n  <ng-content\\n      select=\\\"mat-card-title, mat-card-subtitle,\\n      [mat-card-title], [mat-card-subtitle],\\n      [matCardTitle], [matCardSubtitle]\\\"></ng-content>\\n</div>\\n<ng-content select=\\\"img\\\"></ng-content>\\n<ng-content></ng-content>\\n\" }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass MatCardModule {\n}\nMatCardModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatCardModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nMatCardModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatCardModule, declarations: [MatCard,\n        MatCardHeader,\n        MatCardTitleGroup,\n        MatCardContent,\n        MatCardTitle,\n        MatCardSubtitle,\n        MatCardActions,\n        MatCardFooter,\n        MatCardSmImage,\n        MatCardMdImage,\n        MatCardLgImage,\n        MatCardImage,\n        MatCardXlImage,\n        MatCardAvatar], imports: [MatCommonModule], exports: [MatCard,\n        MatCardHeader,\n        MatCardTitleGroup,\n        MatCardContent,\n        MatCardTitle,\n        MatCardSubtitle,\n        MatCardActions,\n        MatCardFooter,\n        MatCardSmImage,\n        MatCardMdImage,\n        MatCardLgImage,\n        MatCardImage,\n        MatCardXlImage,\n        MatCardAvatar,\n        MatCommonModule] });\nMatCardModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatCardModule, imports: [[MatCommonModule], MatCommonModule] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatCardModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [MatCommonModule],\n                    exports: [\n                        MatCard,\n                        MatCardHeader,\n                        MatCardTitleGroup,\n                        MatCardContent,\n                        MatCardTitle,\n                        MatCardSubtitle,\n                        MatCardActions,\n                        MatCardFooter,\n                        MatCardSmImage,\n                        MatCardMdImage,\n                        MatCardLgImage,\n                        MatCardImage,\n                        MatCardXlImage,\n                        MatCardAvatar,\n                        MatCommonModule,\n                    ],\n                    declarations: [\n                        MatCard,\n                        MatCardHeader,\n                        MatCardTitleGroup,\n                        MatCardContent,\n                        MatCardTitle,\n                        MatCardSubtitle,\n                        MatCardActions,\n                        MatCardFooter,\n                        MatCardSmImage,\n                        MatCardMdImage,\n                        MatCardLgImage,\n                        MatCardImage,\n                        MatCardXlImage,\n                        MatCardAvatar,\n                    ],\n                }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MatCard, MatCardActions, MatCardAvatar, MatCardContent, MatCardFooter, MatCardHeader, MatCardImage, MatCardLgImage, MatCardMdImage, MatCardModule, MatCardSmImage, MatCardSubtitle, MatCardTitle, MatCardTitleGroup, MatCardXlImage };\n","import * as i4 from '@angular/cdk/a11y';\nimport { A11yModule } from '@angular/cdk/a11y';\nimport * as i9 from '@angular/cdk/overlay';\nimport { Overlay, FlexibleConnectedPositionStrategy, OverlayConfig, OverlayModule } from '@angular/cdk/overlay';\nimport * as i8 from '@angular/cdk/portal';\nimport { ComponentPortal, TemplatePortal, PortalModule } from '@angular/cdk/portal';\nimport * as i1 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { EventEmitter, Component, ViewEncapsulation, ChangeDetectionStrategy, Input, Output, Injectable, Optional, SkipSelf, InjectionToken, Inject, ViewChild, forwardRef, Directive, Attribute, ContentChild, InjectFlags, Self, TemplateRef, NgModule } from '@angular/core';\nimport * as i3 from '@angular/material/button';\nimport { MatButtonModule } from '@angular/material/button';\nimport { CdkScrollableModule } from '@angular/cdk/scrolling';\nimport * as i1$1 from '@angular/material/core';\nimport { DateAdapter, MAT_DATE_FORMATS, mixinColor, mixinErrorState, MatCommonModule } from '@angular/material/core';\nimport { Subject, Subscription, merge, of } from 'rxjs';\nimport { ESCAPE, hasModifierKey, SPACE, ENTER, PAGE_DOWN, PAGE_UP, END, HOME, DOWN_ARROW, UP_ARROW, RIGHT_ARROW, LEFT_ARROW, BACKSPACE } from '@angular/cdk/keycodes';\nimport { take, startWith, filter } from 'rxjs/operators';\nimport * as i2 from '@angular/cdk/bidi';\nimport { coerceBooleanProperty, coerceStringArray } from '@angular/cdk/coercion';\nimport { _getFocusedElementPierceShadowDom } from '@angular/cdk/platform';\nimport { trigger, transition, animate, keyframes, style, state } from '@angular/animations';\nimport * as i2$2 from '@angular/forms';\nimport { NG_VALUE_ACCESSOR, NG_VALIDATORS, Validators, NgControl } from '@angular/forms';\nimport * as i2$1 from '@angular/material/form-field';\nimport { MAT_FORM_FIELD, MatFormFieldControl } from '@angular/material/form-field';\nimport { MAT_INPUT_VALUE_ACCESSOR } from '@angular/material/input';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** @docs-private */\nfunction createMissingDateImplError(provider) {\n    return Error(`MatDatepicker: No provider found for ${provider}. You must import one of the following ` +\n        `modules at your application root: MatNativeDateModule, MatMomentDateModule, or provide a ` +\n        `custom implementation.`);\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * An internal class that represents the data corresponding to a single calendar cell.\n * @docs-private\n */\nclass MatCalendarCell {\n    constructor(value, displayValue, ariaLabel, enabled, cssClasses = {}, compareValue = value, rawValue) {\n        this.value = value;\n        this.displayValue = displayValue;\n        this.ariaLabel = ariaLabel;\n        this.enabled = enabled;\n        this.cssClasses = cssClasses;\n        this.compareValue = compareValue;\n        this.rawValue = rawValue;\n    }\n}\n/**\n * An internal component used to display calendar data in a table.\n * @docs-private\n */\nclass MatCalendarBody {\n    constructor(_elementRef, _ngZone) {\n        this._elementRef = _elementRef;\n        this._ngZone = _ngZone;\n        /** The number of columns in the table. */\n        this.numCols = 7;\n        /** The cell number of the active cell in the table. */\n        this.activeCell = 0;\n        /** Whether a range is being selected. */\n        this.isRange = false;\n        /**\n         * The aspect ratio (width / height) to use for the cells in the table. This aspect ratio will be\n         * maintained even as the table resizes.\n         */\n        this.cellAspectRatio = 1;\n        /** Start of the preview range. */\n        this.previewStart = null;\n        /** End of the preview range. */\n        this.previewEnd = null;\n        /** Emits when a new value is selected. */\n        this.selectedValueChange = new EventEmitter();\n        /** Emits when the preview has changed as a result of a user action. */\n        this.previewChange = new EventEmitter();\n        /**\n         * Event handler for when the user enters an element\n         * inside the calendar body (e.g. by hovering in or focus).\n         */\n        this._enterHandler = (event) => {\n            if (this._skipNextFocus && event.type === 'focus') {\n                this._skipNextFocus = false;\n                return;\n            }\n            // We only need to hit the zone when we're selecting a range.\n            if (event.target && this.isRange) {\n                const cell = this._getCellFromElement(event.target);\n                if (cell) {\n                    this._ngZone.run(() => this.previewChange.emit({ value: cell.enabled ? cell : null, event }));\n                }\n            }\n        };\n        /**\n         * Event handler for when the user's pointer leaves an element\n         * inside the calendar body (e.g. by hovering out or blurring).\n         */\n        this._leaveHandler = (event) => {\n            // We only need to hit the zone when we're selecting a range.\n            if (this.previewEnd !== null && this.isRange) {\n                // Only reset the preview end value when leaving cells. This looks better, because\n                // we have a gap between the cells and the rows and we don't want to remove the\n                // range just for it to show up again when the user moves a few pixels to the side.\n                if (event.target && isTableCell(event.target)) {\n                    this._ngZone.run(() => this.previewChange.emit({ value: null, event }));\n                }\n            }\n        };\n        _ngZone.runOutsideAngular(() => {\n            const element = _elementRef.nativeElement;\n            element.addEventListener('mouseenter', this._enterHandler, true);\n            element.addEventListener('focus', this._enterHandler, true);\n            element.addEventListener('mouseleave', this._leaveHandler, true);\n            element.addEventListener('blur', this._leaveHandler, true);\n        });\n    }\n    /** Called when a cell is clicked. */\n    _cellClicked(cell, event) {\n        if (cell.enabled) {\n            this.selectedValueChange.emit({ value: cell.value, event });\n        }\n    }\n    /** Returns whether a cell should be marked as selected. */\n    _isSelected(value) {\n        return this.startValue === value || this.endValue === value;\n    }\n    ngOnChanges(changes) {\n        const columnChanges = changes['numCols'];\n        const { rows, numCols } = this;\n        if (changes['rows'] || columnChanges) {\n            this._firstRowOffset = rows && rows.length && rows[0].length ? numCols - rows[0].length : 0;\n        }\n        if (changes['cellAspectRatio'] || columnChanges || !this._cellPadding) {\n            this._cellPadding = `${(50 * this.cellAspectRatio) / numCols}%`;\n        }\n        if (columnChanges || !this._cellWidth) {\n            this._cellWidth = `${100 / numCols}%`;\n        }\n    }\n    ngOnDestroy() {\n        const element = this._elementRef.nativeElement;\n        element.removeEventListener('mouseenter', this._enterHandler, true);\n        element.removeEventListener('focus', this._enterHandler, true);\n        element.removeEventListener('mouseleave', this._leaveHandler, true);\n        element.removeEventListener('blur', this._leaveHandler, true);\n    }\n    /** Returns whether a cell is active. */\n    _isActiveCell(rowIndex, colIndex) {\n        let cellNumber = rowIndex * this.numCols + colIndex;\n        // Account for the fact that the first row may not have as many cells.\n        if (rowIndex) {\n            cellNumber -= this._firstRowOffset;\n        }\n        return cellNumber == this.activeCell;\n    }\n    /** Focuses the active cell after the microtask queue is empty. */\n    _focusActiveCell(movePreview = true) {\n        this._ngZone.runOutsideAngular(() => {\n            this._ngZone.onStable.pipe(take(1)).subscribe(() => {\n                const activeCell = this._elementRef.nativeElement.querySelector('.mat-calendar-body-active');\n                if (activeCell) {\n                    if (!movePreview) {\n                        this._skipNextFocus = true;\n                    }\n                    activeCell.focus();\n                }\n            });\n        });\n    }\n    /** Gets whether a value is the start of the main range. */\n    _isRangeStart(value) {\n        return isStart(value, this.startValue, this.endValue);\n    }\n    /** Gets whether a value is the end of the main range. */\n    _isRangeEnd(value) {\n        return isEnd(value, this.startValue, this.endValue);\n    }\n    /** Gets whether a value is within the currently-selected range. */\n    _isInRange(value) {\n        return isInRange(value, this.startValue, this.endValue, this.isRange);\n    }\n    /** Gets whether a value is the start of the comparison range. */\n    _isComparisonStart(value) {\n        return isStart(value, this.comparisonStart, this.comparisonEnd);\n    }\n    /** Whether the cell is a start bridge cell between the main and comparison ranges. */\n    _isComparisonBridgeStart(value, rowIndex, colIndex) {\n        if (!this._isComparisonStart(value) || this._isRangeStart(value) || !this._isInRange(value)) {\n            return false;\n        }\n        let previousCell = this.rows[rowIndex][colIndex - 1];\n        if (!previousCell) {\n            const previousRow = this.rows[rowIndex - 1];\n            previousCell = previousRow && previousRow[previousRow.length - 1];\n        }\n        return previousCell && !this._isRangeEnd(previousCell.compareValue);\n    }\n    /** Whether the cell is an end bridge cell between the main and comparison ranges. */\n    _isComparisonBridgeEnd(value, rowIndex, colIndex) {\n        if (!this._isComparisonEnd(value) || this._isRangeEnd(value) || !this._isInRange(value)) {\n            return false;\n        }\n        let nextCell = this.rows[rowIndex][colIndex + 1];\n        if (!nextCell) {\n            const nextRow = this.rows[rowIndex + 1];\n            nextCell = nextRow && nextRow[0];\n        }\n        return nextCell && !this._isRangeStart(nextCell.compareValue);\n    }\n    /** Gets whether a value is the end of the comparison range. */\n    _isComparisonEnd(value) {\n        return isEnd(value, this.comparisonStart, this.comparisonEnd);\n    }\n    /** Gets whether a value is within the current comparison range. */\n    _isInComparisonRange(value) {\n        return isInRange(value, this.comparisonStart, this.comparisonEnd, this.isRange);\n    }\n    /**\n     * Gets whether a value is the same as the start and end of the comparison range.\n     * For context, the functions that we use to determine whether something is the start/end of\n     * a range don't allow for the start and end to be on the same day, because we'd have to use\n     * much more specific CSS selectors to style them correctly in all scenarios. This is fine for\n     * the regular range, because when it happens, the selected styles take over and still show where\n     * the range would've been, however we don't have these selected styles for a comparison range.\n     * This function is used to apply a class that serves the same purpose as the one for selected\n     * dates, but it only applies in the context of a comparison range.\n     */\n    _isComparisonIdentical(value) {\n        // Note that we don't need to null check the start/end\n        // here, because the `value` will always be defined.\n        return this.comparisonStart === this.comparisonEnd && value === this.comparisonStart;\n    }\n    /** Gets whether a value is the start of the preview range. */\n    _isPreviewStart(value) {\n        return isStart(value, this.previewStart, this.previewEnd);\n    }\n    /** Gets whether a value is the end of the preview range. */\n    _isPreviewEnd(value) {\n        return isEnd(value, this.previewStart, this.previewEnd);\n    }\n    /** Gets whether a value is inside the preview range. */\n    _isInPreview(value) {\n        return isInRange(value, this.previewStart, this.previewEnd, this.isRange);\n    }\n    /** Finds the MatCalendarCell that corresponds to a DOM node. */\n    _getCellFromElement(element) {\n        let cell;\n        if (isTableCell(element)) {\n            cell = element;\n        }\n        else if (isTableCell(element.parentNode)) {\n            cell = element.parentNode;\n        }\n        if (cell) {\n            const row = cell.getAttribute('data-mat-row');\n            const col = cell.getAttribute('data-mat-col');\n            if (row && col) {\n                return this.rows[parseInt(row)][parseInt(col)];\n            }\n        }\n        return null;\n    }\n}\nMatCalendarBody.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatCalendarBody, deps: [{ token: i0.ElementRef }, { token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Component });\nMatCalendarBody.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: MatCalendarBody, selector: \"[mat-calendar-body]\", inputs: { label: \"label\", rows: \"rows\", todayValue: \"todayValue\", startValue: \"startValue\", endValue: \"endValue\", labelMinRequiredCells: \"labelMinRequiredCells\", numCols: \"numCols\", activeCell: \"activeCell\", isRange: \"isRange\", cellAspectRatio: \"cellAspectRatio\", comparisonStart: \"comparisonStart\", comparisonEnd: \"comparisonEnd\", previewStart: \"previewStart\", previewEnd: \"previewEnd\" }, outputs: { selectedValueChange: \"selectedValueChange\", previewChange: \"previewChange\" }, host: { classAttribute: \"mat-calendar-body\" }, exportAs: [\"matCalendarBody\"], usesOnChanges: true, ngImport: i0, template: \"<!--\\n  If there's not enough space in the first row, create a separate label row. We mark this row as\\n  aria-hidden because we don't want it to be read out as one of the weeks in the month.\\n-->\\n<tr *ngIf=\\\"_firstRowOffset < labelMinRequiredCells\\\" aria-hidden=\\\"true\\\">\\n  <td class=\\\"mat-calendar-body-label\\\"\\n      [attr.colspan]=\\\"numCols\\\"\\n      [style.paddingTop]=\\\"_cellPadding\\\"\\n      [style.paddingBottom]=\\\"_cellPadding\\\">\\n    {{label}}\\n  </td>\\n</tr>\\n\\n<!-- Create the first row separately so we can include a special spacer cell. -->\\n<tr *ngFor=\\\"let row of rows; let rowIndex = index\\\" role=\\\"row\\\">\\n  <!--\\n    This cell is purely decorative, but we can't put `aria-hidden` or `role=\\\"presentation\\\"` on it,\\n    because it throws off the week days for the rest of the row on NVDA. The aspect ratio of the\\n    table cells is maintained by setting the top and bottom padding as a percentage of the width\\n    (a variant of the trick described here: https://www.w3schools.com/howto/howto_css_aspect_ratio.asp).\\n  -->\\n  <td *ngIf=\\\"rowIndex === 0 && _firstRowOffset\\\"\\n      class=\\\"mat-calendar-body-label\\\"\\n      [attr.colspan]=\\\"_firstRowOffset\\\"\\n      [style.paddingTop]=\\\"_cellPadding\\\"\\n      [style.paddingBottom]=\\\"_cellPadding\\\">\\n    {{_firstRowOffset >= labelMinRequiredCells ? label : ''}}\\n  </td>\\n  <td *ngFor=\\\"let item of row; let colIndex = index\\\"\\n      role=\\\"gridcell\\\"\\n      class=\\\"mat-calendar-body-cell\\\"\\n      [ngClass]=\\\"item.cssClasses\\\"\\n      [tabindex]=\\\"_isActiveCell(rowIndex, colIndex) ? 0 : -1\\\"\\n      [attr.data-mat-row]=\\\"rowIndex\\\"\\n      [attr.data-mat-col]=\\\"colIndex\\\"\\n      [class.mat-calendar-body-disabled]=\\\"!item.enabled\\\"\\n      [class.mat-calendar-body-active]=\\\"_isActiveCell(rowIndex, colIndex)\\\"\\n      [class.mat-calendar-body-range-start]=\\\"_isRangeStart(item.compareValue)\\\"\\n      [class.mat-calendar-body-range-end]=\\\"_isRangeEnd(item.compareValue)\\\"\\n      [class.mat-calendar-body-in-range]=\\\"_isInRange(item.compareValue)\\\"\\n      [class.mat-calendar-body-comparison-bridge-start]=\\\"_isComparisonBridgeStart(item.compareValue, rowIndex, colIndex)\\\"\\n      [class.mat-calendar-body-comparison-bridge-end]=\\\"_isComparisonBridgeEnd(item.compareValue, rowIndex, colIndex)\\\"\\n      [class.mat-calendar-body-comparison-start]=\\\"_isComparisonStart(item.compareValue)\\\"\\n      [class.mat-calendar-body-comparison-end]=\\\"_isComparisonEnd(item.compareValue)\\\"\\n      [class.mat-calendar-body-in-comparison-range]=\\\"_isInComparisonRange(item.compareValue)\\\"\\n      [class.mat-calendar-body-preview-start]=\\\"_isPreviewStart(item.compareValue)\\\"\\n      [class.mat-calendar-body-preview-end]=\\\"_isPreviewEnd(item.compareValue)\\\"\\n      [class.mat-calendar-body-in-preview]=\\\"_isInPreview(item.compareValue)\\\"\\n      [attr.aria-label]=\\\"item.ariaLabel\\\"\\n      [attr.aria-disabled]=\\\"!item.enabled || null\\\"\\n      [attr.aria-selected]=\\\"_isSelected(item.compareValue)\\\"\\n      [attr.aria-current]=\\\"todayValue === item.compareValue ? 'date' : null\\\"\\n      (click)=\\\"_cellClicked(item, $event)\\\"\\n      [style.width]=\\\"_cellWidth\\\"\\n      [style.paddingTop]=\\\"_cellPadding\\\"\\n      [style.paddingBottom]=\\\"_cellPadding\\\">\\n      <div class=\\\"mat-calendar-body-cell-content mat-focus-indicator\\\"\\n        [class.mat-calendar-body-selected]=\\\"_isSelected(item.compareValue)\\\"\\n        [class.mat-calendar-body-comparison-identical]=\\\"_isComparisonIdentical(item.compareValue)\\\"\\n        [class.mat-calendar-body-today]=\\\"todayValue === item.compareValue\\\">\\n        {{item.displayValue}}\\n      </div>\\n      <div class=\\\"mat-calendar-body-cell-preview\\\"></div>\\n  </td>\\n</tr>\\n\", styles: [\".mat-calendar-body{min-width:224px}.mat-calendar-body-label{height:0;line-height:0;text-align:left;padding-left:4.7142857143%;padding-right:4.7142857143%}.mat-calendar-body-cell{position:relative;height:0;line-height:0;text-align:center;outline:none;cursor:pointer}.mat-calendar-body-cell::before,.mat-calendar-body-cell::after,.mat-calendar-body-cell-preview{content:\\\"\\\";position:absolute;top:5%;left:0;z-index:0;box-sizing:border-box;height:90%;width:100%}.mat-calendar-body-range-start:not(.mat-calendar-body-in-comparison-range)::before,.mat-calendar-body-range-start::after,.mat-calendar-body-comparison-start:not(.mat-calendar-body-comparison-bridge-start)::before,.mat-calendar-body-comparison-start::after,.mat-calendar-body-preview-start .mat-calendar-body-cell-preview{left:5%;width:95%;border-top-left-radius:999px;border-bottom-left-radius:999px}[dir=rtl] .mat-calendar-body-range-start:not(.mat-calendar-body-in-comparison-range)::before,[dir=rtl] .mat-calendar-body-range-start::after,[dir=rtl] .mat-calendar-body-comparison-start:not(.mat-calendar-body-comparison-bridge-start)::before,[dir=rtl] .mat-calendar-body-comparison-start::after,[dir=rtl] .mat-calendar-body-preview-start .mat-calendar-body-cell-preview{left:0;border-radius:0;border-top-right-radius:999px;border-bottom-right-radius:999px}.mat-calendar-body-range-end:not(.mat-calendar-body-in-comparison-range)::before,.mat-calendar-body-range-end::after,.mat-calendar-body-comparison-end:not(.mat-calendar-body-comparison-bridge-end)::before,.mat-calendar-body-comparison-end::after,.mat-calendar-body-preview-end .mat-calendar-body-cell-preview{width:95%;border-top-right-radius:999px;border-bottom-right-radius:999px}[dir=rtl] .mat-calendar-body-range-end:not(.mat-calendar-body-in-comparison-range)::before,[dir=rtl] .mat-calendar-body-range-end::after,[dir=rtl] .mat-calendar-body-comparison-end:not(.mat-calendar-body-comparison-bridge-end)::before,[dir=rtl] .mat-calendar-body-comparison-end::after,[dir=rtl] .mat-calendar-body-preview-end .mat-calendar-body-cell-preview{left:5%;border-radius:0;border-top-left-radius:999px;border-bottom-left-radius:999px}[dir=rtl] .mat-calendar-body-comparison-bridge-start.mat-calendar-body-range-end::after,[dir=rtl] .mat-calendar-body-comparison-bridge-end.mat-calendar-body-range-start::after{width:95%;border-top-right-radius:999px;border-bottom-right-radius:999px}.mat-calendar-body-comparison-start.mat-calendar-body-range-end::after,[dir=rtl] .mat-calendar-body-comparison-start.mat-calendar-body-range-end::after,.mat-calendar-body-comparison-end.mat-calendar-body-range-start::after,[dir=rtl] .mat-calendar-body-comparison-end.mat-calendar-body-range-start::after{width:90%}.mat-calendar-body-in-preview .mat-calendar-body-cell-preview{border-top:dashed 1px;border-bottom:dashed 1px}.mat-calendar-body-preview-start .mat-calendar-body-cell-preview{border-left:dashed 1px}[dir=rtl] .mat-calendar-body-preview-start .mat-calendar-body-cell-preview{border-left:0;border-right:dashed 1px}.mat-calendar-body-preview-end .mat-calendar-body-cell-preview{border-right:dashed 1px}[dir=rtl] .mat-calendar-body-preview-end .mat-calendar-body-cell-preview{border-right:0;border-left:dashed 1px}.mat-calendar-body-disabled{cursor:default}.cdk-high-contrast-active .mat-calendar-body-disabled{opacity:.5}.mat-calendar-body-cell-content{top:5%;left:5%;z-index:1;display:flex;align-items:center;justify-content:center;box-sizing:border-box;width:90%;height:90%;line-height:1;border-width:1px;border-style:solid;border-radius:999px}.mat-calendar-body-cell-content.mat-focus-indicator{position:absolute}.cdk-high-contrast-active .mat-calendar-body-cell-content{border:none}.cdk-high-contrast-active .mat-datepicker-popup:not(:empty),.cdk-high-contrast-active .mat-calendar-body-cell:not(.mat-calendar-body-in-range) .mat-calendar-body-selected{outline:solid 1px}.cdk-high-contrast-active .mat-calendar-body-today{outline:dotted 1px}.cdk-high-contrast-active .cdk-keyboard-focused .mat-calendar-body-active>.mat-calendar-body-cell-content:not(.mat-calendar-body-selected),.cdk-high-contrast-active .cdk-program-focused .mat-calendar-body-active>.mat-calendar-body-cell-content:not(.mat-calendar-body-selected){outline:dotted 2px}.cdk-high-contrast-active .mat-calendar-body-cell::before,.cdk-high-contrast-active .mat-calendar-body-cell::after,.cdk-high-contrast-active .mat-calendar-body-selected{background:none}.cdk-high-contrast-active .mat-calendar-body-in-range::before,.cdk-high-contrast-active .mat-calendar-body-comparison-bridge-start::before,.cdk-high-contrast-active .mat-calendar-body-comparison-bridge-end::before{border-top:solid 1px;border-bottom:solid 1px}.cdk-high-contrast-active .mat-calendar-body-range-start::before{border-left:solid 1px}[dir=rtl] .cdk-high-contrast-active .mat-calendar-body-range-start::before{border-left:0;border-right:solid 1px}.cdk-high-contrast-active .mat-calendar-body-range-end::before{border-right:solid 1px}[dir=rtl] .cdk-high-contrast-active .mat-calendar-body-range-end::before{border-right:0;border-left:solid 1px}.cdk-high-contrast-active .mat-calendar-body-in-comparison-range::before{border-top:dashed 1px;border-bottom:dashed 1px}.cdk-high-contrast-active .mat-calendar-body-comparison-start::before{border-left:dashed 1px}[dir=rtl] .cdk-high-contrast-active .mat-calendar-body-comparison-start::before{border-left:0;border-right:dashed 1px}.cdk-high-contrast-active .mat-calendar-body-comparison-end::before{border-right:dashed 1px}[dir=rtl] .cdk-high-contrast-active .mat-calendar-body-comparison-end::before{border-right:0;border-left:dashed 1px}[dir=rtl] .mat-calendar-body-label{text-align:right}\\n\"], directives: [{ type: i1.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: i1.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { type: i1.NgClass, selector: \"[ngClass]\", inputs: [\"class\", \"ngClass\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatCalendarBody, decorators: [{\n            type: Component,\n            args: [{ selector: '[mat-calendar-body]', host: {\n                        'class': 'mat-calendar-body',\n                    }, exportAs: 'matCalendarBody', encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, template: \"<!--\\n  If there's not enough space in the first row, create a separate label row. We mark this row as\\n  aria-hidden because we don't want it to be read out as one of the weeks in the month.\\n-->\\n<tr *ngIf=\\\"_firstRowOffset < labelMinRequiredCells\\\" aria-hidden=\\\"true\\\">\\n  <td class=\\\"mat-calendar-body-label\\\"\\n      [attr.colspan]=\\\"numCols\\\"\\n      [style.paddingTop]=\\\"_cellPadding\\\"\\n      [style.paddingBottom]=\\\"_cellPadding\\\">\\n    {{label}}\\n  </td>\\n</tr>\\n\\n<!-- Create the first row separately so we can include a special spacer cell. -->\\n<tr *ngFor=\\\"let row of rows; let rowIndex = index\\\" role=\\\"row\\\">\\n  <!--\\n    This cell is purely decorative, but we can't put `aria-hidden` or `role=\\\"presentation\\\"` on it,\\n    because it throws off the week days for the rest of the row on NVDA. The aspect ratio of the\\n    table cells is maintained by setting the top and bottom padding as a percentage of the width\\n    (a variant of the trick described here: https://www.w3schools.com/howto/howto_css_aspect_ratio.asp).\\n  -->\\n  <td *ngIf=\\\"rowIndex === 0 && _firstRowOffset\\\"\\n      class=\\\"mat-calendar-body-label\\\"\\n      [attr.colspan]=\\\"_firstRowOffset\\\"\\n      [style.paddingTop]=\\\"_cellPadding\\\"\\n      [style.paddingBottom]=\\\"_cellPadding\\\">\\n    {{_firstRowOffset >= labelMinRequiredCells ? label : ''}}\\n  </td>\\n  <td *ngFor=\\\"let item of row; let colIndex = index\\\"\\n      role=\\\"gridcell\\\"\\n      class=\\\"mat-calendar-body-cell\\\"\\n      [ngClass]=\\\"item.cssClasses\\\"\\n      [tabindex]=\\\"_isActiveCell(rowIndex, colIndex) ? 0 : -1\\\"\\n      [attr.data-mat-row]=\\\"rowIndex\\\"\\n      [attr.data-mat-col]=\\\"colIndex\\\"\\n      [class.mat-calendar-body-disabled]=\\\"!item.enabled\\\"\\n      [class.mat-calendar-body-active]=\\\"_isActiveCell(rowIndex, colIndex)\\\"\\n      [class.mat-calendar-body-range-start]=\\\"_isRangeStart(item.compareValue)\\\"\\n      [class.mat-calendar-body-range-end]=\\\"_isRangeEnd(item.compareValue)\\\"\\n      [class.mat-calendar-body-in-range]=\\\"_isInRange(item.compareValue)\\\"\\n      [class.mat-calendar-body-comparison-bridge-start]=\\\"_isComparisonBridgeStart(item.compareValue, rowIndex, colIndex)\\\"\\n      [class.mat-calendar-body-comparison-bridge-end]=\\\"_isComparisonBridgeEnd(item.compareValue, rowIndex, colIndex)\\\"\\n      [class.mat-calendar-body-comparison-start]=\\\"_isComparisonStart(item.compareValue)\\\"\\n      [class.mat-calendar-body-comparison-end]=\\\"_isComparisonEnd(item.compareValue)\\\"\\n      [class.mat-calendar-body-in-comparison-range]=\\\"_isInComparisonRange(item.compareValue)\\\"\\n      [class.mat-calendar-body-preview-start]=\\\"_isPreviewStart(item.compareValue)\\\"\\n      [class.mat-calendar-body-preview-end]=\\\"_isPreviewEnd(item.compareValue)\\\"\\n      [class.mat-calendar-body-in-preview]=\\\"_isInPreview(item.compareValue)\\\"\\n      [attr.aria-label]=\\\"item.ariaLabel\\\"\\n      [attr.aria-disabled]=\\\"!item.enabled || null\\\"\\n      [attr.aria-selected]=\\\"_isSelected(item.compareValue)\\\"\\n      [attr.aria-current]=\\\"todayValue === item.compareValue ? 'date' : null\\\"\\n      (click)=\\\"_cellClicked(item, $event)\\\"\\n      [style.width]=\\\"_cellWidth\\\"\\n      [style.paddingTop]=\\\"_cellPadding\\\"\\n      [style.paddingBottom]=\\\"_cellPadding\\\">\\n      <div class=\\\"mat-calendar-body-cell-content mat-focus-indicator\\\"\\n        [class.mat-calendar-body-selected]=\\\"_isSelected(item.compareValue)\\\"\\n        [class.mat-calendar-body-comparison-identical]=\\\"_isComparisonIdentical(item.compareValue)\\\"\\n        [class.mat-calendar-body-today]=\\\"todayValue === item.compareValue\\\">\\n        {{item.displayValue}}\\n      </div>\\n      <div class=\\\"mat-calendar-body-cell-preview\\\"></div>\\n  </td>\\n</tr>\\n\", styles: [\".mat-calendar-body{min-width:224px}.mat-calendar-body-label{height:0;line-height:0;text-align:left;padding-left:4.7142857143%;padding-right:4.7142857143%}.mat-calendar-body-cell{position:relative;height:0;line-height:0;text-align:center;outline:none;cursor:pointer}.mat-calendar-body-cell::before,.mat-calendar-body-cell::after,.mat-calendar-body-cell-preview{content:\\\"\\\";position:absolute;top:5%;left:0;z-index:0;box-sizing:border-box;height:90%;width:100%}.mat-calendar-body-range-start:not(.mat-calendar-body-in-comparison-range)::before,.mat-calendar-body-range-start::after,.mat-calendar-body-comparison-start:not(.mat-calendar-body-comparison-bridge-start)::before,.mat-calendar-body-comparison-start::after,.mat-calendar-body-preview-start .mat-calendar-body-cell-preview{left:5%;width:95%;border-top-left-radius:999px;border-bottom-left-radius:999px}[dir=rtl] .mat-calendar-body-range-start:not(.mat-calendar-body-in-comparison-range)::before,[dir=rtl] .mat-calendar-body-range-start::after,[dir=rtl] .mat-calendar-body-comparison-start:not(.mat-calendar-body-comparison-bridge-start)::before,[dir=rtl] .mat-calendar-body-comparison-start::after,[dir=rtl] .mat-calendar-body-preview-start .mat-calendar-body-cell-preview{left:0;border-radius:0;border-top-right-radius:999px;border-bottom-right-radius:999px}.mat-calendar-body-range-end:not(.mat-calendar-body-in-comparison-range)::before,.mat-calendar-body-range-end::after,.mat-calendar-body-comparison-end:not(.mat-calendar-body-comparison-bridge-end)::before,.mat-calendar-body-comparison-end::after,.mat-calendar-body-preview-end .mat-calendar-body-cell-preview{width:95%;border-top-right-radius:999px;border-bottom-right-radius:999px}[dir=rtl] .mat-calendar-body-range-end:not(.mat-calendar-body-in-comparison-range)::before,[dir=rtl] .mat-calendar-body-range-end::after,[dir=rtl] .mat-calendar-body-comparison-end:not(.mat-calendar-body-comparison-bridge-end)::before,[dir=rtl] .mat-calendar-body-comparison-end::after,[dir=rtl] .mat-calendar-body-preview-end .mat-calendar-body-cell-preview{left:5%;border-radius:0;border-top-left-radius:999px;border-bottom-left-radius:999px}[dir=rtl] .mat-calendar-body-comparison-bridge-start.mat-calendar-body-range-end::after,[dir=rtl] .mat-calendar-body-comparison-bridge-end.mat-calendar-body-range-start::after{width:95%;border-top-right-radius:999px;border-bottom-right-radius:999px}.mat-calendar-body-comparison-start.mat-calendar-body-range-end::after,[dir=rtl] .mat-calendar-body-comparison-start.mat-calendar-body-range-end::after,.mat-calendar-body-comparison-end.mat-calendar-body-range-start::after,[dir=rtl] .mat-calendar-body-comparison-end.mat-calendar-body-range-start::after{width:90%}.mat-calendar-body-in-preview .mat-calendar-body-cell-preview{border-top:dashed 1px;border-bottom:dashed 1px}.mat-calendar-body-preview-start .mat-calendar-body-cell-preview{border-left:dashed 1px}[dir=rtl] .mat-calendar-body-preview-start .mat-calendar-body-cell-preview{border-left:0;border-right:dashed 1px}.mat-calendar-body-preview-end .mat-calendar-body-cell-preview{border-right:dashed 1px}[dir=rtl] .mat-calendar-body-preview-end .mat-calendar-body-cell-preview{border-right:0;border-left:dashed 1px}.mat-calendar-body-disabled{cursor:default}.cdk-high-contrast-active .mat-calendar-body-disabled{opacity:.5}.mat-calendar-body-cell-content{top:5%;left:5%;z-index:1;display:flex;align-items:center;justify-content:center;box-sizing:border-box;width:90%;height:90%;line-height:1;border-width:1px;border-style:solid;border-radius:999px}.mat-calendar-body-cell-content.mat-focus-indicator{position:absolute}.cdk-high-contrast-active .mat-calendar-body-cell-content{border:none}.cdk-high-contrast-active .mat-datepicker-popup:not(:empty),.cdk-high-contrast-active .mat-calendar-body-cell:not(.mat-calendar-body-in-range) .mat-calendar-body-selected{outline:solid 1px}.cdk-high-contrast-active .mat-calendar-body-today{outline:dotted 1px}.cdk-high-contrast-active .cdk-keyboard-focused .mat-calendar-body-active>.mat-calendar-body-cell-content:not(.mat-calendar-body-selected),.cdk-high-contrast-active .cdk-program-focused .mat-calendar-body-active>.mat-calendar-body-cell-content:not(.mat-calendar-body-selected){outline:dotted 2px}.cdk-high-contrast-active .mat-calendar-body-cell::before,.cdk-high-contrast-active .mat-calendar-body-cell::after,.cdk-high-contrast-active .mat-calendar-body-selected{background:none}.cdk-high-contrast-active .mat-calendar-body-in-range::before,.cdk-high-contrast-active .mat-calendar-body-comparison-bridge-start::before,.cdk-high-contrast-active .mat-calendar-body-comparison-bridge-end::before{border-top:solid 1px;border-bottom:solid 1px}.cdk-high-contrast-active .mat-calendar-body-range-start::before{border-left:solid 1px}[dir=rtl] .cdk-high-contrast-active .mat-calendar-body-range-start::before{border-left:0;border-right:solid 1px}.cdk-high-contrast-active .mat-calendar-body-range-end::before{border-right:solid 1px}[dir=rtl] .cdk-high-contrast-active .mat-calendar-body-range-end::before{border-right:0;border-left:solid 1px}.cdk-high-contrast-active .mat-calendar-body-in-comparison-range::before{border-top:dashed 1px;border-bottom:dashed 1px}.cdk-high-contrast-active .mat-calendar-body-comparison-start::before{border-left:dashed 1px}[dir=rtl] .cdk-high-contrast-active .mat-calendar-body-comparison-start::before{border-left:0;border-right:dashed 1px}.cdk-high-contrast-active .mat-calendar-body-comparison-end::before{border-right:dashed 1px}[dir=rtl] .cdk-high-contrast-active .mat-calendar-body-comparison-end::before{border-right:0;border-left:dashed 1px}[dir=rtl] .mat-calendar-body-label{text-align:right}\\n\"] }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: i0.NgZone }]; }, propDecorators: { label: [{\n                type: Input\n            }], rows: [{\n                type: Input\n            }], todayValue: [{\n                type: Input\n            }], startValue: [{\n                type: Input\n            }], endValue: [{\n                type: Input\n            }], labelMinRequiredCells: [{\n                type: Input\n            }], numCols: [{\n                type: Input\n            }], activeCell: [{\n                type: Input\n            }], isRange: [{\n                type: Input\n            }], cellAspectRatio: [{\n                type: Input\n            }], comparisonStart: [{\n                type: Input\n            }], comparisonEnd: [{\n                type: Input\n            }], previewStart: [{\n                type: Input\n            }], previewEnd: [{\n                type: Input\n            }], selectedValueChange: [{\n                type: Output\n            }], previewChange: [{\n                type: Output\n            }] } });\n/** Checks whether a node is a table cell element. */\nfunction isTableCell(node) {\n    return node.nodeName === 'TD';\n}\n/** Checks whether a value is the start of a range. */\nfunction isStart(value, start, end) {\n    return end !== null && start !== end && value < end && value === start;\n}\n/** Checks whether a value is the end of a range. */\nfunction isEnd(value, start, end) {\n    return start !== null && start !== end && value >= start && value === end;\n}\n/** Checks whether a value is inside of a range. */\nfunction isInRange(value, start, end, rangeEnabled) {\n    return (rangeEnabled &&\n        start !== null &&\n        end !== null &&\n        start !== end &&\n        value >= start &&\n        value <= end);\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** A class representing a range of dates. */\nclass DateRange {\n    constructor(\n    /** The start date of the range. */\n    start, \n    /** The end date of the range. */\n    end) {\n        this.start = start;\n        this.end = end;\n    }\n}\n/**\n * A selection model containing a date selection.\n * @docs-private\n */\nclass MatDateSelectionModel {\n    constructor(\n    /** The current selection. */\n    selection, _adapter) {\n        this.selection = selection;\n        this._adapter = _adapter;\n        this._selectionChanged = new Subject();\n        /** Emits when the selection has changed. */\n        this.selectionChanged = this._selectionChanged;\n        this.selection = selection;\n    }\n    /**\n     * Updates the current selection in the model.\n     * @param value New selection that should be assigned.\n     * @param source Object that triggered the selection change.\n     */\n    updateSelection(value, source) {\n        const oldValue = this.selection;\n        this.selection = value;\n        this._selectionChanged.next({ selection: value, source, oldValue });\n    }\n    ngOnDestroy() {\n        this._selectionChanged.complete();\n    }\n    _isValidDateInstance(date) {\n        return this._adapter.isDateInstance(date) && this._adapter.isValid(date);\n    }\n}\nMatDateSelectionModel.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatDateSelectionModel, deps: \"invalid\", target: i0.ɵɵFactoryTarget.Injectable });\nMatDateSelectionModel.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatDateSelectionModel });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatDateSelectionModel, decorators: [{\n            type: Injectable\n        }], ctorParameters: function () { return [{ type: undefined }, { type: i1$1.DateAdapter }]; } });\n/**\n * A selection model that contains a single date.\n * @docs-private\n */\nclass MatSingleDateSelectionModel extends MatDateSelectionModel {\n    constructor(adapter) {\n        super(null, adapter);\n    }\n    /**\n     * Adds a date to the current selection. In the case of a single date selection, the added date\n     * simply overwrites the previous selection\n     */\n    add(date) {\n        super.updateSelection(date, this);\n    }\n    /** Checks whether the current selection is valid. */\n    isValid() {\n        return this.selection != null && this._isValidDateInstance(this.selection);\n    }\n    /**\n     * Checks whether the current selection is complete. In the case of a single date selection, this\n     * is true if the current selection is not null.\n     */\n    isComplete() {\n        return this.selection != null;\n    }\n    /** Clones the selection model. */\n    clone() {\n        const clone = new MatSingleDateSelectionModel(this._adapter);\n        clone.updateSelection(this.selection, this);\n        return clone;\n    }\n}\nMatSingleDateSelectionModel.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatSingleDateSelectionModel, deps: [{ token: i1$1.DateAdapter }], target: i0.ɵɵFactoryTarget.Injectable });\nMatSingleDateSelectionModel.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatSingleDateSelectionModel });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatSingleDateSelectionModel, decorators: [{\n            type: Injectable\n        }], ctorParameters: function () { return [{ type: i1$1.DateAdapter }]; } });\n/**\n * A selection model that contains a date range.\n * @docs-private\n */\nclass MatRangeDateSelectionModel extends MatDateSelectionModel {\n    constructor(adapter) {\n        super(new DateRange(null, null), adapter);\n    }\n    /**\n     * Adds a date to the current selection. In the case of a date range selection, the added date\n     * fills in the next `null` value in the range. If both the start and the end already have a date,\n     * the selection is reset so that the given date is the new `start` and the `end` is null.\n     */\n    add(date) {\n        let { start, end } = this.selection;\n        if (start == null) {\n            start = date;\n        }\n        else if (end == null) {\n            end = date;\n        }\n        else {\n            start = date;\n            end = null;\n        }\n        super.updateSelection(new DateRange(start, end), this);\n    }\n    /** Checks whether the current selection is valid. */\n    isValid() {\n        const { start, end } = this.selection;\n        // Empty ranges are valid.\n        if (start == null && end == null) {\n            return true;\n        }\n        // Complete ranges are only valid if both dates are valid and the start is before the end.\n        if (start != null && end != null) {\n            return (this._isValidDateInstance(start) &&\n                this._isValidDateInstance(end) &&\n                this._adapter.compareDate(start, end) <= 0);\n        }\n        // Partial ranges are valid if the start/end is valid.\n        return ((start == null || this._isValidDateInstance(start)) &&\n            (end == null || this._isValidDateInstance(end)));\n    }\n    /**\n     * Checks whether the current selection is complete. In the case of a date range selection, this\n     * is true if the current selection has a non-null `start` and `end`.\n     */\n    isComplete() {\n        return this.selection.start != null && this.selection.end != null;\n    }\n    /** Clones the selection model. */\n    clone() {\n        const clone = new MatRangeDateSelectionModel(this._adapter);\n        clone.updateSelection(this.selection, this);\n        return clone;\n    }\n}\nMatRangeDateSelectionModel.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatRangeDateSelectionModel, deps: [{ token: i1$1.DateAdapter }], target: i0.ɵɵFactoryTarget.Injectable });\nMatRangeDateSelectionModel.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatRangeDateSelectionModel });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatRangeDateSelectionModel, decorators: [{\n            type: Injectable\n        }], ctorParameters: function () { return [{ type: i1$1.DateAdapter }]; } });\n/** @docs-private */\nfunction MAT_SINGLE_DATE_SELECTION_MODEL_FACTORY(parent, adapter) {\n    return parent || new MatSingleDateSelectionModel(adapter);\n}\n/**\n * Used to provide a single selection model to a component.\n * @docs-private\n */\nconst MAT_SINGLE_DATE_SELECTION_MODEL_PROVIDER = {\n    provide: MatDateSelectionModel,\n    deps: [[new Optional(), new SkipSelf(), MatDateSelectionModel], DateAdapter],\n    useFactory: MAT_SINGLE_DATE_SELECTION_MODEL_FACTORY,\n};\n/** @docs-private */\nfunction MAT_RANGE_DATE_SELECTION_MODEL_FACTORY(parent, adapter) {\n    return parent || new MatRangeDateSelectionModel(adapter);\n}\n/**\n * Used to provide a range selection model to a component.\n * @docs-private\n */\nconst MAT_RANGE_DATE_SELECTION_MODEL_PROVIDER = {\n    provide: MatDateSelectionModel,\n    deps: [[new Optional(), new SkipSelf(), MatDateSelectionModel], DateAdapter],\n    useFactory: MAT_RANGE_DATE_SELECTION_MODEL_FACTORY,\n};\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Injection token used to customize the date range selection behavior. */\nconst MAT_DATE_RANGE_SELECTION_STRATEGY = new InjectionToken('MAT_DATE_RANGE_SELECTION_STRATEGY');\n/** Provides the default date range selection behavior. */\nclass DefaultMatCalendarRangeStrategy {\n    constructor(_dateAdapter) {\n        this._dateAdapter = _dateAdapter;\n    }\n    selectionFinished(date, currentRange) {\n        let { start, end } = currentRange;\n        if (start == null) {\n            start = date;\n        }\n        else if (end == null && date && this._dateAdapter.compareDate(date, start) >= 0) {\n            end = date;\n        }\n        else {\n            start = date;\n            end = null;\n        }\n        return new DateRange(start, end);\n    }\n    createPreview(activeDate, currentRange) {\n        let start = null;\n        let end = null;\n        if (currentRange.start && !currentRange.end && activeDate) {\n            start = currentRange.start;\n            end = activeDate;\n        }\n        return new DateRange(start, end);\n    }\n}\nDefaultMatCalendarRangeStrategy.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: DefaultMatCalendarRangeStrategy, deps: [{ token: i1$1.DateAdapter }], target: i0.ɵɵFactoryTarget.Injectable });\nDefaultMatCalendarRangeStrategy.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: DefaultMatCalendarRangeStrategy });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: DefaultMatCalendarRangeStrategy, decorators: [{\n            type: Injectable\n        }], ctorParameters: function () { return [{ type: i1$1.DateAdapter }]; } });\n/** @docs-private */\nfunction MAT_CALENDAR_RANGE_STRATEGY_PROVIDER_FACTORY(parent, adapter) {\n    return parent || new DefaultMatCalendarRangeStrategy(adapter);\n}\n/** @docs-private */\nconst MAT_CALENDAR_RANGE_STRATEGY_PROVIDER = {\n    provide: MAT_DATE_RANGE_SELECTION_STRATEGY,\n    deps: [[new Optional(), new SkipSelf(), MAT_DATE_RANGE_SELECTION_STRATEGY], DateAdapter],\n    useFactory: MAT_CALENDAR_RANGE_STRATEGY_PROVIDER_FACTORY,\n};\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst DAYS_PER_WEEK = 7;\n/**\n * An internal component used to display a single month in the datepicker.\n * @docs-private\n */\nclass MatMonthView {\n    constructor(_changeDetectorRef, _dateFormats, _dateAdapter, _dir, _rangeStrategy) {\n        this._changeDetectorRef = _changeDetectorRef;\n        this._dateFormats = _dateFormats;\n        this._dateAdapter = _dateAdapter;\n        this._dir = _dir;\n        this._rangeStrategy = _rangeStrategy;\n        this._rerenderSubscription = Subscription.EMPTY;\n        /** Emits when a new date is selected. */\n        this.selectedChange = new EventEmitter();\n        /** Emits when any date is selected. */\n        this._userSelection = new EventEmitter();\n        /** Emits when any date is activated. */\n        this.activeDateChange = new EventEmitter();\n        if (typeof ngDevMode === 'undefined' || ngDevMode) {\n            if (!this._dateAdapter) {\n                throw createMissingDateImplError('DateAdapter');\n            }\n            if (!this._dateFormats) {\n                throw createMissingDateImplError('MAT_DATE_FORMATS');\n            }\n        }\n        this._activeDate = this._dateAdapter.today();\n    }\n    /**\n     * The date to display in this month view (everything other than the month and year is ignored).\n     */\n    get activeDate() {\n        return this._activeDate;\n    }\n    set activeDate(value) {\n        const oldActiveDate = this._activeDate;\n        const validDate = this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(value)) ||\n            this._dateAdapter.today();\n        this._activeDate = this._dateAdapter.clampDate(validDate, this.minDate, this.maxDate);\n        if (!this._hasSameMonthAndYear(oldActiveDate, this._activeDate)) {\n            this._init();\n        }\n    }\n    /** The currently selected date. */\n    get selected() {\n        return this._selected;\n    }\n    set selected(value) {\n        if (value instanceof DateRange) {\n            this._selected = value;\n        }\n        else {\n            this._selected = this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(value));\n        }\n        this._setRanges(this._selected);\n    }\n    /** The minimum selectable date. */\n    get minDate() {\n        return this._minDate;\n    }\n    set minDate(value) {\n        this._minDate = this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(value));\n    }\n    /** The maximum selectable date. */\n    get maxDate() {\n        return this._maxDate;\n    }\n    set maxDate(value) {\n        this._maxDate = this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(value));\n    }\n    ngAfterContentInit() {\n        this._rerenderSubscription = this._dateAdapter.localeChanges\n            .pipe(startWith(null))\n            .subscribe(() => this._init());\n    }\n    ngOnChanges(changes) {\n        const comparisonChange = changes['comparisonStart'] || changes['comparisonEnd'];\n        if (comparisonChange && !comparisonChange.firstChange) {\n            this._setRanges(this.selected);\n        }\n    }\n    ngOnDestroy() {\n        this._rerenderSubscription.unsubscribe();\n    }\n    /** Handles when a new date is selected. */\n    _dateSelected(event) {\n        const date = event.value;\n        const selectedYear = this._dateAdapter.getYear(this.activeDate);\n        const selectedMonth = this._dateAdapter.getMonth(this.activeDate);\n        const selectedDate = this._dateAdapter.createDate(selectedYear, selectedMonth, date);\n        let rangeStartDate;\n        let rangeEndDate;\n        if (this._selected instanceof DateRange) {\n            rangeStartDate = this._getDateInCurrentMonth(this._selected.start);\n            rangeEndDate = this._getDateInCurrentMonth(this._selected.end);\n        }\n        else {\n            rangeStartDate = rangeEndDate = this._getDateInCurrentMonth(this._selected);\n        }\n        if (rangeStartDate !== date || rangeEndDate !== date) {\n            this.selectedChange.emit(selectedDate);\n        }\n        this._userSelection.emit({ value: selectedDate, event: event.event });\n        this._previewStart = this._previewEnd = null;\n        this._changeDetectorRef.markForCheck();\n    }\n    /** Handles keydown events on the calendar body when calendar is in month view. */\n    _handleCalendarBodyKeydown(event) {\n        // TODO(mmalerba): We currently allow keyboard navigation to disabled dates, but just prevent\n        // disabled ones from being selected. This may not be ideal, we should look into whether\n        // navigation should skip over disabled dates, and if so, how to implement that efficiently.\n        const oldActiveDate = this._activeDate;\n        const isRtl = this._isRtl();\n        switch (event.keyCode) {\n            case LEFT_ARROW:\n                this.activeDate = this._dateAdapter.addCalendarDays(this._activeDate, isRtl ? 1 : -1);\n                break;\n            case RIGHT_ARROW:\n                this.activeDate = this._dateAdapter.addCalendarDays(this._activeDate, isRtl ? -1 : 1);\n                break;\n            case UP_ARROW:\n                this.activeDate = this._dateAdapter.addCalendarDays(this._activeDate, -7);\n                break;\n            case DOWN_ARROW:\n                this.activeDate = this._dateAdapter.addCalendarDays(this._activeDate, 7);\n                break;\n            case HOME:\n                this.activeDate = this._dateAdapter.addCalendarDays(this._activeDate, 1 - this._dateAdapter.getDate(this._activeDate));\n                break;\n            case END:\n                this.activeDate = this._dateAdapter.addCalendarDays(this._activeDate, this._dateAdapter.getNumDaysInMonth(this._activeDate) -\n                    this._dateAdapter.getDate(this._activeDate));\n                break;\n            case PAGE_UP:\n                this.activeDate = event.altKey\n                    ? this._dateAdapter.addCalendarYears(this._activeDate, -1)\n                    : this._dateAdapter.addCalendarMonths(this._activeDate, -1);\n                break;\n            case PAGE_DOWN:\n                this.activeDate = event.altKey\n                    ? this._dateAdapter.addCalendarYears(this._activeDate, 1)\n                    : this._dateAdapter.addCalendarMonths(this._activeDate, 1);\n                break;\n            case ENTER:\n            case SPACE:\n                this._selectionKeyPressed = true;\n                if (this._canSelect(this._activeDate)) {\n                    // Prevent unexpected default actions such as form submission.\n                    // Note that we only prevent the default action here while the selection happens in\n                    // `keyup` below. We can't do the selection here, because it can cause the calendar to\n                    // reopen if focus is restored immediately. We also can't call `preventDefault` on `keyup`\n                    // because it's too late (see #23305).\n                    event.preventDefault();\n                }\n                return;\n            case ESCAPE:\n                // Abort the current range selection if the user presses escape mid-selection.\n                if (this._previewEnd != null && !hasModifierKey(event)) {\n                    this._previewStart = this._previewEnd = null;\n                    this.selectedChange.emit(null);\n                    this._userSelection.emit({ value: null, event });\n                    event.preventDefault();\n                    event.stopPropagation(); // Prevents the overlay from closing.\n                }\n                return;\n            default:\n                // Don't prevent default or focus active cell on keys that we don't explicitly handle.\n                return;\n        }\n        if (this._dateAdapter.compareDate(oldActiveDate, this.activeDate)) {\n            this.activeDateChange.emit(this.activeDate);\n        }\n        this._focusActiveCell();\n        // Prevent unexpected default actions such as form submission.\n        event.preventDefault();\n    }\n    /** Handles keyup events on the calendar body when calendar is in month view. */\n    _handleCalendarBodyKeyup(event) {\n        if (event.keyCode === SPACE || event.keyCode === ENTER) {\n            if (this._selectionKeyPressed && this._canSelect(this._activeDate)) {\n                this._dateSelected({ value: this._dateAdapter.getDate(this._activeDate), event });\n            }\n            this._selectionKeyPressed = false;\n        }\n    }\n    /** Initializes this month view. */\n    _init() {\n        this._setRanges(this.selected);\n        this._todayDate = this._getCellCompareValue(this._dateAdapter.today());\n        this._monthLabel = this._dateFormats.display.monthLabel\n            ? this._dateAdapter.format(this.activeDate, this._dateFormats.display.monthLabel)\n            : this._dateAdapter\n                .getMonthNames('short')[this._dateAdapter.getMonth(this.activeDate)].toLocaleUpperCase();\n        let firstOfMonth = this._dateAdapter.createDate(this._dateAdapter.getYear(this.activeDate), this._dateAdapter.getMonth(this.activeDate), 1);\n        this._firstWeekOffset =\n            (DAYS_PER_WEEK +\n                this._dateAdapter.getDayOfWeek(firstOfMonth) -\n                this._dateAdapter.getFirstDayOfWeek()) %\n                DAYS_PER_WEEK;\n        this._initWeekdays();\n        this._createWeekCells();\n        this._changeDetectorRef.markForCheck();\n    }\n    /** Focuses the active cell after the microtask queue is empty. */\n    _focusActiveCell(movePreview) {\n        this._matCalendarBody._focusActiveCell(movePreview);\n    }\n    /** Called when the user has activated a new cell and the preview needs to be updated. */\n    _previewChanged({ event, value: cell }) {\n        if (this._rangeStrategy) {\n            // We can assume that this will be a range, because preview\n            // events aren't fired for single date selections.\n            const value = cell ? cell.rawValue : null;\n            const previewRange = this._rangeStrategy.createPreview(value, this.selected, event);\n            this._previewStart = this._getCellCompareValue(previewRange.start);\n            this._previewEnd = this._getCellCompareValue(previewRange.end);\n            // Note that here we need to use `detectChanges`, rather than `markForCheck`, because\n            // the way `_focusActiveCell` is set up at the moment makes it fire at the wrong time\n            // when navigating one month back using the keyboard which will cause this handler\n            // to throw a \"changed after checked\" error when updating the preview state.\n            this._changeDetectorRef.detectChanges();\n        }\n    }\n    /** Initializes the weekdays. */\n    _initWeekdays() {\n        const firstDayOfWeek = this._dateAdapter.getFirstDayOfWeek();\n        const narrowWeekdays = this._dateAdapter.getDayOfWeekNames('narrow');\n        const longWeekdays = this._dateAdapter.getDayOfWeekNames('long');\n        // Rotate the labels for days of the week based on the configured first day of the week.\n        let weekdays = longWeekdays.map((long, i) => {\n            return { long, narrow: narrowWeekdays[i] };\n        });\n        this._weekdays = weekdays.slice(firstDayOfWeek).concat(weekdays.slice(0, firstDayOfWeek));\n    }\n    /** Creates MatCalendarCells for the dates in this month. */\n    _createWeekCells() {\n        const daysInMonth = this._dateAdapter.getNumDaysInMonth(this.activeDate);\n        const dateNames = this._dateAdapter.getDateNames();\n        this._weeks = [[]];\n        for (let i = 0, cell = this._firstWeekOffset; i < daysInMonth; i++, cell++) {\n            if (cell == DAYS_PER_WEEK) {\n                this._weeks.push([]);\n                cell = 0;\n            }\n            const date = this._dateAdapter.createDate(this._dateAdapter.getYear(this.activeDate), this._dateAdapter.getMonth(this.activeDate), i + 1);\n            const enabled = this._shouldEnableDate(date);\n            const ariaLabel = this._dateAdapter.format(date, this._dateFormats.display.dateA11yLabel);\n            const cellClasses = this.dateClass ? this.dateClass(date, 'month') : undefined;\n            this._weeks[this._weeks.length - 1].push(new MatCalendarCell(i + 1, dateNames[i], ariaLabel, enabled, cellClasses, this._getCellCompareValue(date), date));\n        }\n    }\n    /** Date filter for the month */\n    _shouldEnableDate(date) {\n        return (!!date &&\n            (!this.minDate || this._dateAdapter.compareDate(date, this.minDate) >= 0) &&\n            (!this.maxDate || this._dateAdapter.compareDate(date, this.maxDate) <= 0) &&\n            (!this.dateFilter || this.dateFilter(date)));\n    }\n    /**\n     * Gets the date in this month that the given Date falls on.\n     * Returns null if the given Date is in another month.\n     */\n    _getDateInCurrentMonth(date) {\n        return date && this._hasSameMonthAndYear(date, this.activeDate)\n            ? this._dateAdapter.getDate(date)\n            : null;\n    }\n    /** Checks whether the 2 dates are non-null and fall within the same month of the same year. */\n    _hasSameMonthAndYear(d1, d2) {\n        return !!(d1 &&\n            d2 &&\n            this._dateAdapter.getMonth(d1) == this._dateAdapter.getMonth(d2) &&\n            this._dateAdapter.getYear(d1) == this._dateAdapter.getYear(d2));\n    }\n    /** Gets the value that will be used to one cell to another. */\n    _getCellCompareValue(date) {\n        if (date) {\n            // We use the time since the Unix epoch to compare dates in this view, rather than the\n            // cell values, because we need to support ranges that span across multiple months/years.\n            const year = this._dateAdapter.getYear(date);\n            const month = this._dateAdapter.getMonth(date);\n            const day = this._dateAdapter.getDate(date);\n            return new Date(year, month, day).getTime();\n        }\n        return null;\n    }\n    /** Determines whether the user has the RTL layout direction. */\n    _isRtl() {\n        return this._dir && this._dir.value === 'rtl';\n    }\n    /** Sets the current range based on a model value. */\n    _setRanges(selectedValue) {\n        if (selectedValue instanceof DateRange) {\n            this._rangeStart = this._getCellCompareValue(selectedValue.start);\n            this._rangeEnd = this._getCellCompareValue(selectedValue.end);\n            this._isRange = true;\n        }\n        else {\n            this._rangeStart = this._rangeEnd = this._getCellCompareValue(selectedValue);\n            this._isRange = false;\n        }\n        this._comparisonRangeStart = this._getCellCompareValue(this.comparisonStart);\n        this._comparisonRangeEnd = this._getCellCompareValue(this.comparisonEnd);\n    }\n    /** Gets whether a date can be selected in the month view. */\n    _canSelect(date) {\n        return !this.dateFilter || this.dateFilter(date);\n    }\n}\nMatMonthView.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatMonthView, deps: [{ token: i0.ChangeDetectorRef }, { token: MAT_DATE_FORMATS, optional: true }, { token: i1$1.DateAdapter, optional: true }, { token: i2.Directionality, optional: true }, { token: MAT_DATE_RANGE_SELECTION_STRATEGY, optional: true }], target: i0.ɵɵFactoryTarget.Component });\nMatMonthView.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: MatMonthView, selector: \"mat-month-view\", inputs: { activeDate: \"activeDate\", selected: \"selected\", minDate: \"minDate\", maxDate: \"maxDate\", dateFilter: \"dateFilter\", dateClass: \"dateClass\", comparisonStart: \"comparisonStart\", comparisonEnd: \"comparisonEnd\" }, outputs: { selectedChange: \"selectedChange\", _userSelection: \"_userSelection\", activeDateChange: \"activeDateChange\" }, viewQueries: [{ propertyName: \"_matCalendarBody\", first: true, predicate: MatCalendarBody, descendants: true }], exportAs: [\"matMonthView\"], usesOnChanges: true, ngImport: i0, template: \"<table class=\\\"mat-calendar-table\\\" role=\\\"grid\\\">\\n  <thead class=\\\"mat-calendar-table-header\\\">\\n    <tr>\\n      <!-- For the day-of-the-week column header, we use an `<abbr>` element because VoiceOver\\n           ignores the `aria-label`. ChromeVox, however, does not read the full name\\n           for the `<abbr>`, so we still set `aria-label` on the header element. -->\\n      <th scope=\\\"col\\\" *ngFor=\\\"let day of _weekdays\\\" [attr.aria-label]=\\\"day.long\\\">\\n        <abbr class=\\\"mat-calendar-abbr\\\" [attr.title]=\\\"day.long\\\">{{day.narrow}}</abbr>\\n      </th>\\n    </tr>\\n    <tr><th aria-hidden=\\\"true\\\" class=\\\"mat-calendar-table-header-divider\\\" colspan=\\\"7\\\"></th></tr>\\n  </thead>\\n  <tbody mat-calendar-body\\n         [label]=\\\"_monthLabel\\\"\\n         [rows]=\\\"_weeks\\\"\\n         [todayValue]=\\\"_todayDate!\\\"\\n         [startValue]=\\\"_rangeStart!\\\"\\n         [endValue]=\\\"_rangeEnd!\\\"\\n         [comparisonStart]=\\\"_comparisonRangeStart\\\"\\n         [comparisonEnd]=\\\"_comparisonRangeEnd\\\"\\n         [previewStart]=\\\"_previewStart\\\"\\n         [previewEnd]=\\\"_previewEnd\\\"\\n         [isRange]=\\\"_isRange\\\"\\n         [labelMinRequiredCells]=\\\"3\\\"\\n         [activeCell]=\\\"_dateAdapter.getDate(activeDate) - 1\\\"\\n         (selectedValueChange)=\\\"_dateSelected($event)\\\"\\n         (previewChange)=\\\"_previewChanged($event)\\\"\\n         (keyup)=\\\"_handleCalendarBodyKeyup($event)\\\"\\n         (keydown)=\\\"_handleCalendarBodyKeydown($event)\\\">\\n  </tbody>\\n</table>\\n\", components: [{ type: MatCalendarBody, selector: \"[mat-calendar-body]\", inputs: [\"label\", \"rows\", \"todayValue\", \"startValue\", \"endValue\", \"labelMinRequiredCells\", \"numCols\", \"activeCell\", \"isRange\", \"cellAspectRatio\", \"comparisonStart\", \"comparisonEnd\", \"previewStart\", \"previewEnd\"], outputs: [\"selectedValueChange\", \"previewChange\"], exportAs: [\"matCalendarBody\"] }], directives: [{ type: i1.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatMonthView, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-month-view', exportAs: 'matMonthView', encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, template: \"<table class=\\\"mat-calendar-table\\\" role=\\\"grid\\\">\\n  <thead class=\\\"mat-calendar-table-header\\\">\\n    <tr>\\n      <!-- For the day-of-the-week column header, we use an `<abbr>` element because VoiceOver\\n           ignores the `aria-label`. ChromeVox, however, does not read the full name\\n           for the `<abbr>`, so we still set `aria-label` on the header element. -->\\n      <th scope=\\\"col\\\" *ngFor=\\\"let day of _weekdays\\\" [attr.aria-label]=\\\"day.long\\\">\\n        <abbr class=\\\"mat-calendar-abbr\\\" [attr.title]=\\\"day.long\\\">{{day.narrow}}</abbr>\\n      </th>\\n    </tr>\\n    <tr><th aria-hidden=\\\"true\\\" class=\\\"mat-calendar-table-header-divider\\\" colspan=\\\"7\\\"></th></tr>\\n  </thead>\\n  <tbody mat-calendar-body\\n         [label]=\\\"_monthLabel\\\"\\n         [rows]=\\\"_weeks\\\"\\n         [todayValue]=\\\"_todayDate!\\\"\\n         [startValue]=\\\"_rangeStart!\\\"\\n         [endValue]=\\\"_rangeEnd!\\\"\\n         [comparisonStart]=\\\"_comparisonRangeStart\\\"\\n         [comparisonEnd]=\\\"_comparisonRangeEnd\\\"\\n         [previewStart]=\\\"_previewStart\\\"\\n         [previewEnd]=\\\"_previewEnd\\\"\\n         [isRange]=\\\"_isRange\\\"\\n         [labelMinRequiredCells]=\\\"3\\\"\\n         [activeCell]=\\\"_dateAdapter.getDate(activeDate) - 1\\\"\\n         (selectedValueChange)=\\\"_dateSelected($event)\\\"\\n         (previewChange)=\\\"_previewChanged($event)\\\"\\n         (keyup)=\\\"_handleCalendarBodyKeyup($event)\\\"\\n         (keydown)=\\\"_handleCalendarBodyKeydown($event)\\\">\\n  </tbody>\\n</table>\\n\" }]\n        }], ctorParameters: function () {\n        return [{ type: i0.ChangeDetectorRef }, { type: undefined, decorators: [{\n                        type: Optional\n                    }, {\n                        type: Inject,\n                        args: [MAT_DATE_FORMATS]\n                    }] }, { type: i1$1.DateAdapter, decorators: [{\n                        type: Optional\n                    }] }, { type: i2.Directionality, decorators: [{\n                        type: Optional\n                    }] }, { type: undefined, decorators: [{\n                        type: Inject,\n                        args: [MAT_DATE_RANGE_SELECTION_STRATEGY]\n                    }, {\n                        type: Optional\n                    }] }];\n    }, propDecorators: { activeDate: [{\n                type: Input\n            }], selected: [{\n                type: Input\n            }], minDate: [{\n                type: Input\n            }], maxDate: [{\n                type: Input\n            }], dateFilter: [{\n                type: Input\n            }], dateClass: [{\n                type: Input\n            }], comparisonStart: [{\n                type: Input\n            }], comparisonEnd: [{\n                type: Input\n            }], selectedChange: [{\n                type: Output\n            }], _userSelection: [{\n                type: Output\n            }], activeDateChange: [{\n                type: Output\n            }], _matCalendarBody: [{\n                type: ViewChild,\n                args: [MatCalendarBody]\n            }] } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst yearsPerPage = 24;\nconst yearsPerRow = 4;\n/**\n * An internal component used to display a year selector in the datepicker.\n * @docs-private\n */\nclass MatMultiYearView {\n    constructor(_changeDetectorRef, _dateAdapter, _dir) {\n        this._changeDetectorRef = _changeDetectorRef;\n        this._dateAdapter = _dateAdapter;\n        this._dir = _dir;\n        this._rerenderSubscription = Subscription.EMPTY;\n        /** Emits when a new year is selected. */\n        this.selectedChange = new EventEmitter();\n        /** Emits the selected year. This doesn't imply a change on the selected date */\n        this.yearSelected = new EventEmitter();\n        /** Emits when any date is activated. */\n        this.activeDateChange = new EventEmitter();\n        if (!this._dateAdapter && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw createMissingDateImplError('DateAdapter');\n        }\n        this._activeDate = this._dateAdapter.today();\n    }\n    /** The date to display in this multi-year view (everything other than the year is ignored). */\n    get activeDate() {\n        return this._activeDate;\n    }\n    set activeDate(value) {\n        let oldActiveDate = this._activeDate;\n        const validDate = this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(value)) ||\n            this._dateAdapter.today();\n        this._activeDate = this._dateAdapter.clampDate(validDate, this.minDate, this.maxDate);\n        if (!isSameMultiYearView(this._dateAdapter, oldActiveDate, this._activeDate, this.minDate, this.maxDate)) {\n            this._init();\n        }\n    }\n    /** The currently selected date. */\n    get selected() {\n        return this._selected;\n    }\n    set selected(value) {\n        if (value instanceof DateRange) {\n            this._selected = value;\n        }\n        else {\n            this._selected = this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(value));\n        }\n        this._setSelectedYear(value);\n    }\n    /** The minimum selectable date. */\n    get minDate() {\n        return this._minDate;\n    }\n    set minDate(value) {\n        this._minDate = this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(value));\n    }\n    /** The maximum selectable date. */\n    get maxDate() {\n        return this._maxDate;\n    }\n    set maxDate(value) {\n        this._maxDate = this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(value));\n    }\n    ngAfterContentInit() {\n        this._rerenderSubscription = this._dateAdapter.localeChanges\n            .pipe(startWith(null))\n            .subscribe(() => this._init());\n    }\n    ngOnDestroy() {\n        this._rerenderSubscription.unsubscribe();\n    }\n    /** Initializes this multi-year view. */\n    _init() {\n        this._todayYear = this._dateAdapter.getYear(this._dateAdapter.today());\n        // We want a range years such that we maximize the number of\n        // enabled dates visible at once. This prevents issues where the minimum year\n        // is the last item of a page OR the maximum year is the first item of a page.\n        // The offset from the active year to the \"slot\" for the starting year is the\n        // *actual* first rendered year in the multi-year view.\n        const activeYear = this._dateAdapter.getYear(this._activeDate);\n        const minYearOfPage = activeYear - getActiveOffset(this._dateAdapter, this.activeDate, this.minDate, this.maxDate);\n        this._years = [];\n        for (let i = 0, row = []; i < yearsPerPage; i++) {\n            row.push(minYearOfPage + i);\n            if (row.length == yearsPerRow) {\n                this._years.push(row.map(year => this._createCellForYear(year)));\n                row = [];\n            }\n        }\n        this._changeDetectorRef.markForCheck();\n    }\n    /** Handles when a new year is selected. */\n    _yearSelected(event) {\n        const year = event.value;\n        this.yearSelected.emit(this._dateAdapter.createDate(year, 0, 1));\n        let month = this._dateAdapter.getMonth(this.activeDate);\n        let daysInMonth = this._dateAdapter.getNumDaysInMonth(this._dateAdapter.createDate(year, month, 1));\n        this.selectedChange.emit(this._dateAdapter.createDate(year, month, Math.min(this._dateAdapter.getDate(this.activeDate), daysInMonth)));\n    }\n    /** Handles keydown events on the calendar body when calendar is in multi-year view. */\n    _handleCalendarBodyKeydown(event) {\n        const oldActiveDate = this._activeDate;\n        const isRtl = this._isRtl();\n        switch (event.keyCode) {\n            case LEFT_ARROW:\n                this.activeDate = this._dateAdapter.addCalendarYears(this._activeDate, isRtl ? 1 : -1);\n                break;\n            case RIGHT_ARROW:\n                this.activeDate = this._dateAdapter.addCalendarYears(this._activeDate, isRtl ? -1 : 1);\n                break;\n            case UP_ARROW:\n                this.activeDate = this._dateAdapter.addCalendarYears(this._activeDate, -yearsPerRow);\n                break;\n            case DOWN_ARROW:\n                this.activeDate = this._dateAdapter.addCalendarYears(this._activeDate, yearsPerRow);\n                break;\n            case HOME:\n                this.activeDate = this._dateAdapter.addCalendarYears(this._activeDate, -getActiveOffset(this._dateAdapter, this.activeDate, this.minDate, this.maxDate));\n                break;\n            case END:\n                this.activeDate = this._dateAdapter.addCalendarYears(this._activeDate, yearsPerPage -\n                    getActiveOffset(this._dateAdapter, this.activeDate, this.minDate, this.maxDate) -\n                    1);\n                break;\n            case PAGE_UP:\n                this.activeDate = this._dateAdapter.addCalendarYears(this._activeDate, event.altKey ? -yearsPerPage * 10 : -yearsPerPage);\n                break;\n            case PAGE_DOWN:\n                this.activeDate = this._dateAdapter.addCalendarYears(this._activeDate, event.altKey ? yearsPerPage * 10 : yearsPerPage);\n                break;\n            case ENTER:\n            case SPACE:\n                // Note that we only prevent the default action here while the selection happens in\n                // `keyup` below. We can't do the selection here, because it can cause the calendar to\n                // reopen if focus is restored immediately. We also can't call `preventDefault` on `keyup`\n                // because it's too late (see #23305).\n                this._selectionKeyPressed = true;\n                break;\n            default:\n                // Don't prevent default or focus active cell on keys that we don't explicitly handle.\n                return;\n        }\n        if (this._dateAdapter.compareDate(oldActiveDate, this.activeDate)) {\n            this.activeDateChange.emit(this.activeDate);\n        }\n        this._focusActiveCell();\n        // Prevent unexpected default actions such as form submission.\n        event.preventDefault();\n    }\n    /** Handles keyup events on the calendar body when calendar is in multi-year view. */\n    _handleCalendarBodyKeyup(event) {\n        if (event.keyCode === SPACE || event.keyCode === ENTER) {\n            if (this._selectionKeyPressed) {\n                this._yearSelected({ value: this._dateAdapter.getYear(this._activeDate), event });\n            }\n            this._selectionKeyPressed = false;\n        }\n    }\n    _getActiveCell() {\n        return getActiveOffset(this._dateAdapter, this.activeDate, this.minDate, this.maxDate);\n    }\n    /** Focuses the active cell after the microtask queue is empty. */\n    _focusActiveCell() {\n        this._matCalendarBody._focusActiveCell();\n    }\n    /** Creates an MatCalendarCell for the given year. */\n    _createCellForYear(year) {\n        const date = this._dateAdapter.createDate(year, 0, 1);\n        const yearName = this._dateAdapter.getYearName(date);\n        const cellClasses = this.dateClass ? this.dateClass(date, 'multi-year') : undefined;\n        return new MatCalendarCell(year, yearName, yearName, this._shouldEnableYear(year), cellClasses);\n    }\n    /** Whether the given year is enabled. */\n    _shouldEnableYear(year) {\n        // disable if the year is greater than maxDate lower than minDate\n        if (year === undefined ||\n            year === null ||\n            (this.maxDate && year > this._dateAdapter.getYear(this.maxDate)) ||\n            (this.minDate && year < this._dateAdapter.getYear(this.minDate))) {\n            return false;\n        }\n        // enable if it reaches here and there's no filter defined\n        if (!this.dateFilter) {\n            return true;\n        }\n        const firstOfYear = this._dateAdapter.createDate(year, 0, 1);\n        // If any date in the year is enabled count the year as enabled.\n        for (let date = firstOfYear; this._dateAdapter.getYear(date) == year; date = this._dateAdapter.addCalendarDays(date, 1)) {\n            if (this.dateFilter(date)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    /** Determines whether the user has the RTL layout direction. */\n    _isRtl() {\n        return this._dir && this._dir.value === 'rtl';\n    }\n    /** Sets the currently-highlighted year based on a model value. */\n    _setSelectedYear(value) {\n        this._selectedYear = null;\n        if (value instanceof DateRange) {\n            const displayValue = value.start || value.end;\n            if (displayValue) {\n                this._selectedYear = this._dateAdapter.getYear(displayValue);\n            }\n        }\n        else if (value) {\n            this._selectedYear = this._dateAdapter.getYear(value);\n        }\n    }\n}\nMatMultiYearView.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatMultiYearView, deps: [{ token: i0.ChangeDetectorRef }, { token: i1$1.DateAdapter, optional: true }, { token: i2.Directionality, optional: true }], target: i0.ɵɵFactoryTarget.Component });\nMatMultiYearView.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: MatMultiYearView, selector: \"mat-multi-year-view\", inputs: { activeDate: \"activeDate\", selected: \"selected\", minDate: \"minDate\", maxDate: \"maxDate\", dateFilter: \"dateFilter\", dateClass: \"dateClass\" }, outputs: { selectedChange: \"selectedChange\", yearSelected: \"yearSelected\", activeDateChange: \"activeDateChange\" }, viewQueries: [{ propertyName: \"_matCalendarBody\", first: true, predicate: MatCalendarBody, descendants: true }], exportAs: [\"matMultiYearView\"], ngImport: i0, template: \"<table class=\\\"mat-calendar-table\\\" role=\\\"grid\\\">\\n  <thead aria-hidden=\\\"true\\\" class=\\\"mat-calendar-table-header\\\">\\n    <tr><th class=\\\"mat-calendar-table-header-divider\\\" colspan=\\\"4\\\"></th></tr>\\n  </thead>\\n  <tbody mat-calendar-body\\n         [rows]=\\\"_years\\\"\\n         [todayValue]=\\\"_todayYear\\\"\\n         [startValue]=\\\"_selectedYear!\\\"\\n         [endValue]=\\\"_selectedYear!\\\"\\n         [numCols]=\\\"4\\\"\\n         [cellAspectRatio]=\\\"4 / 7\\\"\\n         [activeCell]=\\\"_getActiveCell()\\\"\\n         (selectedValueChange)=\\\"_yearSelected($event)\\\"\\n         (keyup)=\\\"_handleCalendarBodyKeyup($event)\\\"\\n         (keydown)=\\\"_handleCalendarBodyKeydown($event)\\\">\\n  </tbody>\\n</table>\\n\", components: [{ type: MatCalendarBody, selector: \"[mat-calendar-body]\", inputs: [\"label\", \"rows\", \"todayValue\", \"startValue\", \"endValue\", \"labelMinRequiredCells\", \"numCols\", \"activeCell\", \"isRange\", \"cellAspectRatio\", \"comparisonStart\", \"comparisonEnd\", \"previewStart\", \"previewEnd\"], outputs: [\"selectedValueChange\", \"previewChange\"], exportAs: [\"matCalendarBody\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatMultiYearView, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-multi-year-view', exportAs: 'matMultiYearView', encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, template: \"<table class=\\\"mat-calendar-table\\\" role=\\\"grid\\\">\\n  <thead aria-hidden=\\\"true\\\" class=\\\"mat-calendar-table-header\\\">\\n    <tr><th class=\\\"mat-calendar-table-header-divider\\\" colspan=\\\"4\\\"></th></tr>\\n  </thead>\\n  <tbody mat-calendar-body\\n         [rows]=\\\"_years\\\"\\n         [todayValue]=\\\"_todayYear\\\"\\n         [startValue]=\\\"_selectedYear!\\\"\\n         [endValue]=\\\"_selectedYear!\\\"\\n         [numCols]=\\\"4\\\"\\n         [cellAspectRatio]=\\\"4 / 7\\\"\\n         [activeCell]=\\\"_getActiveCell()\\\"\\n         (selectedValueChange)=\\\"_yearSelected($event)\\\"\\n         (keyup)=\\\"_handleCalendarBodyKeyup($event)\\\"\\n         (keydown)=\\\"_handleCalendarBodyKeydown($event)\\\">\\n  </tbody>\\n</table>\\n\" }]\n        }], ctorParameters: function () {\n        return [{ type: i0.ChangeDetectorRef }, { type: i1$1.DateAdapter, decorators: [{\n                        type: Optional\n                    }] }, { type: i2.Directionality, decorators: [{\n                        type: Optional\n                    }] }];\n    }, propDecorators: { activeDate: [{\n                type: Input\n            }], selected: [{\n                type: Input\n            }], minDate: [{\n                type: Input\n            }], maxDate: [{\n                type: Input\n            }], dateFilter: [{\n                type: Input\n            }], dateClass: [{\n                type: Input\n            }], selectedChange: [{\n                type: Output\n            }], yearSelected: [{\n                type: Output\n            }], activeDateChange: [{\n                type: Output\n            }], _matCalendarBody: [{\n                type: ViewChild,\n                args: [MatCalendarBody]\n            }] } });\nfunction isSameMultiYearView(dateAdapter, date1, date2, minDate, maxDate) {\n    const year1 = dateAdapter.getYear(date1);\n    const year2 = dateAdapter.getYear(date2);\n    const startingYear = getStartingYear(dateAdapter, minDate, maxDate);\n    return (Math.floor((year1 - startingYear) / yearsPerPage) ===\n        Math.floor((year2 - startingYear) / yearsPerPage));\n}\n/**\n * When the multi-year view is first opened, the active year will be in view.\n * So we compute how many years are between the active year and the *slot* where our\n * \"startingYear\" will render when paged into view.\n */\nfunction getActiveOffset(dateAdapter, activeDate, minDate, maxDate) {\n    const activeYear = dateAdapter.getYear(activeDate);\n    return euclideanModulo(activeYear - getStartingYear(dateAdapter, minDate, maxDate), yearsPerPage);\n}\n/**\n * We pick a \"starting\" year such that either the maximum year would be at the end\n * or the minimum year would be at the beginning of a page.\n */\nfunction getStartingYear(dateAdapter, minDate, maxDate) {\n    let startingYear = 0;\n    if (maxDate) {\n        const maxYear = dateAdapter.getYear(maxDate);\n        startingYear = maxYear - yearsPerPage + 1;\n    }\n    else if (minDate) {\n        startingYear = dateAdapter.getYear(minDate);\n    }\n    return startingYear;\n}\n/** Gets remainder that is non-negative, even if first number is negative */\nfunction euclideanModulo(a, b) {\n    return ((a % b) + b) % b;\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * An internal component used to display a single year in the datepicker.\n * @docs-private\n */\nclass MatYearView {\n    constructor(_changeDetectorRef, _dateFormats, _dateAdapter, _dir) {\n        this._changeDetectorRef = _changeDetectorRef;\n        this._dateFormats = _dateFormats;\n        this._dateAdapter = _dateAdapter;\n        this._dir = _dir;\n        this._rerenderSubscription = Subscription.EMPTY;\n        /** Emits when a new month is selected. */\n        this.selectedChange = new EventEmitter();\n        /** Emits the selected month. This doesn't imply a change on the selected date */\n        this.monthSelected = new EventEmitter();\n        /** Emits when any date is activated. */\n        this.activeDateChange = new EventEmitter();\n        if (typeof ngDevMode === 'undefined' || ngDevMode) {\n            if (!this._dateAdapter) {\n                throw createMissingDateImplError('DateAdapter');\n            }\n            if (!this._dateFormats) {\n                throw createMissingDateImplError('MAT_DATE_FORMATS');\n            }\n        }\n        this._activeDate = this._dateAdapter.today();\n    }\n    /** The date to display in this year view (everything other than the year is ignored). */\n    get activeDate() {\n        return this._activeDate;\n    }\n    set activeDate(value) {\n        let oldActiveDate = this._activeDate;\n        const validDate = this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(value)) ||\n            this._dateAdapter.today();\n        this._activeDate = this._dateAdapter.clampDate(validDate, this.minDate, this.maxDate);\n        if (this._dateAdapter.getYear(oldActiveDate) !== this._dateAdapter.getYear(this._activeDate)) {\n            this._init();\n        }\n    }\n    /** The currently selected date. */\n    get selected() {\n        return this._selected;\n    }\n    set selected(value) {\n        if (value instanceof DateRange) {\n            this._selected = value;\n        }\n        else {\n            this._selected = this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(value));\n        }\n        this._setSelectedMonth(value);\n    }\n    /** The minimum selectable date. */\n    get minDate() {\n        return this._minDate;\n    }\n    set minDate(value) {\n        this._minDate = this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(value));\n    }\n    /** The maximum selectable date. */\n    get maxDate() {\n        return this._maxDate;\n    }\n    set maxDate(value) {\n        this._maxDate = this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(value));\n    }\n    ngAfterContentInit() {\n        this._rerenderSubscription = this._dateAdapter.localeChanges\n            .pipe(startWith(null))\n            .subscribe(() => this._init());\n    }\n    ngOnDestroy() {\n        this._rerenderSubscription.unsubscribe();\n    }\n    /** Handles when a new month is selected. */\n    _monthSelected(event) {\n        const month = event.value;\n        const normalizedDate = this._dateAdapter.createDate(this._dateAdapter.getYear(this.activeDate), month, 1);\n        this.monthSelected.emit(normalizedDate);\n        const daysInMonth = this._dateAdapter.getNumDaysInMonth(normalizedDate);\n        this.selectedChange.emit(this._dateAdapter.createDate(this._dateAdapter.getYear(this.activeDate), month, Math.min(this._dateAdapter.getDate(this.activeDate), daysInMonth)));\n    }\n    /** Handles keydown events on the calendar body when calendar is in year view. */\n    _handleCalendarBodyKeydown(event) {\n        // TODO(mmalerba): We currently allow keyboard navigation to disabled dates, but just prevent\n        // disabled ones from being selected. This may not be ideal, we should look into whether\n        // navigation should skip over disabled dates, and if so, how to implement that efficiently.\n        const oldActiveDate = this._activeDate;\n        const isRtl = this._isRtl();\n        switch (event.keyCode) {\n            case LEFT_ARROW:\n                this.activeDate = this._dateAdapter.addCalendarMonths(this._activeDate, isRtl ? 1 : -1);\n                break;\n            case RIGHT_ARROW:\n                this.activeDate = this._dateAdapter.addCalendarMonths(this._activeDate, isRtl ? -1 : 1);\n                break;\n            case UP_ARROW:\n                this.activeDate = this._dateAdapter.addCalendarMonths(this._activeDate, -4);\n                break;\n            case DOWN_ARROW:\n                this.activeDate = this._dateAdapter.addCalendarMonths(this._activeDate, 4);\n                break;\n            case HOME:\n                this.activeDate = this._dateAdapter.addCalendarMonths(this._activeDate, -this._dateAdapter.getMonth(this._activeDate));\n                break;\n            case END:\n                this.activeDate = this._dateAdapter.addCalendarMonths(this._activeDate, 11 - this._dateAdapter.getMonth(this._activeDate));\n                break;\n            case PAGE_UP:\n                this.activeDate = this._dateAdapter.addCalendarYears(this._activeDate, event.altKey ? -10 : -1);\n                break;\n            case PAGE_DOWN:\n                this.activeDate = this._dateAdapter.addCalendarYears(this._activeDate, event.altKey ? 10 : 1);\n                break;\n            case ENTER:\n            case SPACE:\n                // Note that we only prevent the default action here while the selection happens in\n                // `keyup` below. We can't do the selection here, because it can cause the calendar to\n                // reopen if focus is restored immediately. We also can't call `preventDefault` on `keyup`\n                // because it's too late (see #23305).\n                this._selectionKeyPressed = true;\n                break;\n            default:\n                // Don't prevent default or focus active cell on keys that we don't explicitly handle.\n                return;\n        }\n        if (this._dateAdapter.compareDate(oldActiveDate, this.activeDate)) {\n            this.activeDateChange.emit(this.activeDate);\n        }\n        this._focusActiveCell();\n        // Prevent unexpected default actions such as form submission.\n        event.preventDefault();\n    }\n    /** Handles keyup events on the calendar body when calendar is in year view. */\n    _handleCalendarBodyKeyup(event) {\n        if (event.keyCode === SPACE || event.keyCode === ENTER) {\n            if (this._selectionKeyPressed) {\n                this._monthSelected({ value: this._dateAdapter.getMonth(this._activeDate), event });\n            }\n            this._selectionKeyPressed = false;\n        }\n    }\n    /** Initializes this year view. */\n    _init() {\n        this._setSelectedMonth(this.selected);\n        this._todayMonth = this._getMonthInCurrentYear(this._dateAdapter.today());\n        this._yearLabel = this._dateAdapter.getYearName(this.activeDate);\n        let monthNames = this._dateAdapter.getMonthNames('short');\n        // First row of months only contains 5 elements so we can fit the year label on the same row.\n        this._months = [\n            [0, 1, 2, 3],\n            [4, 5, 6, 7],\n            [8, 9, 10, 11],\n        ].map(row => row.map(month => this._createCellForMonth(month, monthNames[month])));\n        this._changeDetectorRef.markForCheck();\n    }\n    /** Focuses the active cell after the microtask queue is empty. */\n    _focusActiveCell() {\n        this._matCalendarBody._focusActiveCell();\n    }\n    /**\n     * Gets the month in this year that the given Date falls on.\n     * Returns null if the given Date is in another year.\n     */\n    _getMonthInCurrentYear(date) {\n        return date && this._dateAdapter.getYear(date) == this._dateAdapter.getYear(this.activeDate)\n            ? this._dateAdapter.getMonth(date)\n            : null;\n    }\n    /** Creates an MatCalendarCell for the given month. */\n    _createCellForMonth(month, monthName) {\n        const date = this._dateAdapter.createDate(this._dateAdapter.getYear(this.activeDate), month, 1);\n        const ariaLabel = this._dateAdapter.format(date, this._dateFormats.display.monthYearA11yLabel);\n        const cellClasses = this.dateClass ? this.dateClass(date, 'year') : undefined;\n        return new MatCalendarCell(month, monthName.toLocaleUpperCase(), ariaLabel, this._shouldEnableMonth(month), cellClasses);\n    }\n    /** Whether the given month is enabled. */\n    _shouldEnableMonth(month) {\n        const activeYear = this._dateAdapter.getYear(this.activeDate);\n        if (month === undefined ||\n            month === null ||\n            this._isYearAndMonthAfterMaxDate(activeYear, month) ||\n            this._isYearAndMonthBeforeMinDate(activeYear, month)) {\n            return false;\n        }\n        if (!this.dateFilter) {\n            return true;\n        }\n        const firstOfMonth = this._dateAdapter.createDate(activeYear, month, 1);\n        // If any date in the month is enabled count the month as enabled.\n        for (let date = firstOfMonth; this._dateAdapter.getMonth(date) == month; date = this._dateAdapter.addCalendarDays(date, 1)) {\n            if (this.dateFilter(date)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    /**\n     * Tests whether the combination month/year is after this.maxDate, considering\n     * just the month and year of this.maxDate\n     */\n    _isYearAndMonthAfterMaxDate(year, month) {\n        if (this.maxDate) {\n            const maxYear = this._dateAdapter.getYear(this.maxDate);\n            const maxMonth = this._dateAdapter.getMonth(this.maxDate);\n            return year > maxYear || (year === maxYear && month > maxMonth);\n        }\n        return false;\n    }\n    /**\n     * Tests whether the combination month/year is before this.minDate, considering\n     * just the month and year of this.minDate\n     */\n    _isYearAndMonthBeforeMinDate(year, month) {\n        if (this.minDate) {\n            const minYear = this._dateAdapter.getYear(this.minDate);\n            const minMonth = this._dateAdapter.getMonth(this.minDate);\n            return year < minYear || (year === minYear && month < minMonth);\n        }\n        return false;\n    }\n    /** Determines whether the user has the RTL layout direction. */\n    _isRtl() {\n        return this._dir && this._dir.value === 'rtl';\n    }\n    /** Sets the currently-selected month based on a model value. */\n    _setSelectedMonth(value) {\n        if (value instanceof DateRange) {\n            this._selectedMonth =\n                this._getMonthInCurrentYear(value.start) || this._getMonthInCurrentYear(value.end);\n        }\n        else {\n            this._selectedMonth = this._getMonthInCurrentYear(value);\n        }\n    }\n}\nMatYearView.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatYearView, deps: [{ token: i0.ChangeDetectorRef }, { token: MAT_DATE_FORMATS, optional: true }, { token: i1$1.DateAdapter, optional: true }, { token: i2.Directionality, optional: true }], target: i0.ɵɵFactoryTarget.Component });\nMatYearView.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: MatYearView, selector: \"mat-year-view\", inputs: { activeDate: \"activeDate\", selected: \"selected\", minDate: \"minDate\", maxDate: \"maxDate\", dateFilter: \"dateFilter\", dateClass: \"dateClass\" }, outputs: { selectedChange: \"selectedChange\", monthSelected: \"monthSelected\", activeDateChange: \"activeDateChange\" }, viewQueries: [{ propertyName: \"_matCalendarBody\", first: true, predicate: MatCalendarBody, descendants: true }], exportAs: [\"matYearView\"], ngImport: i0, template: \"<table class=\\\"mat-calendar-table\\\" role=\\\"grid\\\">\\n  <thead aria-hidden=\\\"true\\\" class=\\\"mat-calendar-table-header\\\">\\n    <tr><th class=\\\"mat-calendar-table-header-divider\\\" colspan=\\\"4\\\"></th></tr>\\n  </thead>\\n  <tbody mat-calendar-body\\n         [label]=\\\"_yearLabel\\\"\\n         [rows]=\\\"_months\\\"\\n         [todayValue]=\\\"_todayMonth!\\\"\\n         [startValue]=\\\"_selectedMonth!\\\"\\n         [endValue]=\\\"_selectedMonth!\\\"\\n         [labelMinRequiredCells]=\\\"2\\\"\\n         [numCols]=\\\"4\\\"\\n         [cellAspectRatio]=\\\"4 / 7\\\"\\n         [activeCell]=\\\"_dateAdapter.getMonth(activeDate)\\\"\\n         (selectedValueChange)=\\\"_monthSelected($event)\\\"\\n         (keyup)=\\\"_handleCalendarBodyKeyup($event)\\\"\\n         (keydown)=\\\"_handleCalendarBodyKeydown($event)\\\">\\n  </tbody>\\n</table>\\n\", components: [{ type: MatCalendarBody, selector: \"[mat-calendar-body]\", inputs: [\"label\", \"rows\", \"todayValue\", \"startValue\", \"endValue\", \"labelMinRequiredCells\", \"numCols\", \"activeCell\", \"isRange\", \"cellAspectRatio\", \"comparisonStart\", \"comparisonEnd\", \"previewStart\", \"previewEnd\"], outputs: [\"selectedValueChange\", \"previewChange\"], exportAs: [\"matCalendarBody\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatYearView, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-year-view', exportAs: 'matYearView', encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, template: \"<table class=\\\"mat-calendar-table\\\" role=\\\"grid\\\">\\n  <thead aria-hidden=\\\"true\\\" class=\\\"mat-calendar-table-header\\\">\\n    <tr><th class=\\\"mat-calendar-table-header-divider\\\" colspan=\\\"4\\\"></th></tr>\\n  </thead>\\n  <tbody mat-calendar-body\\n         [label]=\\\"_yearLabel\\\"\\n         [rows]=\\\"_months\\\"\\n         [todayValue]=\\\"_todayMonth!\\\"\\n         [startValue]=\\\"_selectedMonth!\\\"\\n         [endValue]=\\\"_selectedMonth!\\\"\\n         [labelMinRequiredCells]=\\\"2\\\"\\n         [numCols]=\\\"4\\\"\\n         [cellAspectRatio]=\\\"4 / 7\\\"\\n         [activeCell]=\\\"_dateAdapter.getMonth(activeDate)\\\"\\n         (selectedValueChange)=\\\"_monthSelected($event)\\\"\\n         (keyup)=\\\"_handleCalendarBodyKeyup($event)\\\"\\n         (keydown)=\\\"_handleCalendarBodyKeydown($event)\\\">\\n  </tbody>\\n</table>\\n\" }]\n        }], ctorParameters: function () {\n        return [{ type: i0.ChangeDetectorRef }, { type: undefined, decorators: [{\n                        type: Optional\n                    }, {\n                        type: Inject,\n                        args: [MAT_DATE_FORMATS]\n                    }] }, { type: i1$1.DateAdapter, decorators: [{\n                        type: Optional\n                    }] }, { type: i2.Directionality, decorators: [{\n                        type: Optional\n                    }] }];\n    }, propDecorators: { activeDate: [{\n                type: Input\n            }], selected: [{\n                type: Input\n            }], minDate: [{\n                type: Input\n            }], maxDate: [{\n                type: Input\n            }], dateFilter: [{\n                type: Input\n            }], dateClass: [{\n                type: Input\n            }], selectedChange: [{\n                type: Output\n            }], monthSelected: [{\n                type: Output\n            }], activeDateChange: [{\n                type: Output\n            }], _matCalendarBody: [{\n                type: ViewChild,\n                args: [MatCalendarBody]\n            }] } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Datepicker data that requires internationalization. */\nclass MatDatepickerIntl {\n    constructor() {\n        /**\n         * Stream that emits whenever the labels here are changed. Use this to notify\n         * components if the labels have changed after initialization.\n         */\n        this.changes = new Subject();\n        /** A label for the calendar popup (used by screen readers). */\n        this.calendarLabel = 'Calendar';\n        /** A label for the button used to open the calendar popup (used by screen readers). */\n        this.openCalendarLabel = 'Open calendar';\n        /** Label for the button used to close the calendar popup. */\n        this.closeCalendarLabel = 'Close calendar';\n        /** A label for the previous month button (used by screen readers). */\n        this.prevMonthLabel = 'Previous month';\n        /** A label for the next month button (used by screen readers). */\n        this.nextMonthLabel = 'Next month';\n        /** A label for the previous year button (used by screen readers). */\n        this.prevYearLabel = 'Previous year';\n        /** A label for the next year button (used by screen readers). */\n        this.nextYearLabel = 'Next year';\n        /** A label for the previous multi-year button (used by screen readers). */\n        this.prevMultiYearLabel = 'Previous 24 years';\n        /** A label for the next multi-year button (used by screen readers). */\n        this.nextMultiYearLabel = 'Next 24 years';\n        /** A label for the 'switch to month view' button (used by screen readers). */\n        this.switchToMonthViewLabel = 'Choose date';\n        /** A label for the 'switch to year view' button (used by screen readers). */\n        this.switchToMultiYearViewLabel = 'Choose month and year';\n    }\n    /** Formats a range of years. */\n    formatYearRange(start, end) {\n        return `${start} \\u2013 ${end}`;\n    }\n}\nMatDatepickerIntl.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatDatepickerIntl, deps: [], target: i0.ɵɵFactoryTarget.Injectable });\nMatDatepickerIntl.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatDatepickerIntl, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatDatepickerIntl, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Counter used to generate unique IDs. */\nlet uniqueId = 0;\n/** Default header for MatCalendar */\nclass MatCalendarHeader {\n    constructor(_intl, calendar, _dateAdapter, _dateFormats, changeDetectorRef) {\n        this._intl = _intl;\n        this.calendar = calendar;\n        this._dateAdapter = _dateAdapter;\n        this._dateFormats = _dateFormats;\n        this._buttonDescriptionId = `mat-calendar-button-${uniqueId++}`;\n        this.calendar.stateChanges.subscribe(() => changeDetectorRef.markForCheck());\n    }\n    /** The label for the current calendar view. */\n    get periodButtonText() {\n        if (this.calendar.currentView == 'month') {\n            return this._dateAdapter\n                .format(this.calendar.activeDate, this._dateFormats.display.monthYearLabel)\n                .toLocaleUpperCase();\n        }\n        if (this.calendar.currentView == 'year') {\n            return this._dateAdapter.getYearName(this.calendar.activeDate);\n        }\n        // The offset from the active year to the \"slot\" for the starting year is the\n        // *actual* first rendered year in the multi-year view, and the last year is\n        // just yearsPerPage - 1 away.\n        const activeYear = this._dateAdapter.getYear(this.calendar.activeDate);\n        const minYearOfPage = activeYear -\n            getActiveOffset(this._dateAdapter, this.calendar.activeDate, this.calendar.minDate, this.calendar.maxDate);\n        const maxYearOfPage = minYearOfPage + yearsPerPage - 1;\n        const minYearName = this._dateAdapter.getYearName(this._dateAdapter.createDate(minYearOfPage, 0, 1));\n        const maxYearName = this._dateAdapter.getYearName(this._dateAdapter.createDate(maxYearOfPage, 0, 1));\n        return this._intl.formatYearRange(minYearName, maxYearName);\n    }\n    get periodButtonLabel() {\n        return this.calendar.currentView == 'month'\n            ? this._intl.switchToMultiYearViewLabel\n            : this._intl.switchToMonthViewLabel;\n    }\n    /** The label for the previous button. */\n    get prevButtonLabel() {\n        return {\n            'month': this._intl.prevMonthLabel,\n            'year': this._intl.prevYearLabel,\n            'multi-year': this._intl.prevMultiYearLabel,\n        }[this.calendar.currentView];\n    }\n    /** The label for the next button. */\n    get nextButtonLabel() {\n        return {\n            'month': this._intl.nextMonthLabel,\n            'year': this._intl.nextYearLabel,\n            'multi-year': this._intl.nextMultiYearLabel,\n        }[this.calendar.currentView];\n    }\n    /** Handles user clicks on the period label. */\n    currentPeriodClicked() {\n        this.calendar.currentView = this.calendar.currentView == 'month' ? 'multi-year' : 'month';\n    }\n    /** Handles user clicks on the previous button. */\n    previousClicked() {\n        this.calendar.activeDate =\n            this.calendar.currentView == 'month'\n                ? this._dateAdapter.addCalendarMonths(this.calendar.activeDate, -1)\n                : this._dateAdapter.addCalendarYears(this.calendar.activeDate, this.calendar.currentView == 'year' ? -1 : -yearsPerPage);\n    }\n    /** Handles user clicks on the next button. */\n    nextClicked() {\n        this.calendar.activeDate =\n            this.calendar.currentView == 'month'\n                ? this._dateAdapter.addCalendarMonths(this.calendar.activeDate, 1)\n                : this._dateAdapter.addCalendarYears(this.calendar.activeDate, this.calendar.currentView == 'year' ? 1 : yearsPerPage);\n    }\n    /** Whether the previous period button is enabled. */\n    previousEnabled() {\n        if (!this.calendar.minDate) {\n            return true;\n        }\n        return (!this.calendar.minDate || !this._isSameView(this.calendar.activeDate, this.calendar.minDate));\n    }\n    /** Whether the next period button is enabled. */\n    nextEnabled() {\n        return (!this.calendar.maxDate || !this._isSameView(this.calendar.activeDate, this.calendar.maxDate));\n    }\n    /** Whether the two dates represent the same view in the current view mode (month or year). */\n    _isSameView(date1, date2) {\n        if (this.calendar.currentView == 'month') {\n            return (this._dateAdapter.getYear(date1) == this._dateAdapter.getYear(date2) &&\n                this._dateAdapter.getMonth(date1) == this._dateAdapter.getMonth(date2));\n        }\n        if (this.calendar.currentView == 'year') {\n            return this._dateAdapter.getYear(date1) == this._dateAdapter.getYear(date2);\n        }\n        // Otherwise we are in 'multi-year' view.\n        return isSameMultiYearView(this._dateAdapter, date1, date2, this.calendar.minDate, this.calendar.maxDate);\n    }\n}\nMatCalendarHeader.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatCalendarHeader, deps: [{ token: MatDatepickerIntl }, { token: forwardRef(() => MatCalendar) }, { token: i1$1.DateAdapter, optional: true }, { token: MAT_DATE_FORMATS, optional: true }, { token: i0.ChangeDetectorRef }], target: i0.ɵɵFactoryTarget.Component });\nMatCalendarHeader.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: MatCalendarHeader, selector: \"mat-calendar-header\", exportAs: [\"matCalendarHeader\"], ngImport: i0, template: \"<div class=\\\"mat-calendar-header\\\">\\n  <div class=\\\"mat-calendar-controls\\\">\\n    <button mat-button type=\\\"button\\\" class=\\\"mat-calendar-period-button\\\"\\n            (click)=\\\"currentPeriodClicked()\\\" [attr.aria-label]=\\\"periodButtonLabel\\\"\\n            [attr.aria-describedby]=\\\"_buttonDescriptionId\\\"\\n            cdkAriaLive=\\\"polite\\\">\\n      <span [attr.id]=\\\"_buttonDescriptionId\\\">{{periodButtonText}}</span>\\n      <svg class=\\\"mat-calendar-arrow\\\" [class.mat-calendar-invert]=\\\"calendar.currentView !== 'month'\\\"\\n           viewBox=\\\"0 0 10 5\\\" focusable=\\\"false\\\">\\n           <polygon points=\\\"0,0 5,5 10,0\\\"/>\\n      </svg>\\n    </button>\\n\\n    <div class=\\\"mat-calendar-spacer\\\"></div>\\n\\n    <ng-content></ng-content>\\n\\n    <button mat-icon-button type=\\\"button\\\" class=\\\"mat-calendar-previous-button\\\"\\n            [disabled]=\\\"!previousEnabled()\\\" (click)=\\\"previousClicked()\\\"\\n            [attr.aria-label]=\\\"prevButtonLabel\\\">\\n    </button>\\n\\n    <button mat-icon-button type=\\\"button\\\" class=\\\"mat-calendar-next-button\\\"\\n            [disabled]=\\\"!nextEnabled()\\\" (click)=\\\"nextClicked()\\\"\\n            [attr.aria-label]=\\\"nextButtonLabel\\\">\\n    </button>\\n  </div>\\n</div>\\n\", components: [{ type: i3.MatButton, selector: \"button[mat-button], button[mat-raised-button], button[mat-icon-button],             button[mat-fab], button[mat-mini-fab], button[mat-stroked-button],             button[mat-flat-button]\", inputs: [\"disabled\", \"disableRipple\", \"color\"], exportAs: [\"matButton\"] }], directives: [{ type: i4.CdkAriaLive, selector: \"[cdkAriaLive]\", inputs: [\"cdkAriaLive\"], exportAs: [\"cdkAriaLive\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatCalendarHeader, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-calendar-header', exportAs: 'matCalendarHeader', encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, template: \"<div class=\\\"mat-calendar-header\\\">\\n  <div class=\\\"mat-calendar-controls\\\">\\n    <button mat-button type=\\\"button\\\" class=\\\"mat-calendar-period-button\\\"\\n            (click)=\\\"currentPeriodClicked()\\\" [attr.aria-label]=\\\"periodButtonLabel\\\"\\n            [attr.aria-describedby]=\\\"_buttonDescriptionId\\\"\\n            cdkAriaLive=\\\"polite\\\">\\n      <span [attr.id]=\\\"_buttonDescriptionId\\\">{{periodButtonText}}</span>\\n      <svg class=\\\"mat-calendar-arrow\\\" [class.mat-calendar-invert]=\\\"calendar.currentView !== 'month'\\\"\\n           viewBox=\\\"0 0 10 5\\\" focusable=\\\"false\\\">\\n           <polygon points=\\\"0,0 5,5 10,0\\\"/>\\n      </svg>\\n    </button>\\n\\n    <div class=\\\"mat-calendar-spacer\\\"></div>\\n\\n    <ng-content></ng-content>\\n\\n    <button mat-icon-button type=\\\"button\\\" class=\\\"mat-calendar-previous-button\\\"\\n            [disabled]=\\\"!previousEnabled()\\\" (click)=\\\"previousClicked()\\\"\\n            [attr.aria-label]=\\\"prevButtonLabel\\\">\\n    </button>\\n\\n    <button mat-icon-button type=\\\"button\\\" class=\\\"mat-calendar-next-button\\\"\\n            [disabled]=\\\"!nextEnabled()\\\" (click)=\\\"nextClicked()\\\"\\n            [attr.aria-label]=\\\"nextButtonLabel\\\">\\n    </button>\\n  </div>\\n</div>\\n\" }]\n        }], ctorParameters: function () {\n        return [{ type: MatDatepickerIntl }, { type: MatCalendar, decorators: [{\n                        type: Inject,\n                        args: [forwardRef(() => MatCalendar)]\n                    }] }, { type: i1$1.DateAdapter, decorators: [{\n                        type: Optional\n                    }] }, { type: undefined, decorators: [{\n                        type: Optional\n                    }, {\n                        type: Inject,\n                        args: [MAT_DATE_FORMATS]\n                    }] }, { type: i0.ChangeDetectorRef }];\n    } });\n/** A calendar that is used as part of the datepicker. */\nclass MatCalendar {\n    constructor(_intl, _dateAdapter, _dateFormats, _changeDetectorRef) {\n        this._dateAdapter = _dateAdapter;\n        this._dateFormats = _dateFormats;\n        this._changeDetectorRef = _changeDetectorRef;\n        /**\n         * Used for scheduling that focus should be moved to the active cell on the next tick.\n         * We need to schedule it, rather than do it immediately, because we have to wait\n         * for Angular to re-evaluate the view children.\n         */\n        this._moveFocusOnNextTick = false;\n        /** Whether the calendar should be started in month or year view. */\n        this.startView = 'month';\n        /** Emits when the currently selected date changes. */\n        this.selectedChange = new EventEmitter();\n        /**\n         * Emits the year chosen in multiyear view.\n         * This doesn't imply a change on the selected date.\n         */\n        this.yearSelected = new EventEmitter();\n        /**\n         * Emits the month chosen in year view.\n         * This doesn't imply a change on the selected date.\n         */\n        this.monthSelected = new EventEmitter();\n        /**\n         * Emits when the current view changes.\n         */\n        this.viewChanged = new EventEmitter(true);\n        /** Emits when any date is selected. */\n        this._userSelection = new EventEmitter();\n        /**\n         * Emits whenever there is a state change that the header may need to respond to.\n         */\n        this.stateChanges = new Subject();\n        if (typeof ngDevMode === 'undefined' || ngDevMode) {\n            if (!this._dateAdapter) {\n                throw createMissingDateImplError('DateAdapter');\n            }\n            if (!this._dateFormats) {\n                throw createMissingDateImplError('MAT_DATE_FORMATS');\n            }\n        }\n        this._intlChanges = _intl.changes.subscribe(() => {\n            _changeDetectorRef.markForCheck();\n            this.stateChanges.next();\n        });\n    }\n    /** A date representing the period (month or year) to start the calendar in. */\n    get startAt() {\n        return this._startAt;\n    }\n    set startAt(value) {\n        this._startAt = this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(value));\n    }\n    /** The currently selected date. */\n    get selected() {\n        return this._selected;\n    }\n    set selected(value) {\n        if (value instanceof DateRange) {\n            this._selected = value;\n        }\n        else {\n            this._selected = this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(value));\n        }\n    }\n    /** The minimum selectable date. */\n    get minDate() {\n        return this._minDate;\n    }\n    set minDate(value) {\n        this._minDate = this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(value));\n    }\n    /** The maximum selectable date. */\n    get maxDate() {\n        return this._maxDate;\n    }\n    set maxDate(value) {\n        this._maxDate = this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(value));\n    }\n    /**\n     * The current active date. This determines which time period is shown and which date is\n     * highlighted when using keyboard navigation.\n     */\n    get activeDate() {\n        return this._clampedActiveDate;\n    }\n    set activeDate(value) {\n        this._clampedActiveDate = this._dateAdapter.clampDate(value, this.minDate, this.maxDate);\n        this.stateChanges.next();\n        this._changeDetectorRef.markForCheck();\n    }\n    /** Whether the calendar is in month view. */\n    get currentView() {\n        return this._currentView;\n    }\n    set currentView(value) {\n        const viewChangedResult = this._currentView !== value ? value : null;\n        this._currentView = value;\n        this._moveFocusOnNextTick = true;\n        this._changeDetectorRef.markForCheck();\n        if (viewChangedResult) {\n            this.viewChanged.emit(viewChangedResult);\n        }\n    }\n    ngAfterContentInit() {\n        this._calendarHeaderPortal = new ComponentPortal(this.headerComponent || MatCalendarHeader);\n        this.activeDate = this.startAt || this._dateAdapter.today();\n        // Assign to the private property since we don't want to move focus on init.\n        this._currentView = this.startView;\n    }\n    ngAfterViewChecked() {\n        if (this._moveFocusOnNextTick) {\n            this._moveFocusOnNextTick = false;\n            this.focusActiveCell();\n        }\n    }\n    ngOnDestroy() {\n        this._intlChanges.unsubscribe();\n        this.stateChanges.complete();\n    }\n    ngOnChanges(changes) {\n        const change = changes['minDate'] || changes['maxDate'] || changes['dateFilter'];\n        if (change && !change.firstChange) {\n            const view = this._getCurrentViewComponent();\n            if (view) {\n                // We need to `detectChanges` manually here, because the `minDate`, `maxDate` etc. are\n                // passed down to the view via data bindings which won't be up-to-date when we call `_init`.\n                this._changeDetectorRef.detectChanges();\n                view._init();\n            }\n        }\n        this.stateChanges.next();\n    }\n    /** Focuses the active date. */\n    focusActiveCell() {\n        this._getCurrentViewComponent()._focusActiveCell(false);\n    }\n    /** Updates today's date after an update of the active date */\n    updateTodaysDate() {\n        this._getCurrentViewComponent()._init();\n    }\n    /** Handles date selection in the month view. */\n    _dateSelected(event) {\n        const date = event.value;\n        if (this.selected instanceof DateRange ||\n            (date && !this._dateAdapter.sameDate(date, this.selected))) {\n            this.selectedChange.emit(date);\n        }\n        this._userSelection.emit(event);\n    }\n    /** Handles year selection in the multiyear view. */\n    _yearSelectedInMultiYearView(normalizedYear) {\n        this.yearSelected.emit(normalizedYear);\n    }\n    /** Handles month selection in the year view. */\n    _monthSelectedInYearView(normalizedMonth) {\n        this.monthSelected.emit(normalizedMonth);\n    }\n    /** Handles year/month selection in the multi-year/year views. */\n    _goToDateInView(date, view) {\n        this.activeDate = date;\n        this.currentView = view;\n    }\n    /** Returns the component instance that corresponds to the current calendar view. */\n    _getCurrentViewComponent() {\n        // The return type is explicitly written as a union to ensure that the Closure compiler does\n        // not optimize calls to _init(). Without the explict return type, TypeScript narrows it to\n        // only the first component type. See https://github.com/angular/components/issues/22996.\n        return this.monthView || this.yearView || this.multiYearView;\n    }\n}\nMatCalendar.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatCalendar, deps: [{ token: MatDatepickerIntl }, { token: i1$1.DateAdapter, optional: true }, { token: MAT_DATE_FORMATS, optional: true }, { token: i0.ChangeDetectorRef }], target: i0.ɵɵFactoryTarget.Component });\nMatCalendar.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: MatCalendar, selector: \"mat-calendar\", inputs: { headerComponent: \"headerComponent\", startAt: \"startAt\", startView: \"startView\", selected: \"selected\", minDate: \"minDate\", maxDate: \"maxDate\", dateFilter: \"dateFilter\", dateClass: \"dateClass\", comparisonStart: \"comparisonStart\", comparisonEnd: \"comparisonEnd\" }, outputs: { selectedChange: \"selectedChange\", yearSelected: \"yearSelected\", monthSelected: \"monthSelected\", viewChanged: \"viewChanged\", _userSelection: \"_userSelection\" }, host: { classAttribute: \"mat-calendar\" }, providers: [MAT_SINGLE_DATE_SELECTION_MODEL_PROVIDER], viewQueries: [{ propertyName: \"monthView\", first: true, predicate: MatMonthView, descendants: true }, { propertyName: \"yearView\", first: true, predicate: MatYearView, descendants: true }, { propertyName: \"multiYearView\", first: true, predicate: MatMultiYearView, descendants: true }], exportAs: [\"matCalendar\"], usesOnChanges: true, ngImport: i0, template: \"<ng-template [cdkPortalOutlet]=\\\"_calendarHeaderPortal\\\"></ng-template>\\n\\n<div class=\\\"mat-calendar-content\\\" [ngSwitch]=\\\"currentView\\\" cdkMonitorSubtreeFocus tabindex=\\\"-1\\\">\\n  <mat-month-view\\n      *ngSwitchCase=\\\"'month'\\\"\\n      [(activeDate)]=\\\"activeDate\\\"\\n      [selected]=\\\"selected\\\"\\n      [dateFilter]=\\\"dateFilter\\\"\\n      [maxDate]=\\\"maxDate\\\"\\n      [minDate]=\\\"minDate\\\"\\n      [dateClass]=\\\"dateClass\\\"\\n      [comparisonStart]=\\\"comparisonStart\\\"\\n      [comparisonEnd]=\\\"comparisonEnd\\\"\\n      (_userSelection)=\\\"_dateSelected($event)\\\">\\n  </mat-month-view>\\n\\n  <mat-year-view\\n      *ngSwitchCase=\\\"'year'\\\"\\n      [(activeDate)]=\\\"activeDate\\\"\\n      [selected]=\\\"selected\\\"\\n      [dateFilter]=\\\"dateFilter\\\"\\n      [maxDate]=\\\"maxDate\\\"\\n      [minDate]=\\\"minDate\\\"\\n      [dateClass]=\\\"dateClass\\\"\\n      (monthSelected)=\\\"_monthSelectedInYearView($event)\\\"\\n      (selectedChange)=\\\"_goToDateInView($event, 'month')\\\">\\n  </mat-year-view>\\n\\n  <mat-multi-year-view\\n      *ngSwitchCase=\\\"'multi-year'\\\"\\n      [(activeDate)]=\\\"activeDate\\\"\\n      [selected]=\\\"selected\\\"\\n      [dateFilter]=\\\"dateFilter\\\"\\n      [maxDate]=\\\"maxDate\\\"\\n      [minDate]=\\\"minDate\\\"\\n      [dateClass]=\\\"dateClass\\\"\\n      (yearSelected)=\\\"_yearSelectedInMultiYearView($event)\\\"\\n      (selectedChange)=\\\"_goToDateInView($event, 'year')\\\">\\n  </mat-multi-year-view>\\n</div>\\n\", styles: [\".mat-calendar{display:block}.mat-calendar-header{padding:8px 8px 0 8px}.mat-calendar-content{padding:0 8px 8px 8px;outline:none}.mat-calendar-controls{display:flex;margin:5% calc(4.7142857143% - 16px)}.mat-calendar-controls .mat-icon-button:hover .mat-button-focus-overlay{opacity:.04}.mat-calendar-spacer{flex:1 1 auto}.mat-calendar-period-button{min-width:0}.mat-calendar-arrow{display:inline-block;width:10px;height:5px;margin:0 0 0 5px;vertical-align:middle}.mat-calendar-arrow.mat-calendar-invert{transform:rotate(180deg)}[dir=rtl] .mat-calendar-arrow{margin:0 5px 0 0}.cdk-high-contrast-active .mat-calendar-arrow{fill:CanvasText}.mat-calendar-previous-button,.mat-calendar-next-button{position:relative}.mat-calendar-previous-button::after,.mat-calendar-next-button::after{top:0;left:0;right:0;bottom:0;position:absolute;content:\\\"\\\";margin:15.5px;border:0 solid currentColor;border-top-width:2px}[dir=rtl] .mat-calendar-previous-button,[dir=rtl] .mat-calendar-next-button{transform:rotate(180deg)}.mat-calendar-previous-button::after{border-left-width:2px;transform:translateX(2px) rotate(-45deg)}.mat-calendar-next-button::after{border-right-width:2px;transform:translateX(-2px) rotate(45deg)}.mat-calendar-table{border-spacing:0;border-collapse:collapse;width:100%}.mat-calendar-table-header th{text-align:center;padding:0 0 8px 0}.mat-calendar-table-header-divider{position:relative;height:1px}.mat-calendar-table-header-divider::after{content:\\\"\\\";position:absolute;top:0;left:-8px;right:-8px;height:1px}.mat-calendar-abbr{text-decoration:none}\\n\"], components: [{ type: MatMonthView, selector: \"mat-month-view\", inputs: [\"activeDate\", \"selected\", \"minDate\", \"maxDate\", \"dateFilter\", \"dateClass\", \"comparisonStart\", \"comparisonEnd\"], outputs: [\"selectedChange\", \"_userSelection\", \"activeDateChange\"], exportAs: [\"matMonthView\"] }, { type: MatYearView, selector: \"mat-year-view\", inputs: [\"activeDate\", \"selected\", \"minDate\", \"maxDate\", \"dateFilter\", \"dateClass\"], outputs: [\"selectedChange\", \"monthSelected\", \"activeDateChange\"], exportAs: [\"matYearView\"] }, { type: MatMultiYearView, selector: \"mat-multi-year-view\", inputs: [\"activeDate\", \"selected\", \"minDate\", \"maxDate\", \"dateFilter\", \"dateClass\"], outputs: [\"selectedChange\", \"yearSelected\", \"activeDateChange\"], exportAs: [\"matMultiYearView\"] }], directives: [{ type: i8.CdkPortalOutlet, selector: \"[cdkPortalOutlet]\", inputs: [\"cdkPortalOutlet\"], outputs: [\"attached\"], exportAs: [\"cdkPortalOutlet\"] }, { type: i4.CdkMonitorFocus, selector: \"[cdkMonitorElementFocus], [cdkMonitorSubtreeFocus]\", outputs: [\"cdkFocusChange\"] }, { type: i1.NgSwitch, selector: \"[ngSwitch]\", inputs: [\"ngSwitch\"] }, { type: i1.NgSwitchCase, selector: \"[ngSwitchCase]\", inputs: [\"ngSwitchCase\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatCalendar, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-calendar', host: {\n                        'class': 'mat-calendar',\n                    }, exportAs: 'matCalendar', encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, providers: [MAT_SINGLE_DATE_SELECTION_MODEL_PROVIDER], template: \"<ng-template [cdkPortalOutlet]=\\\"_calendarHeaderPortal\\\"></ng-template>\\n\\n<div class=\\\"mat-calendar-content\\\" [ngSwitch]=\\\"currentView\\\" cdkMonitorSubtreeFocus tabindex=\\\"-1\\\">\\n  <mat-month-view\\n      *ngSwitchCase=\\\"'month'\\\"\\n      [(activeDate)]=\\\"activeDate\\\"\\n      [selected]=\\\"selected\\\"\\n      [dateFilter]=\\\"dateFilter\\\"\\n      [maxDate]=\\\"maxDate\\\"\\n      [minDate]=\\\"minDate\\\"\\n      [dateClass]=\\\"dateClass\\\"\\n      [comparisonStart]=\\\"comparisonStart\\\"\\n      [comparisonEnd]=\\\"comparisonEnd\\\"\\n      (_userSelection)=\\\"_dateSelected($event)\\\">\\n  </mat-month-view>\\n\\n  <mat-year-view\\n      *ngSwitchCase=\\\"'year'\\\"\\n      [(activeDate)]=\\\"activeDate\\\"\\n      [selected]=\\\"selected\\\"\\n      [dateFilter]=\\\"dateFilter\\\"\\n      [maxDate]=\\\"maxDate\\\"\\n      [minDate]=\\\"minDate\\\"\\n      [dateClass]=\\\"dateClass\\\"\\n      (monthSelected)=\\\"_monthSelectedInYearView($event)\\\"\\n      (selectedChange)=\\\"_goToDateInView($event, 'month')\\\">\\n  </mat-year-view>\\n\\n  <mat-multi-year-view\\n      *ngSwitchCase=\\\"'multi-year'\\\"\\n      [(activeDate)]=\\\"activeDate\\\"\\n      [selected]=\\\"selected\\\"\\n      [dateFilter]=\\\"dateFilter\\\"\\n      [maxDate]=\\\"maxDate\\\"\\n      [minDate]=\\\"minDate\\\"\\n      [dateClass]=\\\"dateClass\\\"\\n      (yearSelected)=\\\"_yearSelectedInMultiYearView($event)\\\"\\n      (selectedChange)=\\\"_goToDateInView($event, 'year')\\\">\\n  </mat-multi-year-view>\\n</div>\\n\", styles: [\".mat-calendar{display:block}.mat-calendar-header{padding:8px 8px 0 8px}.mat-calendar-content{padding:0 8px 8px 8px;outline:none}.mat-calendar-controls{display:flex;margin:5% calc(4.7142857143% - 16px)}.mat-calendar-controls .mat-icon-button:hover .mat-button-focus-overlay{opacity:.04}.mat-calendar-spacer{flex:1 1 auto}.mat-calendar-period-button{min-width:0}.mat-calendar-arrow{display:inline-block;width:10px;height:5px;margin:0 0 0 5px;vertical-align:middle}.mat-calendar-arrow.mat-calendar-invert{transform:rotate(180deg)}[dir=rtl] .mat-calendar-arrow{margin:0 5px 0 0}.cdk-high-contrast-active .mat-calendar-arrow{fill:CanvasText}.mat-calendar-previous-button,.mat-calendar-next-button{position:relative}.mat-calendar-previous-button::after,.mat-calendar-next-button::after{top:0;left:0;right:0;bottom:0;position:absolute;content:\\\"\\\";margin:15.5px;border:0 solid currentColor;border-top-width:2px}[dir=rtl] .mat-calendar-previous-button,[dir=rtl] .mat-calendar-next-button{transform:rotate(180deg)}.mat-calendar-previous-button::after{border-left-width:2px;transform:translateX(2px) rotate(-45deg)}.mat-calendar-next-button::after{border-right-width:2px;transform:translateX(-2px) rotate(45deg)}.mat-calendar-table{border-spacing:0;border-collapse:collapse;width:100%}.mat-calendar-table-header th{text-align:center;padding:0 0 8px 0}.mat-calendar-table-header-divider{position:relative;height:1px}.mat-calendar-table-header-divider::after{content:\\\"\\\";position:absolute;top:0;left:-8px;right:-8px;height:1px}.mat-calendar-abbr{text-decoration:none}\\n\"] }]\n        }], ctorParameters: function () {\n        return [{ type: MatDatepickerIntl }, { type: i1$1.DateAdapter, decorators: [{\n                        type: Optional\n                    }] }, { type: undefined, decorators: [{\n                        type: Optional\n                    }, {\n                        type: Inject,\n                        args: [MAT_DATE_FORMATS]\n                    }] }, { type: i0.ChangeDetectorRef }];\n    }, propDecorators: { headerComponent: [{\n                type: Input\n            }], startAt: [{\n                type: Input\n            }], startView: [{\n                type: Input\n            }], selected: [{\n                type: Input\n            }], minDate: [{\n                type: Input\n            }], maxDate: [{\n                type: Input\n            }], dateFilter: [{\n                type: Input\n            }], dateClass: [{\n                type: Input\n            }], comparisonStart: [{\n                type: Input\n            }], comparisonEnd: [{\n                type: Input\n            }], selectedChange: [{\n                type: Output\n            }], yearSelected: [{\n                type: Output\n            }], monthSelected: [{\n                type: Output\n            }], viewChanged: [{\n                type: Output\n            }], _userSelection: [{\n                type: Output\n            }], monthView: [{\n                type: ViewChild,\n                args: [MatMonthView]\n            }], yearView: [{\n                type: ViewChild,\n                args: [MatYearView]\n            }], multiYearView: [{\n                type: ViewChild,\n                args: [MatMultiYearView]\n            }] } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Animations used by the Material datepicker.\n * @docs-private\n */\nconst matDatepickerAnimations = {\n    /** Transforms the height of the datepicker's calendar. */\n    transformPanel: trigger('transformPanel', [\n        transition('void => enter-dropdown', animate('120ms cubic-bezier(0, 0, 0.2, 1)', keyframes([\n            style({ opacity: 0, transform: 'scale(1, 0.8)' }),\n            style({ opacity: 1, transform: 'scale(1, 1)' }),\n        ]))),\n        transition('void => enter-dialog', animate('150ms cubic-bezier(0, 0, 0.2, 1)', keyframes([\n            style({ opacity: 0, transform: 'scale(0.7)' }),\n            style({ transform: 'none', opacity: 1 }),\n        ]))),\n        transition('* => void', animate('100ms linear', style({ opacity: 0 }))),\n    ]),\n    /** Fades in the content of the calendar. */\n    fadeInCalendar: trigger('fadeInCalendar', [\n        state('void', style({ opacity: 0 })),\n        state('enter', style({ opacity: 1 })),\n        // TODO(crisbeto): this animation should be removed since it isn't quite on spec, but we\n        // need to keep it until #12440 gets in, otherwise the exit animation will look glitchy.\n        transition('void => *', animate('120ms 100ms cubic-bezier(0.55, 0, 0.55, 0.2)')),\n    ]),\n};\n\n/** Used to generate a unique ID for each datepicker instance. */\nlet datepickerUid = 0;\n/** Injection token that determines the scroll handling while the calendar is open. */\nconst MAT_DATEPICKER_SCROLL_STRATEGY = new InjectionToken('mat-datepicker-scroll-strategy');\n/** @docs-private */\nfunction MAT_DATEPICKER_SCROLL_STRATEGY_FACTORY(overlay) {\n    return () => overlay.scrollStrategies.reposition();\n}\n/** @docs-private */\nconst MAT_DATEPICKER_SCROLL_STRATEGY_FACTORY_PROVIDER = {\n    provide: MAT_DATEPICKER_SCROLL_STRATEGY,\n    deps: [Overlay],\n    useFactory: MAT_DATEPICKER_SCROLL_STRATEGY_FACTORY,\n};\n// Boilerplate for applying mixins to MatDatepickerContent.\n/** @docs-private */\nconst _MatDatepickerContentBase = mixinColor(class {\n    constructor(_elementRef) {\n        this._elementRef = _elementRef;\n    }\n});\n/**\n * Component used as the content for the datepicker overlay. We use this instead of using\n * MatCalendar directly as the content so we can control the initial focus. This also gives us a\n * place to put additional features of the overlay that are not part of the calendar itself in the\n * future. (e.g. confirmation buttons).\n * @docs-private\n */\nclass MatDatepickerContent extends _MatDatepickerContentBase {\n    constructor(elementRef, _changeDetectorRef, _globalModel, _dateAdapter, _rangeSelectionStrategy, intl) {\n        super(elementRef);\n        this._changeDetectorRef = _changeDetectorRef;\n        this._globalModel = _globalModel;\n        this._dateAdapter = _dateAdapter;\n        this._rangeSelectionStrategy = _rangeSelectionStrategy;\n        this._subscriptions = new Subscription();\n        /** Emits when an animation has finished. */\n        this._animationDone = new Subject();\n        /** Portal with projected action buttons. */\n        this._actionsPortal = null;\n        this._closeButtonText = intl.closeCalendarLabel;\n    }\n    ngOnInit() {\n        // If we have actions, clone the model so that we have the ability to cancel the selection,\n        // otherwise update the global model directly. Note that we want to assign this as soon as\n        // possible, but `_actionsPortal` isn't available in the constructor so we do it in `ngOnInit`.\n        this._model = this._actionsPortal ? this._globalModel.clone() : this._globalModel;\n        this._animationState = this.datepicker.touchUi ? 'enter-dialog' : 'enter-dropdown';\n    }\n    ngAfterViewInit() {\n        this._subscriptions.add(this.datepicker.stateChanges.subscribe(() => {\n            this._changeDetectorRef.markForCheck();\n        }));\n        this._calendar.focusActiveCell();\n    }\n    ngOnDestroy() {\n        this._subscriptions.unsubscribe();\n        this._animationDone.complete();\n    }\n    _handleUserSelection(event) {\n        const selection = this._model.selection;\n        const value = event.value;\n        const isRange = selection instanceof DateRange;\n        // If we're selecting a range and we have a selection strategy, always pass the value through\n        // there. Otherwise don't assign null values to the model, unless we're selecting a range.\n        // A null value when picking a range means that the user cancelled the selection (e.g. by\n        // pressing escape), whereas when selecting a single value it means that the value didn't\n        // change. This isn't very intuitive, but it's here for backwards-compatibility.\n        if (isRange && this._rangeSelectionStrategy) {\n            const newSelection = this._rangeSelectionStrategy.selectionFinished(value, selection, event.event);\n            this._model.updateSelection(newSelection, this);\n        }\n        else if (value &&\n            (isRange || !this._dateAdapter.sameDate(value, selection))) {\n            this._model.add(value);\n        }\n        // Delegate closing the overlay to the actions.\n        if ((!this._model || this._model.isComplete()) && !this._actionsPortal) {\n            this.datepicker.close();\n        }\n    }\n    _startExitAnimation() {\n        this._animationState = 'void';\n        this._changeDetectorRef.markForCheck();\n    }\n    _getSelected() {\n        return this._model.selection;\n    }\n    /** Applies the current pending selection to the global model. */\n    _applyPendingSelection() {\n        if (this._model !== this._globalModel) {\n            this._globalModel.updateSelection(this._model.selection, this);\n        }\n    }\n}\nMatDatepickerContent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatDatepickerContent, deps: [{ token: i0.ElementRef }, { token: i0.ChangeDetectorRef }, { token: MatDateSelectionModel }, { token: i1$1.DateAdapter }, { token: MAT_DATE_RANGE_SELECTION_STRATEGY, optional: true }, { token: MatDatepickerIntl }], target: i0.ɵɵFactoryTarget.Component });\nMatDatepickerContent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: MatDatepickerContent, selector: \"mat-datepicker-content\", inputs: { color: \"color\" }, host: { listeners: { \"@transformPanel.done\": \"_animationDone.next()\" }, properties: { \"@transformPanel\": \"_animationState\", \"class.mat-datepicker-content-touch\": \"datepicker.touchUi\" }, classAttribute: \"mat-datepicker-content\" }, viewQueries: [{ propertyName: \"_calendar\", first: true, predicate: MatCalendar, descendants: true }], exportAs: [\"matDatepickerContent\"], usesInheritance: true, ngImport: i0, template: \"<div\\n  cdkTrapFocus\\n  class=\\\"mat-datepicker-content-container\\\"\\n  [class.mat-datepicker-content-container-with-actions]=\\\"_actionsPortal\\\">\\n  <mat-calendar\\n    [id]=\\\"datepicker.id\\\"\\n    [ngClass]=\\\"datepicker.panelClass\\\"\\n    [startAt]=\\\"datepicker.startAt\\\"\\n    [startView]=\\\"datepicker.startView\\\"\\n    [minDate]=\\\"datepicker._getMinDate()\\\"\\n    [maxDate]=\\\"datepicker._getMaxDate()\\\"\\n    [dateFilter]=\\\"datepicker._getDateFilter()\\\"\\n    [headerComponent]=\\\"datepicker.calendarHeaderComponent\\\"\\n    [selected]=\\\"_getSelected()\\\"\\n    [dateClass]=\\\"datepicker.dateClass\\\"\\n    [comparisonStart]=\\\"comparisonStart\\\"\\n    [comparisonEnd]=\\\"comparisonEnd\\\"\\n    [@fadeInCalendar]=\\\"'enter'\\\"\\n    (yearSelected)=\\\"datepicker._selectYear($event)\\\"\\n    (monthSelected)=\\\"datepicker._selectMonth($event)\\\"\\n    (viewChanged)=\\\"datepicker._viewChanged($event)\\\"\\n    (_userSelection)=\\\"_handleUserSelection($event)\\\"></mat-calendar>\\n\\n  <ng-template [cdkPortalOutlet]=\\\"_actionsPortal\\\"></ng-template>\\n\\n  <!-- Invisible close button for screen reader users. -->\\n  <button\\n    type=\\\"button\\\"\\n    mat-raised-button\\n    [color]=\\\"color || 'primary'\\\"\\n    class=\\\"mat-datepicker-close-button\\\"\\n    [class.cdk-visually-hidden]=\\\"!_closeButtonFocused\\\"\\n    (focus)=\\\"_closeButtonFocused = true\\\"\\n    (blur)=\\\"_closeButtonFocused = false\\\"\\n    (click)=\\\"datepicker.close()\\\">{{ _closeButtonText }}</button>\\n</div>\\n\", styles: [\".mat-datepicker-content{display:block;border-radius:4px}.mat-datepicker-content .mat-calendar{width:296px;height:354px}.mat-datepicker-content .mat-datepicker-close-button{position:absolute;top:100%;left:0;margin-top:8px}.ng-animating .mat-datepicker-content .mat-datepicker-close-button{display:none}.mat-datepicker-content-container{display:flex;flex-direction:column;justify-content:space-between}.mat-datepicker-content-touch{display:block;max-height:80vh;position:relative;overflow:visible}.mat-datepicker-content-touch .mat-datepicker-content-container{min-height:312px;max-height:788px;min-width:250px;max-width:750px}.mat-datepicker-content-touch .mat-calendar{width:100%;height:auto}@media all and (orientation: landscape){.mat-datepicker-content-touch .mat-datepicker-content-container{width:64vh;height:80vh}}@media all and (orientation: portrait){.mat-datepicker-content-touch .mat-datepicker-content-container{width:80vw;height:100vw}.mat-datepicker-content-touch .mat-datepicker-content-container-with-actions{height:115vw}}\\n\"], components: [{ type: MatCalendar, selector: \"mat-calendar\", inputs: [\"headerComponent\", \"startAt\", \"startView\", \"selected\", \"minDate\", \"maxDate\", \"dateFilter\", \"dateClass\", \"comparisonStart\", \"comparisonEnd\"], outputs: [\"selectedChange\", \"yearSelected\", \"monthSelected\", \"viewChanged\", \"_userSelection\"], exportAs: [\"matCalendar\"] }, { type: i3.MatButton, selector: \"button[mat-button], button[mat-raised-button], button[mat-icon-button],             button[mat-fab], button[mat-mini-fab], button[mat-stroked-button],             button[mat-flat-button]\", inputs: [\"disabled\", \"disableRipple\", \"color\"], exportAs: [\"matButton\"] }], directives: [{ type: i4.CdkTrapFocus, selector: \"[cdkTrapFocus]\", inputs: [\"cdkTrapFocus\", \"cdkTrapFocusAutoCapture\"], exportAs: [\"cdkTrapFocus\"] }, { type: i1.NgClass, selector: \"[ngClass]\", inputs: [\"class\", \"ngClass\"] }, { type: i8.CdkPortalOutlet, selector: \"[cdkPortalOutlet]\", inputs: [\"cdkPortalOutlet\"], outputs: [\"attached\"], exportAs: [\"cdkPortalOutlet\"] }], animations: [matDatepickerAnimations.transformPanel, matDatepickerAnimations.fadeInCalendar], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatDatepickerContent, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-datepicker-content', host: {\n                        'class': 'mat-datepicker-content',\n                        '[@transformPanel]': '_animationState',\n                        '(@transformPanel.done)': '_animationDone.next()',\n                        '[class.mat-datepicker-content-touch]': 'datepicker.touchUi',\n                    }, animations: [matDatepickerAnimations.transformPanel, matDatepickerAnimations.fadeInCalendar], exportAs: 'matDatepickerContent', encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, inputs: ['color'], template: \"<div\\n  cdkTrapFocus\\n  class=\\\"mat-datepicker-content-container\\\"\\n  [class.mat-datepicker-content-container-with-actions]=\\\"_actionsPortal\\\">\\n  <mat-calendar\\n    [id]=\\\"datepicker.id\\\"\\n    [ngClass]=\\\"datepicker.panelClass\\\"\\n    [startAt]=\\\"datepicker.startAt\\\"\\n    [startView]=\\\"datepicker.startView\\\"\\n    [minDate]=\\\"datepicker._getMinDate()\\\"\\n    [maxDate]=\\\"datepicker._getMaxDate()\\\"\\n    [dateFilter]=\\\"datepicker._getDateFilter()\\\"\\n    [headerComponent]=\\\"datepicker.calendarHeaderComponent\\\"\\n    [selected]=\\\"_getSelected()\\\"\\n    [dateClass]=\\\"datepicker.dateClass\\\"\\n    [comparisonStart]=\\\"comparisonStart\\\"\\n    [comparisonEnd]=\\\"comparisonEnd\\\"\\n    [@fadeInCalendar]=\\\"'enter'\\\"\\n    (yearSelected)=\\\"datepicker._selectYear($event)\\\"\\n    (monthSelected)=\\\"datepicker._selectMonth($event)\\\"\\n    (viewChanged)=\\\"datepicker._viewChanged($event)\\\"\\n    (_userSelection)=\\\"_handleUserSelection($event)\\\"></mat-calendar>\\n\\n  <ng-template [cdkPortalOutlet]=\\\"_actionsPortal\\\"></ng-template>\\n\\n  <!-- Invisible close button for screen reader users. -->\\n  <button\\n    type=\\\"button\\\"\\n    mat-raised-button\\n    [color]=\\\"color || 'primary'\\\"\\n    class=\\\"mat-datepicker-close-button\\\"\\n    [class.cdk-visually-hidden]=\\\"!_closeButtonFocused\\\"\\n    (focus)=\\\"_closeButtonFocused = true\\\"\\n    (blur)=\\\"_closeButtonFocused = false\\\"\\n    (click)=\\\"datepicker.close()\\\">{{ _closeButtonText }}</button>\\n</div>\\n\", styles: [\".mat-datepicker-content{display:block;border-radius:4px}.mat-datepicker-content .mat-calendar{width:296px;height:354px}.mat-datepicker-content .mat-datepicker-close-button{position:absolute;top:100%;left:0;margin-top:8px}.ng-animating .mat-datepicker-content .mat-datepicker-close-button{display:none}.mat-datepicker-content-container{display:flex;flex-direction:column;justify-content:space-between}.mat-datepicker-content-touch{display:block;max-height:80vh;position:relative;overflow:visible}.mat-datepicker-content-touch .mat-datepicker-content-container{min-height:312px;max-height:788px;min-width:250px;max-width:750px}.mat-datepicker-content-touch .mat-calendar{width:100%;height:auto}@media all and (orientation: landscape){.mat-datepicker-content-touch .mat-datepicker-content-container{width:64vh;height:80vh}}@media all and (orientation: portrait){.mat-datepicker-content-touch .mat-datepicker-content-container{width:80vw;height:100vw}.mat-datepicker-content-touch .mat-datepicker-content-container-with-actions{height:115vw}}\\n\"] }]\n        }], ctorParameters: function () {\n        return [{ type: i0.ElementRef }, { type: i0.ChangeDetectorRef }, { type: MatDateSelectionModel }, { type: i1$1.DateAdapter }, { type: undefined, decorators: [{\n                        type: Optional\n                    }, {\n                        type: Inject,\n                        args: [MAT_DATE_RANGE_SELECTION_STRATEGY]\n                    }] }, { type: MatDatepickerIntl }];\n    }, propDecorators: { _calendar: [{\n                type: ViewChild,\n                args: [MatCalendar]\n            }] } });\n/** Base class for a datepicker. */\nclass MatDatepickerBase {\n    constructor(_overlay, _ngZone, _viewContainerRef, scrollStrategy, _dateAdapter, _dir, _model) {\n        this._overlay = _overlay;\n        this._ngZone = _ngZone;\n        this._viewContainerRef = _viewContainerRef;\n        this._dateAdapter = _dateAdapter;\n        this._dir = _dir;\n        this._model = _model;\n        this._inputStateChanges = Subscription.EMPTY;\n        /** The view that the calendar should start in. */\n        this.startView = 'month';\n        this._touchUi = false;\n        /** Preferred position of the datepicker in the X axis. */\n        this.xPosition = 'start';\n        /** Preferred position of the datepicker in the Y axis. */\n        this.yPosition = 'below';\n        this._restoreFocus = true;\n        /**\n         * Emits selected year in multiyear view.\n         * This doesn't imply a change on the selected date.\n         */\n        this.yearSelected = new EventEmitter();\n        /**\n         * Emits selected month in year view.\n         * This doesn't imply a change on the selected date.\n         */\n        this.monthSelected = new EventEmitter();\n        /**\n         * Emits when the current view changes.\n         */\n        this.viewChanged = new EventEmitter(true);\n        /** Emits when the datepicker has been opened. */\n        this.openedStream = new EventEmitter();\n        /** Emits when the datepicker has been closed. */\n        this.closedStream = new EventEmitter();\n        this._opened = false;\n        /** The id for the datepicker calendar. */\n        this.id = `mat-datepicker-${datepickerUid++}`;\n        /** The element that was focused before the datepicker was opened. */\n        this._focusedElementBeforeOpen = null;\n        /** Unique class that will be added to the backdrop so that the test harnesses can look it up. */\n        this._backdropHarnessClass = `${this.id}-backdrop`;\n        /** Emits when the datepicker's state changes. */\n        this.stateChanges = new Subject();\n        if (!this._dateAdapter && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw createMissingDateImplError('DateAdapter');\n        }\n        this._scrollStrategy = scrollStrategy;\n    }\n    /** The date to open the calendar to initially. */\n    get startAt() {\n        // If an explicit startAt is set we start there, otherwise we start at whatever the currently\n        // selected value is.\n        return this._startAt || (this.datepickerInput ? this.datepickerInput.getStartValue() : null);\n    }\n    set startAt(value) {\n        this._startAt = this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(value));\n    }\n    /** Color palette to use on the datepicker's calendar. */\n    get color() {\n        return (this._color || (this.datepickerInput ? this.datepickerInput.getThemePalette() : undefined));\n    }\n    set color(value) {\n        this._color = value;\n    }\n    /**\n     * Whether the calendar UI is in touch mode. In touch mode the calendar opens in a dialog rather\n     * than a dropdown and elements have more padding to allow for bigger touch targets.\n     */\n    get touchUi() {\n        return this._touchUi;\n    }\n    set touchUi(value) {\n        this._touchUi = coerceBooleanProperty(value);\n    }\n    /** Whether the datepicker pop-up should be disabled. */\n    get disabled() {\n        return this._disabled === undefined && this.datepickerInput\n            ? this.datepickerInput.disabled\n            : !!this._disabled;\n    }\n    set disabled(value) {\n        const newValue = coerceBooleanProperty(value);\n        if (newValue !== this._disabled) {\n            this._disabled = newValue;\n            this.stateChanges.next(undefined);\n        }\n    }\n    /**\n     * Whether to restore focus to the previously-focused element when the calendar is closed.\n     * Note that automatic focus restoration is an accessibility feature and it is recommended that\n     * you provide your own equivalent, if you decide to turn it off.\n     */\n    get restoreFocus() {\n        return this._restoreFocus;\n    }\n    set restoreFocus(value) {\n        this._restoreFocus = coerceBooleanProperty(value);\n    }\n    /**\n     * Classes to be passed to the date picker panel.\n     * Supports string and string array values, similar to `ngClass`.\n     */\n    get panelClass() {\n        return this._panelClass;\n    }\n    set panelClass(value) {\n        this._panelClass = coerceStringArray(value);\n    }\n    /** Whether the calendar is open. */\n    get opened() {\n        return this._opened;\n    }\n    set opened(value) {\n        coerceBooleanProperty(value) ? this.open() : this.close();\n    }\n    /** The minimum selectable date. */\n    _getMinDate() {\n        return this.datepickerInput && this.datepickerInput.min;\n    }\n    /** The maximum selectable date. */\n    _getMaxDate() {\n        return this.datepickerInput && this.datepickerInput.max;\n    }\n    _getDateFilter() {\n        return this.datepickerInput && this.datepickerInput.dateFilter;\n    }\n    ngOnChanges(changes) {\n        const positionChange = changes['xPosition'] || changes['yPosition'];\n        if (positionChange && !positionChange.firstChange && this._overlayRef) {\n            const positionStrategy = this._overlayRef.getConfig().positionStrategy;\n            if (positionStrategy instanceof FlexibleConnectedPositionStrategy) {\n                this._setConnectedPositions(positionStrategy);\n                if (this.opened) {\n                    this._overlayRef.updatePosition();\n                }\n            }\n        }\n        this.stateChanges.next(undefined);\n    }\n    ngOnDestroy() {\n        this._destroyOverlay();\n        this.close();\n        this._inputStateChanges.unsubscribe();\n        this.stateChanges.complete();\n    }\n    /** Selects the given date */\n    select(date) {\n        this._model.add(date);\n    }\n    /** Emits the selected year in multiyear view */\n    _selectYear(normalizedYear) {\n        this.yearSelected.emit(normalizedYear);\n    }\n    /** Emits selected month in year view */\n    _selectMonth(normalizedMonth) {\n        this.monthSelected.emit(normalizedMonth);\n    }\n    /** Emits changed view */\n    _viewChanged(view) {\n        this.viewChanged.emit(view);\n    }\n    /**\n     * Register an input with this datepicker.\n     * @param input The datepicker input to register with this datepicker.\n     * @returns Selection model that the input should hook itself up to.\n     */\n    registerInput(input) {\n        if (this.datepickerInput && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw Error('A MatDatepicker can only be associated with a single input.');\n        }\n        this._inputStateChanges.unsubscribe();\n        this.datepickerInput = input;\n        this._inputStateChanges = input.stateChanges.subscribe(() => this.stateChanges.next(undefined));\n        return this._model;\n    }\n    /**\n     * Registers a portal containing action buttons with the datepicker.\n     * @param portal Portal to be registered.\n     */\n    registerActions(portal) {\n        if (this._actionsPortal && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw Error('A MatDatepicker can only be associated with a single actions row.');\n        }\n        this._actionsPortal = portal;\n    }\n    /**\n     * Removes a portal containing action buttons from the datepicker.\n     * @param portal Portal to be removed.\n     */\n    removeActions(portal) {\n        if (portal === this._actionsPortal) {\n            this._actionsPortal = null;\n        }\n    }\n    /** Open the calendar. */\n    open() {\n        if (this._opened || this.disabled) {\n            return;\n        }\n        if (!this.datepickerInput && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw Error('Attempted to open an MatDatepicker with no associated input.');\n        }\n        this._focusedElementBeforeOpen = _getFocusedElementPierceShadowDom();\n        this._openOverlay();\n        this._opened = true;\n        this.openedStream.emit();\n    }\n    /** Close the calendar. */\n    close() {\n        if (!this._opened) {\n            return;\n        }\n        if (this._componentRef) {\n            const instance = this._componentRef.instance;\n            instance._startExitAnimation();\n            instance._animationDone.pipe(take(1)).subscribe(() => this._destroyOverlay());\n        }\n        const completeClose = () => {\n            // The `_opened` could've been reset already if\n            // we got two events in quick succession.\n            if (this._opened) {\n                this._opened = false;\n                this.closedStream.emit();\n                this._focusedElementBeforeOpen = null;\n            }\n        };\n        if (this._restoreFocus &&\n            this._focusedElementBeforeOpen &&\n            typeof this._focusedElementBeforeOpen.focus === 'function') {\n            // Because IE moves focus asynchronously, we can't count on it being restored before we've\n            // marked the datepicker as closed. If the event fires out of sequence and the element that\n            // we're refocusing opens the datepicker on focus, the user could be stuck with not being\n            // able to close the calendar at all. We work around it by making the logic, that marks\n            // the datepicker as closed, async as well.\n            this._focusedElementBeforeOpen.focus();\n            setTimeout(completeClose);\n        }\n        else {\n            completeClose();\n        }\n    }\n    /** Applies the current pending selection on the overlay to the model. */\n    _applyPendingSelection() {\n        var _a, _b;\n        (_b = (_a = this._componentRef) === null || _a === void 0 ? void 0 : _a.instance) === null || _b === void 0 ? void 0 : _b._applyPendingSelection();\n    }\n    /** Forwards relevant values from the datepicker to the datepicker content inside the overlay. */\n    _forwardContentValues(instance) {\n        instance.datepicker = this;\n        instance.color = this.color;\n        instance._actionsPortal = this._actionsPortal;\n    }\n    /** Opens the overlay with the calendar. */\n    _openOverlay() {\n        this._destroyOverlay();\n        const isDialog = this.touchUi;\n        const labelId = this.datepickerInput.getOverlayLabelId();\n        const portal = new ComponentPortal(MatDatepickerContent, this._viewContainerRef);\n        const overlayRef = (this._overlayRef = this._overlay.create(new OverlayConfig({\n            positionStrategy: isDialog ? this._getDialogStrategy() : this._getDropdownStrategy(),\n            hasBackdrop: true,\n            backdropClass: [\n                isDialog ? 'cdk-overlay-dark-backdrop' : 'mat-overlay-transparent-backdrop',\n                this._backdropHarnessClass,\n            ],\n            direction: this._dir,\n            scrollStrategy: isDialog ? this._overlay.scrollStrategies.block() : this._scrollStrategy(),\n            panelClass: `mat-datepicker-${isDialog ? 'dialog' : 'popup'}`,\n        })));\n        const overlayElement = overlayRef.overlayElement;\n        overlayElement.setAttribute('role', 'dialog');\n        if (labelId) {\n            overlayElement.setAttribute('aria-labelledby', labelId);\n        }\n        if (isDialog) {\n            overlayElement.setAttribute('aria-modal', 'true');\n        }\n        this._getCloseStream(overlayRef).subscribe(event => {\n            if (event) {\n                event.preventDefault();\n            }\n            this.close();\n        });\n        this._componentRef = overlayRef.attach(portal);\n        this._forwardContentValues(this._componentRef.instance);\n        // Update the position once the calendar has rendered. Only relevant in dropdown mode.\n        if (!isDialog) {\n            this._ngZone.onStable.pipe(take(1)).subscribe(() => overlayRef.updatePosition());\n        }\n    }\n    /** Destroys the current overlay. */\n    _destroyOverlay() {\n        if (this._overlayRef) {\n            this._overlayRef.dispose();\n            this._overlayRef = this._componentRef = null;\n        }\n    }\n    /** Gets a position strategy that will open the calendar as a dropdown. */\n    _getDialogStrategy() {\n        return this._overlay.position().global().centerHorizontally().centerVertically();\n    }\n    /** Gets a position strategy that will open the calendar as a dropdown. */\n    _getDropdownStrategy() {\n        const strategy = this._overlay\n            .position()\n            .flexibleConnectedTo(this.datepickerInput.getConnectedOverlayOrigin())\n            .withTransformOriginOn('.mat-datepicker-content')\n            .withFlexibleDimensions(false)\n            .withViewportMargin(8)\n            .withLockedPosition();\n        return this._setConnectedPositions(strategy);\n    }\n    /** Sets the positions of the datepicker in dropdown mode based on the current configuration. */\n    _setConnectedPositions(strategy) {\n        const primaryX = this.xPosition === 'end' ? 'end' : 'start';\n        const secondaryX = primaryX === 'start' ? 'end' : 'start';\n        const primaryY = this.yPosition === 'above' ? 'bottom' : 'top';\n        const secondaryY = primaryY === 'top' ? 'bottom' : 'top';\n        return strategy.withPositions([\n            {\n                originX: primaryX,\n                originY: secondaryY,\n                overlayX: primaryX,\n                overlayY: primaryY,\n            },\n            {\n                originX: primaryX,\n                originY: primaryY,\n                overlayX: primaryX,\n                overlayY: secondaryY,\n            },\n            {\n                originX: secondaryX,\n                originY: secondaryY,\n                overlayX: secondaryX,\n                overlayY: primaryY,\n            },\n            {\n                originX: secondaryX,\n                originY: primaryY,\n                overlayX: secondaryX,\n                overlayY: secondaryY,\n            },\n        ]);\n    }\n    /** Gets an observable that will emit when the overlay is supposed to be closed. */\n    _getCloseStream(overlayRef) {\n        return merge(overlayRef.backdropClick(), overlayRef.detachments(), overlayRef.keydownEvents().pipe(filter(event => {\n            // Closing on alt + up is only valid when there's an input associated with the datepicker.\n            return ((event.keyCode === ESCAPE && !hasModifierKey(event)) ||\n                (this.datepickerInput && hasModifierKey(event, 'altKey') && event.keyCode === UP_ARROW));\n        })));\n    }\n}\nMatDatepickerBase.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatDatepickerBase, deps: [{ token: i9.Overlay }, { token: i0.NgZone }, { token: i0.ViewContainerRef }, { token: MAT_DATEPICKER_SCROLL_STRATEGY }, { token: i1$1.DateAdapter, optional: true }, { token: i2.Directionality, optional: true }, { token: MatDateSelectionModel }], target: i0.ɵɵFactoryTarget.Directive });\nMatDatepickerBase.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.1.0\", type: MatDatepickerBase, inputs: { calendarHeaderComponent: \"calendarHeaderComponent\", startAt: \"startAt\", startView: \"startView\", color: \"color\", touchUi: \"touchUi\", disabled: \"disabled\", xPosition: \"xPosition\", yPosition: \"yPosition\", restoreFocus: \"restoreFocus\", dateClass: \"dateClass\", panelClass: \"panelClass\", opened: \"opened\" }, outputs: { yearSelected: \"yearSelected\", monthSelected: \"monthSelected\", viewChanged: \"viewChanged\", openedStream: \"opened\", closedStream: \"closed\" }, usesOnChanges: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatDatepickerBase, decorators: [{\n            type: Directive\n        }], ctorParameters: function () {\n        return [{ type: i9.Overlay }, { type: i0.NgZone }, { type: i0.ViewContainerRef }, { type: undefined, decorators: [{\n                        type: Inject,\n                        args: [MAT_DATEPICKER_SCROLL_STRATEGY]\n                    }] }, { type: i1$1.DateAdapter, decorators: [{\n                        type: Optional\n                    }] }, { type: i2.Directionality, decorators: [{\n                        type: Optional\n                    }] }, { type: MatDateSelectionModel }];\n    }, propDecorators: { calendarHeaderComponent: [{\n                type: Input\n            }], startAt: [{\n                type: Input\n            }], startView: [{\n                type: Input\n            }], color: [{\n                type: Input\n            }], touchUi: [{\n                type: Input\n            }], disabled: [{\n                type: Input\n            }], xPosition: [{\n                type: Input\n            }], yPosition: [{\n                type: Input\n            }], restoreFocus: [{\n                type: Input\n            }], yearSelected: [{\n                type: Output\n            }], monthSelected: [{\n                type: Output\n            }], viewChanged: [{\n                type: Output\n            }], dateClass: [{\n                type: Input\n            }], openedStream: [{\n                type: Output,\n                args: ['opened']\n            }], closedStream: [{\n                type: Output,\n                args: ['closed']\n            }], panelClass: [{\n                type: Input\n            }], opened: [{\n                type: Input\n            }] } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// TODO(mmalerba): We use a component instead of a directive here so the user can use implicit\n// template reference variables (e.g. #d vs #d=\"matDatepicker\"). We can change this to a directive\n// if angular adds support for `exportAs: '$implicit'` on directives.\n/** Component responsible for managing the datepicker popup/dialog. */\nclass MatDatepicker extends MatDatepickerBase {\n}\nMatDatepicker.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatDatepicker, deps: null, target: i0.ɵɵFactoryTarget.Component });\nMatDatepicker.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: MatDatepicker, selector: \"mat-datepicker\", providers: [\n        MAT_SINGLE_DATE_SELECTION_MODEL_PROVIDER,\n        { provide: MatDatepickerBase, useExisting: MatDatepicker },\n    ], exportAs: [\"matDatepicker\"], usesInheritance: true, ngImport: i0, template: '', isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatDatepicker, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'mat-datepicker',\n                    template: '',\n                    exportAs: 'matDatepicker',\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    encapsulation: ViewEncapsulation.None,\n                    providers: [\n                        MAT_SINGLE_DATE_SELECTION_MODEL_PROVIDER,\n                        { provide: MatDatepickerBase, useExisting: MatDatepicker },\n                    ],\n                }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * An event used for datepicker input and change events. We don't always have access to a native\n * input or change event because the event may have been triggered by the user clicking on the\n * calendar popup. For consistency, we always use MatDatepickerInputEvent instead.\n */\nclass MatDatepickerInputEvent {\n    constructor(\n    /** Reference to the datepicker input component that emitted the event. */\n    target, \n    /** Reference to the native input element associated with the datepicker input. */\n    targetElement) {\n        this.target = target;\n        this.targetElement = targetElement;\n        this.value = this.target.value;\n    }\n}\n/** Base class for datepicker inputs. */\nclass MatDatepickerInputBase {\n    constructor(_elementRef, _dateAdapter, _dateFormats) {\n        this._elementRef = _elementRef;\n        this._dateAdapter = _dateAdapter;\n        this._dateFormats = _dateFormats;\n        /** Emits when a `change` event is fired on this `<input>`. */\n        this.dateChange = new EventEmitter();\n        /** Emits when an `input` event is fired on this `<input>`. */\n        this.dateInput = new EventEmitter();\n        /** Emits when the internal state has changed */\n        this.stateChanges = new Subject();\n        this._onTouched = () => { };\n        this._validatorOnChange = () => { };\n        this._cvaOnChange = () => { };\n        this._valueChangesSubscription = Subscription.EMPTY;\n        this._localeSubscription = Subscription.EMPTY;\n        /** The form control validator for whether the input parses. */\n        this._parseValidator = () => {\n            return this._lastValueValid\n                ? null\n                : { 'matDatepickerParse': { 'text': this._elementRef.nativeElement.value } };\n        };\n        /** The form control validator for the date filter. */\n        this._filterValidator = (control) => {\n            const controlValue = this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(control.value));\n            return !controlValue || this._matchesFilter(controlValue)\n                ? null\n                : { 'matDatepickerFilter': true };\n        };\n        /** The form control validator for the min date. */\n        this._minValidator = (control) => {\n            const controlValue = this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(control.value));\n            const min = this._getMinDate();\n            return !min || !controlValue || this._dateAdapter.compareDate(min, controlValue) <= 0\n                ? null\n                : { 'matDatepickerMin': { 'min': min, 'actual': controlValue } };\n        };\n        /** The form control validator for the max date. */\n        this._maxValidator = (control) => {\n            const controlValue = this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(control.value));\n            const max = this._getMaxDate();\n            return !max || !controlValue || this._dateAdapter.compareDate(max, controlValue) >= 0\n                ? null\n                : { 'matDatepickerMax': { 'max': max, 'actual': controlValue } };\n        };\n        /** Whether the last value set on the input was valid. */\n        this._lastValueValid = false;\n        if (typeof ngDevMode === 'undefined' || ngDevMode) {\n            if (!this._dateAdapter) {\n                throw createMissingDateImplError('DateAdapter');\n            }\n            if (!this._dateFormats) {\n                throw createMissingDateImplError('MAT_DATE_FORMATS');\n            }\n        }\n        // Update the displayed date when the locale changes.\n        this._localeSubscription = _dateAdapter.localeChanges.subscribe(() => {\n            this._assignValueProgrammatically(this.value);\n        });\n    }\n    /** The value of the input. */\n    get value() {\n        return this._model ? this._getValueFromModel(this._model.selection) : this._pendingValue;\n    }\n    set value(value) {\n        this._assignValueProgrammatically(value);\n    }\n    /** Whether the datepicker-input is disabled. */\n    get disabled() {\n        return !!this._disabled || this._parentDisabled();\n    }\n    set disabled(value) {\n        const newValue = coerceBooleanProperty(value);\n        const element = this._elementRef.nativeElement;\n        if (this._disabled !== newValue) {\n            this._disabled = newValue;\n            this.stateChanges.next(undefined);\n        }\n        // We need to null check the `blur` method, because it's undefined during SSR.\n        // In Ivy static bindings are invoked earlier, before the element is attached to the DOM.\n        // This can cause an error to be thrown in some browsers (IE/Edge) which assert that the\n        // element has been inserted.\n        if (newValue && this._isInitialized && element.blur) {\n            // Normally, native input elements automatically blur if they turn disabled. This behavior\n            // is problematic, because it would mean that it triggers another change detection cycle,\n            // which then causes a changed after checked error if the input element was focused before.\n            element.blur();\n        }\n    }\n    /** Gets the base validator functions. */\n    _getValidators() {\n        return [this._parseValidator, this._minValidator, this._maxValidator, this._filterValidator];\n    }\n    /** Registers a date selection model with the input. */\n    _registerModel(model) {\n        this._model = model;\n        this._valueChangesSubscription.unsubscribe();\n        if (this._pendingValue) {\n            this._assignValue(this._pendingValue);\n        }\n        this._valueChangesSubscription = this._model.selectionChanged.subscribe(event => {\n            if (this._shouldHandleChangeEvent(event)) {\n                const value = this._getValueFromModel(event.selection);\n                this._lastValueValid = this._isValidValue(value);\n                this._cvaOnChange(value);\n                this._onTouched();\n                this._formatValue(value);\n                this.dateInput.emit(new MatDatepickerInputEvent(this, this._elementRef.nativeElement));\n                this.dateChange.emit(new MatDatepickerInputEvent(this, this._elementRef.nativeElement));\n            }\n        });\n    }\n    ngAfterViewInit() {\n        this._isInitialized = true;\n    }\n    ngOnChanges(changes) {\n        if (dateInputsHaveChanged(changes, this._dateAdapter)) {\n            this.stateChanges.next(undefined);\n        }\n    }\n    ngOnDestroy() {\n        this._valueChangesSubscription.unsubscribe();\n        this._localeSubscription.unsubscribe();\n        this.stateChanges.complete();\n    }\n    /** @docs-private */\n    registerOnValidatorChange(fn) {\n        this._validatorOnChange = fn;\n    }\n    /** @docs-private */\n    validate(c) {\n        return this._validator ? this._validator(c) : null;\n    }\n    // Implemented as part of ControlValueAccessor.\n    writeValue(value) {\n        this._assignValueProgrammatically(value);\n    }\n    // Implemented as part of ControlValueAccessor.\n    registerOnChange(fn) {\n        this._cvaOnChange = fn;\n    }\n    // Implemented as part of ControlValueAccessor.\n    registerOnTouched(fn) {\n        this._onTouched = fn;\n    }\n    // Implemented as part of ControlValueAccessor.\n    setDisabledState(isDisabled) {\n        this.disabled = isDisabled;\n    }\n    _onKeydown(event) {\n        const isAltDownArrow = event.altKey && event.keyCode === DOWN_ARROW;\n        if (isAltDownArrow && !this._elementRef.nativeElement.readOnly) {\n            this._openPopup();\n            event.preventDefault();\n        }\n    }\n    _onInput(value) {\n        const lastValueWasValid = this._lastValueValid;\n        let date = this._dateAdapter.parse(value, this._dateFormats.parse.dateInput);\n        this._lastValueValid = this._isValidValue(date);\n        date = this._dateAdapter.getValidDateOrNull(date);\n        if (!this._dateAdapter.sameDate(date, this.value)) {\n            this._assignValue(date);\n            this._cvaOnChange(date);\n            this.dateInput.emit(new MatDatepickerInputEvent(this, this._elementRef.nativeElement));\n        }\n        else {\n            // Call the CVA change handler for invalid values\n            // since this is what marks the control as dirty.\n            if (value && !this.value) {\n                this._cvaOnChange(date);\n            }\n            if (lastValueWasValid !== this._lastValueValid) {\n                this._validatorOnChange();\n            }\n        }\n    }\n    _onChange() {\n        this.dateChange.emit(new MatDatepickerInputEvent(this, this._elementRef.nativeElement));\n    }\n    /** Handles blur events on the input. */\n    _onBlur() {\n        // Reformat the input only if we have a valid value.\n        if (this.value) {\n            this._formatValue(this.value);\n        }\n        this._onTouched();\n    }\n    /** Formats a value and sets it on the input element. */\n    _formatValue(value) {\n        this._elementRef.nativeElement.value = value\n            ? this._dateAdapter.format(value, this._dateFormats.display.dateInput)\n            : '';\n    }\n    /** Assigns a value to the model. */\n    _assignValue(value) {\n        // We may get some incoming values before the model was\n        // assigned. Save the value so that we can assign it later.\n        if (this._model) {\n            this._assignValueToModel(value);\n            this._pendingValue = null;\n        }\n        else {\n            this._pendingValue = value;\n        }\n    }\n    /** Whether a value is considered valid. */\n    _isValidValue(value) {\n        return !value || this._dateAdapter.isValid(value);\n    }\n    /**\n     * Checks whether a parent control is disabled. This is in place so that it can be overridden\n     * by inputs extending this one which can be placed inside of a group that can be disabled.\n     */\n    _parentDisabled() {\n        return false;\n    }\n    /** Programmatically assigns a value to the input. */\n    _assignValueProgrammatically(value) {\n        value = this._dateAdapter.deserialize(value);\n        this._lastValueValid = this._isValidValue(value);\n        value = this._dateAdapter.getValidDateOrNull(value);\n        this._assignValue(value);\n        this._formatValue(value);\n    }\n    /** Gets whether a value matches the current date filter. */\n    _matchesFilter(value) {\n        const filter = this._getDateFilter();\n        return !filter || filter(value);\n    }\n}\nMatDatepickerInputBase.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatDatepickerInputBase, deps: [{ token: i0.ElementRef }, { token: i1$1.DateAdapter, optional: true }, { token: MAT_DATE_FORMATS, optional: true }], target: i0.ɵɵFactoryTarget.Directive });\nMatDatepickerInputBase.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.1.0\", type: MatDatepickerInputBase, inputs: { value: \"value\", disabled: \"disabled\" }, outputs: { dateChange: \"dateChange\", dateInput: \"dateInput\" }, usesOnChanges: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatDatepickerInputBase, decorators: [{\n            type: Directive\n        }], ctorParameters: function () {\n        return [{ type: i0.ElementRef }, { type: i1$1.DateAdapter, decorators: [{\n                        type: Optional\n                    }] }, { type: undefined, decorators: [{\n                        type: Optional\n                    }, {\n                        type: Inject,\n                        args: [MAT_DATE_FORMATS]\n                    }] }];\n    }, propDecorators: { value: [{\n                type: Input\n            }], disabled: [{\n                type: Input\n            }], dateChange: [{\n                type: Output\n            }], dateInput: [{\n                type: Output\n            }] } });\n/**\n * Checks whether the `SimpleChanges` object from an `ngOnChanges`\n * callback has any changes, accounting for date objects.\n */\nfunction dateInputsHaveChanged(changes, adapter) {\n    const keys = Object.keys(changes);\n    for (let key of keys) {\n        const { previousValue, currentValue } = changes[key];\n        if (adapter.isDateInstance(previousValue) && adapter.isDateInstance(currentValue)) {\n            if (!adapter.sameDate(previousValue, currentValue)) {\n                return true;\n            }\n        }\n        else {\n            return true;\n        }\n    }\n    return false;\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** @docs-private */\nconst MAT_DATEPICKER_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => MatDatepickerInput),\n    multi: true,\n};\n/** @docs-private */\nconst MAT_DATEPICKER_VALIDATORS = {\n    provide: NG_VALIDATORS,\n    useExisting: forwardRef(() => MatDatepickerInput),\n    multi: true,\n};\n/** Directive used to connect an input to a MatDatepicker. */\nclass MatDatepickerInput extends MatDatepickerInputBase {\n    constructor(elementRef, dateAdapter, dateFormats, _formField) {\n        super(elementRef, dateAdapter, dateFormats);\n        this._formField = _formField;\n        this._closedSubscription = Subscription.EMPTY;\n        this._validator = Validators.compose(super._getValidators());\n    }\n    /** The datepicker that this input is associated with. */\n    set matDatepicker(datepicker) {\n        if (datepicker) {\n            this._datepicker = datepicker;\n            this._closedSubscription = datepicker.closedStream.subscribe(() => this._onTouched());\n            this._registerModel(datepicker.registerInput(this));\n        }\n    }\n    /** The minimum valid date. */\n    get min() {\n        return this._min;\n    }\n    set min(value) {\n        const validValue = this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(value));\n        if (!this._dateAdapter.sameDate(validValue, this._min)) {\n            this._min = validValue;\n            this._validatorOnChange();\n        }\n    }\n    /** The maximum valid date. */\n    get max() {\n        return this._max;\n    }\n    set max(value) {\n        const validValue = this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(value));\n        if (!this._dateAdapter.sameDate(validValue, this._max)) {\n            this._max = validValue;\n            this._validatorOnChange();\n        }\n    }\n    /** Function that can be used to filter out dates within the datepicker. */\n    get dateFilter() {\n        return this._dateFilter;\n    }\n    set dateFilter(value) {\n        const wasMatchingValue = this._matchesFilter(this.value);\n        this._dateFilter = value;\n        if (this._matchesFilter(this.value) !== wasMatchingValue) {\n            this._validatorOnChange();\n        }\n    }\n    /**\n     * Gets the element that the datepicker popup should be connected to.\n     * @return The element to connect the popup to.\n     */\n    getConnectedOverlayOrigin() {\n        return this._formField ? this._formField.getConnectedOverlayOrigin() : this._elementRef;\n    }\n    /** Gets the ID of an element that should be used a description for the calendar overlay. */\n    getOverlayLabelId() {\n        if (this._formField) {\n            return this._formField.getLabelId();\n        }\n        return this._elementRef.nativeElement.getAttribute('aria-labelledby');\n    }\n    /** Returns the palette used by the input's form field, if any. */\n    getThemePalette() {\n        return this._formField ? this._formField.color : undefined;\n    }\n    /** Gets the value at which the calendar should start. */\n    getStartValue() {\n        return this.value;\n    }\n    ngOnDestroy() {\n        super.ngOnDestroy();\n        this._closedSubscription.unsubscribe();\n    }\n    /** Opens the associated datepicker. */\n    _openPopup() {\n        if (this._datepicker) {\n            this._datepicker.open();\n        }\n    }\n    _getValueFromModel(modelValue) {\n        return modelValue;\n    }\n    _assignValueToModel(value) {\n        if (this._model) {\n            this._model.updateSelection(value, this);\n        }\n    }\n    /** Gets the input's minimum date. */\n    _getMinDate() {\n        return this._min;\n    }\n    /** Gets the input's maximum date. */\n    _getMaxDate() {\n        return this._max;\n    }\n    /** Gets the input's date filtering function. */\n    _getDateFilter() {\n        return this._dateFilter;\n    }\n    _shouldHandleChangeEvent(event) {\n        return event.source !== this;\n    }\n}\nMatDatepickerInput.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatDatepickerInput, deps: [{ token: i0.ElementRef }, { token: i1$1.DateAdapter, optional: true }, { token: MAT_DATE_FORMATS, optional: true }, { token: MAT_FORM_FIELD, optional: true }], target: i0.ɵɵFactoryTarget.Directive });\nMatDatepickerInput.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.1.0\", type: MatDatepickerInput, selector: \"input[matDatepicker]\", inputs: { matDatepicker: \"matDatepicker\", min: \"min\", max: \"max\", dateFilter: [\"matDatepickerFilter\", \"dateFilter\"] }, host: { listeners: { \"input\": \"_onInput($event.target.value)\", \"change\": \"_onChange()\", \"blur\": \"_onBlur()\", \"keydown\": \"_onKeydown($event)\" }, properties: { \"attr.aria-haspopup\": \"_datepicker ? \\\"dialog\\\" : null\", \"attr.aria-owns\": \"(_datepicker?.opened && _datepicker.id) || null\", \"attr.min\": \"min ? _dateAdapter.toIso8601(min) : null\", \"attr.max\": \"max ? _dateAdapter.toIso8601(max) : null\", \"attr.data-mat-calendar\": \"_datepicker ? _datepicker.id : null\", \"disabled\": \"disabled\" }, classAttribute: \"mat-datepicker-input\" }, providers: [\n        MAT_DATEPICKER_VALUE_ACCESSOR,\n        MAT_DATEPICKER_VALIDATORS,\n        { provide: MAT_INPUT_VALUE_ACCESSOR, useExisting: MatDatepickerInput },\n    ], exportAs: [\"matDatepickerInput\"], usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatDatepickerInput, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'input[matDatepicker]',\n                    providers: [\n                        MAT_DATEPICKER_VALUE_ACCESSOR,\n                        MAT_DATEPICKER_VALIDATORS,\n                        { provide: MAT_INPUT_VALUE_ACCESSOR, useExisting: MatDatepickerInput },\n                    ],\n                    host: {\n                        'class': 'mat-datepicker-input',\n                        '[attr.aria-haspopup]': '_datepicker ? \"dialog\" : null',\n                        '[attr.aria-owns]': '(_datepicker?.opened && _datepicker.id) || null',\n                        '[attr.min]': 'min ? _dateAdapter.toIso8601(min) : null',\n                        '[attr.max]': 'max ? _dateAdapter.toIso8601(max) : null',\n                        // Used by the test harness to tie this input to its calendar. We can't depend on\n                        // `aria-owns` for this, because it's only defined while the calendar is open.\n                        '[attr.data-mat-calendar]': '_datepicker ? _datepicker.id : null',\n                        '[disabled]': 'disabled',\n                        '(input)': '_onInput($event.target.value)',\n                        '(change)': '_onChange()',\n                        '(blur)': '_onBlur()',\n                        '(keydown)': '_onKeydown($event)',\n                    },\n                    exportAs: 'matDatepickerInput',\n                }]\n        }], ctorParameters: function () {\n        return [{ type: i0.ElementRef }, { type: i1$1.DateAdapter, decorators: [{\n                        type: Optional\n                    }] }, { type: undefined, decorators: [{\n                        type: Optional\n                    }, {\n                        type: Inject,\n                        args: [MAT_DATE_FORMATS]\n                    }] }, { type: i2$1.MatFormField, decorators: [{\n                        type: Optional\n                    }, {\n                        type: Inject,\n                        args: [MAT_FORM_FIELD]\n                    }] }];\n    }, propDecorators: { matDatepicker: [{\n                type: Input\n            }], min: [{\n                type: Input\n            }], max: [{\n                type: Input\n            }], dateFilter: [{\n                type: Input,\n                args: ['matDatepickerFilter']\n            }] } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Can be used to override the icon of a `matDatepickerToggle`. */\nclass MatDatepickerToggleIcon {\n}\nMatDatepickerToggleIcon.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatDatepickerToggleIcon, deps: [], target: i0.ɵɵFactoryTarget.Directive });\nMatDatepickerToggleIcon.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.1.0\", type: MatDatepickerToggleIcon, selector: \"[matDatepickerToggleIcon]\", ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatDatepickerToggleIcon, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[matDatepickerToggleIcon]',\n                }]\n        }] });\nclass MatDatepickerToggle {\n    constructor(_intl, _changeDetectorRef, defaultTabIndex) {\n        this._intl = _intl;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._stateChanges = Subscription.EMPTY;\n        const parsedTabIndex = Number(defaultTabIndex);\n        this.tabIndex = parsedTabIndex || parsedTabIndex === 0 ? parsedTabIndex : null;\n    }\n    /** Whether the toggle button is disabled. */\n    get disabled() {\n        if (this._disabled === undefined && this.datepicker) {\n            return this.datepicker.disabled;\n        }\n        return !!this._disabled;\n    }\n    set disabled(value) {\n        this._disabled = coerceBooleanProperty(value);\n    }\n    ngOnChanges(changes) {\n        if (changes['datepicker']) {\n            this._watchStateChanges();\n        }\n    }\n    ngOnDestroy() {\n        this._stateChanges.unsubscribe();\n    }\n    ngAfterContentInit() {\n        this._watchStateChanges();\n    }\n    _open(event) {\n        if (this.datepicker && !this.disabled) {\n            this.datepicker.open();\n            event.stopPropagation();\n        }\n    }\n    _watchStateChanges() {\n        const datepickerStateChanged = this.datepicker ? this.datepicker.stateChanges : of();\n        const inputStateChanged = this.datepicker && this.datepicker.datepickerInput\n            ? this.datepicker.datepickerInput.stateChanges\n            : of();\n        const datepickerToggled = this.datepicker\n            ? merge(this.datepicker.openedStream, this.datepicker.closedStream)\n            : of();\n        this._stateChanges.unsubscribe();\n        this._stateChanges = merge(this._intl.changes, datepickerStateChanged, inputStateChanged, datepickerToggled).subscribe(() => this._changeDetectorRef.markForCheck());\n    }\n}\nMatDatepickerToggle.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatDatepickerToggle, deps: [{ token: MatDatepickerIntl }, { token: i0.ChangeDetectorRef }, { token: 'tabindex', attribute: true }], target: i0.ɵɵFactoryTarget.Component });\nMatDatepickerToggle.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: MatDatepickerToggle, selector: \"mat-datepicker-toggle\", inputs: { datepicker: [\"for\", \"datepicker\"], tabIndex: \"tabIndex\", ariaLabel: [\"aria-label\", \"ariaLabel\"], disabled: \"disabled\", disableRipple: \"disableRipple\" }, host: { listeners: { \"click\": \"_open($event)\" }, properties: { \"attr.tabindex\": \"null\", \"class.mat-datepicker-toggle-active\": \"datepicker && datepicker.opened\", \"class.mat-accent\": \"datepicker && datepicker.color === \\\"accent\\\"\", \"class.mat-warn\": \"datepicker && datepicker.color === \\\"warn\\\"\", \"attr.data-mat-calendar\": \"datepicker ? datepicker.id : null\" }, classAttribute: \"mat-datepicker-toggle\" }, queries: [{ propertyName: \"_customIcon\", first: true, predicate: MatDatepickerToggleIcon, descendants: true }], viewQueries: [{ propertyName: \"_button\", first: true, predicate: [\"button\"], descendants: true }], exportAs: [\"matDatepickerToggle\"], usesOnChanges: true, ngImport: i0, template: \"<button\\n  #button\\n  mat-icon-button\\n  type=\\\"button\\\"\\n  [attr.aria-haspopup]=\\\"datepicker ? 'dialog' : null\\\"\\n  [attr.aria-label]=\\\"ariaLabel || _intl.openCalendarLabel\\\"\\n  [attr.tabindex]=\\\"disabled ? -1 : tabIndex\\\"\\n  [disabled]=\\\"disabled\\\"\\n  [disableRipple]=\\\"disableRipple\\\">\\n\\n  <svg\\n    *ngIf=\\\"!_customIcon\\\"\\n    class=\\\"mat-datepicker-toggle-default-icon\\\"\\n    viewBox=\\\"0 0 24 24\\\"\\n    width=\\\"24px\\\"\\n    height=\\\"24px\\\"\\n    fill=\\\"currentColor\\\"\\n    focusable=\\\"false\\\">\\n    <path d=\\\"M19 3h-1V1h-2v2H8V1H6v2H5c-1.11 0-1.99.9-1.99 2L3 19c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm0 16H5V8h14v11zM7 10h5v5H7z\\\"/>\\n  </svg>\\n\\n  <ng-content select=\\\"[matDatepickerToggleIcon]\\\"></ng-content>\\n</button>\\n\", styles: [\".mat-form-field-appearance-legacy .mat-form-field-prefix .mat-datepicker-toggle-default-icon,.mat-form-field-appearance-legacy .mat-form-field-suffix .mat-datepicker-toggle-default-icon{width:1em}.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-prefix .mat-datepicker-toggle-default-icon,.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-suffix .mat-datepicker-toggle-default-icon{display:block;width:1.5em;height:1.5em}.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-prefix .mat-icon-button .mat-datepicker-toggle-default-icon,.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-suffix .mat-icon-button .mat-datepicker-toggle-default-icon{margin:auto}.cdk-high-contrast-active .mat-datepicker-toggle-default-icon{color:CanvasText}\\n\"], components: [{ type: i3.MatButton, selector: \"button[mat-button], button[mat-raised-button], button[mat-icon-button],             button[mat-fab], button[mat-mini-fab], button[mat-stroked-button],             button[mat-flat-button]\", inputs: [\"disabled\", \"disableRipple\", \"color\"], exportAs: [\"matButton\"] }], directives: [{ type: i1.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatDatepickerToggle, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-datepicker-toggle', host: {\n                        'class': 'mat-datepicker-toggle',\n                        '[attr.tabindex]': 'null',\n                        '[class.mat-datepicker-toggle-active]': 'datepicker && datepicker.opened',\n                        '[class.mat-accent]': 'datepicker && datepicker.color === \"accent\"',\n                        '[class.mat-warn]': 'datepicker && datepicker.color === \"warn\"',\n                        // Used by the test harness to tie this toggle to its datepicker.\n                        '[attr.data-mat-calendar]': 'datepicker ? datepicker.id : null',\n                        // Bind the `click` on the host, rather than the inner `button`, so that we can call\n                        // `stopPropagation` on it without affecting the user's `click` handlers. We need to stop\n                        // it so that the input doesn't get focused automatically by the form field (See #21836).\n                        '(click)': '_open($event)',\n                    }, exportAs: 'matDatepickerToggle', encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, template: \"<button\\n  #button\\n  mat-icon-button\\n  type=\\\"button\\\"\\n  [attr.aria-haspopup]=\\\"datepicker ? 'dialog' : null\\\"\\n  [attr.aria-label]=\\\"ariaLabel || _intl.openCalendarLabel\\\"\\n  [attr.tabindex]=\\\"disabled ? -1 : tabIndex\\\"\\n  [disabled]=\\\"disabled\\\"\\n  [disableRipple]=\\\"disableRipple\\\">\\n\\n  <svg\\n    *ngIf=\\\"!_customIcon\\\"\\n    class=\\\"mat-datepicker-toggle-default-icon\\\"\\n    viewBox=\\\"0 0 24 24\\\"\\n    width=\\\"24px\\\"\\n    height=\\\"24px\\\"\\n    fill=\\\"currentColor\\\"\\n    focusable=\\\"false\\\">\\n    <path d=\\\"M19 3h-1V1h-2v2H8V1H6v2H5c-1.11 0-1.99.9-1.99 2L3 19c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm0 16H5V8h14v11zM7 10h5v5H7z\\\"/>\\n  </svg>\\n\\n  <ng-content select=\\\"[matDatepickerToggleIcon]\\\"></ng-content>\\n</button>\\n\", styles: [\".mat-form-field-appearance-legacy .mat-form-field-prefix .mat-datepicker-toggle-default-icon,.mat-form-field-appearance-legacy .mat-form-field-suffix .mat-datepicker-toggle-default-icon{width:1em}.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-prefix .mat-datepicker-toggle-default-icon,.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-suffix .mat-datepicker-toggle-default-icon{display:block;width:1.5em;height:1.5em}.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-prefix .mat-icon-button .mat-datepicker-toggle-default-icon,.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-suffix .mat-icon-button .mat-datepicker-toggle-default-icon{margin:auto}.cdk-high-contrast-active .mat-datepicker-toggle-default-icon{color:CanvasText}\\n\"] }]\n        }], ctorParameters: function () {\n        return [{ type: MatDatepickerIntl }, { type: i0.ChangeDetectorRef }, { type: undefined, decorators: [{\n                        type: Attribute,\n                        args: ['tabindex']\n                    }] }];\n    }, propDecorators: { datepicker: [{\n                type: Input,\n                args: ['for']\n            }], tabIndex: [{\n                type: Input\n            }], ariaLabel: [{\n                type: Input,\n                args: ['aria-label']\n            }], disabled: [{\n                type: Input\n            }], disableRipple: [{\n                type: Input\n            }], _customIcon: [{\n                type: ContentChild,\n                args: [MatDatepickerToggleIcon]\n            }], _button: [{\n                type: ViewChild,\n                args: ['button']\n            }] } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Used to provide the date range input wrapper component\n * to the parts without circular dependencies.\n */\nconst MAT_DATE_RANGE_INPUT_PARENT = new InjectionToken('MAT_DATE_RANGE_INPUT_PARENT');\n/**\n * Base class for the individual inputs that can be projected inside a `mat-date-range-input`.\n */\nclass MatDateRangeInputPartBase extends MatDatepickerInputBase {\n    constructor(_rangeInput, elementRef, _defaultErrorStateMatcher, _injector, _parentForm, _parentFormGroup, dateAdapter, dateFormats) {\n        super(elementRef, dateAdapter, dateFormats);\n        this._rangeInput = _rangeInput;\n        this._defaultErrorStateMatcher = _defaultErrorStateMatcher;\n        this._injector = _injector;\n        this._parentForm = _parentForm;\n        this._parentFormGroup = _parentFormGroup;\n    }\n    ngOnInit() {\n        // We need the date input to provide itself as a `ControlValueAccessor` and a `Validator`, while\n        // injecting its `NgControl` so that the error state is handled correctly. This introduces a\n        // circular dependency, because both `ControlValueAccessor` and `Validator` depend on the input\n        // itself. Usually we can work around it for the CVA, but there's no API to do it for the\n        // validator. We work around it here by injecting the `NgControl` in `ngOnInit`, after\n        // everything has been resolved.\n        // tslint:disable-next-line:no-bitwise\n        const ngControl = this._injector.get(NgControl, null, InjectFlags.Self | InjectFlags.Optional);\n        if (ngControl) {\n            this.ngControl = ngControl;\n        }\n    }\n    ngDoCheck() {\n        if (this.ngControl) {\n            // We need to re-evaluate this on every change detection cycle, because there are some\n            // error triggers that we can't subscribe to (e.g. parent form submissions). This means\n            // that whatever logic is in here has to be super lean or we risk destroying the performance.\n            this.updateErrorState();\n        }\n    }\n    /** Gets whether the input is empty. */\n    isEmpty() {\n        return this._elementRef.nativeElement.value.length === 0;\n    }\n    /** Gets the placeholder of the input. */\n    _getPlaceholder() {\n        return this._elementRef.nativeElement.placeholder;\n    }\n    /** Focuses the input. */\n    focus() {\n        this._elementRef.nativeElement.focus();\n    }\n    /** Handles `input` events on the input element. */\n    _onInput(value) {\n        super._onInput(value);\n        this._rangeInput._handleChildValueChange();\n    }\n    /** Opens the datepicker associated with the input. */\n    _openPopup() {\n        this._rangeInput._openDatepicker();\n    }\n    /** Gets the minimum date from the range input. */\n    _getMinDate() {\n        return this._rangeInput.min;\n    }\n    /** Gets the maximum date from the range input. */\n    _getMaxDate() {\n        return this._rangeInput.max;\n    }\n    /** Gets the date filter function from the range input. */\n    _getDateFilter() {\n        return this._rangeInput.dateFilter;\n    }\n    _parentDisabled() {\n        return this._rangeInput._groupDisabled;\n    }\n    _shouldHandleChangeEvent({ source }) {\n        return source !== this._rangeInput._startInput && source !== this._rangeInput._endInput;\n    }\n    _assignValueProgrammatically(value) {\n        super._assignValueProgrammatically(value);\n        const opposite = (this === this._rangeInput._startInput\n            ? this._rangeInput._endInput\n            : this._rangeInput._startInput);\n        opposite === null || opposite === void 0 ? void 0 : opposite._validatorOnChange();\n    }\n}\nMatDateRangeInputPartBase.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatDateRangeInputPartBase, deps: [{ token: MAT_DATE_RANGE_INPUT_PARENT }, { token: i0.ElementRef }, { token: i1$1.ErrorStateMatcher }, { token: i0.Injector }, { token: i2$2.NgForm, optional: true }, { token: i2$2.FormGroupDirective, optional: true }, { token: i1$1.DateAdapter, optional: true }, { token: MAT_DATE_FORMATS, optional: true }], target: i0.ɵɵFactoryTarget.Directive });\nMatDateRangeInputPartBase.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.1.0\", type: MatDateRangeInputPartBase, usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatDateRangeInputPartBase, decorators: [{\n            type: Directive\n        }], ctorParameters: function () {\n        return [{ type: undefined, decorators: [{\n                        type: Inject,\n                        args: [MAT_DATE_RANGE_INPUT_PARENT]\n                    }] }, { type: i0.ElementRef }, { type: i1$1.ErrorStateMatcher }, { type: i0.Injector }, { type: i2$2.NgForm, decorators: [{\n                        type: Optional\n                    }] }, { type: i2$2.FormGroupDirective, decorators: [{\n                        type: Optional\n                    }] }, { type: i1$1.DateAdapter, decorators: [{\n                        type: Optional\n                    }] }, { type: undefined, decorators: [{\n                        type: Optional\n                    }, {\n                        type: Inject,\n                        args: [MAT_DATE_FORMATS]\n                    }] }];\n    } });\nconst _MatDateRangeInputBase = mixinErrorState(MatDateRangeInputPartBase);\n/** Input for entering the start date in a `mat-date-range-input`. */\nclass MatStartDate extends _MatDateRangeInputBase {\n    constructor(rangeInput, elementRef, defaultErrorStateMatcher, injector, parentForm, parentFormGroup, dateAdapter, dateFormats) {\n        super(rangeInput, elementRef, defaultErrorStateMatcher, injector, parentForm, parentFormGroup, dateAdapter, dateFormats);\n        /** Validator that checks that the start date isn't after the end date. */\n        this._startValidator = (control) => {\n            const start = this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(control.value));\n            const end = this._model ? this._model.selection.end : null;\n            return !start || !end || this._dateAdapter.compareDate(start, end) <= 0\n                ? null\n                : { 'matStartDateInvalid': { 'end': end, 'actual': start } };\n        };\n        this._validator = Validators.compose([...super._getValidators(), this._startValidator]);\n    }\n    _getValueFromModel(modelValue) {\n        return modelValue.start;\n    }\n    _shouldHandleChangeEvent(change) {\n        var _a;\n        if (!super._shouldHandleChangeEvent(change)) {\n            return false;\n        }\n        else {\n            return !((_a = change.oldValue) === null || _a === void 0 ? void 0 : _a.start)\n                ? !!change.selection.start\n                : !change.selection.start ||\n                    !!this._dateAdapter.compareDate(change.oldValue.start, change.selection.start);\n        }\n    }\n    _assignValueToModel(value) {\n        if (this._model) {\n            const range = new DateRange(value, this._model.selection.end);\n            this._model.updateSelection(range, this);\n        }\n    }\n    _formatValue(value) {\n        super._formatValue(value);\n        // Any time the input value is reformatted we need to tell the parent.\n        this._rangeInput._handleChildValueChange();\n    }\n    /** Gets the value that should be used when mirroring the input's size. */\n    getMirrorValue() {\n        const element = this._elementRef.nativeElement;\n        const value = element.value;\n        return value.length > 0 ? value : element.placeholder;\n    }\n}\nMatStartDate.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatStartDate, deps: [{ token: MAT_DATE_RANGE_INPUT_PARENT }, { token: i0.ElementRef }, { token: i1$1.ErrorStateMatcher }, { token: i0.Injector }, { token: i2$2.NgForm, optional: true }, { token: i2$2.FormGroupDirective, optional: true }, { token: i1$1.DateAdapter, optional: true }, { token: MAT_DATE_FORMATS, optional: true }], target: i0.ɵɵFactoryTarget.Directive });\nMatStartDate.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.1.0\", type: MatStartDate, selector: \"input[matStartDate]\", inputs: { errorStateMatcher: \"errorStateMatcher\" }, outputs: { dateChange: \"dateChange\", dateInput: \"dateInput\" }, host: { attributes: { \"type\": \"text\" }, listeners: { \"input\": \"_onInput($event.target.value)\", \"change\": \"_onChange()\", \"keydown\": \"_onKeydown($event)\", \"blur\": \"_onBlur()\" }, properties: { \"disabled\": \"disabled\", \"attr.id\": \"_rangeInput.id\", \"attr.aria-haspopup\": \"_rangeInput.rangePicker ? \\\"dialog\\\" : null\", \"attr.aria-owns\": \"(_rangeInput.rangePicker?.opened && _rangeInput.rangePicker.id) || null\", \"attr.min\": \"_getMinDate() ? _dateAdapter.toIso8601(_getMinDate()) : null\", \"attr.max\": \"_getMaxDate() ? _dateAdapter.toIso8601(_getMaxDate()) : null\" }, classAttribute: \"mat-start-date mat-date-range-input-inner\" }, providers: [\n        { provide: NG_VALUE_ACCESSOR, useExisting: MatStartDate, multi: true },\n        { provide: NG_VALIDATORS, useExisting: MatStartDate, multi: true },\n    ], usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatStartDate, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'input[matStartDate]',\n                    host: {\n                        'class': 'mat-start-date mat-date-range-input-inner',\n                        '[disabled]': 'disabled',\n                        '(input)': '_onInput($event.target.value)',\n                        '(change)': '_onChange()',\n                        '(keydown)': '_onKeydown($event)',\n                        '[attr.id]': '_rangeInput.id',\n                        '[attr.aria-haspopup]': '_rangeInput.rangePicker ? \"dialog\" : null',\n                        '[attr.aria-owns]': '(_rangeInput.rangePicker?.opened && _rangeInput.rangePicker.id) || null',\n                        '[attr.min]': '_getMinDate() ? _dateAdapter.toIso8601(_getMinDate()) : null',\n                        '[attr.max]': '_getMaxDate() ? _dateAdapter.toIso8601(_getMaxDate()) : null',\n                        '(blur)': '_onBlur()',\n                        'type': 'text',\n                    },\n                    providers: [\n                        { provide: NG_VALUE_ACCESSOR, useExisting: MatStartDate, multi: true },\n                        { provide: NG_VALIDATORS, useExisting: MatStartDate, multi: true },\n                    ],\n                    // These need to be specified explicitly, because some tooling doesn't\n                    // seem to pick them up from the base class. See #20932.\n                    outputs: ['dateChange', 'dateInput'],\n                    inputs: ['errorStateMatcher'],\n                }]\n        }], ctorParameters: function () {\n        return [{ type: undefined, decorators: [{\n                        type: Inject,\n                        args: [MAT_DATE_RANGE_INPUT_PARENT]\n                    }] }, { type: i0.ElementRef }, { type: i1$1.ErrorStateMatcher }, { type: i0.Injector }, { type: i2$2.NgForm, decorators: [{\n                        type: Optional\n                    }] }, { type: i2$2.FormGroupDirective, decorators: [{\n                        type: Optional\n                    }] }, { type: i1$1.DateAdapter, decorators: [{\n                        type: Optional\n                    }] }, { type: undefined, decorators: [{\n                        type: Optional\n                    }, {\n                        type: Inject,\n                        args: [MAT_DATE_FORMATS]\n                    }] }];\n    } });\n/** Input for entering the end date in a `mat-date-range-input`. */\nclass MatEndDate extends _MatDateRangeInputBase {\n    constructor(rangeInput, elementRef, defaultErrorStateMatcher, injector, parentForm, parentFormGroup, dateAdapter, dateFormats) {\n        super(rangeInput, elementRef, defaultErrorStateMatcher, injector, parentForm, parentFormGroup, dateAdapter, dateFormats);\n        /** Validator that checks that the end date isn't before the start date. */\n        this._endValidator = (control) => {\n            const end = this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(control.value));\n            const start = this._model ? this._model.selection.start : null;\n            return !end || !start || this._dateAdapter.compareDate(end, start) >= 0\n                ? null\n                : { 'matEndDateInvalid': { 'start': start, 'actual': end } };\n        };\n        this._validator = Validators.compose([...super._getValidators(), this._endValidator]);\n    }\n    _getValueFromModel(modelValue) {\n        return modelValue.end;\n    }\n    _shouldHandleChangeEvent(change) {\n        var _a;\n        if (!super._shouldHandleChangeEvent(change)) {\n            return false;\n        }\n        else {\n            return !((_a = change.oldValue) === null || _a === void 0 ? void 0 : _a.end)\n                ? !!change.selection.end\n                : !change.selection.end ||\n                    !!this._dateAdapter.compareDate(change.oldValue.end, change.selection.end);\n        }\n    }\n    _assignValueToModel(value) {\n        if (this._model) {\n            const range = new DateRange(this._model.selection.start, value);\n            this._model.updateSelection(range, this);\n        }\n    }\n    _onKeydown(event) {\n        // If the user is pressing backspace on an empty end input, move focus back to the start.\n        if (event.keyCode === BACKSPACE && !this._elementRef.nativeElement.value) {\n            this._rangeInput._startInput.focus();\n        }\n        super._onKeydown(event);\n    }\n}\nMatEndDate.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatEndDate, deps: [{ token: MAT_DATE_RANGE_INPUT_PARENT }, { token: i0.ElementRef }, { token: i1$1.ErrorStateMatcher }, { token: i0.Injector }, { token: i2$2.NgForm, optional: true }, { token: i2$2.FormGroupDirective, optional: true }, { token: i1$1.DateAdapter, optional: true }, { token: MAT_DATE_FORMATS, optional: true }], target: i0.ɵɵFactoryTarget.Directive });\nMatEndDate.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.1.0\", type: MatEndDate, selector: \"input[matEndDate]\", inputs: { errorStateMatcher: \"errorStateMatcher\" }, outputs: { dateChange: \"dateChange\", dateInput: \"dateInput\" }, host: { attributes: { \"type\": \"text\" }, listeners: { \"input\": \"_onInput($event.target.value)\", \"change\": \"_onChange()\", \"keydown\": \"_onKeydown($event)\", \"blur\": \"_onBlur()\" }, properties: { \"disabled\": \"disabled\", \"attr.aria-haspopup\": \"_rangeInput.rangePicker ? \\\"dialog\\\" : null\", \"attr.aria-owns\": \"(_rangeInput.rangePicker?.opened && _rangeInput.rangePicker.id) || null\", \"attr.min\": \"_getMinDate() ? _dateAdapter.toIso8601(_getMinDate()) : null\", \"attr.max\": \"_getMaxDate() ? _dateAdapter.toIso8601(_getMaxDate()) : null\" }, classAttribute: \"mat-end-date mat-date-range-input-inner\" }, providers: [\n        { provide: NG_VALUE_ACCESSOR, useExisting: MatEndDate, multi: true },\n        { provide: NG_VALIDATORS, useExisting: MatEndDate, multi: true },\n    ], usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatEndDate, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'input[matEndDate]',\n                    host: {\n                        'class': 'mat-end-date mat-date-range-input-inner',\n                        '[disabled]': 'disabled',\n                        '(input)': '_onInput($event.target.value)',\n                        '(change)': '_onChange()',\n                        '(keydown)': '_onKeydown($event)',\n                        '[attr.aria-haspopup]': '_rangeInput.rangePicker ? \"dialog\" : null',\n                        '[attr.aria-owns]': '(_rangeInput.rangePicker?.opened && _rangeInput.rangePicker.id) || null',\n                        '[attr.min]': '_getMinDate() ? _dateAdapter.toIso8601(_getMinDate()) : null',\n                        '[attr.max]': '_getMaxDate() ? _dateAdapter.toIso8601(_getMaxDate()) : null',\n                        '(blur)': '_onBlur()',\n                        'type': 'text',\n                    },\n                    providers: [\n                        { provide: NG_VALUE_ACCESSOR, useExisting: MatEndDate, multi: true },\n                        { provide: NG_VALIDATORS, useExisting: MatEndDate, multi: true },\n                    ],\n                    // These need to be specified explicitly, because some tooling doesn't\n                    // seem to pick them up from the base class. See #20932.\n                    outputs: ['dateChange', 'dateInput'],\n                    inputs: ['errorStateMatcher'],\n                }]\n        }], ctorParameters: function () {\n        return [{ type: undefined, decorators: [{\n                        type: Inject,\n                        args: [MAT_DATE_RANGE_INPUT_PARENT]\n                    }] }, { type: i0.ElementRef }, { type: i1$1.ErrorStateMatcher }, { type: i0.Injector }, { type: i2$2.NgForm, decorators: [{\n                        type: Optional\n                    }] }, { type: i2$2.FormGroupDirective, decorators: [{\n                        type: Optional\n                    }] }, { type: i1$1.DateAdapter, decorators: [{\n                        type: Optional\n                    }] }, { type: undefined, decorators: [{\n                        type: Optional\n                    }, {\n                        type: Inject,\n                        args: [MAT_DATE_FORMATS]\n                    }] }];\n    } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nlet nextUniqueId = 0;\nclass MatDateRangeInput {\n    constructor(_changeDetectorRef, _elementRef, control, _dateAdapter, _formField) {\n        this._changeDetectorRef = _changeDetectorRef;\n        this._elementRef = _elementRef;\n        this._dateAdapter = _dateAdapter;\n        this._formField = _formField;\n        this._closedSubscription = Subscription.EMPTY;\n        /** Unique ID for the input. */\n        this.id = `mat-date-range-input-${nextUniqueId++}`;\n        /** Whether the control is focused. */\n        this.focused = false;\n        /** Name of the form control. */\n        this.controlType = 'mat-date-range-input';\n        this._groupDisabled = false;\n        /** Value for the `aria-describedby` attribute of the inputs. */\n        this._ariaDescribedBy = null;\n        /** Separator text to be shown between the inputs. */\n        this.separator = '–';\n        /** Start of the comparison range that should be shown in the calendar. */\n        this.comparisonStart = null;\n        /** End of the comparison range that should be shown in the calendar. */\n        this.comparisonEnd = null;\n        /** Emits when the input's state has changed. */\n        this.stateChanges = new Subject();\n        if (!_dateAdapter && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw createMissingDateImplError('DateAdapter');\n        }\n        // The datepicker module can be used both with MDC and non-MDC form fields. We have\n        // to conditionally add the MDC input class so that the range picker looks correctly.\n        if (_formField === null || _formField === void 0 ? void 0 : _formField._elementRef.nativeElement.classList.contains('mat-mdc-form-field')) {\n            const classList = _elementRef.nativeElement.classList;\n            classList.add('mat-mdc-input-element');\n            classList.add('mat-mdc-form-field-input-control');\n        }\n        // TODO(crisbeto): remove `as any` after #18206 lands.\n        this.ngControl = control;\n    }\n    /** Current value of the range input. */\n    get value() {\n        return this._model ? this._model.selection : null;\n    }\n    /** Whether the control's label should float. */\n    get shouldLabelFloat() {\n        return this.focused || !this.empty;\n    }\n    /**\n     * Implemented as a part of `MatFormFieldControl`.\n     * Set the placeholder attribute on `matStartDate` and `matEndDate`.\n     * @docs-private\n     */\n    get placeholder() {\n        var _a, _b;\n        const start = ((_a = this._startInput) === null || _a === void 0 ? void 0 : _a._getPlaceholder()) || '';\n        const end = ((_b = this._endInput) === null || _b === void 0 ? void 0 : _b._getPlaceholder()) || '';\n        return start || end ? `${start} ${this.separator} ${end}` : '';\n    }\n    /** The range picker that this input is associated with. */\n    get rangePicker() {\n        return this._rangePicker;\n    }\n    set rangePicker(rangePicker) {\n        if (rangePicker) {\n            this._model = rangePicker.registerInput(this);\n            this._rangePicker = rangePicker;\n            this._closedSubscription.unsubscribe();\n            this._closedSubscription = rangePicker.closedStream.subscribe(() => {\n                var _a, _b;\n                (_a = this._startInput) === null || _a === void 0 ? void 0 : _a._onTouched();\n                (_b = this._endInput) === null || _b === void 0 ? void 0 : _b._onTouched();\n            });\n            this._registerModel(this._model);\n        }\n    }\n    /** Whether the input is required. */\n    get required() {\n        return !!this._required;\n    }\n    set required(value) {\n        this._required = coerceBooleanProperty(value);\n    }\n    /** Function that can be used to filter out dates within the date range picker. */\n    get dateFilter() {\n        return this._dateFilter;\n    }\n    set dateFilter(value) {\n        const start = this._startInput;\n        const end = this._endInput;\n        const wasMatchingStart = start && start._matchesFilter(start.value);\n        const wasMatchingEnd = end && end._matchesFilter(start.value);\n        this._dateFilter = value;\n        if (start && start._matchesFilter(start.value) !== wasMatchingStart) {\n            start._validatorOnChange();\n        }\n        if (end && end._matchesFilter(end.value) !== wasMatchingEnd) {\n            end._validatorOnChange();\n        }\n    }\n    /** The minimum valid date. */\n    get min() {\n        return this._min;\n    }\n    set min(value) {\n        const validValue = this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(value));\n        if (!this._dateAdapter.sameDate(validValue, this._min)) {\n            this._min = validValue;\n            this._revalidate();\n        }\n    }\n    /** The maximum valid date. */\n    get max() {\n        return this._max;\n    }\n    set max(value) {\n        const validValue = this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(value));\n        if (!this._dateAdapter.sameDate(validValue, this._max)) {\n            this._max = validValue;\n            this._revalidate();\n        }\n    }\n    /** Whether the input is disabled. */\n    get disabled() {\n        return this._startInput && this._endInput\n            ? this._startInput.disabled && this._endInput.disabled\n            : this._groupDisabled;\n    }\n    set disabled(value) {\n        const newValue = coerceBooleanProperty(value);\n        if (newValue !== this._groupDisabled) {\n            this._groupDisabled = newValue;\n            this.stateChanges.next(undefined);\n        }\n    }\n    /** Whether the input is in an error state. */\n    get errorState() {\n        if (this._startInput && this._endInput) {\n            return this._startInput.errorState || this._endInput.errorState;\n        }\n        return false;\n    }\n    /** Whether the datepicker input is empty. */\n    get empty() {\n        const startEmpty = this._startInput ? this._startInput.isEmpty() : false;\n        const endEmpty = this._endInput ? this._endInput.isEmpty() : false;\n        return startEmpty && endEmpty;\n    }\n    /**\n     * Implemented as a part of `MatFormFieldControl`.\n     * @docs-private\n     */\n    setDescribedByIds(ids) {\n        this._ariaDescribedBy = ids.length ? ids.join(' ') : null;\n    }\n    /**\n     * Implemented as a part of `MatFormFieldControl`.\n     * @docs-private\n     */\n    onContainerClick() {\n        if (!this.focused && !this.disabled) {\n            if (!this._model || !this._model.selection.start) {\n                this._startInput.focus();\n            }\n            else {\n                this._endInput.focus();\n            }\n        }\n    }\n    ngAfterContentInit() {\n        if (typeof ngDevMode === 'undefined' || ngDevMode) {\n            if (!this._startInput) {\n                throw Error('mat-date-range-input must contain a matStartDate input');\n            }\n            if (!this._endInput) {\n                throw Error('mat-date-range-input must contain a matEndDate input');\n            }\n        }\n        if (this._model) {\n            this._registerModel(this._model);\n        }\n        // We don't need to unsubscribe from this, because we\n        // know that the input streams will be completed on destroy.\n        merge(this._startInput.stateChanges, this._endInput.stateChanges).subscribe(() => {\n            this.stateChanges.next(undefined);\n        });\n    }\n    ngOnChanges(changes) {\n        if (dateInputsHaveChanged(changes, this._dateAdapter)) {\n            this.stateChanges.next(undefined);\n        }\n    }\n    ngOnDestroy() {\n        this._closedSubscription.unsubscribe();\n        this.stateChanges.complete();\n    }\n    /** Gets the date at which the calendar should start. */\n    getStartValue() {\n        return this.value ? this.value.start : null;\n    }\n    /** Gets the input's theme palette. */\n    getThemePalette() {\n        return this._formField ? this._formField.color : undefined;\n    }\n    /** Gets the element to which the calendar overlay should be attached. */\n    getConnectedOverlayOrigin() {\n        return this._formField ? this._formField.getConnectedOverlayOrigin() : this._elementRef;\n    }\n    /** Gets the ID of an element that should be used a description for the calendar overlay. */\n    getOverlayLabelId() {\n        return this._formField ? this._formField.getLabelId() : null;\n    }\n    /** Gets the value that is used to mirror the state input. */\n    _getInputMirrorValue() {\n        return this._startInput ? this._startInput.getMirrorValue() : '';\n    }\n    /** Whether the input placeholders should be hidden. */\n    _shouldHidePlaceholders() {\n        return this._startInput ? !this._startInput.isEmpty() : false;\n    }\n    /** Handles the value in one of the child inputs changing. */\n    _handleChildValueChange() {\n        this.stateChanges.next(undefined);\n        this._changeDetectorRef.markForCheck();\n    }\n    /** Opens the date range picker associated with the input. */\n    _openDatepicker() {\n        if (this._rangePicker) {\n            this._rangePicker.open();\n        }\n    }\n    /** Whether the separate text should be hidden. */\n    _shouldHideSeparator() {\n        return ((!this._formField ||\n            (this._formField.getLabelId() && !this._formField._shouldLabelFloat())) &&\n            this.empty);\n    }\n    /** Gets the value for the `aria-labelledby` attribute of the inputs. */\n    _getAriaLabelledby() {\n        const formField = this._formField;\n        return formField && formField._hasFloatingLabel() ? formField._labelId : null;\n    }\n    /** Updates the focused state of the range input. */\n    _updateFocus(origin) {\n        this.focused = origin !== null;\n        this.stateChanges.next();\n    }\n    /** Re-runs the validators on the start/end inputs. */\n    _revalidate() {\n        if (this._startInput) {\n            this._startInput._validatorOnChange();\n        }\n        if (this._endInput) {\n            this._endInput._validatorOnChange();\n        }\n    }\n    /** Registers the current date selection model with the start/end inputs. */\n    _registerModel(model) {\n        if (this._startInput) {\n            this._startInput._registerModel(model);\n        }\n        if (this._endInput) {\n            this._endInput._registerModel(model);\n        }\n    }\n}\nMatDateRangeInput.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatDateRangeInput, deps: [{ token: i0.ChangeDetectorRef }, { token: i0.ElementRef }, { token: i2$2.ControlContainer, optional: true, self: true }, { token: i1$1.DateAdapter, optional: true }, { token: MAT_FORM_FIELD, optional: true }], target: i0.ɵɵFactoryTarget.Component });\nMatDateRangeInput.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: MatDateRangeInput, selector: \"mat-date-range-input\", inputs: { rangePicker: \"rangePicker\", required: \"required\", dateFilter: \"dateFilter\", min: \"min\", max: \"max\", disabled: \"disabled\", separator: \"separator\", comparisonStart: \"comparisonStart\", comparisonEnd: \"comparisonEnd\" }, host: { attributes: { \"role\": \"group\" }, properties: { \"class.mat-date-range-input-hide-placeholders\": \"_shouldHidePlaceholders()\", \"class.mat-date-range-input-required\": \"required\", \"attr.id\": \"null\", \"attr.aria-labelledby\": \"_getAriaLabelledby()\", \"attr.aria-describedby\": \"_ariaDescribedBy\", \"attr.data-mat-calendar\": \"rangePicker ? rangePicker.id : null\" }, classAttribute: \"mat-date-range-input\" }, providers: [\n        { provide: MatFormFieldControl, useExisting: MatDateRangeInput },\n        { provide: MAT_DATE_RANGE_INPUT_PARENT, useExisting: MatDateRangeInput },\n    ], queries: [{ propertyName: \"_startInput\", first: true, predicate: MatStartDate, descendants: true }, { propertyName: \"_endInput\", first: true, predicate: MatEndDate, descendants: true }], exportAs: [\"matDateRangeInput\"], usesOnChanges: true, ngImport: i0, template: \"<div\\n  class=\\\"mat-date-range-input-container\\\"\\n  cdkMonitorSubtreeFocus\\n  (cdkFocusChange)=\\\"_updateFocus($event)\\\">\\n  <div class=\\\"mat-date-range-input-start-wrapper\\\">\\n    <ng-content select=\\\"input[matStartDate]\\\"></ng-content>\\n    <span\\n      class=\\\"mat-date-range-input-mirror\\\"\\n      aria-hidden=\\\"true\\\">{{_getInputMirrorValue()}}</span>\\n  </div>\\n\\n  <span\\n    class=\\\"mat-date-range-input-separator\\\"\\n    [class.mat-date-range-input-separator-hidden]=\\\"_shouldHideSeparator()\\\">{{separator}}</span>\\n\\n  <div class=\\\"mat-date-range-input-end-wrapper\\\">\\n    <ng-content select=\\\"input[matEndDate]\\\"></ng-content>\\n  </div>\\n</div>\\n\\n\", styles: [\".mat-date-range-input{display:block;width:100%}.mat-date-range-input-container{display:flex;align-items:center}.mat-date-range-input-separator{transition:opacity 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1);margin:0 4px}.mat-date-range-input-separator-hidden{-webkit-user-select:none;-moz-user-select:none;user-select:none;opacity:0;transition:none}.mat-date-range-input-inner{font:inherit;background:transparent;color:currentColor;border:none;outline:none;padding:0;margin:0;vertical-align:bottom;text-align:inherit;-webkit-appearance:none;width:100%}.mat-date-range-input-inner:-moz-ui-invalid{box-shadow:none}.mat-date-range-input-inner::placeholder{transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-date-range-input-inner::-moz-placeholder{transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-date-range-input-inner::-webkit-input-placeholder{transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-date-range-input-inner:-ms-input-placeholder{transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-hide-placeholder .mat-date-range-input-inner::placeholder,.mat-date-range-input-hide-placeholders .mat-date-range-input-inner::placeholder{-webkit-user-select:none;-moz-user-select:none;user-select:none;color:transparent !important;-webkit-text-fill-color:transparent;transition:none}.cdk-high-contrast-active .mat-form-field-hide-placeholder .mat-date-range-input-inner::placeholder,.cdk-high-contrast-active .mat-date-range-input-hide-placeholders .mat-date-range-input-inner::placeholder{opacity:0}.mat-form-field-hide-placeholder .mat-date-range-input-inner::-moz-placeholder,.mat-date-range-input-hide-placeholders .mat-date-range-input-inner::-moz-placeholder{-webkit-user-select:none;-moz-user-select:none;user-select:none;color:transparent !important;-webkit-text-fill-color:transparent;transition:none}.cdk-high-contrast-active .mat-form-field-hide-placeholder .mat-date-range-input-inner::-moz-placeholder,.cdk-high-contrast-active .mat-date-range-input-hide-placeholders .mat-date-range-input-inner::-moz-placeholder{opacity:0}.mat-form-field-hide-placeholder .mat-date-range-input-inner::-webkit-input-placeholder,.mat-date-range-input-hide-placeholders .mat-date-range-input-inner::-webkit-input-placeholder{-webkit-user-select:none;-moz-user-select:none;user-select:none;color:transparent !important;-webkit-text-fill-color:transparent;transition:none}.cdk-high-contrast-active .mat-form-field-hide-placeholder .mat-date-range-input-inner::-webkit-input-placeholder,.cdk-high-contrast-active .mat-date-range-input-hide-placeholders .mat-date-range-input-inner::-webkit-input-placeholder{opacity:0}.mat-form-field-hide-placeholder .mat-date-range-input-inner:-ms-input-placeholder,.mat-date-range-input-hide-placeholders .mat-date-range-input-inner:-ms-input-placeholder{-webkit-user-select:none;-moz-user-select:none;user-select:none;color:transparent !important;-webkit-text-fill-color:transparent;transition:none}.cdk-high-contrast-active .mat-form-field-hide-placeholder .mat-date-range-input-inner:-ms-input-placeholder,.cdk-high-contrast-active .mat-date-range-input-hide-placeholders .mat-date-range-input-inner:-ms-input-placeholder{opacity:0}.mat-date-range-input-mirror{-webkit-user-select:none;-moz-user-select:none;user-select:none;visibility:hidden;white-space:nowrap;display:inline-block;min-width:2px}.mat-date-range-input-start-wrapper{position:relative;overflow:hidden;max-width:calc(50% - 4px)}.mat-date-range-input-start-wrapper .mat-date-range-input-inner{position:absolute;top:0;left:0}.mat-date-range-input-end-wrapper{flex-grow:1;max-width:calc(50% - 4px)}.mat-form-field-type-mat-date-range-input .mat-form-field-infix{width:200px}\\n\"], directives: [{ type: i4.CdkMonitorFocus, selector: \"[cdkMonitorElementFocus], [cdkMonitorSubtreeFocus]\", outputs: [\"cdkFocusChange\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatDateRangeInput, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-date-range-input', exportAs: 'matDateRangeInput', host: {\n                        'class': 'mat-date-range-input',\n                        '[class.mat-date-range-input-hide-placeholders]': '_shouldHidePlaceholders()',\n                        '[class.mat-date-range-input-required]': 'required',\n                        '[attr.id]': 'null',\n                        'role': 'group',\n                        '[attr.aria-labelledby]': '_getAriaLabelledby()',\n                        '[attr.aria-describedby]': '_ariaDescribedBy',\n                        // Used by the test harness to tie this input to its calendar. We can't depend on\n                        // `aria-owns` for this, because it's only defined while the calendar is open.\n                        '[attr.data-mat-calendar]': 'rangePicker ? rangePicker.id : null',\n                    }, changeDetection: ChangeDetectionStrategy.OnPush, encapsulation: ViewEncapsulation.None, providers: [\n                        { provide: MatFormFieldControl, useExisting: MatDateRangeInput },\n                        { provide: MAT_DATE_RANGE_INPUT_PARENT, useExisting: MatDateRangeInput },\n                    ], template: \"<div\\n  class=\\\"mat-date-range-input-container\\\"\\n  cdkMonitorSubtreeFocus\\n  (cdkFocusChange)=\\\"_updateFocus($event)\\\">\\n  <div class=\\\"mat-date-range-input-start-wrapper\\\">\\n    <ng-content select=\\\"input[matStartDate]\\\"></ng-content>\\n    <span\\n      class=\\\"mat-date-range-input-mirror\\\"\\n      aria-hidden=\\\"true\\\">{{_getInputMirrorValue()}}</span>\\n  </div>\\n\\n  <span\\n    class=\\\"mat-date-range-input-separator\\\"\\n    [class.mat-date-range-input-separator-hidden]=\\\"_shouldHideSeparator()\\\">{{separator}}</span>\\n\\n  <div class=\\\"mat-date-range-input-end-wrapper\\\">\\n    <ng-content select=\\\"input[matEndDate]\\\"></ng-content>\\n  </div>\\n</div>\\n\\n\", styles: [\".mat-date-range-input{display:block;width:100%}.mat-date-range-input-container{display:flex;align-items:center}.mat-date-range-input-separator{transition:opacity 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1);margin:0 4px}.mat-date-range-input-separator-hidden{-webkit-user-select:none;-moz-user-select:none;user-select:none;opacity:0;transition:none}.mat-date-range-input-inner{font:inherit;background:transparent;color:currentColor;border:none;outline:none;padding:0;margin:0;vertical-align:bottom;text-align:inherit;-webkit-appearance:none;width:100%}.mat-date-range-input-inner:-moz-ui-invalid{box-shadow:none}.mat-date-range-input-inner::placeholder{transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-date-range-input-inner::-moz-placeholder{transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-date-range-input-inner::-webkit-input-placeholder{transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-date-range-input-inner:-ms-input-placeholder{transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-hide-placeholder .mat-date-range-input-inner::placeholder,.mat-date-range-input-hide-placeholders .mat-date-range-input-inner::placeholder{-webkit-user-select:none;-moz-user-select:none;user-select:none;color:transparent !important;-webkit-text-fill-color:transparent;transition:none}.cdk-high-contrast-active .mat-form-field-hide-placeholder .mat-date-range-input-inner::placeholder,.cdk-high-contrast-active .mat-date-range-input-hide-placeholders .mat-date-range-input-inner::placeholder{opacity:0}.mat-form-field-hide-placeholder .mat-date-range-input-inner::-moz-placeholder,.mat-date-range-input-hide-placeholders .mat-date-range-input-inner::-moz-placeholder{-webkit-user-select:none;-moz-user-select:none;user-select:none;color:transparent !important;-webkit-text-fill-color:transparent;transition:none}.cdk-high-contrast-active .mat-form-field-hide-placeholder .mat-date-range-input-inner::-moz-placeholder,.cdk-high-contrast-active .mat-date-range-input-hide-placeholders .mat-date-range-input-inner::-moz-placeholder{opacity:0}.mat-form-field-hide-placeholder .mat-date-range-input-inner::-webkit-input-placeholder,.mat-date-range-input-hide-placeholders .mat-date-range-input-inner::-webkit-input-placeholder{-webkit-user-select:none;-moz-user-select:none;user-select:none;color:transparent !important;-webkit-text-fill-color:transparent;transition:none}.cdk-high-contrast-active .mat-form-field-hide-placeholder .mat-date-range-input-inner::-webkit-input-placeholder,.cdk-high-contrast-active .mat-date-range-input-hide-placeholders .mat-date-range-input-inner::-webkit-input-placeholder{opacity:0}.mat-form-field-hide-placeholder .mat-date-range-input-inner:-ms-input-placeholder,.mat-date-range-input-hide-placeholders .mat-date-range-input-inner:-ms-input-placeholder{-webkit-user-select:none;-moz-user-select:none;user-select:none;color:transparent !important;-webkit-text-fill-color:transparent;transition:none}.cdk-high-contrast-active .mat-form-field-hide-placeholder .mat-date-range-input-inner:-ms-input-placeholder,.cdk-high-contrast-active .mat-date-range-input-hide-placeholders .mat-date-range-input-inner:-ms-input-placeholder{opacity:0}.mat-date-range-input-mirror{-webkit-user-select:none;-moz-user-select:none;user-select:none;visibility:hidden;white-space:nowrap;display:inline-block;min-width:2px}.mat-date-range-input-start-wrapper{position:relative;overflow:hidden;max-width:calc(50% - 4px)}.mat-date-range-input-start-wrapper .mat-date-range-input-inner{position:absolute;top:0;left:0}.mat-date-range-input-end-wrapper{flex-grow:1;max-width:calc(50% - 4px)}.mat-form-field-type-mat-date-range-input .mat-form-field-infix{width:200px}\\n\"] }]\n        }], ctorParameters: function () {\n        return [{ type: i0.ChangeDetectorRef }, { type: i0.ElementRef }, { type: i2$2.ControlContainer, decorators: [{\n                        type: Optional\n                    }, {\n                        type: Self\n                    }] }, { type: i1$1.DateAdapter, decorators: [{\n                        type: Optional\n                    }] }, { type: i2$1.MatFormField, decorators: [{\n                        type: Optional\n                    }, {\n                        type: Inject,\n                        args: [MAT_FORM_FIELD]\n                    }] }];\n    }, propDecorators: { rangePicker: [{\n                type: Input\n            }], required: [{\n                type: Input\n            }], dateFilter: [{\n                type: Input\n            }], min: [{\n                type: Input\n            }], max: [{\n                type: Input\n            }], disabled: [{\n                type: Input\n            }], separator: [{\n                type: Input\n            }], comparisonStart: [{\n                type: Input\n            }], comparisonEnd: [{\n                type: Input\n            }], _startInput: [{\n                type: ContentChild,\n                args: [MatStartDate]\n            }], _endInput: [{\n                type: ContentChild,\n                args: [MatEndDate]\n            }] } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// TODO(mmalerba): We use a component instead of a directive here so the user can use implicit\n// template reference variables (e.g. #d vs #d=\"matDateRangePicker\"). We can change this to a\n// directive if angular adds support for `exportAs: '$implicit'` on directives.\n/** Component responsible for managing the date range picker popup/dialog. */\nclass MatDateRangePicker extends MatDatepickerBase {\n    _forwardContentValues(instance) {\n        super._forwardContentValues(instance);\n        const input = this.datepickerInput;\n        if (input) {\n            instance.comparisonStart = input.comparisonStart;\n            instance.comparisonEnd = input.comparisonEnd;\n        }\n    }\n}\nMatDateRangePicker.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatDateRangePicker, deps: null, target: i0.ɵɵFactoryTarget.Component });\nMatDateRangePicker.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: MatDateRangePicker, selector: \"mat-date-range-picker\", providers: [\n        MAT_RANGE_DATE_SELECTION_MODEL_PROVIDER,\n        MAT_CALENDAR_RANGE_STRATEGY_PROVIDER,\n        { provide: MatDatepickerBase, useExisting: MatDateRangePicker },\n    ], exportAs: [\"matDateRangePicker\"], usesInheritance: true, ngImport: i0, template: '', isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatDateRangePicker, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'mat-date-range-picker',\n                    template: '',\n                    exportAs: 'matDateRangePicker',\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    encapsulation: ViewEncapsulation.None,\n                    providers: [\n                        MAT_RANGE_DATE_SELECTION_MODEL_PROVIDER,\n                        MAT_CALENDAR_RANGE_STRATEGY_PROVIDER,\n                        { provide: MatDatepickerBase, useExisting: MatDateRangePicker },\n                    ],\n                }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Button that will close the datepicker and assign the current selection to the data model. */\nclass MatDatepickerApply {\n    constructor(_datepicker) {\n        this._datepicker = _datepicker;\n    }\n    _applySelection() {\n        this._datepicker._applyPendingSelection();\n        this._datepicker.close();\n    }\n}\nMatDatepickerApply.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatDatepickerApply, deps: [{ token: MatDatepickerBase }], target: i0.ɵɵFactoryTarget.Directive });\nMatDatepickerApply.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.1.0\", type: MatDatepickerApply, selector: \"[matDatepickerApply], [matDateRangePickerApply]\", host: { listeners: { \"click\": \"_applySelection()\" } }, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatDatepickerApply, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[matDatepickerApply], [matDateRangePickerApply]',\n                    host: { '(click)': '_applySelection()' },\n                }]\n        }], ctorParameters: function () { return [{ type: MatDatepickerBase }]; } });\n/** Button that will close the datepicker and discard the current selection. */\nclass MatDatepickerCancel {\n    constructor(_datepicker) {\n        this._datepicker = _datepicker;\n    }\n}\nMatDatepickerCancel.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatDatepickerCancel, deps: [{ token: MatDatepickerBase }], target: i0.ɵɵFactoryTarget.Directive });\nMatDatepickerCancel.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.1.0\", type: MatDatepickerCancel, selector: \"[matDatepickerCancel], [matDateRangePickerCancel]\", host: { listeners: { \"click\": \"_datepicker.close()\" } }, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatDatepickerCancel, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[matDatepickerCancel], [matDateRangePickerCancel]',\n                    host: { '(click)': '_datepicker.close()' },\n                }]\n        }], ctorParameters: function () { return [{ type: MatDatepickerBase }]; } });\n/**\n * Container that can be used to project a row of action buttons\n * to the bottom of a datepicker or date range picker.\n */\nclass MatDatepickerActions {\n    constructor(_datepicker, _viewContainerRef) {\n        this._datepicker = _datepicker;\n        this._viewContainerRef = _viewContainerRef;\n    }\n    ngAfterViewInit() {\n        this._portal = new TemplatePortal(this._template, this._viewContainerRef);\n        this._datepicker.registerActions(this._portal);\n    }\n    ngOnDestroy() {\n        var _a;\n        this._datepicker.removeActions(this._portal);\n        // Needs to be null checked since we initialize it in `ngAfterViewInit`.\n        if (this._portal && this._portal.isAttached) {\n            (_a = this._portal) === null || _a === void 0 ? void 0 : _a.detach();\n        }\n    }\n}\nMatDatepickerActions.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatDatepickerActions, deps: [{ token: MatDatepickerBase }, { token: i0.ViewContainerRef }], target: i0.ɵɵFactoryTarget.Component });\nMatDatepickerActions.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: MatDatepickerActions, selector: \"mat-datepicker-actions, mat-date-range-picker-actions\", viewQueries: [{ propertyName: \"_template\", first: true, predicate: TemplateRef, descendants: true }], ngImport: i0, template: `\n    <ng-template>\n      <div class=\"mat-datepicker-actions\">\n        <ng-content></ng-content>\n      </div>\n    </ng-template>\n  `, isInline: true, styles: [\".mat-datepicker-actions{display:flex;justify-content:flex-end;align-items:center;padding:0 8px 8px 8px}.mat-datepicker-actions .mat-button-base+.mat-button-base{margin-left:8px}[dir=rtl] .mat-datepicker-actions .mat-button-base+.mat-button-base{margin-left:0;margin-right:8px}\\n\"], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatDatepickerActions, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-datepicker-actions, mat-date-range-picker-actions', template: `\n    <ng-template>\n      <div class=\"mat-datepicker-actions\">\n        <ng-content></ng-content>\n      </div>\n    </ng-template>\n  `, changeDetection: ChangeDetectionStrategy.OnPush, encapsulation: ViewEncapsulation.None, styles: [\".mat-datepicker-actions{display:flex;justify-content:flex-end;align-items:center;padding:0 8px 8px 8px}.mat-datepicker-actions .mat-button-base+.mat-button-base{margin-left:8px}[dir=rtl] .mat-datepicker-actions .mat-button-base+.mat-button-base{margin-left:0;margin-right:8px}\\n\"] }]\n        }], ctorParameters: function () { return [{ type: MatDatepickerBase }, { type: i0.ViewContainerRef }]; }, propDecorators: { _template: [{\n                type: ViewChild,\n                args: [TemplateRef]\n            }] } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass MatDatepickerModule {\n}\nMatDatepickerModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatDatepickerModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nMatDatepickerModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatDatepickerModule, declarations: [MatCalendar,\n        MatCalendarBody,\n        MatDatepicker,\n        MatDatepickerContent,\n        MatDatepickerInput,\n        MatDatepickerToggle,\n        MatDatepickerToggleIcon,\n        MatMonthView,\n        MatYearView,\n        MatMultiYearView,\n        MatCalendarHeader,\n        MatDateRangeInput,\n        MatStartDate,\n        MatEndDate,\n        MatDateRangePicker,\n        MatDatepickerActions,\n        MatDatepickerCancel,\n        MatDatepickerApply], imports: [CommonModule,\n        MatButtonModule,\n        OverlayModule,\n        A11yModule,\n        PortalModule,\n        MatCommonModule], exports: [CdkScrollableModule,\n        MatCalendar,\n        MatCalendarBody,\n        MatDatepicker,\n        MatDatepickerContent,\n        MatDatepickerInput,\n        MatDatepickerToggle,\n        MatDatepickerToggleIcon,\n        MatMonthView,\n        MatYearView,\n        MatMultiYearView,\n        MatCalendarHeader,\n        MatDateRangeInput,\n        MatStartDate,\n        MatEndDate,\n        MatDateRangePicker,\n        MatDatepickerActions,\n        MatDatepickerCancel,\n        MatDatepickerApply] });\nMatDatepickerModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatDatepickerModule, providers: [MatDatepickerIntl, MAT_DATEPICKER_SCROLL_STRATEGY_FACTORY_PROVIDER], imports: [[\n            CommonModule,\n            MatButtonModule,\n            OverlayModule,\n            A11yModule,\n            PortalModule,\n            MatCommonModule,\n        ], CdkScrollableModule] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatDatepickerModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [\n                        CommonModule,\n                        MatButtonModule,\n                        OverlayModule,\n                        A11yModule,\n                        PortalModule,\n                        MatCommonModule,\n                    ],\n                    exports: [\n                        CdkScrollableModule,\n                        MatCalendar,\n                        MatCalendarBody,\n                        MatDatepicker,\n                        MatDatepickerContent,\n                        MatDatepickerInput,\n                        MatDatepickerToggle,\n                        MatDatepickerToggleIcon,\n                        MatMonthView,\n                        MatYearView,\n                        MatMultiYearView,\n                        MatCalendarHeader,\n                        MatDateRangeInput,\n                        MatStartDate,\n                        MatEndDate,\n                        MatDateRangePicker,\n                        MatDatepickerActions,\n                        MatDatepickerCancel,\n                        MatDatepickerApply,\n                    ],\n                    declarations: [\n                        MatCalendar,\n                        MatCalendarBody,\n                        MatDatepicker,\n                        MatDatepickerContent,\n                        MatDatepickerInput,\n                        MatDatepickerToggle,\n                        MatDatepickerToggleIcon,\n                        MatMonthView,\n                        MatYearView,\n                        MatMultiYearView,\n                        MatCalendarHeader,\n                        MatDateRangeInput,\n                        MatStartDate,\n                        MatEndDate,\n                        MatDateRangePicker,\n                        MatDatepickerActions,\n                        MatDatepickerCancel,\n                        MatDatepickerApply,\n                    ],\n                    providers: [MatDatepickerIntl, MAT_DATEPICKER_SCROLL_STRATEGY_FACTORY_PROVIDER],\n                }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { DateRange, DefaultMatCalendarRangeStrategy, MAT_DATEPICKER_SCROLL_STRATEGY, MAT_DATEPICKER_SCROLL_STRATEGY_FACTORY, MAT_DATEPICKER_SCROLL_STRATEGY_FACTORY_PROVIDER, MAT_DATEPICKER_VALIDATORS, MAT_DATEPICKER_VALUE_ACCESSOR, MAT_DATE_RANGE_SELECTION_STRATEGY, MAT_RANGE_DATE_SELECTION_MODEL_FACTORY, MAT_RANGE_DATE_SELECTION_MODEL_PROVIDER, MAT_SINGLE_DATE_SELECTION_MODEL_FACTORY, MAT_SINGLE_DATE_SELECTION_MODEL_PROVIDER, MatCalendar, MatCalendarBody, MatCalendarCell, MatCalendarHeader, MatDateRangeInput, MatDateRangePicker, MatDateSelectionModel, MatDatepicker, MatDatepickerActions, MatDatepickerApply, MatDatepickerCancel, MatDatepickerContent, MatDatepickerInput, MatDatepickerInputEvent, MatDatepickerIntl, MatDatepickerModule, MatDatepickerToggle, MatDatepickerToggleIcon, MatEndDate, MatMonthView, MatMultiYearView, MatRangeDateSelectionModel, MatSingleDateSelectionModel, MatStartDate, MatYearView, matDatepickerAnimations, yearsPerPage, yearsPerRow };\n","import * as i1$1 from '@angular/cdk/overlay';\nimport { Overlay, OverlayConfig, OverlayModule } from '@angular/cdk/overlay';\nimport * as i3 from '@angular/cdk/portal';\nimport { BasePortalOutlet, CdkPortalOutlet, ComponentPortal, TemplatePortal, PortalModule } from '@angular/cdk/portal';\nimport * as i0 from '@angular/core';\nimport { EventEmitter, Directive, Optional, Inject, ViewChild, Component, ViewEncapsulation, ChangeDetectionStrategy, InjectionToken, Injector, TemplateRef, InjectFlags, Injectable, SkipSelf, Input, NgModule } from '@angular/core';\nimport { MatCommonModule } from '@angular/material/core';\nimport { Directionality } from '@angular/cdk/bidi';\nimport { Subject, defer, Subscription, of } from 'rxjs';\nimport { filter, take, startWith } from 'rxjs/operators';\nimport { _getFocusedElementPierceShadowDom } from '@angular/cdk/platform';\nimport * as i2 from '@angular/common';\nimport { DOCUMENT } from '@angular/common';\nimport { trigger, state, style, transition, animate } from '@angular/animations';\nimport * as i1 from '@angular/cdk/a11y';\nimport { ESCAPE, hasModifierKey } from '@angular/cdk/keycodes';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Configuration for opening a modal dialog with the MatDialog service.\n */\nclass MatDialogConfig {\n    constructor() {\n        /** The ARIA role of the dialog element. */\n        this.role = 'dialog';\n        /** Custom class for the overlay pane. */\n        this.panelClass = '';\n        /** Whether the dialog has a backdrop. */\n        this.hasBackdrop = true;\n        /** Custom class for the backdrop. */\n        this.backdropClass = '';\n        /** Whether the user can use escape or clicking on the backdrop to close the modal. */\n        this.disableClose = false;\n        /** Width of the dialog. */\n        this.width = '';\n        /** Height of the dialog. */\n        this.height = '';\n        /** Max-width of the dialog. If a number is provided, assumes pixel units. Defaults to 80vw. */\n        this.maxWidth = '80vw';\n        /** Data being injected into the child component. */\n        this.data = null;\n        /** ID of the element that describes the dialog. */\n        this.ariaDescribedBy = null;\n        /** ID of the element that labels the dialog. */\n        this.ariaLabelledBy = null;\n        /** Aria label to assign to the dialog element. */\n        this.ariaLabel = null;\n        /**\n         * Where the dialog should focus on open.\n         * @breaking-change 14.0.0 Remove boolean option from autoFocus. Use string or\n         * AutoFocusTarget instead.\n         */\n        this.autoFocus = 'first-tabbable';\n        /**\n         * Whether the dialog should restore focus to the\n         * previously-focused element, after it's closed.\n         */\n        this.restoreFocus = true;\n        /**\n         * Whether the dialog should close when the user goes backwards/forwards in history.\n         * Note that this usually doesn't include clicking on links (unless the user is using\n         * the `HashLocationStrategy`).\n         */\n        this.closeOnNavigation = true;\n        // TODO(jelbourn): add configuration for lifecycle hooks, ARIA labelling.\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Animations used by MatDialog.\n * @docs-private\n */\nconst matDialogAnimations = {\n    /** Animation that is applied on the dialog container by default. */\n    dialogContainer: trigger('dialogContainer', [\n        // Note: The `enter` animation transitions to `transform: none`, because for some reason\n        // specifying the transform explicitly, causes IE both to blur the dialog content and\n        // decimate the animation performance. Leaving it as `none` solves both issues.\n        state('void, exit', style({ opacity: 0, transform: 'scale(0.7)' })),\n        state('enter', style({ transform: 'none' })),\n        transition('* => enter', animate('150ms cubic-bezier(0, 0, 0.2, 1)', style({ transform: 'none', opacity: 1 }))),\n        transition('* => void, * => exit', animate('75ms cubic-bezier(0.4, 0.0, 0.2, 1)', style({ opacity: 0 }))),\n    ]),\n};\n\n/**\n * Throws an exception for the case when a ComponentPortal is\n * attached to a DomPortalOutlet without an origin.\n * @docs-private\n */\nfunction throwMatDialogContentAlreadyAttachedError() {\n    throw Error('Attempting to attach dialog content after content is already attached');\n}\n/**\n * Base class for the `MatDialogContainer`. The base class does not implement\n * animations as these are left to implementers of the dialog container.\n */\nclass _MatDialogContainerBase extends BasePortalOutlet {\n    constructor(_elementRef, _focusTrapFactory, _changeDetectorRef, _document, \n    /** The dialog configuration. */\n    _config, _interactivityChecker, _ngZone, _focusMonitor) {\n        super();\n        this._elementRef = _elementRef;\n        this._focusTrapFactory = _focusTrapFactory;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._config = _config;\n        this._interactivityChecker = _interactivityChecker;\n        this._ngZone = _ngZone;\n        this._focusMonitor = _focusMonitor;\n        /** Emits when an animation state changes. */\n        this._animationStateChanged = new EventEmitter();\n        /** Element that was focused before the dialog was opened. Save this to restore upon close. */\n        this._elementFocusedBeforeDialogWasOpened = null;\n        /**\n         * Type of interaction that led to the dialog being closed. This is used to determine\n         * whether the focus style will be applied when returning focus to its original location\n         * after the dialog is closed.\n         */\n        this._closeInteractionType = null;\n        /**\n         * Attaches a DOM portal to the dialog container.\n         * @param portal Portal to be attached.\n         * @deprecated To be turned into a method.\n         * @breaking-change 10.0.0\n         */\n        this.attachDomPortal = (portal) => {\n            if (this._portalOutlet.hasAttached() && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n                throwMatDialogContentAlreadyAttachedError();\n            }\n            return this._portalOutlet.attachDomPortal(portal);\n        };\n        this._ariaLabelledBy = _config.ariaLabelledBy || null;\n        this._document = _document;\n    }\n    /** Initializes the dialog container with the attached content. */\n    _initializeWithAttachedContent() {\n        this._setupFocusTrap();\n        // Save the previously focused element. This element will be re-focused\n        // when the dialog closes.\n        this._capturePreviouslyFocusedElement();\n    }\n    /**\n     * Attach a ComponentPortal as content to this dialog container.\n     * @param portal Portal to be attached as the dialog content.\n     */\n    attachComponentPortal(portal) {\n        if (this._portalOutlet.hasAttached() && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throwMatDialogContentAlreadyAttachedError();\n        }\n        return this._portalOutlet.attachComponentPortal(portal);\n    }\n    /**\n     * Attach a TemplatePortal as content to this dialog container.\n     * @param portal Portal to be attached as the dialog content.\n     */\n    attachTemplatePortal(portal) {\n        if (this._portalOutlet.hasAttached() && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throwMatDialogContentAlreadyAttachedError();\n        }\n        return this._portalOutlet.attachTemplatePortal(portal);\n    }\n    /** Moves focus back into the dialog if it was moved out. */\n    _recaptureFocus() {\n        if (!this._containsFocus()) {\n            this._trapFocus();\n        }\n    }\n    /**\n     * Focuses the provided element. If the element is not focusable, it will add a tabIndex\n     * attribute to forcefully focus it. The attribute is removed after focus is moved.\n     * @param element The element to focus.\n     */\n    _forceFocus(element, options) {\n        if (!this._interactivityChecker.isFocusable(element)) {\n            element.tabIndex = -1;\n            // The tabindex attribute should be removed to avoid navigating to that element again\n            this._ngZone.runOutsideAngular(() => {\n                element.addEventListener('blur', () => element.removeAttribute('tabindex'));\n                element.addEventListener('mousedown', () => element.removeAttribute('tabindex'));\n            });\n        }\n        element.focus(options);\n    }\n    /**\n     * Focuses the first element that matches the given selector within the focus trap.\n     * @param selector The CSS selector for the element to set focus to.\n     */\n    _focusByCssSelector(selector, options) {\n        let elementToFocus = this._elementRef.nativeElement.querySelector(selector);\n        if (elementToFocus) {\n            this._forceFocus(elementToFocus, options);\n        }\n    }\n    /**\n     * Moves the focus inside the focus trap. When autoFocus is not set to 'dialog', if focus\n     * cannot be moved then focus will go to the dialog container.\n     */\n    _trapFocus() {\n        const element = this._elementRef.nativeElement;\n        // If were to attempt to focus immediately, then the content of the dialog would not yet be\n        // ready in instances where change detection has to run first. To deal with this, we simply\n        // wait for the microtask queue to be empty when setting focus when autoFocus isn't set to\n        // dialog. If the element inside the dialog can't be focused, then the container is focused\n        // so the user can't tab into other elements behind it.\n        switch (this._config.autoFocus) {\n            case false:\n            case 'dialog':\n                // Ensure that focus is on the dialog container. It's possible that a different\n                // component tried to move focus while the open animation was running. See:\n                // https://github.com/angular/components/issues/16215. Note that we only want to do this\n                // if the focus isn't inside the dialog already, because it's possible that the consumer\n                // turned off `autoFocus` in order to move focus themselves.\n                if (!this._containsFocus()) {\n                    element.focus();\n                }\n                break;\n            case true:\n            case 'first-tabbable':\n                this._focusTrap.focusInitialElementWhenReady().then(focusedSuccessfully => {\n                    // If we weren't able to find a focusable element in the dialog, then focus the dialog\n                    // container instead.\n                    if (!focusedSuccessfully) {\n                        this._focusDialogContainer();\n                    }\n                });\n                break;\n            case 'first-heading':\n                this._focusByCssSelector('h1, h2, h3, h4, h5, h6, [role=\"heading\"]');\n                break;\n            default:\n                this._focusByCssSelector(this._config.autoFocus);\n                break;\n        }\n    }\n    /** Restores focus to the element that was focused before the dialog opened. */\n    _restoreFocus() {\n        const previousElement = this._elementFocusedBeforeDialogWasOpened;\n        // We need the extra check, because IE can set the `activeElement` to null in some cases.\n        if (this._config.restoreFocus &&\n            previousElement &&\n            typeof previousElement.focus === 'function') {\n            const activeElement = _getFocusedElementPierceShadowDom();\n            const element = this._elementRef.nativeElement;\n            // Make sure that focus is still inside the dialog or is on the body (usually because a\n            // non-focusable element like the backdrop was clicked) before moving it. It's possible that\n            // the consumer moved it themselves before the animation was done, in which case we shouldn't\n            // do anything.\n            if (!activeElement ||\n                activeElement === this._document.body ||\n                activeElement === element ||\n                element.contains(activeElement)) {\n                if (this._focusMonitor) {\n                    this._focusMonitor.focusVia(previousElement, this._closeInteractionType);\n                    this._closeInteractionType = null;\n                }\n                else {\n                    previousElement.focus();\n                }\n            }\n        }\n        if (this._focusTrap) {\n            this._focusTrap.destroy();\n        }\n    }\n    /** Sets up the focus trap. */\n    _setupFocusTrap() {\n        this._focusTrap = this._focusTrapFactory.create(this._elementRef.nativeElement);\n    }\n    /** Captures the element that was focused before the dialog was opened. */\n    _capturePreviouslyFocusedElement() {\n        if (this._document) {\n            this._elementFocusedBeforeDialogWasOpened = _getFocusedElementPierceShadowDom();\n        }\n    }\n    /** Focuses the dialog container. */\n    _focusDialogContainer() {\n        // Note that there is no focus method when rendering on the server.\n        if (this._elementRef.nativeElement.focus) {\n            this._elementRef.nativeElement.focus();\n        }\n    }\n    /** Returns whether focus is inside the dialog. */\n    _containsFocus() {\n        const element = this._elementRef.nativeElement;\n        const activeElement = _getFocusedElementPierceShadowDom();\n        return element === activeElement || element.contains(activeElement);\n    }\n}\n_MatDialogContainerBase.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: _MatDialogContainerBase, deps: [{ token: i0.ElementRef }, { token: i1.FocusTrapFactory }, { token: i0.ChangeDetectorRef }, { token: DOCUMENT, optional: true }, { token: MatDialogConfig }, { token: i1.InteractivityChecker }, { token: i0.NgZone }, { token: i1.FocusMonitor }], target: i0.ɵɵFactoryTarget.Directive });\n_MatDialogContainerBase.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.1.0\", type: _MatDialogContainerBase, viewQueries: [{ propertyName: \"_portalOutlet\", first: true, predicate: CdkPortalOutlet, descendants: true, static: true }], usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: _MatDialogContainerBase, decorators: [{\n            type: Directive\n        }], ctorParameters: function () {\n        return [{ type: i0.ElementRef }, { type: i1.FocusTrapFactory }, { type: i0.ChangeDetectorRef }, { type: undefined, decorators: [{\n                        type: Optional\n                    }, {\n                        type: Inject,\n                        args: [DOCUMENT]\n                    }] }, { type: MatDialogConfig }, { type: i1.InteractivityChecker }, { type: i0.NgZone }, { type: i1.FocusMonitor }];\n    }, propDecorators: { _portalOutlet: [{\n                type: ViewChild,\n                args: [CdkPortalOutlet, { static: true }]\n            }] } });\n/**\n * Internal component that wraps user-provided dialog content.\n * Animation is based on https://material.io/guidelines/motion/choreography.html.\n * @docs-private\n */\nclass MatDialogContainer extends _MatDialogContainerBase {\n    constructor() {\n        super(...arguments);\n        /** State of the dialog animation. */\n        this._state = 'enter';\n    }\n    /** Callback, invoked whenever an animation on the host completes. */\n    _onAnimationDone({ toState, totalTime }) {\n        if (toState === 'enter') {\n            this._trapFocus();\n            this._animationStateChanged.next({ state: 'opened', totalTime });\n        }\n        else if (toState === 'exit') {\n            this._restoreFocus();\n            this._animationStateChanged.next({ state: 'closed', totalTime });\n        }\n    }\n    /** Callback, invoked when an animation on the host starts. */\n    _onAnimationStart({ toState, totalTime }) {\n        if (toState === 'enter') {\n            this._animationStateChanged.next({ state: 'opening', totalTime });\n        }\n        else if (toState === 'exit' || toState === 'void') {\n            this._animationStateChanged.next({ state: 'closing', totalTime });\n        }\n    }\n    /** Starts the dialog exit animation. */\n    _startExitAnimation() {\n        this._state = 'exit';\n        // Mark the container for check so it can react if the\n        // view container is using OnPush change detection.\n        this._changeDetectorRef.markForCheck();\n    }\n}\nMatDialogContainer.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatDialogContainer, deps: null, target: i0.ɵɵFactoryTarget.Component });\nMatDialogContainer.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: MatDialogContainer, selector: \"mat-dialog-container\", host: { attributes: { \"tabindex\": \"-1\", \"aria-modal\": \"true\" }, listeners: { \"@dialogContainer.start\": \"_onAnimationStart($event)\", \"@dialogContainer.done\": \"_onAnimationDone($event)\" }, properties: { \"id\": \"_id\", \"attr.role\": \"_config.role\", \"attr.aria-labelledby\": \"_config.ariaLabel ? null : _ariaLabelledBy\", \"attr.aria-label\": \"_config.ariaLabel\", \"attr.aria-describedby\": \"_config.ariaDescribedBy || null\", \"@dialogContainer\": \"_state\" }, classAttribute: \"mat-dialog-container\" }, usesInheritance: true, ngImport: i0, template: \"<ng-template cdkPortalOutlet></ng-template>\\n\", styles: [\".mat-dialog-container{display:block;padding:24px;border-radius:4px;box-sizing:border-box;overflow:auto;outline:0;width:100%;height:100%;min-height:inherit;max-height:inherit}.cdk-high-contrast-active .mat-dialog-container{outline:solid 1px}.mat-dialog-content{display:block;margin:0 -24px;padding:0 24px;max-height:65vh;overflow:auto;-webkit-overflow-scrolling:touch}.mat-dialog-title{margin:0 0 20px;display:block}.mat-dialog-actions{padding:8px 0;display:flex;flex-wrap:wrap;min-height:52px;align-items:center;box-sizing:content-box;margin-bottom:-24px}.mat-dialog-actions[align=end]{justify-content:flex-end}.mat-dialog-actions[align=center]{justify-content:center}.mat-dialog-actions .mat-button-base+.mat-button-base,.mat-dialog-actions .mat-mdc-button-base+.mat-mdc-button-base{margin-left:8px}[dir=rtl] .mat-dialog-actions .mat-button-base+.mat-button-base,[dir=rtl] .mat-dialog-actions .mat-mdc-button-base+.mat-mdc-button-base{margin-left:0;margin-right:8px}\\n\"], directives: [{ type: i3.CdkPortalOutlet, selector: \"[cdkPortalOutlet]\", inputs: [\"cdkPortalOutlet\"], outputs: [\"attached\"], exportAs: [\"cdkPortalOutlet\"] }], animations: [matDialogAnimations.dialogContainer], changeDetection: i0.ChangeDetectionStrategy.Default, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatDialogContainer, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-dialog-container', encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.Default, animations: [matDialogAnimations.dialogContainer], host: {\n                        'class': 'mat-dialog-container',\n                        'tabindex': '-1',\n                        'aria-modal': 'true',\n                        '[id]': '_id',\n                        '[attr.role]': '_config.role',\n                        '[attr.aria-labelledby]': '_config.ariaLabel ? null : _ariaLabelledBy',\n                        '[attr.aria-label]': '_config.ariaLabel',\n                        '[attr.aria-describedby]': '_config.ariaDescribedBy || null',\n                        '[@dialogContainer]': '_state',\n                        '(@dialogContainer.start)': '_onAnimationStart($event)',\n                        '(@dialogContainer.done)': '_onAnimationDone($event)',\n                    }, template: \"<ng-template cdkPortalOutlet></ng-template>\\n\", styles: [\".mat-dialog-container{display:block;padding:24px;border-radius:4px;box-sizing:border-box;overflow:auto;outline:0;width:100%;height:100%;min-height:inherit;max-height:inherit}.cdk-high-contrast-active .mat-dialog-container{outline:solid 1px}.mat-dialog-content{display:block;margin:0 -24px;padding:0 24px;max-height:65vh;overflow:auto;-webkit-overflow-scrolling:touch}.mat-dialog-title{margin:0 0 20px;display:block}.mat-dialog-actions{padding:8px 0;display:flex;flex-wrap:wrap;min-height:52px;align-items:center;box-sizing:content-box;margin-bottom:-24px}.mat-dialog-actions[align=end]{justify-content:flex-end}.mat-dialog-actions[align=center]{justify-content:center}.mat-dialog-actions .mat-button-base+.mat-button-base,.mat-dialog-actions .mat-mdc-button-base+.mat-mdc-button-base{margin-left:8px}[dir=rtl] .mat-dialog-actions .mat-button-base+.mat-button-base,[dir=rtl] .mat-dialog-actions .mat-mdc-button-base+.mat-mdc-button-base{margin-left:0;margin-right:8px}\\n\"] }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// TODO(jelbourn): resizing\n// Counter for unique dialog ids.\nlet uniqueId = 0;\n/**\n * Reference to a dialog opened via the MatDialog service.\n */\nclass MatDialogRef {\n    constructor(_overlayRef, _containerInstance, \n    /** Id of the dialog. */\n    id = `mat-dialog-${uniqueId++}`) {\n        this._overlayRef = _overlayRef;\n        this._containerInstance = _containerInstance;\n        this.id = id;\n        /** Whether the user is allowed to close the dialog. */\n        this.disableClose = this._containerInstance._config.disableClose;\n        /** Subject for notifying the user that the dialog has finished opening. */\n        this._afterOpened = new Subject();\n        /** Subject for notifying the user that the dialog has finished closing. */\n        this._afterClosed = new Subject();\n        /** Subject for notifying the user that the dialog has started closing. */\n        this._beforeClosed = new Subject();\n        /** Current state of the dialog. */\n        this._state = 0 /* OPEN */;\n        // Pass the id along to the container.\n        _containerInstance._id = id;\n        // Emit when opening animation completes\n        _containerInstance._animationStateChanged\n            .pipe(filter(event => event.state === 'opened'), take(1))\n            .subscribe(() => {\n            this._afterOpened.next();\n            this._afterOpened.complete();\n        });\n        // Dispose overlay when closing animation is complete\n        _containerInstance._animationStateChanged\n            .pipe(filter(event => event.state === 'closed'), take(1))\n            .subscribe(() => {\n            clearTimeout(this._closeFallbackTimeout);\n            this._finishDialogClose();\n        });\n        _overlayRef.detachments().subscribe(() => {\n            this._beforeClosed.next(this._result);\n            this._beforeClosed.complete();\n            this._afterClosed.next(this._result);\n            this._afterClosed.complete();\n            this.componentInstance = null;\n            this._overlayRef.dispose();\n        });\n        _overlayRef\n            .keydownEvents()\n            .pipe(filter(event => {\n            return event.keyCode === ESCAPE && !this.disableClose && !hasModifierKey(event);\n        }))\n            .subscribe(event => {\n            event.preventDefault();\n            _closeDialogVia(this, 'keyboard');\n        });\n        _overlayRef.backdropClick().subscribe(() => {\n            if (this.disableClose) {\n                this._containerInstance._recaptureFocus();\n            }\n            else {\n                _closeDialogVia(this, 'mouse');\n            }\n        });\n    }\n    /**\n     * Close the dialog.\n     * @param dialogResult Optional result to return to the dialog opener.\n     */\n    close(dialogResult) {\n        this._result = dialogResult;\n        // Transition the backdrop in parallel to the dialog.\n        this._containerInstance._animationStateChanged\n            .pipe(filter(event => event.state === 'closing'), take(1))\n            .subscribe(event => {\n            this._beforeClosed.next(dialogResult);\n            this._beforeClosed.complete();\n            this._overlayRef.detachBackdrop();\n            // The logic that disposes of the overlay depends on the exit animation completing, however\n            // it isn't guaranteed if the parent view is destroyed while it's running. Add a fallback\n            // timeout which will clean everything up if the animation hasn't fired within the specified\n            // amount of time plus 100ms. We don't need to run this outside the NgZone, because for the\n            // vast majority of cases the timeout will have been cleared before it has the chance to fire.\n            this._closeFallbackTimeout = setTimeout(() => this._finishDialogClose(), event.totalTime + 100);\n        });\n        this._state = 1 /* CLOSING */;\n        this._containerInstance._startExitAnimation();\n    }\n    /**\n     * Gets an observable that is notified when the dialog is finished opening.\n     */\n    afterOpened() {\n        return this._afterOpened;\n    }\n    /**\n     * Gets an observable that is notified when the dialog is finished closing.\n     */\n    afterClosed() {\n        return this._afterClosed;\n    }\n    /**\n     * Gets an observable that is notified when the dialog has started closing.\n     */\n    beforeClosed() {\n        return this._beforeClosed;\n    }\n    /**\n     * Gets an observable that emits when the overlay's backdrop has been clicked.\n     */\n    backdropClick() {\n        return this._overlayRef.backdropClick();\n    }\n    /**\n     * Gets an observable that emits when keydown events are targeted on the overlay.\n     */\n    keydownEvents() {\n        return this._overlayRef.keydownEvents();\n    }\n    /**\n     * Updates the dialog's position.\n     * @param position New dialog position.\n     */\n    updatePosition(position) {\n        let strategy = this._getPositionStrategy();\n        if (position && (position.left || position.right)) {\n            position.left ? strategy.left(position.left) : strategy.right(position.right);\n        }\n        else {\n            strategy.centerHorizontally();\n        }\n        if (position && (position.top || position.bottom)) {\n            position.top ? strategy.top(position.top) : strategy.bottom(position.bottom);\n        }\n        else {\n            strategy.centerVertically();\n        }\n        this._overlayRef.updatePosition();\n        return this;\n    }\n    /**\n     * Updates the dialog's width and height.\n     * @param width New width of the dialog.\n     * @param height New height of the dialog.\n     */\n    updateSize(width = '', height = '') {\n        this._overlayRef.updateSize({ width, height });\n        this._overlayRef.updatePosition();\n        return this;\n    }\n    /** Add a CSS class or an array of classes to the overlay pane. */\n    addPanelClass(classes) {\n        this._overlayRef.addPanelClass(classes);\n        return this;\n    }\n    /** Remove a CSS class or an array of classes from the overlay pane. */\n    removePanelClass(classes) {\n        this._overlayRef.removePanelClass(classes);\n        return this;\n    }\n    /** Gets the current state of the dialog's lifecycle. */\n    getState() {\n        return this._state;\n    }\n    /**\n     * Finishes the dialog close by updating the state of the dialog\n     * and disposing the overlay.\n     */\n    _finishDialogClose() {\n        this._state = 2 /* CLOSED */;\n        this._overlayRef.dispose();\n    }\n    /** Fetches the position strategy object from the overlay ref. */\n    _getPositionStrategy() {\n        return this._overlayRef.getConfig().positionStrategy;\n    }\n}\n/**\n * Closes the dialog with the specified interaction type. This is currently not part of\n * `MatDialogRef` as that would conflict with custom dialog ref mocks provided in tests.\n * More details. See: https://github.com/angular/components/pull/9257#issuecomment-651342226.\n */\n// TODO: TODO: Move this back into `MatDialogRef` when we provide an official mock dialog ref.\nfunction _closeDialogVia(ref, interactionType, result) {\n    // Some mock dialog ref instances in tests do not have the `_containerInstance` property.\n    // For those, we keep the behavior as is and do not deal with the interaction type.\n    if (ref._containerInstance !== undefined) {\n        ref._containerInstance._closeInteractionType = interactionType;\n    }\n    return ref.close(result);\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Injection token that can be used to access the data that was passed in to a dialog. */\nconst MAT_DIALOG_DATA = new InjectionToken('MatDialogData');\n/** Injection token that can be used to specify default dialog options. */\nconst MAT_DIALOG_DEFAULT_OPTIONS = new InjectionToken('mat-dialog-default-options');\n/** Injection token that determines the scroll handling while the dialog is open. */\nconst MAT_DIALOG_SCROLL_STRATEGY = new InjectionToken('mat-dialog-scroll-strategy');\n/** @docs-private */\nfunction MAT_DIALOG_SCROLL_STRATEGY_FACTORY(overlay) {\n    return () => overlay.scrollStrategies.block();\n}\n/** @docs-private */\nfunction MAT_DIALOG_SCROLL_STRATEGY_PROVIDER_FACTORY(overlay) {\n    return () => overlay.scrollStrategies.block();\n}\n/** @docs-private */\nconst MAT_DIALOG_SCROLL_STRATEGY_PROVIDER = {\n    provide: MAT_DIALOG_SCROLL_STRATEGY,\n    deps: [Overlay],\n    useFactory: MAT_DIALOG_SCROLL_STRATEGY_PROVIDER_FACTORY,\n};\n/**\n * Base class for dialog services. The base dialog service allows\n * for arbitrary dialog refs and dialog container components.\n */\nclass _MatDialogBase {\n    constructor(_overlay, _injector, _defaultOptions, _parentDialog, _overlayContainer, scrollStrategy, _dialogRefConstructor, _dialogContainerType, _dialogDataToken, _animationMode) {\n        this._overlay = _overlay;\n        this._injector = _injector;\n        this._defaultOptions = _defaultOptions;\n        this._parentDialog = _parentDialog;\n        this._overlayContainer = _overlayContainer;\n        this._dialogRefConstructor = _dialogRefConstructor;\n        this._dialogContainerType = _dialogContainerType;\n        this._dialogDataToken = _dialogDataToken;\n        this._animationMode = _animationMode;\n        this._openDialogsAtThisLevel = [];\n        this._afterAllClosedAtThisLevel = new Subject();\n        this._afterOpenedAtThisLevel = new Subject();\n        this._ariaHiddenElements = new Map();\n        this._dialogAnimatingOpen = false;\n        // TODO (jelbourn): tighten the typing right-hand side of this expression.\n        /**\n         * Stream that emits when all open dialog have finished closing.\n         * Will emit on subscribe if there are no open dialogs to begin with.\n         */\n        this.afterAllClosed = defer(() => this.openDialogs.length\n            ? this._getAfterAllClosed()\n            : this._getAfterAllClosed().pipe(startWith(undefined)));\n        this._scrollStrategy = scrollStrategy;\n    }\n    /** Keeps track of the currently-open dialogs. */\n    get openDialogs() {\n        return this._parentDialog ? this._parentDialog.openDialogs : this._openDialogsAtThisLevel;\n    }\n    /** Stream that emits when a dialog has been opened. */\n    get afterOpened() {\n        return this._parentDialog ? this._parentDialog.afterOpened : this._afterOpenedAtThisLevel;\n    }\n    _getAfterAllClosed() {\n        const parent = this._parentDialog;\n        return parent ? parent._getAfterAllClosed() : this._afterAllClosedAtThisLevel;\n    }\n    open(componentOrTemplateRef, config) {\n        config = _applyConfigDefaults(config, this._defaultOptions || new MatDialogConfig());\n        if (config.id &&\n            this.getDialogById(config.id) &&\n            (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw Error(`Dialog with id \"${config.id}\" exists already. The dialog id must be unique.`);\n        }\n        // If there is a dialog that is currently animating open, return the MatDialogRef of that dialog\n        if (this._dialogAnimatingOpen) {\n            return this._lastDialogRef;\n        }\n        const overlayRef = this._createOverlay(config);\n        const dialogContainer = this._attachDialogContainer(overlayRef, config);\n        if (this._animationMode !== 'NoopAnimations') {\n            const animationStateSubscription = dialogContainer._animationStateChanged.subscribe(dialogAnimationEvent => {\n                if (dialogAnimationEvent.state === 'opening') {\n                    this._dialogAnimatingOpen = true;\n                }\n                if (dialogAnimationEvent.state === 'opened') {\n                    this._dialogAnimatingOpen = false;\n                    animationStateSubscription.unsubscribe();\n                }\n            });\n            if (!this._animationStateSubscriptions) {\n                this._animationStateSubscriptions = new Subscription();\n            }\n            this._animationStateSubscriptions.add(animationStateSubscription);\n        }\n        const dialogRef = this._attachDialogContent(componentOrTemplateRef, dialogContainer, overlayRef, config);\n        this._lastDialogRef = dialogRef;\n        // If this is the first dialog that we're opening, hide all the non-overlay content.\n        if (!this.openDialogs.length) {\n            this._hideNonDialogContentFromAssistiveTechnology();\n        }\n        this.openDialogs.push(dialogRef);\n        dialogRef.afterClosed().subscribe(() => this._removeOpenDialog(dialogRef));\n        this.afterOpened.next(dialogRef);\n        // Notify the dialog container that the content has been attached.\n        dialogContainer._initializeWithAttachedContent();\n        return dialogRef;\n    }\n    /**\n     * Closes all of the currently-open dialogs.\n     */\n    closeAll() {\n        this._closeDialogs(this.openDialogs);\n    }\n    /**\n     * Finds an open dialog by its id.\n     * @param id ID to use when looking up the dialog.\n     */\n    getDialogById(id) {\n        return this.openDialogs.find(dialog => dialog.id === id);\n    }\n    ngOnDestroy() {\n        // Only close the dialogs at this level on destroy\n        // since the parent service may still be active.\n        this._closeDialogs(this._openDialogsAtThisLevel);\n        this._afterAllClosedAtThisLevel.complete();\n        this._afterOpenedAtThisLevel.complete();\n        // Clean up any subscriptions to dialogs that never finished opening.\n        if (this._animationStateSubscriptions) {\n            this._animationStateSubscriptions.unsubscribe();\n        }\n    }\n    /**\n     * Creates the overlay into which the dialog will be loaded.\n     * @param config The dialog configuration.\n     * @returns A promise resolving to the OverlayRef for the created overlay.\n     */\n    _createOverlay(config) {\n        const overlayConfig = this._getOverlayConfig(config);\n        return this._overlay.create(overlayConfig);\n    }\n    /**\n     * Creates an overlay config from a dialog config.\n     * @param dialogConfig The dialog configuration.\n     * @returns The overlay configuration.\n     */\n    _getOverlayConfig(dialogConfig) {\n        const state = new OverlayConfig({\n            positionStrategy: this._overlay.position().global(),\n            scrollStrategy: dialogConfig.scrollStrategy || this._scrollStrategy(),\n            panelClass: dialogConfig.panelClass,\n            hasBackdrop: dialogConfig.hasBackdrop,\n            direction: dialogConfig.direction,\n            minWidth: dialogConfig.minWidth,\n            minHeight: dialogConfig.minHeight,\n            maxWidth: dialogConfig.maxWidth,\n            maxHeight: dialogConfig.maxHeight,\n            disposeOnNavigation: dialogConfig.closeOnNavigation,\n        });\n        if (dialogConfig.backdropClass) {\n            state.backdropClass = dialogConfig.backdropClass;\n        }\n        return state;\n    }\n    /**\n     * Attaches a dialog container to a dialog's already-created overlay.\n     * @param overlay Reference to the dialog's underlying overlay.\n     * @param config The dialog configuration.\n     * @returns A promise resolving to a ComponentRef for the attached container.\n     */\n    _attachDialogContainer(overlay, config) {\n        const userInjector = config && config.viewContainerRef && config.viewContainerRef.injector;\n        const injector = Injector.create({\n            parent: userInjector || this._injector,\n            providers: [{ provide: MatDialogConfig, useValue: config }],\n        });\n        const containerPortal = new ComponentPortal(this._dialogContainerType, config.viewContainerRef, injector, config.componentFactoryResolver);\n        const containerRef = overlay.attach(containerPortal);\n        return containerRef.instance;\n    }\n    /**\n     * Attaches the user-provided component to the already-created dialog container.\n     * @param componentOrTemplateRef The type of component being loaded into the dialog,\n     *     or a TemplateRef to instantiate as the content.\n     * @param dialogContainer Reference to the wrapping dialog container.\n     * @param overlayRef Reference to the overlay in which the dialog resides.\n     * @param config The dialog configuration.\n     * @returns A promise resolving to the MatDialogRef that should be returned to the user.\n     */\n    _attachDialogContent(componentOrTemplateRef, dialogContainer, overlayRef, config) {\n        // Create a reference to the dialog we're creating in order to give the user a handle\n        // to modify and close it.\n        const dialogRef = new this._dialogRefConstructor(overlayRef, dialogContainer, config.id);\n        if (componentOrTemplateRef instanceof TemplateRef) {\n            dialogContainer.attachTemplatePortal(new TemplatePortal(componentOrTemplateRef, null, {\n                $implicit: config.data,\n                dialogRef,\n            }));\n        }\n        else {\n            const injector = this._createInjector(config, dialogRef, dialogContainer);\n            const contentRef = dialogContainer.attachComponentPortal(new ComponentPortal(componentOrTemplateRef, config.viewContainerRef, injector));\n            dialogRef.componentInstance = contentRef.instance;\n        }\n        dialogRef.updateSize(config.width, config.height).updatePosition(config.position);\n        return dialogRef;\n    }\n    /**\n     * Creates a custom injector to be used inside the dialog. This allows a component loaded inside\n     * of a dialog to close itself and, optionally, to return a value.\n     * @param config Config object that is used to construct the dialog.\n     * @param dialogRef Reference to the dialog.\n     * @param dialogContainer Dialog container element that wraps all of the contents.\n     * @returns The custom injector that can be used inside the dialog.\n     */\n    _createInjector(config, dialogRef, dialogContainer) {\n        const userInjector = config && config.viewContainerRef && config.viewContainerRef.injector;\n        // The dialog container should be provided as the dialog container and the dialog's\n        // content are created out of the same `ViewContainerRef` and as such, are siblings\n        // for injector purposes. To allow the hierarchy that is expected, the dialog\n        // container is explicitly provided in the injector.\n        const providers = [\n            { provide: this._dialogContainerType, useValue: dialogContainer },\n            { provide: this._dialogDataToken, useValue: config.data },\n            { provide: this._dialogRefConstructor, useValue: dialogRef },\n        ];\n        if (config.direction &&\n            (!userInjector ||\n                !userInjector.get(Directionality, null, InjectFlags.Optional))) {\n            providers.push({\n                provide: Directionality,\n                useValue: { value: config.direction, change: of() },\n            });\n        }\n        return Injector.create({ parent: userInjector || this._injector, providers });\n    }\n    /**\n     * Removes a dialog from the array of open dialogs.\n     * @param dialogRef Dialog to be removed.\n     */\n    _removeOpenDialog(dialogRef) {\n        const index = this.openDialogs.indexOf(dialogRef);\n        if (index > -1) {\n            this.openDialogs.splice(index, 1);\n            // If all the dialogs were closed, remove/restore the `aria-hidden`\n            // to a the siblings and emit to the `afterAllClosed` stream.\n            if (!this.openDialogs.length) {\n                this._ariaHiddenElements.forEach((previousValue, element) => {\n                    if (previousValue) {\n                        element.setAttribute('aria-hidden', previousValue);\n                    }\n                    else {\n                        element.removeAttribute('aria-hidden');\n                    }\n                });\n                this._ariaHiddenElements.clear();\n                this._getAfterAllClosed().next();\n            }\n        }\n    }\n    /**\n     * Hides all of the content that isn't an overlay from assistive technology.\n     */\n    _hideNonDialogContentFromAssistiveTechnology() {\n        const overlayContainer = this._overlayContainer.getContainerElement();\n        // Ensure that the overlay container is attached to the DOM.\n        if (overlayContainer.parentElement) {\n            const siblings = overlayContainer.parentElement.children;\n            for (let i = siblings.length - 1; i > -1; i--) {\n                let sibling = siblings[i];\n                if (sibling !== overlayContainer &&\n                    sibling.nodeName !== 'SCRIPT' &&\n                    sibling.nodeName !== 'STYLE' &&\n                    !sibling.hasAttribute('aria-live')) {\n                    this._ariaHiddenElements.set(sibling, sibling.getAttribute('aria-hidden'));\n                    sibling.setAttribute('aria-hidden', 'true');\n                }\n            }\n        }\n    }\n    /** Closes all of the dialogs in an array. */\n    _closeDialogs(dialogs) {\n        let i = dialogs.length;\n        while (i--) {\n            // The `_openDialogs` property isn't updated after close until the rxjs subscription\n            // runs on the next microtask, in addition to modifying the array as we're going\n            // through it. We loop through all of them and call close without assuming that\n            // they'll be removed from the list instantaneously.\n            dialogs[i].close();\n        }\n    }\n}\n_MatDialogBase.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: _MatDialogBase, deps: \"invalid\", target: i0.ɵɵFactoryTarget.Directive });\n_MatDialogBase.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.1.0\", type: _MatDialogBase, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: _MatDialogBase, decorators: [{\n            type: Directive\n        }], ctorParameters: function () { return [{ type: i1$1.Overlay }, { type: i0.Injector }, { type: undefined }, { type: undefined }, { type: i1$1.OverlayContainer }, { type: undefined }, { type: i0.Type }, { type: i0.Type }, { type: i0.InjectionToken }, { type: undefined }]; } });\n/**\n * Service to open Material Design modal dialogs.\n */\nclass MatDialog extends _MatDialogBase {\n    constructor(overlay, injector, \n    /**\n     * @deprecated `_location` parameter to be removed.\n     * @breaking-change 10.0.0\n     */\n    location, defaultOptions, scrollStrategy, parentDialog, overlayContainer, animationMode) {\n        super(overlay, injector, defaultOptions, parentDialog, overlayContainer, scrollStrategy, MatDialogRef, MatDialogContainer, MAT_DIALOG_DATA, animationMode);\n    }\n}\nMatDialog.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatDialog, deps: [{ token: i1$1.Overlay }, { token: i0.Injector }, { token: i2.Location, optional: true }, { token: MAT_DIALOG_DEFAULT_OPTIONS, optional: true }, { token: MAT_DIALOG_SCROLL_STRATEGY }, { token: MatDialog, optional: true, skipSelf: true }, { token: i1$1.OverlayContainer }, { token: ANIMATION_MODULE_TYPE, optional: true }], target: i0.ɵɵFactoryTarget.Injectable });\nMatDialog.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatDialog });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatDialog, decorators: [{\n            type: Injectable\n        }], ctorParameters: function () {\n        return [{ type: i1$1.Overlay }, { type: i0.Injector }, { type: i2.Location, decorators: [{\n                        type: Optional\n                    }] }, { type: MatDialogConfig, decorators: [{\n                        type: Optional\n                    }, {\n                        type: Inject,\n                        args: [MAT_DIALOG_DEFAULT_OPTIONS]\n                    }] }, { type: undefined, decorators: [{\n                        type: Inject,\n                        args: [MAT_DIALOG_SCROLL_STRATEGY]\n                    }] }, { type: MatDialog, decorators: [{\n                        type: Optional\n                    }, {\n                        type: SkipSelf\n                    }] }, { type: i1$1.OverlayContainer }, { type: undefined, decorators: [{\n                        type: Optional\n                    }, {\n                        type: Inject,\n                        args: [ANIMATION_MODULE_TYPE]\n                    }] }];\n    } });\n/**\n * Applies default options to the dialog config.\n * @param config Config to be modified.\n * @param defaultOptions Default options provided.\n * @returns The new configuration object.\n */\nfunction _applyConfigDefaults(config, defaultOptions) {\n    return Object.assign(Object.assign({}, defaultOptions), config);\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Counter used to generate unique IDs for dialog elements. */\nlet dialogElementUid = 0;\n/**\n * Button that will close the current dialog.\n */\nclass MatDialogClose {\n    constructor(\n    /**\n     * Reference to the containing dialog.\n     * @deprecated `dialogRef` property to become private.\n     * @breaking-change 13.0.0\n     */\n    // The dialog title directive is always used in combination with a `MatDialogRef`.\n    // tslint:disable-next-line: lightweight-tokens\n    dialogRef, _elementRef, _dialog) {\n        this.dialogRef = dialogRef;\n        this._elementRef = _elementRef;\n        this._dialog = _dialog;\n        /** Default to \"button\" to prevents accidental form submits. */\n        this.type = 'button';\n    }\n    ngOnInit() {\n        if (!this.dialogRef) {\n            // When this directive is included in a dialog via TemplateRef (rather than being\n            // in a Component), the DialogRef isn't available via injection because embedded\n            // views cannot be given a custom injector. Instead, we look up the DialogRef by\n            // ID. This must occur in `onInit`, as the ID binding for the dialog container won't\n            // be resolved at constructor time.\n            this.dialogRef = getClosestDialog(this._elementRef, this._dialog.openDialogs);\n        }\n    }\n    ngOnChanges(changes) {\n        const proxiedChange = changes['_matDialogClose'] || changes['_matDialogCloseResult'];\n        if (proxiedChange) {\n            this.dialogResult = proxiedChange.currentValue;\n        }\n    }\n    _onButtonClick(event) {\n        // Determinate the focus origin using the click event, because using the FocusMonitor will\n        // result in incorrect origins. Most of the time, close buttons will be auto focused in the\n        // dialog, and therefore clicking the button won't result in a focus change. This means that\n        // the FocusMonitor won't detect any origin change, and will always output `program`.\n        _closeDialogVia(this.dialogRef, event.screenX === 0 && event.screenY === 0 ? 'keyboard' : 'mouse', this.dialogResult);\n    }\n}\nMatDialogClose.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatDialogClose, deps: [{ token: MatDialogRef, optional: true }, { token: i0.ElementRef }, { token: MatDialog }], target: i0.ɵɵFactoryTarget.Directive });\nMatDialogClose.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.1.0\", type: MatDialogClose, selector: \"[mat-dialog-close], [matDialogClose]\", inputs: { ariaLabel: [\"aria-label\", \"ariaLabel\"], type: \"type\", dialogResult: [\"mat-dialog-close\", \"dialogResult\"], _matDialogClose: [\"matDialogClose\", \"_matDialogClose\"] }, host: { listeners: { \"click\": \"_onButtonClick($event)\" }, properties: { \"attr.aria-label\": \"ariaLabel || null\", \"attr.type\": \"type\" } }, exportAs: [\"matDialogClose\"], usesOnChanges: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatDialogClose, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[mat-dialog-close], [matDialogClose]',\n                    exportAs: 'matDialogClose',\n                    host: {\n                        '(click)': '_onButtonClick($event)',\n                        '[attr.aria-label]': 'ariaLabel || null',\n                        '[attr.type]': 'type',\n                    },\n                }]\n        }], ctorParameters: function () {\n        return [{ type: MatDialogRef, decorators: [{\n                        type: Optional\n                    }] }, { type: i0.ElementRef }, { type: MatDialog }];\n    }, propDecorators: { ariaLabel: [{\n                type: Input,\n                args: ['aria-label']\n            }], type: [{\n                type: Input\n            }], dialogResult: [{\n                type: Input,\n                args: ['mat-dialog-close']\n            }], _matDialogClose: [{\n                type: Input,\n                args: ['matDialogClose']\n            }] } });\n/**\n * Title of a dialog element. Stays fixed to the top of the dialog when scrolling.\n */\nclass MatDialogTitle {\n    constructor(\n    // The dialog title directive is always used in combination with a `MatDialogRef`.\n    // tslint:disable-next-line: lightweight-tokens\n    _dialogRef, _elementRef, _dialog) {\n        this._dialogRef = _dialogRef;\n        this._elementRef = _elementRef;\n        this._dialog = _dialog;\n        /** Unique id for the dialog title. If none is supplied, it will be auto-generated. */\n        this.id = `mat-dialog-title-${dialogElementUid++}`;\n    }\n    ngOnInit() {\n        if (!this._dialogRef) {\n            this._dialogRef = getClosestDialog(this._elementRef, this._dialog.openDialogs);\n        }\n        if (this._dialogRef) {\n            Promise.resolve().then(() => {\n                const container = this._dialogRef._containerInstance;\n                if (container && !container._ariaLabelledBy) {\n                    container._ariaLabelledBy = this.id;\n                }\n            });\n        }\n    }\n}\nMatDialogTitle.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatDialogTitle, deps: [{ token: MatDialogRef, optional: true }, { token: i0.ElementRef }, { token: MatDialog }], target: i0.ɵɵFactoryTarget.Directive });\nMatDialogTitle.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.1.0\", type: MatDialogTitle, selector: \"[mat-dialog-title], [matDialogTitle]\", inputs: { id: \"id\" }, host: { properties: { \"id\": \"id\" }, classAttribute: \"mat-dialog-title\" }, exportAs: [\"matDialogTitle\"], ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatDialogTitle, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[mat-dialog-title], [matDialogTitle]',\n                    exportAs: 'matDialogTitle',\n                    host: {\n                        'class': 'mat-dialog-title',\n                        '[id]': 'id',\n                    },\n                }]\n        }], ctorParameters: function () {\n        return [{ type: MatDialogRef, decorators: [{\n                        type: Optional\n                    }] }, { type: i0.ElementRef }, { type: MatDialog }];\n    }, propDecorators: { id: [{\n                type: Input\n            }] } });\n/**\n * Scrollable content container of a dialog.\n */\nclass MatDialogContent {\n}\nMatDialogContent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatDialogContent, deps: [], target: i0.ɵɵFactoryTarget.Directive });\nMatDialogContent.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.1.0\", type: MatDialogContent, selector: \"[mat-dialog-content], mat-dialog-content, [matDialogContent]\", host: { classAttribute: \"mat-dialog-content\" }, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatDialogContent, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: `[mat-dialog-content], mat-dialog-content, [matDialogContent]`,\n                    host: { 'class': 'mat-dialog-content' },\n                }]\n        }] });\n/**\n * Container for the bottom action buttons in a dialog.\n * Stays fixed to the bottom when scrolling.\n */\nclass MatDialogActions {\n}\nMatDialogActions.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatDialogActions, deps: [], target: i0.ɵɵFactoryTarget.Directive });\nMatDialogActions.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.1.0\", type: MatDialogActions, selector: \"[mat-dialog-actions], mat-dialog-actions, [matDialogActions]\", host: { classAttribute: \"mat-dialog-actions\" }, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatDialogActions, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: `[mat-dialog-actions], mat-dialog-actions, [matDialogActions]`,\n                    host: { 'class': 'mat-dialog-actions' },\n                }]\n        }] });\n/**\n * Finds the closest MatDialogRef to an element by looking at the DOM.\n * @param element Element relative to which to look for a dialog.\n * @param openDialogs References to the currently-open dialogs.\n */\nfunction getClosestDialog(element, openDialogs) {\n    let parent = element.nativeElement.parentElement;\n    while (parent && !parent.classList.contains('mat-dialog-container')) {\n        parent = parent.parentElement;\n    }\n    return parent ? openDialogs.find(dialog => dialog.id === parent.id) : null;\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass MatDialogModule {\n}\nMatDialogModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatDialogModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nMatDialogModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatDialogModule, declarations: [MatDialogContainer,\n        MatDialogClose,\n        MatDialogTitle,\n        MatDialogActions,\n        MatDialogContent], imports: [OverlayModule, PortalModule, MatCommonModule], exports: [MatDialogContainer,\n        MatDialogClose,\n        MatDialogTitle,\n        MatDialogContent,\n        MatDialogActions,\n        MatCommonModule] });\nMatDialogModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatDialogModule, providers: [MatDialog, MAT_DIALOG_SCROLL_STRATEGY_PROVIDER], imports: [[OverlayModule, PortalModule, MatCommonModule], MatCommonModule] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatDialogModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [OverlayModule, PortalModule, MatCommonModule],\n                    exports: [\n                        MatDialogContainer,\n                        MatDialogClose,\n                        MatDialogTitle,\n                        MatDialogContent,\n                        MatDialogActions,\n                        MatCommonModule,\n                    ],\n                    declarations: [\n                        MatDialogContainer,\n                        MatDialogClose,\n                        MatDialogTitle,\n                        MatDialogActions,\n                        MatDialogContent,\n                    ],\n                    providers: [MatDialog, MAT_DIALOG_SCROLL_STRATEGY_PROVIDER],\n                }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_DIALOG_DATA, MAT_DIALOG_DEFAULT_OPTIONS, MAT_DIALOG_SCROLL_STRATEGY, MAT_DIALOG_SCROLL_STRATEGY_FACTORY, MAT_DIALOG_SCROLL_STRATEGY_PROVIDER, MAT_DIALOG_SCROLL_STRATEGY_PROVIDER_FACTORY, MatDialog, MatDialogActions, MatDialogClose, MatDialogConfig, MatDialogContainer, MatDialogContent, MatDialogModule, MatDialogRef, MatDialogTitle, _MatDialogBase, _MatDialogContainerBase, _closeDialogVia, matDialogAnimations, throwMatDialogContentAlreadyAttachedError };\n","import * as i0 from '@angular/core';\nimport { Component, ViewEncapsulation, ChangeDetectionStrategy, Input, NgModule } from '@angular/core';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { MatCommonModule } from '@angular/material/core';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass MatDivider {\n    constructor() {\n        this._vertical = false;\n        this._inset = false;\n    }\n    /** Whether the divider is vertically aligned. */\n    get vertical() {\n        return this._vertical;\n    }\n    set vertical(value) {\n        this._vertical = coerceBooleanProperty(value);\n    }\n    /** Whether the divider is an inset divider. */\n    get inset() {\n        return this._inset;\n    }\n    set inset(value) {\n        this._inset = coerceBooleanProperty(value);\n    }\n}\nMatDivider.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatDivider, deps: [], target: i0.ɵɵFactoryTarget.Component });\nMatDivider.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: MatDivider, selector: \"mat-divider\", inputs: { vertical: \"vertical\", inset: \"inset\" }, host: { attributes: { \"role\": \"separator\" }, properties: { \"attr.aria-orientation\": \"vertical ? \\\"vertical\\\" : \\\"horizontal\\\"\", \"class.mat-divider-vertical\": \"vertical\", \"class.mat-divider-horizontal\": \"!vertical\", \"class.mat-divider-inset\": \"inset\" }, classAttribute: \"mat-divider\" }, ngImport: i0, template: '', isInline: true, styles: [\".mat-divider{display:block;margin:0;border-top-width:1px;border-top-style:solid}.mat-divider.mat-divider-vertical{border-top:0;border-right-width:1px;border-right-style:solid}.mat-divider.mat-divider-inset{margin-left:80px}[dir=rtl] .mat-divider.mat-divider-inset{margin-left:auto;margin-right:80px}\\n\"], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatDivider, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-divider', host: {\n                        'role': 'separator',\n                        '[attr.aria-orientation]': 'vertical ? \"vertical\" : \"horizontal\"',\n                        '[class.mat-divider-vertical]': 'vertical',\n                        '[class.mat-divider-horizontal]': '!vertical',\n                        '[class.mat-divider-inset]': 'inset',\n                        'class': 'mat-divider',\n                    }, template: '', encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, styles: [\".mat-divider{display:block;margin:0;border-top-width:1px;border-top-style:solid}.mat-divider.mat-divider-vertical{border-top:0;border-right-width:1px;border-right-style:solid}.mat-divider.mat-divider-inset{margin-left:80px}[dir=rtl] .mat-divider.mat-divider-inset{margin-left:auto;margin-right:80px}\\n\"] }]\n        }], propDecorators: { vertical: [{\n                type: Input\n            }], inset: [{\n                type: Input\n            }] } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass MatDividerModule {\n}\nMatDividerModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatDividerModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nMatDividerModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatDividerModule, declarations: [MatDivider], imports: [MatCommonModule], exports: [MatDivider, MatCommonModule] });\nMatDividerModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatDividerModule, imports: [[MatCommonModule], MatCommonModule] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatDividerModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [MatCommonModule],\n                    exports: [MatDivider, MatCommonModule],\n                    declarations: [MatDivider],\n                }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MatDivider, MatDividerModule };\n","import { CdkAccordionItem, CdkAccordion, CdkAccordionModule } from '@angular/cdk/accordion';\nimport * as i2 from '@angular/cdk/portal';\nimport { TemplatePortal, PortalModule } from '@angular/cdk/portal';\nimport * as i3 from '@angular/common';\nimport { DOCUMENT, CommonModule } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { InjectionToken, Directive, EventEmitter, Component, ViewEncapsulation, ChangeDetectionStrategy, Optional, SkipSelf, Inject, Input, Output, ContentChild, ViewChild, Host, Attribute, QueryList, ContentChildren, NgModule } from '@angular/core';\nimport { mixinTabIndex, MatCommonModule } from '@angular/material/core';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport * as i2$1 from '@angular/cdk/a11y';\nimport { FocusKeyManager } from '@angular/cdk/a11y';\nimport { distinctUntilChanged, startWith, filter, take } from 'rxjs/operators';\nimport { ENTER, hasModifierKey, SPACE } from '@angular/cdk/keycodes';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\nimport { Subject, Subscription, EMPTY, merge } from 'rxjs';\nimport { trigger, state, style, transition, animate } from '@angular/animations';\nimport * as i1 from '@angular/cdk/collections';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Token used to provide a `MatAccordion` to `MatExpansionPanel`.\n * Used primarily to avoid circular imports between `MatAccordion` and `MatExpansionPanel`.\n */\nconst MAT_ACCORDION = new InjectionToken('MAT_ACCORDION');\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Time and timing curve for expansion panel animations. */\n// Note: Keep this in sync with the Sass variable for the panel header animation.\nconst EXPANSION_PANEL_ANIMATION_TIMING = '225ms cubic-bezier(0.4,0.0,0.2,1)';\n/**\n * Animations used by the Material expansion panel.\n *\n * A bug in angular animation's `state` when ViewContainers are moved using ViewContainerRef.move()\n * causes the animation state of moved components to become `void` upon exit, and not update again\n * upon reentry into the DOM.  This can lead a to situation for the expansion panel where the state\n * of the panel is `expanded` or `collapsed` but the animation state is `void`.\n *\n * To correctly handle animating to the next state, we animate between `void` and `collapsed` which\n * are defined to have the same styles. Since angular animates from the current styles to the\n * destination state's style definition, in situations where we are moving from `void`'s styles to\n * `collapsed` this acts a noop since no style values change.\n *\n * In the case where angular's animation state is out of sync with the expansion panel's state, the\n * expansion panel being `expanded` and angular animations being `void`, the animation from the\n * `expanded`'s effective styles (though in a `void` animation state) to the collapsed state will\n * occur as expected.\n *\n * Angular Bug: https://github.com/angular/angular/issues/18847\n *\n * @docs-private\n */\nconst matExpansionAnimations = {\n    /** Animation that rotates the indicator arrow. */\n    indicatorRotate: trigger('indicatorRotate', [\n        state('collapsed, void', style({ transform: 'rotate(0deg)' })),\n        state('expanded', style({ transform: 'rotate(180deg)' })),\n        transition('expanded <=> collapsed, void => collapsed', animate(EXPANSION_PANEL_ANIMATION_TIMING)),\n    ]),\n    /** Animation that expands and collapses the panel content. */\n    bodyExpansion: trigger('bodyExpansion', [\n        state('collapsed, void', style({ height: '0px', visibility: 'hidden' })),\n        state('expanded', style({ height: '*', visibility: 'visible' })),\n        transition('expanded <=> collapsed, void => collapsed', animate(EXPANSION_PANEL_ANIMATION_TIMING)),\n    ]),\n};\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Expansion panel content that will be rendered lazily\n * after the panel is opened for the first time.\n */\nclass MatExpansionPanelContent {\n    constructor(_template) {\n        this._template = _template;\n    }\n}\nMatExpansionPanelContent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatExpansionPanelContent, deps: [{ token: i0.TemplateRef }], target: i0.ɵɵFactoryTarget.Directive });\nMatExpansionPanelContent.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.1.0\", type: MatExpansionPanelContent, selector: \"ng-template[matExpansionPanelContent]\", ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatExpansionPanelContent, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'ng-template[matExpansionPanelContent]',\n                }]\n        }], ctorParameters: function () { return [{ type: i0.TemplateRef }]; } });\n\n/** Counter for generating unique element ids. */\nlet uniqueId = 0;\n/**\n * Injection token that can be used to configure the default\n * options for the expansion panel component.\n */\nconst MAT_EXPANSION_PANEL_DEFAULT_OPTIONS = new InjectionToken('MAT_EXPANSION_PANEL_DEFAULT_OPTIONS');\n/**\n * This component can be used as a single element to show expandable content, or as one of\n * multiple children of an element with the MatAccordion directive attached.\n */\nclass MatExpansionPanel extends CdkAccordionItem {\n    constructor(accordion, _changeDetectorRef, _uniqueSelectionDispatcher, _viewContainerRef, _document, _animationMode, defaultOptions) {\n        super(accordion, _changeDetectorRef, _uniqueSelectionDispatcher);\n        this._viewContainerRef = _viewContainerRef;\n        this._animationMode = _animationMode;\n        this._hideToggle = false;\n        /** An event emitted after the body's expansion animation happens. */\n        this.afterExpand = new EventEmitter();\n        /** An event emitted after the body's collapse animation happens. */\n        this.afterCollapse = new EventEmitter();\n        /** Stream that emits for changes in `@Input` properties. */\n        this._inputChanges = new Subject();\n        /** ID for the associated header element. Used for a11y labelling. */\n        this._headerId = `mat-expansion-panel-header-${uniqueId++}`;\n        /** Stream of body animation done events. */\n        this._bodyAnimationDone = new Subject();\n        this.accordion = accordion;\n        this._document = _document;\n        // We need a Subject with distinctUntilChanged, because the `done` event\n        // fires twice on some browsers. See https://github.com/angular/angular/issues/24084\n        this._bodyAnimationDone\n            .pipe(distinctUntilChanged((x, y) => {\n            return x.fromState === y.fromState && x.toState === y.toState;\n        }))\n            .subscribe(event => {\n            if (event.fromState !== 'void') {\n                if (event.toState === 'expanded') {\n                    this.afterExpand.emit();\n                }\n                else if (event.toState === 'collapsed') {\n                    this.afterCollapse.emit();\n                }\n            }\n        });\n        if (defaultOptions) {\n            this.hideToggle = defaultOptions.hideToggle;\n        }\n    }\n    /** Whether the toggle indicator should be hidden. */\n    get hideToggle() {\n        return this._hideToggle || (this.accordion && this.accordion.hideToggle);\n    }\n    set hideToggle(value) {\n        this._hideToggle = coerceBooleanProperty(value);\n    }\n    /** The position of the expansion indicator. */\n    get togglePosition() {\n        return this._togglePosition || (this.accordion && this.accordion.togglePosition);\n    }\n    set togglePosition(value) {\n        this._togglePosition = value;\n    }\n    /** Determines whether the expansion panel should have spacing between it and its siblings. */\n    _hasSpacing() {\n        if (this.accordion) {\n            return this.expanded && this.accordion.displayMode === 'default';\n        }\n        return false;\n    }\n    /** Gets the expanded state string. */\n    _getExpandedState() {\n        return this.expanded ? 'expanded' : 'collapsed';\n    }\n    /** Toggles the expanded state of the expansion panel. */\n    toggle() {\n        this.expanded = !this.expanded;\n    }\n    /** Sets the expanded state of the expansion panel to false. */\n    close() {\n        this.expanded = false;\n    }\n    /** Sets the expanded state of the expansion panel to true. */\n    open() {\n        this.expanded = true;\n    }\n    ngAfterContentInit() {\n        if (this._lazyContent) {\n            // Render the content as soon as the panel becomes open.\n            this.opened\n                .pipe(startWith(null), filter(() => this.expanded && !this._portal), take(1))\n                .subscribe(() => {\n                this._portal = new TemplatePortal(this._lazyContent._template, this._viewContainerRef);\n            });\n        }\n    }\n    ngOnChanges(changes) {\n        this._inputChanges.next(changes);\n    }\n    ngOnDestroy() {\n        super.ngOnDestroy();\n        this._bodyAnimationDone.complete();\n        this._inputChanges.complete();\n    }\n    /** Checks whether the expansion panel's content contains the currently-focused element. */\n    _containsFocus() {\n        if (this._body) {\n            const focusedElement = this._document.activeElement;\n            const bodyElement = this._body.nativeElement;\n            return focusedElement === bodyElement || bodyElement.contains(focusedElement);\n        }\n        return false;\n    }\n}\nMatExpansionPanel.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatExpansionPanel, deps: [{ token: MAT_ACCORDION, optional: true, skipSelf: true }, { token: i0.ChangeDetectorRef }, { token: i1.UniqueSelectionDispatcher }, { token: i0.ViewContainerRef }, { token: DOCUMENT }, { token: ANIMATION_MODULE_TYPE, optional: true }, { token: MAT_EXPANSION_PANEL_DEFAULT_OPTIONS, optional: true }], target: i0.ɵɵFactoryTarget.Component });\nMatExpansionPanel.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: MatExpansionPanel, selector: \"mat-expansion-panel\", inputs: { disabled: \"disabled\", expanded: \"expanded\", hideToggle: \"hideToggle\", togglePosition: \"togglePosition\" }, outputs: { opened: \"opened\", closed: \"closed\", expandedChange: \"expandedChange\", afterExpand: \"afterExpand\", afterCollapse: \"afterCollapse\" }, host: { properties: { \"class.mat-expanded\": \"expanded\", \"class._mat-animation-noopable\": \"_animationMode === \\\"NoopAnimations\\\"\", \"class.mat-expansion-panel-spacing\": \"_hasSpacing()\" }, classAttribute: \"mat-expansion-panel\" }, providers: [\n        // Provide MatAccordion as undefined to prevent nested expansion panels from registering\n        // to the same accordion.\n        { provide: MAT_ACCORDION, useValue: undefined },\n    ], queries: [{ propertyName: \"_lazyContent\", first: true, predicate: MatExpansionPanelContent, descendants: true }], viewQueries: [{ propertyName: \"_body\", first: true, predicate: [\"body\"], descendants: true }], exportAs: [\"matExpansionPanel\"], usesInheritance: true, usesOnChanges: true, ngImport: i0, template: \"<ng-content select=\\\"mat-expansion-panel-header\\\"></ng-content>\\n<div class=\\\"mat-expansion-panel-content\\\"\\n     role=\\\"region\\\"\\n     [@bodyExpansion]=\\\"_getExpandedState()\\\"\\n     (@bodyExpansion.done)=\\\"_bodyAnimationDone.next($event)\\\"\\n     [attr.aria-labelledby]=\\\"_headerId\\\"\\n     [id]=\\\"id\\\"\\n     #body>\\n  <div class=\\\"mat-expansion-panel-body\\\">\\n    <ng-content></ng-content>\\n    <ng-template [cdkPortalOutlet]=\\\"_portal\\\"></ng-template>\\n  </div>\\n  <ng-content select=\\\"mat-action-row\\\"></ng-content>\\n</div>\\n\", styles: [\".mat-expansion-panel{box-sizing:content-box;display:block;margin:0;border-radius:4px;overflow:hidden;transition:margin 225ms cubic-bezier(0.4, 0, 0.2, 1),box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);position:relative}.mat-accordion .mat-expansion-panel:not(.mat-expanded),.mat-accordion .mat-expansion-panel:not(.mat-expansion-panel-spacing){border-radius:0}.mat-accordion .mat-expansion-panel:first-of-type{border-top-right-radius:4px;border-top-left-radius:4px}.mat-accordion .mat-expansion-panel:last-of-type{border-bottom-right-radius:4px;border-bottom-left-radius:4px}.cdk-high-contrast-active .mat-expansion-panel{outline:solid 1px}.mat-expansion-panel.ng-animate-disabled,.ng-animate-disabled .mat-expansion-panel,.mat-expansion-panel._mat-animation-noopable{transition:none}.mat-expansion-panel-content{display:flex;flex-direction:column;overflow:visible}.mat-expansion-panel-body{padding:0 24px 16px}.mat-expansion-panel-spacing{margin:16px 0}.mat-accordion>.mat-expansion-panel-spacing:first-child,.mat-accordion>*:first-child:not(.mat-expansion-panel) .mat-expansion-panel-spacing{margin-top:0}.mat-accordion>.mat-expansion-panel-spacing:last-child,.mat-accordion>*:last-child:not(.mat-expansion-panel) .mat-expansion-panel-spacing{margin-bottom:0}.mat-action-row{border-top-style:solid;border-top-width:1px;display:flex;flex-direction:row;justify-content:flex-end;padding:16px 8px 16px 24px}.mat-action-row button.mat-button-base,.mat-action-row button.mat-mdc-button-base{margin-left:8px}[dir=rtl] .mat-action-row button.mat-button-base,[dir=rtl] .mat-action-row button.mat-mdc-button-base{margin-left:0;margin-right:8px}\\n\"], directives: [{ type: i2.CdkPortalOutlet, selector: \"[cdkPortalOutlet]\", inputs: [\"cdkPortalOutlet\"], outputs: [\"attached\"], exportAs: [\"cdkPortalOutlet\"] }], animations: [matExpansionAnimations.bodyExpansion], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatExpansionPanel, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-expansion-panel', exportAs: 'matExpansionPanel', encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, inputs: ['disabled', 'expanded'], outputs: ['opened', 'closed', 'expandedChange'], animations: [matExpansionAnimations.bodyExpansion], providers: [\n                        // Provide MatAccordion as undefined to prevent nested expansion panels from registering\n                        // to the same accordion.\n                        { provide: MAT_ACCORDION, useValue: undefined },\n                    ], host: {\n                        'class': 'mat-expansion-panel',\n                        '[class.mat-expanded]': 'expanded',\n                        '[class._mat-animation-noopable]': '_animationMode === \"NoopAnimations\"',\n                        '[class.mat-expansion-panel-spacing]': '_hasSpacing()',\n                    }, template: \"<ng-content select=\\\"mat-expansion-panel-header\\\"></ng-content>\\n<div class=\\\"mat-expansion-panel-content\\\"\\n     role=\\\"region\\\"\\n     [@bodyExpansion]=\\\"_getExpandedState()\\\"\\n     (@bodyExpansion.done)=\\\"_bodyAnimationDone.next($event)\\\"\\n     [attr.aria-labelledby]=\\\"_headerId\\\"\\n     [id]=\\\"id\\\"\\n     #body>\\n  <div class=\\\"mat-expansion-panel-body\\\">\\n    <ng-content></ng-content>\\n    <ng-template [cdkPortalOutlet]=\\\"_portal\\\"></ng-template>\\n  </div>\\n  <ng-content select=\\\"mat-action-row\\\"></ng-content>\\n</div>\\n\", styles: [\".mat-expansion-panel{box-sizing:content-box;display:block;margin:0;border-radius:4px;overflow:hidden;transition:margin 225ms cubic-bezier(0.4, 0, 0.2, 1),box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);position:relative}.mat-accordion .mat-expansion-panel:not(.mat-expanded),.mat-accordion .mat-expansion-panel:not(.mat-expansion-panel-spacing){border-radius:0}.mat-accordion .mat-expansion-panel:first-of-type{border-top-right-radius:4px;border-top-left-radius:4px}.mat-accordion .mat-expansion-panel:last-of-type{border-bottom-right-radius:4px;border-bottom-left-radius:4px}.cdk-high-contrast-active .mat-expansion-panel{outline:solid 1px}.mat-expansion-panel.ng-animate-disabled,.ng-animate-disabled .mat-expansion-panel,.mat-expansion-panel._mat-animation-noopable{transition:none}.mat-expansion-panel-content{display:flex;flex-direction:column;overflow:visible}.mat-expansion-panel-body{padding:0 24px 16px}.mat-expansion-panel-spacing{margin:16px 0}.mat-accordion>.mat-expansion-panel-spacing:first-child,.mat-accordion>*:first-child:not(.mat-expansion-panel) .mat-expansion-panel-spacing{margin-top:0}.mat-accordion>.mat-expansion-panel-spacing:last-child,.mat-accordion>*:last-child:not(.mat-expansion-panel) .mat-expansion-panel-spacing{margin-bottom:0}.mat-action-row{border-top-style:solid;border-top-width:1px;display:flex;flex-direction:row;justify-content:flex-end;padding:16px 8px 16px 24px}.mat-action-row button.mat-button-base,.mat-action-row button.mat-mdc-button-base{margin-left:8px}[dir=rtl] .mat-action-row button.mat-button-base,[dir=rtl] .mat-action-row button.mat-mdc-button-base{margin-left:0;margin-right:8px}\\n\"] }]\n        }], ctorParameters: function () {\n        return [{ type: undefined, decorators: [{\n                        type: Optional\n                    }, {\n                        type: SkipSelf\n                    }, {\n                        type: Inject,\n                        args: [MAT_ACCORDION]\n                    }] }, { type: i0.ChangeDetectorRef }, { type: i1.UniqueSelectionDispatcher }, { type: i0.ViewContainerRef }, { type: undefined, decorators: [{\n                        type: Inject,\n                        args: [DOCUMENT]\n                    }] }, { type: undefined, decorators: [{\n                        type: Optional\n                    }, {\n                        type: Inject,\n                        args: [ANIMATION_MODULE_TYPE]\n                    }] }, { type: undefined, decorators: [{\n                        type: Inject,\n                        args: [MAT_EXPANSION_PANEL_DEFAULT_OPTIONS]\n                    }, {\n                        type: Optional\n                    }] }];\n    }, propDecorators: { hideToggle: [{\n                type: Input\n            }], togglePosition: [{\n                type: Input\n            }], afterExpand: [{\n                type: Output\n            }], afterCollapse: [{\n                type: Output\n            }], _lazyContent: [{\n                type: ContentChild,\n                args: [MatExpansionPanelContent]\n            }], _body: [{\n                type: ViewChild,\n                args: ['body']\n            }] } });\n/**\n * Actions of a `<mat-expansion-panel>`.\n */\nclass MatExpansionPanelActionRow {\n}\nMatExpansionPanelActionRow.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatExpansionPanelActionRow, deps: [], target: i0.ɵɵFactoryTarget.Directive });\nMatExpansionPanelActionRow.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.1.0\", type: MatExpansionPanelActionRow, selector: \"mat-action-row\", host: { classAttribute: \"mat-action-row\" }, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatExpansionPanelActionRow, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'mat-action-row',\n                    host: {\n                        class: 'mat-action-row',\n                    },\n                }]\n        }] });\n\n// Boilerplate for applying mixins to MatExpansionPanelHeader.\n/** @docs-private */\nclass MatExpansionPanelHeaderBase {\n}\nconst _MatExpansionPanelHeaderMixinBase = mixinTabIndex(MatExpansionPanelHeaderBase);\n/**\n * Header element of a `<mat-expansion-panel>`.\n */\nclass MatExpansionPanelHeader extends _MatExpansionPanelHeaderMixinBase {\n    constructor(panel, _element, _focusMonitor, _changeDetectorRef, defaultOptions, _animationMode, tabIndex) {\n        super();\n        this.panel = panel;\n        this._element = _element;\n        this._focusMonitor = _focusMonitor;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._animationMode = _animationMode;\n        this._parentChangeSubscription = Subscription.EMPTY;\n        const accordionHideToggleChange = panel.accordion\n            ? panel.accordion._stateChanges.pipe(filter(changes => !!(changes['hideToggle'] || changes['togglePosition'])))\n            : EMPTY;\n        this.tabIndex = parseInt(tabIndex || '') || 0;\n        // Since the toggle state depends on an @Input on the panel, we\n        // need to subscribe and trigger change detection manually.\n        this._parentChangeSubscription = merge(panel.opened, panel.closed, accordionHideToggleChange, panel._inputChanges.pipe(filter(changes => {\n            return !!(changes['hideToggle'] || changes['disabled'] || changes['togglePosition']);\n        }))).subscribe(() => this._changeDetectorRef.markForCheck());\n        // Avoids focus being lost if the panel contained the focused element and was closed.\n        panel.closed\n            .pipe(filter(() => panel._containsFocus()))\n            .subscribe(() => _focusMonitor.focusVia(_element, 'program'));\n        if (defaultOptions) {\n            this.expandedHeight = defaultOptions.expandedHeight;\n            this.collapsedHeight = defaultOptions.collapsedHeight;\n        }\n    }\n    /**\n     * Whether the associated panel is disabled. Implemented as a part of `FocusableOption`.\n     * @docs-private\n     */\n    get disabled() {\n        return this.panel.disabled;\n    }\n    /** Toggles the expanded state of the panel. */\n    _toggle() {\n        if (!this.disabled) {\n            this.panel.toggle();\n        }\n    }\n    /** Gets whether the panel is expanded. */\n    _isExpanded() {\n        return this.panel.expanded;\n    }\n    /** Gets the expanded state string of the panel. */\n    _getExpandedState() {\n        return this.panel._getExpandedState();\n    }\n    /** Gets the panel id. */\n    _getPanelId() {\n        return this.panel.id;\n    }\n    /** Gets the toggle position for the header. */\n    _getTogglePosition() {\n        return this.panel.togglePosition;\n    }\n    /** Gets whether the expand indicator should be shown. */\n    _showToggle() {\n        return !this.panel.hideToggle && !this.panel.disabled;\n    }\n    /**\n     * Gets the current height of the header. Null if no custom height has been\n     * specified, and if the default height from the stylesheet should be used.\n     */\n    _getHeaderHeight() {\n        const isExpanded = this._isExpanded();\n        if (isExpanded && this.expandedHeight) {\n            return this.expandedHeight;\n        }\n        else if (!isExpanded && this.collapsedHeight) {\n            return this.collapsedHeight;\n        }\n        return null;\n    }\n    /** Handle keydown event calling to toggle() if appropriate. */\n    _keydown(event) {\n        switch (event.keyCode) {\n            // Toggle for space and enter keys.\n            case SPACE:\n            case ENTER:\n                if (!hasModifierKey(event)) {\n                    event.preventDefault();\n                    this._toggle();\n                }\n                break;\n            default:\n                if (this.panel.accordion) {\n                    this.panel.accordion._handleHeaderKeydown(event);\n                }\n                return;\n        }\n    }\n    /**\n     * Focuses the panel header. Implemented as a part of `FocusableOption`.\n     * @param origin Origin of the action that triggered the focus.\n     * @docs-private\n     */\n    focus(origin, options) {\n        if (origin) {\n            this._focusMonitor.focusVia(this._element, origin, options);\n        }\n        else {\n            this._element.nativeElement.focus(options);\n        }\n    }\n    ngAfterViewInit() {\n        this._focusMonitor.monitor(this._element).subscribe(origin => {\n            if (origin && this.panel.accordion) {\n                this.panel.accordion._handleHeaderFocus(this);\n            }\n        });\n    }\n    ngOnDestroy() {\n        this._parentChangeSubscription.unsubscribe();\n        this._focusMonitor.stopMonitoring(this._element);\n    }\n}\nMatExpansionPanelHeader.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatExpansionPanelHeader, deps: [{ token: MatExpansionPanel, host: true }, { token: i0.ElementRef }, { token: i2$1.FocusMonitor }, { token: i0.ChangeDetectorRef }, { token: MAT_EXPANSION_PANEL_DEFAULT_OPTIONS, optional: true }, { token: ANIMATION_MODULE_TYPE, optional: true }, { token: 'tabindex', attribute: true }], target: i0.ɵɵFactoryTarget.Component });\nMatExpansionPanelHeader.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: MatExpansionPanelHeader, selector: \"mat-expansion-panel-header\", inputs: { tabIndex: \"tabIndex\", expandedHeight: \"expandedHeight\", collapsedHeight: \"collapsedHeight\" }, host: { attributes: { \"role\": \"button\" }, listeners: { \"click\": \"_toggle()\", \"keydown\": \"_keydown($event)\" }, properties: { \"attr.id\": \"panel._headerId\", \"attr.tabindex\": \"tabIndex\", \"attr.aria-controls\": \"_getPanelId()\", \"attr.aria-expanded\": \"_isExpanded()\", \"attr.aria-disabled\": \"panel.disabled\", \"class.mat-expanded\": \"_isExpanded()\", \"class.mat-expansion-toggle-indicator-after\": \"_getTogglePosition() === 'after'\", \"class.mat-expansion-toggle-indicator-before\": \"_getTogglePosition() === 'before'\", \"class._mat-animation-noopable\": \"_animationMode === \\\"NoopAnimations\\\"\", \"style.height\": \"_getHeaderHeight()\" }, classAttribute: \"mat-expansion-panel-header mat-focus-indicator\" }, usesInheritance: true, ngImport: i0, template: \"<span class=\\\"mat-content\\\">\\n  <ng-content select=\\\"mat-panel-title\\\"></ng-content>\\n  <ng-content select=\\\"mat-panel-description\\\"></ng-content>\\n  <ng-content></ng-content>\\n</span>\\n<span [@indicatorRotate]=\\\"_getExpandedState()\\\" *ngIf=\\\"_showToggle()\\\"\\n      class=\\\"mat-expansion-indicator\\\"></span>\\n\", styles: [\".mat-expansion-panel-header{display:flex;flex-direction:row;align-items:center;padding:0 24px;border-radius:inherit;transition:height 225ms cubic-bezier(0.4, 0, 0.2, 1)}.mat-expansion-panel-header._mat-animation-noopable{transition:none}.mat-expansion-panel-header:focus,.mat-expansion-panel-header:hover{outline:none}.mat-expansion-panel-header.mat-expanded:focus,.mat-expansion-panel-header.mat-expanded:hover{background:inherit}.mat-expansion-panel-header:not([aria-disabled=true]){cursor:pointer}.mat-expansion-panel-header.mat-expansion-toggle-indicator-before{flex-direction:row-reverse}.mat-expansion-panel-header.mat-expansion-toggle-indicator-before .mat-expansion-indicator{margin:0 16px 0 0}[dir=rtl] .mat-expansion-panel-header.mat-expansion-toggle-indicator-before .mat-expansion-indicator{margin:0 0 0 16px}.mat-content{display:flex;flex:1;flex-direction:row;overflow:hidden}.mat-expansion-panel-header-title,.mat-expansion-panel-header-description{display:flex;flex-grow:1;margin-right:16px}[dir=rtl] .mat-expansion-panel-header-title,[dir=rtl] .mat-expansion-panel-header-description{margin-right:0;margin-left:16px}.mat-expansion-panel-header-description{flex-grow:2}.mat-expansion-indicator::after{border-style:solid;border-width:0 2px 2px 0;content:\\\"\\\";display:inline-block;padding:3px;transform:rotate(45deg);vertical-align:middle}.cdk-high-contrast-active .mat-expansion-panel .mat-expansion-panel-header.cdk-keyboard-focused:not([aria-disabled=true])::before,.cdk-high-contrast-active .mat-expansion-panel .mat-expansion-panel-header.cdk-program-focused:not([aria-disabled=true])::before,.cdk-high-contrast-active .mat-expansion-panel:not(.mat-expanded) .mat-expansion-panel-header:hover:not([aria-disabled=true])::before{top:0;left:0;right:0;bottom:0;position:absolute;box-sizing:border-box;pointer-events:none;border:3px solid;border-radius:4px;content:\\\"\\\"}.cdk-high-contrast-active .mat-expansion-panel-content{border-top:1px solid;border-top-left-radius:0;border-top-right-radius:0}\\n\"], directives: [{ type: i3.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }], animations: [matExpansionAnimations.indicatorRotate], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatExpansionPanelHeader, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-expansion-panel-header', encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, inputs: ['tabIndex'], animations: [matExpansionAnimations.indicatorRotate], host: {\n                        'class': 'mat-expansion-panel-header mat-focus-indicator',\n                        'role': 'button',\n                        '[attr.id]': 'panel._headerId',\n                        '[attr.tabindex]': 'tabIndex',\n                        '[attr.aria-controls]': '_getPanelId()',\n                        '[attr.aria-expanded]': '_isExpanded()',\n                        '[attr.aria-disabled]': 'panel.disabled',\n                        '[class.mat-expanded]': '_isExpanded()',\n                        '[class.mat-expansion-toggle-indicator-after]': `_getTogglePosition() === 'after'`,\n                        '[class.mat-expansion-toggle-indicator-before]': `_getTogglePosition() === 'before'`,\n                        '[class._mat-animation-noopable]': '_animationMode === \"NoopAnimations\"',\n                        '[style.height]': '_getHeaderHeight()',\n                        '(click)': '_toggle()',\n                        '(keydown)': '_keydown($event)',\n                    }, template: \"<span class=\\\"mat-content\\\">\\n  <ng-content select=\\\"mat-panel-title\\\"></ng-content>\\n  <ng-content select=\\\"mat-panel-description\\\"></ng-content>\\n  <ng-content></ng-content>\\n</span>\\n<span [@indicatorRotate]=\\\"_getExpandedState()\\\" *ngIf=\\\"_showToggle()\\\"\\n      class=\\\"mat-expansion-indicator\\\"></span>\\n\", styles: [\".mat-expansion-panel-header{display:flex;flex-direction:row;align-items:center;padding:0 24px;border-radius:inherit;transition:height 225ms cubic-bezier(0.4, 0, 0.2, 1)}.mat-expansion-panel-header._mat-animation-noopable{transition:none}.mat-expansion-panel-header:focus,.mat-expansion-panel-header:hover{outline:none}.mat-expansion-panel-header.mat-expanded:focus,.mat-expansion-panel-header.mat-expanded:hover{background:inherit}.mat-expansion-panel-header:not([aria-disabled=true]){cursor:pointer}.mat-expansion-panel-header.mat-expansion-toggle-indicator-before{flex-direction:row-reverse}.mat-expansion-panel-header.mat-expansion-toggle-indicator-before .mat-expansion-indicator{margin:0 16px 0 0}[dir=rtl] .mat-expansion-panel-header.mat-expansion-toggle-indicator-before .mat-expansion-indicator{margin:0 0 0 16px}.mat-content{display:flex;flex:1;flex-direction:row;overflow:hidden}.mat-expansion-panel-header-title,.mat-expansion-panel-header-description{display:flex;flex-grow:1;margin-right:16px}[dir=rtl] .mat-expansion-panel-header-title,[dir=rtl] .mat-expansion-panel-header-description{margin-right:0;margin-left:16px}.mat-expansion-panel-header-description{flex-grow:2}.mat-expansion-indicator::after{border-style:solid;border-width:0 2px 2px 0;content:\\\"\\\";display:inline-block;padding:3px;transform:rotate(45deg);vertical-align:middle}.cdk-high-contrast-active .mat-expansion-panel .mat-expansion-panel-header.cdk-keyboard-focused:not([aria-disabled=true])::before,.cdk-high-contrast-active .mat-expansion-panel .mat-expansion-panel-header.cdk-program-focused:not([aria-disabled=true])::before,.cdk-high-contrast-active .mat-expansion-panel:not(.mat-expanded) .mat-expansion-panel-header:hover:not([aria-disabled=true])::before{top:0;left:0;right:0;bottom:0;position:absolute;box-sizing:border-box;pointer-events:none;border:3px solid;border-radius:4px;content:\\\"\\\"}.cdk-high-contrast-active .mat-expansion-panel-content{border-top:1px solid;border-top-left-radius:0;border-top-right-radius:0}\\n\"] }]\n        }], ctorParameters: function () {\n        return [{ type: MatExpansionPanel, decorators: [{\n                        type: Host\n                    }] }, { type: i0.ElementRef }, { type: i2$1.FocusMonitor }, { type: i0.ChangeDetectorRef }, { type: undefined, decorators: [{\n                        type: Inject,\n                        args: [MAT_EXPANSION_PANEL_DEFAULT_OPTIONS]\n                    }, {\n                        type: Optional\n                    }] }, { type: undefined, decorators: [{\n                        type: Optional\n                    }, {\n                        type: Inject,\n                        args: [ANIMATION_MODULE_TYPE]\n                    }] }, { type: undefined, decorators: [{\n                        type: Attribute,\n                        args: ['tabindex']\n                    }] }];\n    }, propDecorators: { expandedHeight: [{\n                type: Input\n            }], collapsedHeight: [{\n                type: Input\n            }] } });\n/**\n * Description element of a `<mat-expansion-panel-header>`.\n */\nclass MatExpansionPanelDescription {\n}\nMatExpansionPanelDescription.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatExpansionPanelDescription, deps: [], target: i0.ɵɵFactoryTarget.Directive });\nMatExpansionPanelDescription.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.1.0\", type: MatExpansionPanelDescription, selector: \"mat-panel-description\", host: { classAttribute: \"mat-expansion-panel-header-description\" }, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatExpansionPanelDescription, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'mat-panel-description',\n                    host: {\n                        class: 'mat-expansion-panel-header-description',\n                    },\n                }]\n        }] });\n/**\n * Title element of a `<mat-expansion-panel-header>`.\n */\nclass MatExpansionPanelTitle {\n}\nMatExpansionPanelTitle.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatExpansionPanelTitle, deps: [], target: i0.ɵɵFactoryTarget.Directive });\nMatExpansionPanelTitle.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.1.0\", type: MatExpansionPanelTitle, selector: \"mat-panel-title\", host: { classAttribute: \"mat-expansion-panel-header-title\" }, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatExpansionPanelTitle, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'mat-panel-title',\n                    host: {\n                        class: 'mat-expansion-panel-header-title',\n                    },\n                }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Directive for a Material Design Accordion.\n */\nclass MatAccordion extends CdkAccordion {\n    constructor() {\n        super(...arguments);\n        /** Headers belonging to this accordion. */\n        this._ownHeaders = new QueryList();\n        this._hideToggle = false;\n        /**\n         * Display mode used for all expansion panels in the accordion. Currently two display\n         * modes exist:\n         *  default - a gutter-like spacing is placed around any expanded panel, placing the expanded\n         *     panel at a different elevation from the rest of the accordion.\n         *  flat - no spacing is placed around expanded panels, showing all panels at the same\n         *     elevation.\n         */\n        this.displayMode = 'default';\n        /** The position of the expansion indicator. */\n        this.togglePosition = 'after';\n    }\n    /** Whether the expansion indicator should be hidden. */\n    get hideToggle() {\n        return this._hideToggle;\n    }\n    set hideToggle(show) {\n        this._hideToggle = coerceBooleanProperty(show);\n    }\n    ngAfterContentInit() {\n        this._headers.changes\n            .pipe(startWith(this._headers))\n            .subscribe((headers) => {\n            this._ownHeaders.reset(headers.filter(header => header.panel.accordion === this));\n            this._ownHeaders.notifyOnChanges();\n        });\n        this._keyManager = new FocusKeyManager(this._ownHeaders).withWrap().withHomeAndEnd();\n    }\n    /** Handles keyboard events coming in from the panel headers. */\n    _handleHeaderKeydown(event) {\n        this._keyManager.onKeydown(event);\n    }\n    _handleHeaderFocus(header) {\n        this._keyManager.updateActiveItem(header);\n    }\n    ngOnDestroy() {\n        super.ngOnDestroy();\n        this._ownHeaders.destroy();\n    }\n}\nMatAccordion.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatAccordion, deps: null, target: i0.ɵɵFactoryTarget.Directive });\nMatAccordion.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.1.0\", type: MatAccordion, selector: \"mat-accordion\", inputs: { multi: \"multi\", hideToggle: \"hideToggle\", displayMode: \"displayMode\", togglePosition: \"togglePosition\" }, host: { properties: { \"class.mat-accordion-multi\": \"this.multi\" }, classAttribute: \"mat-accordion\" }, providers: [\n        {\n            provide: MAT_ACCORDION,\n            useExisting: MatAccordion,\n        },\n    ], queries: [{ propertyName: \"_headers\", predicate: MatExpansionPanelHeader, descendants: true }], exportAs: [\"matAccordion\"], usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatAccordion, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'mat-accordion',\n                    exportAs: 'matAccordion',\n                    inputs: ['multi'],\n                    providers: [\n                        {\n                            provide: MAT_ACCORDION,\n                            useExisting: MatAccordion,\n                        },\n                    ],\n                    host: {\n                        class: 'mat-accordion',\n                        // Class binding which is only used by the test harness as there is no other\n                        // way for the harness to detect if multiple panel support is enabled.\n                        '[class.mat-accordion-multi]': 'this.multi',\n                    },\n                }]\n        }], propDecorators: { _headers: [{\n                type: ContentChildren,\n                args: [MatExpansionPanelHeader, { descendants: true }]\n            }], hideToggle: [{\n                type: Input\n            }], displayMode: [{\n                type: Input\n            }], togglePosition: [{\n                type: Input\n            }] } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass MatExpansionModule {\n}\nMatExpansionModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatExpansionModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nMatExpansionModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatExpansionModule, declarations: [MatAccordion,\n        MatExpansionPanel,\n        MatExpansionPanelActionRow,\n        MatExpansionPanelHeader,\n        MatExpansionPanelTitle,\n        MatExpansionPanelDescription,\n        MatExpansionPanelContent], imports: [CommonModule, MatCommonModule, CdkAccordionModule, PortalModule], exports: [MatAccordion,\n        MatExpansionPanel,\n        MatExpansionPanelActionRow,\n        MatExpansionPanelHeader,\n        MatExpansionPanelTitle,\n        MatExpansionPanelDescription,\n        MatExpansionPanelContent] });\nMatExpansionModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatExpansionModule, imports: [[CommonModule, MatCommonModule, CdkAccordionModule, PortalModule]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatExpansionModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [CommonModule, MatCommonModule, CdkAccordionModule, PortalModule],\n                    exports: [\n                        MatAccordion,\n                        MatExpansionPanel,\n                        MatExpansionPanelActionRow,\n                        MatExpansionPanelHeader,\n                        MatExpansionPanelTitle,\n                        MatExpansionPanelDescription,\n                        MatExpansionPanelContent,\n                    ],\n                    declarations: [\n                        MatAccordion,\n                        MatExpansionPanel,\n                        MatExpansionPanelActionRow,\n                        MatExpansionPanelHeader,\n                        MatExpansionPanelTitle,\n                        MatExpansionPanelDescription,\n                        MatExpansionPanelContent,\n                    ],\n                }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { EXPANSION_PANEL_ANIMATION_TIMING, MAT_ACCORDION, MAT_EXPANSION_PANEL_DEFAULT_OPTIONS, MatAccordion, MatExpansionModule, MatExpansionPanel, MatExpansionPanelActionRow, MatExpansionPanelContent, MatExpansionPanelDescription, MatExpansionPanelHeader, MatExpansionPanelTitle, matExpansionAnimations };\n","import * as i0 from '@angular/core';\nimport { InjectionToken, Component, ViewEncapsulation, ChangeDetectionStrategy, Optional, Inject, Input, ContentChildren, Directive, NgModule } from '@angular/core';\nimport { setLines, MatLine, MatLineModule, MatCommonModule } from '@angular/material/core';\nimport { coerceNumberProperty } from '@angular/cdk/coercion';\nimport * as i1 from '@angular/cdk/bidi';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Class for determining, from a list of tiles, the (row, col) position of each of those tiles\n * in the grid. This is necessary (rather than just rendering the tiles in normal document flow)\n * because the tiles can have a rowspan.\n *\n * The positioning algorithm greedily places each tile as soon as it encounters a gap in the grid\n * large enough to accommodate it so that the tiles still render in the same order in which they\n * are given.\n *\n * The basis of the algorithm is the use of an array to track the already placed tiles. Each\n * element of the array corresponds to a column, and the value indicates how many cells in that\n * column are already occupied; zero indicates an empty cell. Moving \"down\" to the next row\n * decrements each value in the tracking array (indicating that the column is one cell closer to\n * being free).\n *\n * @docs-private\n */\nclass TileCoordinator {\n    constructor() {\n        /** Index at which the search for the next gap will start. */\n        this.columnIndex = 0;\n        /** The current row index. */\n        this.rowIndex = 0;\n    }\n    /** Gets the total number of rows occupied by tiles */\n    get rowCount() {\n        return this.rowIndex + 1;\n    }\n    /**\n     * Gets the total span of rows occupied by tiles.\n     * Ex: A list with 1 row that contains a tile with rowspan 2 will have a total rowspan of 2.\n     */\n    get rowspan() {\n        const lastRowMax = Math.max(...this.tracker);\n        // if any of the tiles has a rowspan that pushes it beyond the total row count,\n        // add the difference to the rowcount\n        return lastRowMax > 1 ? this.rowCount + lastRowMax - 1 : this.rowCount;\n    }\n    /**\n     * Updates the tile positions.\n     * @param numColumns Amount of columns in the grid.\n     * @param tiles Tiles to be positioned.\n     */\n    update(numColumns, tiles) {\n        this.columnIndex = 0;\n        this.rowIndex = 0;\n        this.tracker = new Array(numColumns);\n        this.tracker.fill(0, 0, this.tracker.length);\n        this.positions = tiles.map(tile => this._trackTile(tile));\n    }\n    /** Calculates the row and col position of a tile. */\n    _trackTile(tile) {\n        // Find a gap large enough for this tile.\n        const gapStartIndex = this._findMatchingGap(tile.colspan);\n        // Place tile in the resulting gap.\n        this._markTilePosition(gapStartIndex, tile);\n        // The next time we look for a gap, the search will start at columnIndex, which should be\n        // immediately after the tile that has just been placed.\n        this.columnIndex = gapStartIndex + tile.colspan;\n        return new TilePosition(this.rowIndex, gapStartIndex);\n    }\n    /** Finds the next available space large enough to fit the tile. */\n    _findMatchingGap(tileCols) {\n        if (tileCols > this.tracker.length && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw Error(`mat-grid-list: tile with colspan ${tileCols} is wider than ` +\n                `grid with cols=\"${this.tracker.length}\".`);\n        }\n        // Start index is inclusive, end index is exclusive.\n        let gapStartIndex = -1;\n        let gapEndIndex = -1;\n        // Look for a gap large enough to fit the given tile. Empty spaces are marked with a zero.\n        do {\n            // If we've reached the end of the row, go to the next row.\n            if (this.columnIndex + tileCols > this.tracker.length) {\n                this._nextRow();\n                gapStartIndex = this.tracker.indexOf(0, this.columnIndex);\n                gapEndIndex = this._findGapEndIndex(gapStartIndex);\n                continue;\n            }\n            gapStartIndex = this.tracker.indexOf(0, this.columnIndex);\n            // If there are no more empty spaces in this row at all, move on to the next row.\n            if (gapStartIndex == -1) {\n                this._nextRow();\n                gapStartIndex = this.tracker.indexOf(0, this.columnIndex);\n                gapEndIndex = this._findGapEndIndex(gapStartIndex);\n                continue;\n            }\n            gapEndIndex = this._findGapEndIndex(gapStartIndex);\n            // If a gap large enough isn't found, we want to start looking immediately after the current\n            // gap on the next iteration.\n            this.columnIndex = gapStartIndex + 1;\n            // Continue iterating until we find a gap wide enough for this tile. Since gapEndIndex is\n            // exclusive, gapEndIndex is 0 means we didn't find a gap and should continue.\n        } while (gapEndIndex - gapStartIndex < tileCols || gapEndIndex == 0);\n        // If we still didn't manage to find a gap, ensure that the index is\n        // at least zero so the tile doesn't get pulled out of the grid.\n        return Math.max(gapStartIndex, 0);\n    }\n    /** Move \"down\" to the next row. */\n    _nextRow() {\n        this.columnIndex = 0;\n        this.rowIndex++;\n        // Decrement all spaces by one to reflect moving down one row.\n        for (let i = 0; i < this.tracker.length; i++) {\n            this.tracker[i] = Math.max(0, this.tracker[i] - 1);\n        }\n    }\n    /**\n     * Finds the end index (exclusive) of a gap given the index from which to start looking.\n     * The gap ends when a non-zero value is found.\n     */\n    _findGapEndIndex(gapStartIndex) {\n        for (let i = gapStartIndex + 1; i < this.tracker.length; i++) {\n            if (this.tracker[i] != 0) {\n                return i;\n            }\n        }\n        // The gap ends with the end of the row.\n        return this.tracker.length;\n    }\n    /** Update the tile tracker to account for the given tile in the given space. */\n    _markTilePosition(start, tile) {\n        for (let i = 0; i < tile.colspan; i++) {\n            this.tracker[start + i] = tile.rowspan;\n        }\n    }\n}\n/**\n * Simple data structure for tile position (row, col).\n * @docs-private\n */\nclass TilePosition {\n    constructor(row, col) {\n        this.row = row;\n        this.col = col;\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Injection token used to provide a grid list to a tile and to avoid circular imports.\n * @docs-private\n */\nconst MAT_GRID_LIST = new InjectionToken('MAT_GRID_LIST');\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass MatGridTile {\n    constructor(_element, _gridList) {\n        this._element = _element;\n        this._gridList = _gridList;\n        this._rowspan = 1;\n        this._colspan = 1;\n    }\n    /** Amount of rows that the grid tile takes up. */\n    get rowspan() {\n        return this._rowspan;\n    }\n    set rowspan(value) {\n        this._rowspan = Math.round(coerceNumberProperty(value));\n    }\n    /** Amount of columns that the grid tile takes up. */\n    get colspan() {\n        return this._colspan;\n    }\n    set colspan(value) {\n        this._colspan = Math.round(coerceNumberProperty(value));\n    }\n    /**\n     * Sets the style of the grid-tile element.  Needs to be set manually to avoid\n     * \"Changed after checked\" errors that would occur with HostBinding.\n     */\n    _setStyle(property, value) {\n        this._element.nativeElement.style[property] = value;\n    }\n}\nMatGridTile.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatGridTile, deps: [{ token: i0.ElementRef }, { token: MAT_GRID_LIST, optional: true }], target: i0.ɵɵFactoryTarget.Component });\nMatGridTile.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: MatGridTile, selector: \"mat-grid-tile\", inputs: { rowspan: \"rowspan\", colspan: \"colspan\" }, host: { properties: { \"attr.rowspan\": \"rowspan\", \"attr.colspan\": \"colspan\" }, classAttribute: \"mat-grid-tile\" }, exportAs: [\"matGridTile\"], ngImport: i0, template: \"<div class=\\\"mat-grid-tile-content\\\">\\n  <ng-content></ng-content>\\n</div>\\n\", styles: [\".mat-grid-list{display:block;position:relative}.mat-grid-tile{display:block;position:absolute;overflow:hidden}.mat-grid-tile .mat-grid-tile-header,.mat-grid-tile .mat-grid-tile-footer{display:flex;align-items:center;height:48px;color:#fff;background:rgba(0,0,0,.38);overflow:hidden;padding:0 16px;position:absolute;left:0;right:0}.mat-grid-tile .mat-grid-tile-header>*,.mat-grid-tile .mat-grid-tile-footer>*{margin:0;padding:0;font-weight:normal;font-size:inherit}.mat-grid-tile .mat-grid-tile-header.mat-2-line,.mat-grid-tile .mat-grid-tile-footer.mat-2-line{height:68px}.mat-grid-tile .mat-grid-list-text{display:flex;flex-direction:column;flex:auto;box-sizing:border-box;overflow:hidden}.mat-grid-tile .mat-grid-list-text>*{margin:0;padding:0;font-weight:normal;font-size:inherit}.mat-grid-tile .mat-grid-list-text:empty{display:none}.mat-grid-tile .mat-grid-tile-header{top:0}.mat-grid-tile .mat-grid-tile-footer{bottom:0}.mat-grid-tile .mat-grid-avatar{padding-right:16px}[dir=rtl] .mat-grid-tile .mat-grid-avatar{padding-right:0;padding-left:16px}.mat-grid-tile .mat-grid-avatar:empty{display:none}.mat-grid-tile-content{top:0;left:0;right:0;bottom:0;position:absolute;display:flex;align-items:center;justify-content:center;height:100%;padding:0;margin:0}\\n\"], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatGridTile, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-grid-tile', exportAs: 'matGridTile', host: {\n                        'class': 'mat-grid-tile',\n                        // Ensures that the \"rowspan\" and \"colspan\" input value is reflected in\n                        // the DOM. This is needed for the grid-tile harness.\n                        '[attr.rowspan]': 'rowspan',\n                        '[attr.colspan]': 'colspan',\n                    }, encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, template: \"<div class=\\\"mat-grid-tile-content\\\">\\n  <ng-content></ng-content>\\n</div>\\n\", styles: [\".mat-grid-list{display:block;position:relative}.mat-grid-tile{display:block;position:absolute;overflow:hidden}.mat-grid-tile .mat-grid-tile-header,.mat-grid-tile .mat-grid-tile-footer{display:flex;align-items:center;height:48px;color:#fff;background:rgba(0,0,0,.38);overflow:hidden;padding:0 16px;position:absolute;left:0;right:0}.mat-grid-tile .mat-grid-tile-header>*,.mat-grid-tile .mat-grid-tile-footer>*{margin:0;padding:0;font-weight:normal;font-size:inherit}.mat-grid-tile .mat-grid-tile-header.mat-2-line,.mat-grid-tile .mat-grid-tile-footer.mat-2-line{height:68px}.mat-grid-tile .mat-grid-list-text{display:flex;flex-direction:column;flex:auto;box-sizing:border-box;overflow:hidden}.mat-grid-tile .mat-grid-list-text>*{margin:0;padding:0;font-weight:normal;font-size:inherit}.mat-grid-tile .mat-grid-list-text:empty{display:none}.mat-grid-tile .mat-grid-tile-header{top:0}.mat-grid-tile .mat-grid-tile-footer{bottom:0}.mat-grid-tile .mat-grid-avatar{padding-right:16px}[dir=rtl] .mat-grid-tile .mat-grid-avatar{padding-right:0;padding-left:16px}.mat-grid-tile .mat-grid-avatar:empty{display:none}.mat-grid-tile-content{top:0;left:0;right:0;bottom:0;position:absolute;display:flex;align-items:center;justify-content:center;height:100%;padding:0;margin:0}\\n\"] }]\n        }], ctorParameters: function () {\n        return [{ type: i0.ElementRef }, { type: undefined, decorators: [{\n                        type: Optional\n                    }, {\n                        type: Inject,\n                        args: [MAT_GRID_LIST]\n                    }] }];\n    }, propDecorators: { rowspan: [{\n                type: Input\n            }], colspan: [{\n                type: Input\n            }] } });\nclass MatGridTileText {\n    constructor(_element) {\n        this._element = _element;\n    }\n    ngAfterContentInit() {\n        setLines(this._lines, this._element);\n    }\n}\nMatGridTileText.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatGridTileText, deps: [{ token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Component });\nMatGridTileText.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: MatGridTileText, selector: \"mat-grid-tile-header, mat-grid-tile-footer\", queries: [{ propertyName: \"_lines\", predicate: MatLine, descendants: true }], ngImport: i0, template: \"<ng-content select=\\\"[mat-grid-avatar], [matGridAvatar]\\\"></ng-content>\\n<div class=\\\"mat-grid-list-text\\\"><ng-content select=\\\"[mat-line], [matLine]\\\"></ng-content></div>\\n<ng-content></ng-content>\\n\", changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatGridTileText, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-grid-tile-header, mat-grid-tile-footer', changeDetection: ChangeDetectionStrategy.OnPush, encapsulation: ViewEncapsulation.None, template: \"<ng-content select=\\\"[mat-grid-avatar], [matGridAvatar]\\\"></ng-content>\\n<div class=\\\"mat-grid-list-text\\\"><ng-content select=\\\"[mat-line], [matLine]\\\"></ng-content></div>\\n<ng-content></ng-content>\\n\" }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }]; }, propDecorators: { _lines: [{\n                type: ContentChildren,\n                args: [MatLine, { descendants: true }]\n            }] } });\n/**\n * Directive whose purpose is to add the mat- CSS styling to this selector.\n * @docs-private\n */\nclass MatGridAvatarCssMatStyler {\n}\nMatGridAvatarCssMatStyler.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatGridAvatarCssMatStyler, deps: [], target: i0.ɵɵFactoryTarget.Directive });\nMatGridAvatarCssMatStyler.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.1.0\", type: MatGridAvatarCssMatStyler, selector: \"[mat-grid-avatar], [matGridAvatar]\", host: { classAttribute: \"mat-grid-avatar\" }, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatGridAvatarCssMatStyler, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[mat-grid-avatar], [matGridAvatar]',\n                    host: { 'class': 'mat-grid-avatar' },\n                }]\n        }] });\n/**\n * Directive whose purpose is to add the mat- CSS styling to this selector.\n * @docs-private\n */\nclass MatGridTileHeaderCssMatStyler {\n}\nMatGridTileHeaderCssMatStyler.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatGridTileHeaderCssMatStyler, deps: [], target: i0.ɵɵFactoryTarget.Directive });\nMatGridTileHeaderCssMatStyler.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.1.0\", type: MatGridTileHeaderCssMatStyler, selector: \"mat-grid-tile-header\", host: { classAttribute: \"mat-grid-tile-header\" }, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatGridTileHeaderCssMatStyler, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'mat-grid-tile-header',\n                    host: { 'class': 'mat-grid-tile-header' },\n                }]\n        }] });\n/**\n * Directive whose purpose is to add the mat- CSS styling to this selector.\n * @docs-private\n */\nclass MatGridTileFooterCssMatStyler {\n}\nMatGridTileFooterCssMatStyler.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatGridTileFooterCssMatStyler, deps: [], target: i0.ɵɵFactoryTarget.Directive });\nMatGridTileFooterCssMatStyler.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.1.0\", type: MatGridTileFooterCssMatStyler, selector: \"mat-grid-tile-footer\", host: { classAttribute: \"mat-grid-tile-footer\" }, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatGridTileFooterCssMatStyler, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'mat-grid-tile-footer',\n                    host: { 'class': 'mat-grid-tile-footer' },\n                }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * RegExp that can be used to check whether a value will\n * be allowed inside a CSS `calc()` expression.\n */\nconst cssCalcAllowedValue = /^-?\\d+((\\.\\d+)?[A-Za-z%$]?)+$/;\n/**\n * Sets the style properties for an individual tile, given the position calculated by the\n * Tile Coordinator.\n * @docs-private\n */\nclass TileStyler {\n    constructor() {\n        this._rows = 0;\n        this._rowspan = 0;\n    }\n    /**\n     * Adds grid-list layout info once it is available. Cannot be processed in the constructor\n     * because these properties haven't been calculated by that point.\n     *\n     * @param gutterSize Size of the grid's gutter.\n     * @param tracker Instance of the TileCoordinator.\n     * @param cols Amount of columns in the grid.\n     * @param direction Layout direction of the grid.\n     */\n    init(gutterSize, tracker, cols, direction) {\n        this._gutterSize = normalizeUnits(gutterSize);\n        this._rows = tracker.rowCount;\n        this._rowspan = tracker.rowspan;\n        this._cols = cols;\n        this._direction = direction;\n    }\n    /**\n     * Computes the amount of space a single 1x1 tile would take up (width or height).\n     * Used as a basis for other calculations.\n     * @param sizePercent Percent of the total grid-list space that one 1x1 tile would take up.\n     * @param gutterFraction Fraction of the gutter size taken up by one 1x1 tile.\n     * @return The size of a 1x1 tile as an expression that can be evaluated via CSS calc().\n     */\n    getBaseTileSize(sizePercent, gutterFraction) {\n        // Take the base size percent (as would be if evenly dividing the size between cells),\n        // and then subtracting the size of one gutter. However, since there are no gutters on the\n        // edges, each tile only uses a fraction (gutterShare = numGutters / numCells) of the gutter\n        // size. (Imagine having one gutter per tile, and then breaking up the extra gutter on the\n        // edge evenly among the cells).\n        return `(${sizePercent}% - (${this._gutterSize} * ${gutterFraction}))`;\n    }\n    /**\n     * Gets The horizontal or vertical position of a tile, e.g., the 'top' or 'left' property value.\n     * @param offset Number of tiles that have already been rendered in the row/column.\n     * @param baseSize Base size of a 1x1 tile (as computed in getBaseTileSize).\n     * @return Position of the tile as a CSS calc() expression.\n     */\n    getTilePosition(baseSize, offset) {\n        // The position comes the size of a 1x1 tile plus gutter for each previous tile in the\n        // row/column (offset).\n        return offset === 0 ? '0' : calc(`(${baseSize} + ${this._gutterSize}) * ${offset}`);\n    }\n    /**\n     * Gets the actual size of a tile, e.g., width or height, taking rowspan or colspan into account.\n     * @param baseSize Base size of a 1x1 tile (as computed in getBaseTileSize).\n     * @param span The tile's rowspan or colspan.\n     * @return Size of the tile as a CSS calc() expression.\n     */\n    getTileSize(baseSize, span) {\n        return `(${baseSize} * ${span}) + (${span - 1} * ${this._gutterSize})`;\n    }\n    /**\n     * Sets the style properties to be applied to a tile for the given row and column index.\n     * @param tile Tile to which to apply the styling.\n     * @param rowIndex Index of the tile's row.\n     * @param colIndex Index of the tile's column.\n     */\n    setStyle(tile, rowIndex, colIndex) {\n        // Percent of the available horizontal space that one column takes up.\n        let percentWidthPerTile = 100 / this._cols;\n        // Fraction of the vertical gutter size that each column takes up.\n        // For example, if there are 5 columns, each column uses 4/5 = 0.8 times the gutter width.\n        let gutterWidthFractionPerTile = (this._cols - 1) / this._cols;\n        this.setColStyles(tile, colIndex, percentWidthPerTile, gutterWidthFractionPerTile);\n        this.setRowStyles(tile, rowIndex, percentWidthPerTile, gutterWidthFractionPerTile);\n    }\n    /** Sets the horizontal placement of the tile in the list. */\n    setColStyles(tile, colIndex, percentWidth, gutterWidth) {\n        // Base horizontal size of a column.\n        let baseTileWidth = this.getBaseTileSize(percentWidth, gutterWidth);\n        // The width and horizontal position of each tile is always calculated the same way, but the\n        // height and vertical position depends on the rowMode.\n        let side = this._direction === 'rtl' ? 'right' : 'left';\n        tile._setStyle(side, this.getTilePosition(baseTileWidth, colIndex));\n        tile._setStyle('width', calc(this.getTileSize(baseTileWidth, tile.colspan)));\n    }\n    /**\n     * Calculates the total size taken up by gutters across one axis of a list.\n     */\n    getGutterSpan() {\n        return `${this._gutterSize} * (${this._rowspan} - 1)`;\n    }\n    /**\n     * Calculates the total size taken up by tiles across one axis of a list.\n     * @param tileHeight Height of the tile.\n     */\n    getTileSpan(tileHeight) {\n        return `${this._rowspan} * ${this.getTileSize(tileHeight, 1)}`;\n    }\n    /**\n     * Calculates the computed height and returns the correct style property to set.\n     * This method can be implemented by each type of TileStyler.\n     * @docs-private\n     */\n    getComputedHeight() {\n        return null;\n    }\n}\n/**\n * This type of styler is instantiated when the user passes in a fixed row height.\n * Example `<mat-grid-list cols=\"3\" rowHeight=\"100px\">`\n * @docs-private\n */\nclass FixedTileStyler extends TileStyler {\n    constructor(fixedRowHeight) {\n        super();\n        this.fixedRowHeight = fixedRowHeight;\n    }\n    init(gutterSize, tracker, cols, direction) {\n        super.init(gutterSize, tracker, cols, direction);\n        this.fixedRowHeight = normalizeUnits(this.fixedRowHeight);\n        if (!cssCalcAllowedValue.test(this.fixedRowHeight) &&\n            (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw Error(`Invalid value \"${this.fixedRowHeight}\" set as rowHeight.`);\n        }\n    }\n    setRowStyles(tile, rowIndex) {\n        tile._setStyle('top', this.getTilePosition(this.fixedRowHeight, rowIndex));\n        tile._setStyle('height', calc(this.getTileSize(this.fixedRowHeight, tile.rowspan)));\n    }\n    getComputedHeight() {\n        return ['height', calc(`${this.getTileSpan(this.fixedRowHeight)} + ${this.getGutterSpan()}`)];\n    }\n    reset(list) {\n        list._setListStyle(['height', null]);\n        if (list._tiles) {\n            list._tiles.forEach(tile => {\n                tile._setStyle('top', null);\n                tile._setStyle('height', null);\n            });\n        }\n    }\n}\n/**\n * This type of styler is instantiated when the user passes in a width:height ratio\n * for the row height.  Example `<mat-grid-list cols=\"3\" rowHeight=\"3:1\">`\n * @docs-private\n */\nclass RatioTileStyler extends TileStyler {\n    constructor(value) {\n        super();\n        this._parseRatio(value);\n    }\n    setRowStyles(tile, rowIndex, percentWidth, gutterWidth) {\n        let percentHeightPerTile = percentWidth / this.rowHeightRatio;\n        this.baseTileHeight = this.getBaseTileSize(percentHeightPerTile, gutterWidth);\n        // Use padding-top and margin-top to maintain the given aspect ratio, as\n        // a percentage-based value for these properties is applied versus the *width* of the\n        // containing block. See http://www.w3.org/TR/CSS2/box.html#margin-properties\n        tile._setStyle('marginTop', this.getTilePosition(this.baseTileHeight, rowIndex));\n        tile._setStyle('paddingTop', calc(this.getTileSize(this.baseTileHeight, tile.rowspan)));\n    }\n    getComputedHeight() {\n        return [\n            'paddingBottom',\n            calc(`${this.getTileSpan(this.baseTileHeight)} + ${this.getGutterSpan()}`),\n        ];\n    }\n    reset(list) {\n        list._setListStyle(['paddingBottom', null]);\n        list._tiles.forEach(tile => {\n            tile._setStyle('marginTop', null);\n            tile._setStyle('paddingTop', null);\n        });\n    }\n    _parseRatio(value) {\n        const ratioParts = value.split(':');\n        if (ratioParts.length !== 2 && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw Error(`mat-grid-list: invalid ratio given for row-height: \"${value}\"`);\n        }\n        this.rowHeightRatio = parseFloat(ratioParts[0]) / parseFloat(ratioParts[1]);\n    }\n}\n/**\n * This type of styler is instantiated when the user selects a \"fit\" row height mode.\n * In other words, the row height will reflect the total height of the container divided\n * by the number of rows.  Example `<mat-grid-list cols=\"3\" rowHeight=\"fit\">`\n *\n * @docs-private\n */\nclass FitTileStyler extends TileStyler {\n    setRowStyles(tile, rowIndex) {\n        // Percent of the available vertical space that one row takes up.\n        let percentHeightPerTile = 100 / this._rowspan;\n        // Fraction of the horizontal gutter size that each column takes up.\n        let gutterHeightPerTile = (this._rows - 1) / this._rows;\n        // Base vertical size of a column.\n        let baseTileHeight = this.getBaseTileSize(percentHeightPerTile, gutterHeightPerTile);\n        tile._setStyle('top', this.getTilePosition(baseTileHeight, rowIndex));\n        tile._setStyle('height', calc(this.getTileSize(baseTileHeight, tile.rowspan)));\n    }\n    reset(list) {\n        if (list._tiles) {\n            list._tiles.forEach(tile => {\n                tile._setStyle('top', null);\n                tile._setStyle('height', null);\n            });\n        }\n    }\n}\n/** Wraps a CSS string in a calc function */\nfunction calc(exp) {\n    return `calc(${exp})`;\n}\n/** Appends pixels to a CSS string if no units are given. */\nfunction normalizeUnits(value) {\n    return value.match(/([A-Za-z%]+)$/) ? value : `${value}px`;\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// TODO(kara): Conditional (responsive) column count / row size.\n// TODO(kara): Re-layout on window resize / media change (debounced).\n// TODO(kara): gridTileHeader and gridTileFooter.\nconst MAT_FIT_MODE = 'fit';\nclass MatGridList {\n    constructor(_element, _dir) {\n        this._element = _element;\n        this._dir = _dir;\n        /** The amount of space between tiles. This will be something like '5px' or '2em'. */\n        this._gutter = '1px';\n    }\n    /** Amount of columns in the grid list. */\n    get cols() {\n        return this._cols;\n    }\n    set cols(value) {\n        this._cols = Math.max(1, Math.round(coerceNumberProperty(value)));\n    }\n    /** Size of the grid list's gutter in pixels. */\n    get gutterSize() {\n        return this._gutter;\n    }\n    set gutterSize(value) {\n        this._gutter = `${value == null ? '' : value}`;\n    }\n    /** Set internal representation of row height from the user-provided value. */\n    get rowHeight() {\n        return this._rowHeight;\n    }\n    set rowHeight(value) {\n        const newValue = `${value == null ? '' : value}`;\n        if (newValue !== this._rowHeight) {\n            this._rowHeight = newValue;\n            this._setTileStyler(this._rowHeight);\n        }\n    }\n    ngOnInit() {\n        this._checkCols();\n        this._checkRowHeight();\n    }\n    /**\n     * The layout calculation is fairly cheap if nothing changes, so there's little cost\n     * to run it frequently.\n     */\n    ngAfterContentChecked() {\n        this._layoutTiles();\n    }\n    /** Throw a friendly error if cols property is missing */\n    _checkCols() {\n        if (!this.cols && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw Error(`mat-grid-list: must pass in number of columns. ` + `Example: <mat-grid-list cols=\"3\">`);\n        }\n    }\n    /** Default to equal width:height if rowHeight property is missing */\n    _checkRowHeight() {\n        if (!this._rowHeight) {\n            this._setTileStyler('1:1');\n        }\n    }\n    /** Creates correct Tile Styler subtype based on rowHeight passed in by user */\n    _setTileStyler(rowHeight) {\n        if (this._tileStyler) {\n            this._tileStyler.reset(this);\n        }\n        if (rowHeight === MAT_FIT_MODE) {\n            this._tileStyler = new FitTileStyler();\n        }\n        else if (rowHeight && rowHeight.indexOf(':') > -1) {\n            this._tileStyler = new RatioTileStyler(rowHeight);\n        }\n        else {\n            this._tileStyler = new FixedTileStyler(rowHeight);\n        }\n    }\n    /** Computes and applies the size and position for all children grid tiles. */\n    _layoutTiles() {\n        if (!this._tileCoordinator) {\n            this._tileCoordinator = new TileCoordinator();\n        }\n        const tracker = this._tileCoordinator;\n        const tiles = this._tiles.filter(tile => !tile._gridList || tile._gridList === this);\n        const direction = this._dir ? this._dir.value : 'ltr';\n        this._tileCoordinator.update(this.cols, tiles);\n        this._tileStyler.init(this.gutterSize, tracker, this.cols, direction);\n        tiles.forEach((tile, index) => {\n            const pos = tracker.positions[index];\n            this._tileStyler.setStyle(tile, pos.row, pos.col);\n        });\n        this._setListStyle(this._tileStyler.getComputedHeight());\n    }\n    /** Sets style on the main grid-list element, given the style name and value. */\n    _setListStyle(style) {\n        if (style) {\n            this._element.nativeElement.style[style[0]] = style[1];\n        }\n    }\n}\nMatGridList.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatGridList, deps: [{ token: i0.ElementRef }, { token: i1.Directionality, optional: true }], target: i0.ɵɵFactoryTarget.Component });\nMatGridList.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: MatGridList, selector: \"mat-grid-list\", inputs: { cols: \"cols\", gutterSize: \"gutterSize\", rowHeight: \"rowHeight\" }, host: { properties: { \"attr.cols\": \"cols\" }, classAttribute: \"mat-grid-list\" }, providers: [\n        {\n            provide: MAT_GRID_LIST,\n            useExisting: MatGridList,\n        },\n    ], queries: [{ propertyName: \"_tiles\", predicate: MatGridTile, descendants: true }], exportAs: [\"matGridList\"], ngImport: i0, template: \"<div>\\n  <ng-content></ng-content>\\n</div>\", styles: [\".mat-grid-list{display:block;position:relative}.mat-grid-tile{display:block;position:absolute;overflow:hidden}.mat-grid-tile .mat-grid-tile-header,.mat-grid-tile .mat-grid-tile-footer{display:flex;align-items:center;height:48px;color:#fff;background:rgba(0,0,0,.38);overflow:hidden;padding:0 16px;position:absolute;left:0;right:0}.mat-grid-tile .mat-grid-tile-header>*,.mat-grid-tile .mat-grid-tile-footer>*{margin:0;padding:0;font-weight:normal;font-size:inherit}.mat-grid-tile .mat-grid-tile-header.mat-2-line,.mat-grid-tile .mat-grid-tile-footer.mat-2-line{height:68px}.mat-grid-tile .mat-grid-list-text{display:flex;flex-direction:column;flex:auto;box-sizing:border-box;overflow:hidden}.mat-grid-tile .mat-grid-list-text>*{margin:0;padding:0;font-weight:normal;font-size:inherit}.mat-grid-tile .mat-grid-list-text:empty{display:none}.mat-grid-tile .mat-grid-tile-header{top:0}.mat-grid-tile .mat-grid-tile-footer{bottom:0}.mat-grid-tile .mat-grid-avatar{padding-right:16px}[dir=rtl] .mat-grid-tile .mat-grid-avatar{padding-right:0;padding-left:16px}.mat-grid-tile .mat-grid-avatar:empty{display:none}.mat-grid-tile-content{top:0;left:0;right:0;bottom:0;position:absolute;display:flex;align-items:center;justify-content:center;height:100%;padding:0;margin:0}\\n\"], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatGridList, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-grid-list', exportAs: 'matGridList', host: {\n                        'class': 'mat-grid-list',\n                        // Ensures that the \"cols\" input value is reflected in the DOM. This is\n                        // needed for the grid-list harness.\n                        '[attr.cols]': 'cols',\n                    }, providers: [\n                        {\n                            provide: MAT_GRID_LIST,\n                            useExisting: MatGridList,\n                        },\n                    ], changeDetection: ChangeDetectionStrategy.OnPush, encapsulation: ViewEncapsulation.None, template: \"<div>\\n  <ng-content></ng-content>\\n</div>\", styles: [\".mat-grid-list{display:block;position:relative}.mat-grid-tile{display:block;position:absolute;overflow:hidden}.mat-grid-tile .mat-grid-tile-header,.mat-grid-tile .mat-grid-tile-footer{display:flex;align-items:center;height:48px;color:#fff;background:rgba(0,0,0,.38);overflow:hidden;padding:0 16px;position:absolute;left:0;right:0}.mat-grid-tile .mat-grid-tile-header>*,.mat-grid-tile .mat-grid-tile-footer>*{margin:0;padding:0;font-weight:normal;font-size:inherit}.mat-grid-tile .mat-grid-tile-header.mat-2-line,.mat-grid-tile .mat-grid-tile-footer.mat-2-line{height:68px}.mat-grid-tile .mat-grid-list-text{display:flex;flex-direction:column;flex:auto;box-sizing:border-box;overflow:hidden}.mat-grid-tile .mat-grid-list-text>*{margin:0;padding:0;font-weight:normal;font-size:inherit}.mat-grid-tile .mat-grid-list-text:empty{display:none}.mat-grid-tile .mat-grid-tile-header{top:0}.mat-grid-tile .mat-grid-tile-footer{bottom:0}.mat-grid-tile .mat-grid-avatar{padding-right:16px}[dir=rtl] .mat-grid-tile .mat-grid-avatar{padding-right:0;padding-left:16px}.mat-grid-tile .mat-grid-avatar:empty{display:none}.mat-grid-tile-content{top:0;left:0;right:0;bottom:0;position:absolute;display:flex;align-items:center;justify-content:center;height:100%;padding:0;margin:0}\\n\"] }]\n        }], ctorParameters: function () {\n        return [{ type: i0.ElementRef }, { type: i1.Directionality, decorators: [{\n                        type: Optional\n                    }] }];\n    }, propDecorators: { _tiles: [{\n                type: ContentChildren,\n                args: [MatGridTile, { descendants: true }]\n            }], cols: [{\n                type: Input\n            }], gutterSize: [{\n                type: Input\n            }], rowHeight: [{\n                type: Input\n            }] } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass MatGridListModule {\n}\nMatGridListModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatGridListModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nMatGridListModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatGridListModule, declarations: [MatGridList,\n        MatGridTile,\n        MatGridTileText,\n        MatGridTileHeaderCssMatStyler,\n        MatGridTileFooterCssMatStyler,\n        MatGridAvatarCssMatStyler], imports: [MatLineModule, MatCommonModule], exports: [MatGridList,\n        MatGridTile,\n        MatGridTileText,\n        MatLineModule,\n        MatCommonModule,\n        MatGridTileHeaderCssMatStyler,\n        MatGridTileFooterCssMatStyler,\n        MatGridAvatarCssMatStyler] });\nMatGridListModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatGridListModule, imports: [[MatLineModule, MatCommonModule], MatLineModule,\n        MatCommonModule] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatGridListModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [MatLineModule, MatCommonModule],\n                    exports: [\n                        MatGridList,\n                        MatGridTile,\n                        MatGridTileText,\n                        MatLineModule,\n                        MatCommonModule,\n                        MatGridTileHeaderCssMatStyler,\n                        MatGridTileFooterCssMatStyler,\n                        MatGridAvatarCssMatStyler,\n                    ],\n                    declarations: [\n                        MatGridList,\n                        MatGridTile,\n                        MatGridTileText,\n                        MatGridTileHeaderCssMatStyler,\n                        MatGridTileFooterCssMatStyler,\n                        MatGridAvatarCssMatStyler,\n                    ],\n                }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// Privately exported for the grid-list harness.\nconst ɵTileCoordinator = TileCoordinator;\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MatGridAvatarCssMatStyler, MatGridList, MatGridListModule, MatGridTile, MatGridTileFooterCssMatStyler, MatGridTileHeaderCssMatStyler, MatGridTileText, ɵTileCoordinator };\n","import * as i0 from '@angular/core';\nimport { SecurityContext, Injectable, Optional, Inject, SkipSelf, ErrorHandler, InjectionToken, inject, Component, ViewEncapsulation, ChangeDetectionStrategy, Attribute, Input, NgModule } from '@angular/core';\nimport { mixinColor, MatCommonModule } from '@angular/material/core';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { DOCUMENT } from '@angular/common';\nimport { of, throwError, forkJoin, Subscription } from 'rxjs';\nimport { tap, map, catchError, finalize, share, take } from 'rxjs/operators';\nimport * as i1 from '@angular/common/http';\nimport { HttpClient } from '@angular/common/http';\nimport * as i2 from '@angular/platform-browser';\nimport { DomSanitizer } from '@angular/platform-browser';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * The Trusted Types policy, or null if Trusted Types are not\n * enabled/supported, or undefined if the policy has not been created yet.\n */\nlet policy;\n/**\n * Returns the Trusted Types policy, or null if Trusted Types are not\n * enabled/supported. The first call to this function will create the policy.\n */\nfunction getPolicy() {\n    if (policy === undefined) {\n        policy = null;\n        if (typeof window !== 'undefined') {\n            const ttWindow = window;\n            if (ttWindow.trustedTypes !== undefined) {\n                policy = ttWindow.trustedTypes.createPolicy('angular#components', {\n                    createHTML: (s) => s,\n                });\n            }\n        }\n    }\n    return policy;\n}\n/**\n * Unsafely promote a string to a TrustedHTML, falling back to strings when\n * Trusted Types are not available.\n * @security This is a security-sensitive function; any use of this function\n * must go through security review. In particular, it must be assured that the\n * provided string will never cause an XSS vulnerability if used in a context\n * that will be interpreted as HTML by a browser, e.g. when assigning to\n * element.innerHTML.\n */\nfunction trustedHTMLFromString(html) {\n    var _a;\n    return ((_a = getPolicy()) === null || _a === void 0 ? void 0 : _a.createHTML(html)) || html;\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Returns an exception to be thrown in the case when attempting to\n * load an icon with a name that cannot be found.\n * @docs-private\n */\nfunction getMatIconNameNotFoundError(iconName) {\n    return Error(`Unable to find icon with the name \"${iconName}\"`);\n}\n/**\n * Returns an exception to be thrown when the consumer attempts to use\n * `<mat-icon>` without including @angular/common/http.\n * @docs-private\n */\nfunction getMatIconNoHttpProviderError() {\n    return Error('Could not find HttpClient provider for use with Angular Material icons. ' +\n        'Please include the HttpClientModule from @angular/common/http in your ' +\n        'app imports.');\n}\n/**\n * Returns an exception to be thrown when a URL couldn't be sanitized.\n * @param url URL that was attempted to be sanitized.\n * @docs-private\n */\nfunction getMatIconFailedToSanitizeUrlError(url) {\n    return Error(`The URL provided to MatIconRegistry was not trusted as a resource URL ` +\n        `via Angular's DomSanitizer. Attempted URL was \"${url}\".`);\n}\n/**\n * Returns an exception to be thrown when a HTML string couldn't be sanitized.\n * @param literal HTML that was attempted to be sanitized.\n * @docs-private\n */\nfunction getMatIconFailedToSanitizeLiteralError(literal) {\n    return Error(`The literal provided to MatIconRegistry was not trusted as safe HTML by ` +\n        `Angular's DomSanitizer. Attempted literal was \"${literal}\".`);\n}\n/**\n * Configuration for an icon, including the URL and possibly the cached SVG element.\n * @docs-private\n */\nclass SvgIconConfig {\n    constructor(url, svgText, options) {\n        this.url = url;\n        this.svgText = svgText;\n        this.options = options;\n    }\n}\n/**\n * Service to register and display icons used by the `<mat-icon>` component.\n * - Registers icon URLs by namespace and name.\n * - Registers icon set URLs by namespace.\n * - Registers aliases for CSS classes, for use with icon fonts.\n * - Loads icons from URLs and extracts individual icons from icon sets.\n */\nclass MatIconRegistry {\n    constructor(_httpClient, _sanitizer, document, _errorHandler) {\n        this._httpClient = _httpClient;\n        this._sanitizer = _sanitizer;\n        this._errorHandler = _errorHandler;\n        /**\n         * URLs and cached SVG elements for individual icons. Keys are of the format \"[namespace]:[icon]\".\n         */\n        this._svgIconConfigs = new Map();\n        /**\n         * SvgIconConfig objects and cached SVG elements for icon sets, keyed by namespace.\n         * Multiple icon sets can be registered under the same namespace.\n         */\n        this._iconSetConfigs = new Map();\n        /** Cache for icons loaded by direct URLs. */\n        this._cachedIconsByUrl = new Map();\n        /** In-progress icon fetches. Used to coalesce multiple requests to the same URL. */\n        this._inProgressUrlFetches = new Map();\n        /** Map from font identifiers to their CSS class names. Used for icon fonts. */\n        this._fontCssClassesByAlias = new Map();\n        /** Registered icon resolver functions. */\n        this._resolvers = [];\n        /**\n         * The CSS class to apply when an `<mat-icon>` component has no icon name, url, or font specified.\n         * The default 'material-icons' value assumes that the material icon font has been loaded as\n         * described at http://google.github.io/material-design-icons/#icon-font-for-the-web\n         */\n        this._defaultFontSetClass = 'material-icons';\n        this._document = document;\n    }\n    /**\n     * Registers an icon by URL in the default namespace.\n     * @param iconName Name under which the icon should be registered.\n     * @param url\n     */\n    addSvgIcon(iconName, url, options) {\n        return this.addSvgIconInNamespace('', iconName, url, options);\n    }\n    /**\n     * Registers an icon using an HTML string in the default namespace.\n     * @param iconName Name under which the icon should be registered.\n     * @param literal SVG source of the icon.\n     */\n    addSvgIconLiteral(iconName, literal, options) {\n        return this.addSvgIconLiteralInNamespace('', iconName, literal, options);\n    }\n    /**\n     * Registers an icon by URL in the specified namespace.\n     * @param namespace Namespace in which the icon should be registered.\n     * @param iconName Name under which the icon should be registered.\n     * @param url\n     */\n    addSvgIconInNamespace(namespace, iconName, url, options) {\n        return this._addSvgIconConfig(namespace, iconName, new SvgIconConfig(url, null, options));\n    }\n    /**\n     * Registers an icon resolver function with the registry. The function will be invoked with the\n     * name and namespace of an icon when the registry tries to resolve the URL from which to fetch\n     * the icon. The resolver is expected to return a `SafeResourceUrl` that points to the icon,\n     * an object with the icon URL and icon options, or `null` if the icon is not supported. Resolvers\n     * will be invoked in the order in which they have been registered.\n     * @param resolver Resolver function to be registered.\n     */\n    addSvgIconResolver(resolver) {\n        this._resolvers.push(resolver);\n        return this;\n    }\n    /**\n     * Registers an icon using an HTML string in the specified namespace.\n     * @param namespace Namespace in which the icon should be registered.\n     * @param iconName Name under which the icon should be registered.\n     * @param literal SVG source of the icon.\n     */\n    addSvgIconLiteralInNamespace(namespace, iconName, literal, options) {\n        const cleanLiteral = this._sanitizer.sanitize(SecurityContext.HTML, literal);\n        // TODO: add an ngDevMode check\n        if (!cleanLiteral) {\n            throw getMatIconFailedToSanitizeLiteralError(literal);\n        }\n        // Security: The literal is passed in as SafeHtml, and is thus trusted.\n        const trustedLiteral = trustedHTMLFromString(cleanLiteral);\n        return this._addSvgIconConfig(namespace, iconName, new SvgIconConfig('', trustedLiteral, options));\n    }\n    /**\n     * Registers an icon set by URL in the default namespace.\n     * @param url\n     */\n    addSvgIconSet(url, options) {\n        return this.addSvgIconSetInNamespace('', url, options);\n    }\n    /**\n     * Registers an icon set using an HTML string in the default namespace.\n     * @param literal SVG source of the icon set.\n     */\n    addSvgIconSetLiteral(literal, options) {\n        return this.addSvgIconSetLiteralInNamespace('', literal, options);\n    }\n    /**\n     * Registers an icon set by URL in the specified namespace.\n     * @param namespace Namespace in which to register the icon set.\n     * @param url\n     */\n    addSvgIconSetInNamespace(namespace, url, options) {\n        return this._addSvgIconSetConfig(namespace, new SvgIconConfig(url, null, options));\n    }\n    /**\n     * Registers an icon set using an HTML string in the specified namespace.\n     * @param namespace Namespace in which to register the icon set.\n     * @param literal SVG source of the icon set.\n     */\n    addSvgIconSetLiteralInNamespace(namespace, literal, options) {\n        const cleanLiteral = this._sanitizer.sanitize(SecurityContext.HTML, literal);\n        if (!cleanLiteral) {\n            throw getMatIconFailedToSanitizeLiteralError(literal);\n        }\n        // Security: The literal is passed in as SafeHtml, and is thus trusted.\n        const trustedLiteral = trustedHTMLFromString(cleanLiteral);\n        return this._addSvgIconSetConfig(namespace, new SvgIconConfig('', trustedLiteral, options));\n    }\n    /**\n     * Defines an alias for a CSS class name to be used for icon fonts. Creating an matIcon\n     * component with the alias as the fontSet input will cause the class name to be applied\n     * to the `<mat-icon>` element.\n     *\n     * @param alias Alias for the font.\n     * @param className Class name override to be used instead of the alias.\n     */\n    registerFontClassAlias(alias, className = alias) {\n        this._fontCssClassesByAlias.set(alias, className);\n        return this;\n    }\n    /**\n     * Returns the CSS class name associated with the alias by a previous call to\n     * registerFontClassAlias. If no CSS class has been associated, returns the alias unmodified.\n     */\n    classNameForFontAlias(alias) {\n        return this._fontCssClassesByAlias.get(alias) || alias;\n    }\n    /**\n     * Sets the CSS class name to be used for icon fonts when an `<mat-icon>` component does not\n     * have a fontSet input value, and is not loading an icon by name or URL.\n     *\n     * @param className\n     */\n    setDefaultFontSetClass(className) {\n        this._defaultFontSetClass = className;\n        return this;\n    }\n    /**\n     * Returns the CSS class name to be used for icon fonts when an `<mat-icon>` component does not\n     * have a fontSet input value, and is not loading an icon by name or URL.\n     */\n    getDefaultFontSetClass() {\n        return this._defaultFontSetClass;\n    }\n    /**\n     * Returns an Observable that produces the icon (as an `<svg>` DOM element) from the given URL.\n     * The response from the URL may be cached so this will not always cause an HTTP request, but\n     * the produced element will always be a new copy of the originally fetched icon. (That is,\n     * it will not contain any modifications made to elements previously returned).\n     *\n     * @param safeUrl URL from which to fetch the SVG icon.\n     */\n    getSvgIconFromUrl(safeUrl) {\n        const url = this._sanitizer.sanitize(SecurityContext.RESOURCE_URL, safeUrl);\n        if (!url) {\n            throw getMatIconFailedToSanitizeUrlError(safeUrl);\n        }\n        const cachedIcon = this._cachedIconsByUrl.get(url);\n        if (cachedIcon) {\n            return of(cloneSvg(cachedIcon));\n        }\n        return this._loadSvgIconFromConfig(new SvgIconConfig(safeUrl, null)).pipe(tap(svg => this._cachedIconsByUrl.set(url, svg)), map(svg => cloneSvg(svg)));\n    }\n    /**\n     * Returns an Observable that produces the icon (as an `<svg>` DOM element) with the given name\n     * and namespace. The icon must have been previously registered with addIcon or addIconSet;\n     * if not, the Observable will throw an error.\n     *\n     * @param name Name of the icon to be retrieved.\n     * @param namespace Namespace in which to look for the icon.\n     */\n    getNamedSvgIcon(name, namespace = '') {\n        const key = iconKey(namespace, name);\n        let config = this._svgIconConfigs.get(key);\n        // Return (copy of) cached icon if possible.\n        if (config) {\n            return this._getSvgFromConfig(config);\n        }\n        // Otherwise try to resolve the config from one of the resolver functions.\n        config = this._getIconConfigFromResolvers(namespace, name);\n        if (config) {\n            this._svgIconConfigs.set(key, config);\n            return this._getSvgFromConfig(config);\n        }\n        // See if we have any icon sets registered for the namespace.\n        const iconSetConfigs = this._iconSetConfigs.get(namespace);\n        if (iconSetConfigs) {\n            return this._getSvgFromIconSetConfigs(name, iconSetConfigs);\n        }\n        return throwError(getMatIconNameNotFoundError(key));\n    }\n    ngOnDestroy() {\n        this._resolvers = [];\n        this._svgIconConfigs.clear();\n        this._iconSetConfigs.clear();\n        this._cachedIconsByUrl.clear();\n    }\n    /**\n     * Returns the cached icon for a SvgIconConfig if available, or fetches it from its URL if not.\n     */\n    _getSvgFromConfig(config) {\n        if (config.svgText) {\n            // We already have the SVG element for this icon, return a copy.\n            return of(cloneSvg(this._svgElementFromConfig(config)));\n        }\n        else {\n            // Fetch the icon from the config's URL, cache it, and return a copy.\n            return this._loadSvgIconFromConfig(config).pipe(map(svg => cloneSvg(svg)));\n        }\n    }\n    /**\n     * Attempts to find an icon with the specified name in any of the SVG icon sets.\n     * First searches the available cached icons for a nested element with a matching name, and\n     * if found copies the element to a new `<svg>` element. If not found, fetches all icon sets\n     * that have not been cached, and searches again after all fetches are completed.\n     * The returned Observable produces the SVG element if possible, and throws\n     * an error if no icon with the specified name can be found.\n     */\n    _getSvgFromIconSetConfigs(name, iconSetConfigs) {\n        // For all the icon set SVG elements we've fetched, see if any contain an icon with the\n        // requested name.\n        const namedIcon = this._extractIconWithNameFromAnySet(name, iconSetConfigs);\n        if (namedIcon) {\n            // We could cache namedIcon in _svgIconConfigs, but since we have to make a copy every\n            // time anyway, there's probably not much advantage compared to just always extracting\n            // it from the icon set.\n            return of(namedIcon);\n        }\n        // Not found in any cached icon sets. If there are icon sets with URLs that we haven't\n        // fetched, fetch them now and look for iconName in the results.\n        const iconSetFetchRequests = iconSetConfigs\n            .filter(iconSetConfig => !iconSetConfig.svgText)\n            .map(iconSetConfig => {\n            return this._loadSvgIconSetFromConfig(iconSetConfig).pipe(catchError((err) => {\n                const url = this._sanitizer.sanitize(SecurityContext.RESOURCE_URL, iconSetConfig.url);\n                // Swallow errors fetching individual URLs so the\n                // combined Observable won't necessarily fail.\n                const errorMessage = `Loading icon set URL: ${url} failed: ${err.message}`;\n                this._errorHandler.handleError(new Error(errorMessage));\n                return of(null);\n            }));\n        });\n        // Fetch all the icon set URLs. When the requests complete, every IconSet should have a\n        // cached SVG element (unless the request failed), and we can check again for the icon.\n        return forkJoin(iconSetFetchRequests).pipe(map(() => {\n            const foundIcon = this._extractIconWithNameFromAnySet(name, iconSetConfigs);\n            // TODO: add an ngDevMode check\n            if (!foundIcon) {\n                throw getMatIconNameNotFoundError(name);\n            }\n            return foundIcon;\n        }));\n    }\n    /**\n     * Searches the cached SVG elements for the given icon sets for a nested icon element whose \"id\"\n     * tag matches the specified name. If found, copies the nested element to a new SVG element and\n     * returns it. Returns null if no matching element is found.\n     */\n    _extractIconWithNameFromAnySet(iconName, iconSetConfigs) {\n        // Iterate backwards, so icon sets added later have precedence.\n        for (let i = iconSetConfigs.length - 1; i >= 0; i--) {\n            const config = iconSetConfigs[i];\n            // Parsing the icon set's text into an SVG element can be expensive. We can avoid some of\n            // the parsing by doing a quick check using `indexOf` to see if there's any chance for the\n            // icon to be in the set. This won't be 100% accurate, but it should help us avoid at least\n            // some of the parsing.\n            if (config.svgText && config.svgText.toString().indexOf(iconName) > -1) {\n                const svg = this._svgElementFromConfig(config);\n                const foundIcon = this._extractSvgIconFromSet(svg, iconName, config.options);\n                if (foundIcon) {\n                    return foundIcon;\n                }\n            }\n        }\n        return null;\n    }\n    /**\n     * Loads the content of the icon URL specified in the SvgIconConfig and creates an SVG element\n     * from it.\n     */\n    _loadSvgIconFromConfig(config) {\n        return this._fetchIcon(config).pipe(tap(svgText => (config.svgText = svgText)), map(() => this._svgElementFromConfig(config)));\n    }\n    /**\n     * Loads the content of the icon set URL specified in the\n     * SvgIconConfig and attaches it to the config.\n     */\n    _loadSvgIconSetFromConfig(config) {\n        if (config.svgText) {\n            return of(null);\n        }\n        return this._fetchIcon(config).pipe(tap(svgText => (config.svgText = svgText)));\n    }\n    /**\n     * Searches the cached element of the given SvgIconConfig for a nested icon element whose \"id\"\n     * tag matches the specified name. If found, copies the nested element to a new SVG element and\n     * returns it. Returns null if no matching element is found.\n     */\n    _extractSvgIconFromSet(iconSet, iconName, options) {\n        // Use the `id=\"iconName\"` syntax in order to escape special\n        // characters in the ID (versus using the #iconName syntax).\n        const iconSource = iconSet.querySelector(`[id=\"${iconName}\"]`);\n        if (!iconSource) {\n            return null;\n        }\n        // Clone the element and remove the ID to prevent multiple elements from being added\n        // to the page with the same ID.\n        const iconElement = iconSource.cloneNode(true);\n        iconElement.removeAttribute('id');\n        // If the icon node is itself an <svg> node, clone and return it directly. If not, set it as\n        // the content of a new <svg> node.\n        if (iconElement.nodeName.toLowerCase() === 'svg') {\n            return this._setSvgAttributes(iconElement, options);\n        }\n        // If the node is a <symbol>, it won't be rendered so we have to convert it into <svg>. Note\n        // that the same could be achieved by referring to it via <use href=\"#id\">, however the <use>\n        // tag is problematic on Firefox, because it needs to include the current page path.\n        if (iconElement.nodeName.toLowerCase() === 'symbol') {\n            return this._setSvgAttributes(this._toSvgElement(iconElement), options);\n        }\n        // createElement('SVG') doesn't work as expected; the DOM ends up with\n        // the correct nodes, but the SVG content doesn't render. Instead we\n        // have to create an empty SVG node using innerHTML and append its content.\n        // Elements created using DOMParser.parseFromString have the same problem.\n        // http://stackoverflow.com/questions/23003278/svg-innerhtml-in-firefox-can-not-display\n        const svg = this._svgElementFromString(trustedHTMLFromString('<svg></svg>'));\n        // Clone the node so we don't remove it from the parent icon set element.\n        svg.appendChild(iconElement);\n        return this._setSvgAttributes(svg, options);\n    }\n    /**\n     * Creates a DOM element from the given SVG string.\n     */\n    _svgElementFromString(str) {\n        const div = this._document.createElement('DIV');\n        div.innerHTML = str;\n        const svg = div.querySelector('svg');\n        // TODO: add an ngDevMode check\n        if (!svg) {\n            throw Error('<svg> tag not found');\n        }\n        return svg;\n    }\n    /**\n     * Converts an element into an SVG node by cloning all of its children.\n     */\n    _toSvgElement(element) {\n        const svg = this._svgElementFromString(trustedHTMLFromString('<svg></svg>'));\n        const attributes = element.attributes;\n        // Copy over all the attributes from the `symbol` to the new SVG, except the id.\n        for (let i = 0; i < attributes.length; i++) {\n            const { name, value } = attributes[i];\n            if (name !== 'id') {\n                svg.setAttribute(name, value);\n            }\n        }\n        for (let i = 0; i < element.childNodes.length; i++) {\n            if (element.childNodes[i].nodeType === this._document.ELEMENT_NODE) {\n                svg.appendChild(element.childNodes[i].cloneNode(true));\n            }\n        }\n        return svg;\n    }\n    /**\n     * Sets the default attributes for an SVG element to be used as an icon.\n     */\n    _setSvgAttributes(svg, options) {\n        svg.setAttribute('fit', '');\n        svg.setAttribute('height', '100%');\n        svg.setAttribute('width', '100%');\n        svg.setAttribute('preserveAspectRatio', 'xMidYMid meet');\n        svg.setAttribute('focusable', 'false'); // Disable IE11 default behavior to make SVGs focusable.\n        if (options && options.viewBox) {\n            svg.setAttribute('viewBox', options.viewBox);\n        }\n        return svg;\n    }\n    /**\n     * Returns an Observable which produces the string contents of the given icon. Results may be\n     * cached, so future calls with the same URL may not cause another HTTP request.\n     */\n    _fetchIcon(iconConfig) {\n        var _a;\n        const { url: safeUrl, options } = iconConfig;\n        const withCredentials = (_a = options === null || options === void 0 ? void 0 : options.withCredentials) !== null && _a !== void 0 ? _a : false;\n        if (!this._httpClient) {\n            throw getMatIconNoHttpProviderError();\n        }\n        // TODO: add an ngDevMode check\n        if (safeUrl == null) {\n            throw Error(`Cannot fetch icon from URL \"${safeUrl}\".`);\n        }\n        const url = this._sanitizer.sanitize(SecurityContext.RESOURCE_URL, safeUrl);\n        // TODO: add an ngDevMode check\n        if (!url) {\n            throw getMatIconFailedToSanitizeUrlError(safeUrl);\n        }\n        // Store in-progress fetches to avoid sending a duplicate request for a URL when there is\n        // already a request in progress for that URL. It's necessary to call share() on the\n        // Observable returned by http.get() so that multiple subscribers don't cause multiple XHRs.\n        const inProgressFetch = this._inProgressUrlFetches.get(url);\n        if (inProgressFetch) {\n            return inProgressFetch;\n        }\n        const req = this._httpClient.get(url, { responseType: 'text', withCredentials }).pipe(map(svg => {\n            // Security: This SVG is fetched from a SafeResourceUrl, and is thus\n            // trusted HTML.\n            return trustedHTMLFromString(svg);\n        }), finalize(() => this._inProgressUrlFetches.delete(url)), share());\n        this._inProgressUrlFetches.set(url, req);\n        return req;\n    }\n    /**\n     * Registers an icon config by name in the specified namespace.\n     * @param namespace Namespace in which to register the icon config.\n     * @param iconName Name under which to register the config.\n     * @param config Config to be registered.\n     */\n    _addSvgIconConfig(namespace, iconName, config) {\n        this._svgIconConfigs.set(iconKey(namespace, iconName), config);\n        return this;\n    }\n    /**\n     * Registers an icon set config in the specified namespace.\n     * @param namespace Namespace in which to register the icon config.\n     * @param config Config to be registered.\n     */\n    _addSvgIconSetConfig(namespace, config) {\n        const configNamespace = this._iconSetConfigs.get(namespace);\n        if (configNamespace) {\n            configNamespace.push(config);\n        }\n        else {\n            this._iconSetConfigs.set(namespace, [config]);\n        }\n        return this;\n    }\n    /** Parses a config's text into an SVG element. */\n    _svgElementFromConfig(config) {\n        if (!config.svgElement) {\n            const svg = this._svgElementFromString(config.svgText);\n            this._setSvgAttributes(svg, config.options);\n            config.svgElement = svg;\n        }\n        return config.svgElement;\n    }\n    /** Tries to create an icon config through the registered resolver functions. */\n    _getIconConfigFromResolvers(namespace, name) {\n        for (let i = 0; i < this._resolvers.length; i++) {\n            const result = this._resolvers[i](name, namespace);\n            if (result) {\n                return isSafeUrlWithOptions(result)\n                    ? new SvgIconConfig(result.url, null, result.options)\n                    : new SvgIconConfig(result, null);\n            }\n        }\n        return undefined;\n    }\n}\nMatIconRegistry.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatIconRegistry, deps: [{ token: i1.HttpClient, optional: true }, { token: i2.DomSanitizer }, { token: DOCUMENT, optional: true }, { token: i0.ErrorHandler }], target: i0.ɵɵFactoryTarget.Injectable });\nMatIconRegistry.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatIconRegistry, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatIconRegistry, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: function () {\n        return [{ type: i1.HttpClient, decorators: [{\n                        type: Optional\n                    }] }, { type: i2.DomSanitizer }, { type: undefined, decorators: [{\n                        type: Optional\n                    }, {\n                        type: Inject,\n                        args: [DOCUMENT]\n                    }] }, { type: i0.ErrorHandler }];\n    } });\n/** @docs-private */\nfunction ICON_REGISTRY_PROVIDER_FACTORY(parentRegistry, httpClient, sanitizer, errorHandler, document) {\n    return parentRegistry || new MatIconRegistry(httpClient, sanitizer, document, errorHandler);\n}\n/** @docs-private */\nconst ICON_REGISTRY_PROVIDER = {\n    // If there is already an MatIconRegistry available, use that. Otherwise, provide a new one.\n    provide: MatIconRegistry,\n    deps: [\n        [new Optional(), new SkipSelf(), MatIconRegistry],\n        [new Optional(), HttpClient],\n        DomSanitizer,\n        ErrorHandler,\n        [new Optional(), DOCUMENT],\n    ],\n    useFactory: ICON_REGISTRY_PROVIDER_FACTORY,\n};\n/** Clones an SVGElement while preserving type information. */\nfunction cloneSvg(svg) {\n    return svg.cloneNode(true);\n}\n/** Returns the cache key to use for an icon namespace and name. */\nfunction iconKey(namespace, name) {\n    return namespace + ':' + name;\n}\nfunction isSafeUrlWithOptions(value) {\n    return !!(value.url && value.options);\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// Boilerplate for applying mixins to MatIcon.\n/** @docs-private */\nconst _MatIconBase = mixinColor(class {\n    constructor(_elementRef) {\n        this._elementRef = _elementRef;\n    }\n});\n/**\n * Injection token used to provide the current location to `MatIcon`.\n * Used to handle server-side rendering and to stub out during unit tests.\n * @docs-private\n */\nconst MAT_ICON_LOCATION = new InjectionToken('mat-icon-location', {\n    providedIn: 'root',\n    factory: MAT_ICON_LOCATION_FACTORY,\n});\n/** @docs-private */\nfunction MAT_ICON_LOCATION_FACTORY() {\n    const _document = inject(DOCUMENT);\n    const _location = _document ? _document.location : null;\n    return {\n        // Note that this needs to be a function, rather than a property, because Angular\n        // will only resolve it once, but we want the current path on each call.\n        getPathname: () => (_location ? _location.pathname + _location.search : ''),\n    };\n}\n/** SVG attributes that accept a FuncIRI (e.g. `url(<something>)`). */\nconst funcIriAttributes = [\n    'clip-path',\n    'color-profile',\n    'src',\n    'cursor',\n    'fill',\n    'filter',\n    'marker',\n    'marker-start',\n    'marker-mid',\n    'marker-end',\n    'mask',\n    'stroke',\n];\n/** Selector that can be used to find all elements that are using a `FuncIRI`. */\nconst funcIriAttributeSelector = funcIriAttributes.map(attr => `[${attr}]`).join(', ');\n/** Regex that can be used to extract the id out of a FuncIRI. */\nconst funcIriPattern = /^url\\(['\"]?#(.*?)['\"]?\\)$/;\n/**\n * Component to display an icon. It can be used in the following ways:\n *\n * - Specify the svgIcon input to load an SVG icon from a URL previously registered with the\n *   addSvgIcon, addSvgIconInNamespace, addSvgIconSet, or addSvgIconSetInNamespace methods of\n *   MatIconRegistry. If the svgIcon value contains a colon it is assumed to be in the format\n *   \"[namespace]:[name]\", if not the value will be the name of an icon in the default namespace.\n *   Examples:\n *     `<mat-icon svgIcon=\"left-arrow\"></mat-icon>\n *     <mat-icon svgIcon=\"animals:cat\"></mat-icon>`\n *\n * - Use a font ligature as an icon by putting the ligature text in the content of the `<mat-icon>`\n *   component. By default the Material icons font is used as described at\n *   http://google.github.io/material-design-icons/#icon-font-for-the-web. You can specify an\n *   alternate font by setting the fontSet input to either the CSS class to apply to use the\n *   desired font, or to an alias previously registered with MatIconRegistry.registerFontClassAlias.\n *   Examples:\n *     `<mat-icon>home</mat-icon>\n *     <mat-icon fontSet=\"myfont\">sun</mat-icon>`\n *\n * - Specify a font glyph to be included via CSS rules by setting the fontSet input to specify the\n *   font, and the fontIcon input to specify the icon. Typically the fontIcon will specify a\n *   CSS class which causes the glyph to be displayed via a :before selector, as in\n *   https://fortawesome.github.io/Font-Awesome/examples/\n *   Example:\n *     `<mat-icon fontSet=\"fa\" fontIcon=\"alarm\"></mat-icon>`\n */\nclass MatIcon extends _MatIconBase {\n    constructor(elementRef, _iconRegistry, ariaHidden, _location, _errorHandler) {\n        super(elementRef);\n        this._iconRegistry = _iconRegistry;\n        this._location = _location;\n        this._errorHandler = _errorHandler;\n        this._inline = false;\n        /** Subscription to the current in-progress SVG icon request. */\n        this._currentIconFetch = Subscription.EMPTY;\n        // If the user has not explicitly set aria-hidden, mark the icon as hidden, as this is\n        // the right thing to do for the majority of icon use-cases.\n        if (!ariaHidden) {\n            elementRef.nativeElement.setAttribute('aria-hidden', 'true');\n        }\n    }\n    /**\n     * Whether the icon should be inlined, automatically sizing the icon to match the font size of\n     * the element the icon is contained in.\n     */\n    get inline() {\n        return this._inline;\n    }\n    set inline(inline) {\n        this._inline = coerceBooleanProperty(inline);\n    }\n    /** Name of the icon in the SVG icon set. */\n    get svgIcon() {\n        return this._svgIcon;\n    }\n    set svgIcon(value) {\n        if (value !== this._svgIcon) {\n            if (value) {\n                this._updateSvgIcon(value);\n            }\n            else if (this._svgIcon) {\n                this._clearSvgElement();\n            }\n            this._svgIcon = value;\n        }\n    }\n    /** Font set that the icon is a part of. */\n    get fontSet() {\n        return this._fontSet;\n    }\n    set fontSet(value) {\n        const newValue = this._cleanupFontValue(value);\n        if (newValue !== this._fontSet) {\n            this._fontSet = newValue;\n            this._updateFontIconClasses();\n        }\n    }\n    /** Name of an icon within a font set. */\n    get fontIcon() {\n        return this._fontIcon;\n    }\n    set fontIcon(value) {\n        const newValue = this._cleanupFontValue(value);\n        if (newValue !== this._fontIcon) {\n            this._fontIcon = newValue;\n            this._updateFontIconClasses();\n        }\n    }\n    /**\n     * Splits an svgIcon binding value into its icon set and icon name components.\n     * Returns a 2-element array of [(icon set), (icon name)].\n     * The separator for the two fields is ':'. If there is no separator, an empty\n     * string is returned for the icon set and the entire value is returned for\n     * the icon name. If the argument is falsy, returns an array of two empty strings.\n     * Throws an error if the name contains two or more ':' separators.\n     * Examples:\n     *   `'social:cake' -> ['social', 'cake']\n     *   'penguin' -> ['', 'penguin']\n     *   null -> ['', '']\n     *   'a:b:c' -> (throws Error)`\n     */\n    _splitIconName(iconName) {\n        if (!iconName) {\n            return ['', ''];\n        }\n        const parts = iconName.split(':');\n        switch (parts.length) {\n            case 1:\n                return ['', parts[0]]; // Use default namespace.\n            case 2:\n                return parts;\n            default:\n                throw Error(`Invalid icon name: \"${iconName}\"`); // TODO: add an ngDevMode check\n        }\n    }\n    ngOnInit() {\n        // Update font classes because ngOnChanges won't be called if none of the inputs are present,\n        // e.g. <mat-icon>arrow</mat-icon> In this case we need to add a CSS class for the default font.\n        this._updateFontIconClasses();\n    }\n    ngAfterViewChecked() {\n        const cachedElements = this._elementsWithExternalReferences;\n        if (cachedElements && cachedElements.size) {\n            const newPath = this._location.getPathname();\n            // We need to check whether the URL has changed on each change detection since\n            // the browser doesn't have an API that will let us react on link clicks and\n            // we can't depend on the Angular router. The references need to be updated,\n            // because while most browsers don't care whether the URL is correct after\n            // the first render, Safari will break if the user navigates to a different\n            // page and the SVG isn't re-rendered.\n            if (newPath !== this._previousPath) {\n                this._previousPath = newPath;\n                this._prependPathToReferences(newPath);\n            }\n        }\n    }\n    ngOnDestroy() {\n        this._currentIconFetch.unsubscribe();\n        if (this._elementsWithExternalReferences) {\n            this._elementsWithExternalReferences.clear();\n        }\n    }\n    _usingFontIcon() {\n        return !this.svgIcon;\n    }\n    _setSvgElement(svg) {\n        this._clearSvgElement();\n        // Workaround for IE11 and Edge ignoring `style` tags inside dynamically-created SVGs.\n        // See: https://developer.microsoft.com/en-us/microsoft-edge/platform/issues/10898469/\n        // Do this before inserting the element into the DOM, in order to avoid a style recalculation.\n        const styleTags = svg.querySelectorAll('style');\n        for (let i = 0; i < styleTags.length; i++) {\n            styleTags[i].textContent += ' ';\n        }\n        // Note: we do this fix here, rather than the icon registry, because the\n        // references have to point to the URL at the time that the icon was created.\n        const path = this._location.getPathname();\n        this._previousPath = path;\n        this._cacheChildrenWithExternalReferences(svg);\n        this._prependPathToReferences(path);\n        this._elementRef.nativeElement.appendChild(svg);\n    }\n    _clearSvgElement() {\n        const layoutElement = this._elementRef.nativeElement;\n        let childCount = layoutElement.childNodes.length;\n        if (this._elementsWithExternalReferences) {\n            this._elementsWithExternalReferences.clear();\n        }\n        // Remove existing non-element child nodes and SVGs, and add the new SVG element. Note that\n        // we can't use innerHTML, because IE will throw if the element has a data binding.\n        while (childCount--) {\n            const child = layoutElement.childNodes[childCount];\n            // 1 corresponds to Node.ELEMENT_NODE. We remove all non-element nodes in order to get rid\n            // of any loose text nodes, as well as any SVG elements in order to remove any old icons.\n            if (child.nodeType !== 1 || child.nodeName.toLowerCase() === 'svg') {\n                child.remove();\n            }\n        }\n    }\n    _updateFontIconClasses() {\n        if (!this._usingFontIcon()) {\n            return;\n        }\n        const elem = this._elementRef.nativeElement;\n        const fontSetClass = this.fontSet\n            ? this._iconRegistry.classNameForFontAlias(this.fontSet)\n            : this._iconRegistry.getDefaultFontSetClass();\n        if (fontSetClass != this._previousFontSetClass) {\n            if (this._previousFontSetClass) {\n                elem.classList.remove(this._previousFontSetClass);\n            }\n            if (fontSetClass) {\n                elem.classList.add(fontSetClass);\n            }\n            this._previousFontSetClass = fontSetClass;\n        }\n        if (this.fontIcon != this._previousFontIconClass) {\n            if (this._previousFontIconClass) {\n                elem.classList.remove(this._previousFontIconClass);\n            }\n            if (this.fontIcon) {\n                elem.classList.add(this.fontIcon);\n            }\n            this._previousFontIconClass = this.fontIcon;\n        }\n    }\n    /**\n     * Cleans up a value to be used as a fontIcon or fontSet.\n     * Since the value ends up being assigned as a CSS class, we\n     * have to trim the value and omit space-separated values.\n     */\n    _cleanupFontValue(value) {\n        return typeof value === 'string' ? value.trim().split(' ')[0] : value;\n    }\n    /**\n     * Prepends the current path to all elements that have an attribute pointing to a `FuncIRI`\n     * reference. This is required because WebKit browsers require references to be prefixed with\n     * the current path, if the page has a `base` tag.\n     */\n    _prependPathToReferences(path) {\n        const elements = this._elementsWithExternalReferences;\n        if (elements) {\n            elements.forEach((attrs, element) => {\n                attrs.forEach(attr => {\n                    element.setAttribute(attr.name, `url('${path}#${attr.value}')`);\n                });\n            });\n        }\n    }\n    /**\n     * Caches the children of an SVG element that have `url()`\n     * references that we need to prefix with the current path.\n     */\n    _cacheChildrenWithExternalReferences(element) {\n        const elementsWithFuncIri = element.querySelectorAll(funcIriAttributeSelector);\n        const elements = (this._elementsWithExternalReferences =\n            this._elementsWithExternalReferences || new Map());\n        for (let i = 0; i < elementsWithFuncIri.length; i++) {\n            funcIriAttributes.forEach(attr => {\n                const elementWithReference = elementsWithFuncIri[i];\n                const value = elementWithReference.getAttribute(attr);\n                const match = value ? value.match(funcIriPattern) : null;\n                if (match) {\n                    let attributes = elements.get(elementWithReference);\n                    if (!attributes) {\n                        attributes = [];\n                        elements.set(elementWithReference, attributes);\n                    }\n                    attributes.push({ name: attr, value: match[1] });\n                }\n            });\n        }\n    }\n    /** Sets a new SVG icon with a particular name. */\n    _updateSvgIcon(rawName) {\n        this._svgNamespace = null;\n        this._svgName = null;\n        this._currentIconFetch.unsubscribe();\n        if (rawName) {\n            const [namespace, iconName] = this._splitIconName(rawName);\n            if (namespace) {\n                this._svgNamespace = namespace;\n            }\n            if (iconName) {\n                this._svgName = iconName;\n            }\n            this._currentIconFetch = this._iconRegistry\n                .getNamedSvgIcon(iconName, namespace)\n                .pipe(take(1))\n                .subscribe(svg => this._setSvgElement(svg), (err) => {\n                const errorMessage = `Error retrieving icon ${namespace}:${iconName}! ${err.message}`;\n                this._errorHandler.handleError(new Error(errorMessage));\n            });\n        }\n    }\n}\nMatIcon.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatIcon, deps: [{ token: i0.ElementRef }, { token: MatIconRegistry }, { token: 'aria-hidden', attribute: true }, { token: MAT_ICON_LOCATION }, { token: i0.ErrorHandler }], target: i0.ɵɵFactoryTarget.Component });\nMatIcon.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: MatIcon, selector: \"mat-icon\", inputs: { color: \"color\", inline: \"inline\", svgIcon: \"svgIcon\", fontSet: \"fontSet\", fontIcon: \"fontIcon\" }, host: { attributes: { \"role\": \"img\" }, properties: { \"attr.data-mat-icon-type\": \"_usingFontIcon() ? \\\"font\\\" : \\\"svg\\\"\", \"attr.data-mat-icon-name\": \"_svgName || fontIcon\", \"attr.data-mat-icon-namespace\": \"_svgNamespace || fontSet\", \"class.mat-icon-inline\": \"inline\", \"class.mat-icon-no-color\": \"color !== \\\"primary\\\" && color !== \\\"accent\\\" && color !== \\\"warn\\\"\" }, classAttribute: \"mat-icon notranslate\" }, exportAs: [\"matIcon\"], usesInheritance: true, ngImport: i0, template: '<ng-content></ng-content>', isInline: true, styles: [\".mat-icon{-webkit-user-select:none;-moz-user-select:none;user-select:none;background-repeat:no-repeat;display:inline-block;fill:currentColor;height:24px;width:24px}.mat-icon.mat-icon-inline{font-size:inherit;height:inherit;line-height:inherit;width:inherit}[dir=rtl] .mat-icon-rtl-mirror{transform:scale(-1, 1)}.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-prefix .mat-icon,.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-suffix .mat-icon{display:block}.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-prefix .mat-icon-button .mat-icon,.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-suffix .mat-icon-button .mat-icon{margin:auto}\\n\"], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatIcon, decorators: [{\n            type: Component,\n            args: [{ template: '<ng-content></ng-content>', selector: 'mat-icon', exportAs: 'matIcon', inputs: ['color'], host: {\n                        'role': 'img',\n                        'class': 'mat-icon notranslate',\n                        '[attr.data-mat-icon-type]': '_usingFontIcon() ? \"font\" : \"svg\"',\n                        '[attr.data-mat-icon-name]': '_svgName || fontIcon',\n                        '[attr.data-mat-icon-namespace]': '_svgNamespace || fontSet',\n                        '[class.mat-icon-inline]': 'inline',\n                        '[class.mat-icon-no-color]': 'color !== \"primary\" && color !== \"accent\" && color !== \"warn\"',\n                    }, encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, styles: [\".mat-icon{-webkit-user-select:none;-moz-user-select:none;user-select:none;background-repeat:no-repeat;display:inline-block;fill:currentColor;height:24px;width:24px}.mat-icon.mat-icon-inline{font-size:inherit;height:inherit;line-height:inherit;width:inherit}[dir=rtl] .mat-icon-rtl-mirror{transform:scale(-1, 1)}.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-prefix .mat-icon,.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-suffix .mat-icon{display:block}.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-prefix .mat-icon-button .mat-icon,.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-suffix .mat-icon-button .mat-icon{margin:auto}\\n\"] }]\n        }], ctorParameters: function () {\n        return [{ type: i0.ElementRef }, { type: MatIconRegistry }, { type: undefined, decorators: [{\n                        type: Attribute,\n                        args: ['aria-hidden']\n                    }] }, { type: undefined, decorators: [{\n                        type: Inject,\n                        args: [MAT_ICON_LOCATION]\n                    }] }, { type: i0.ErrorHandler }];\n    }, propDecorators: { inline: [{\n                type: Input\n            }], svgIcon: [{\n                type: Input\n            }], fontSet: [{\n                type: Input\n            }], fontIcon: [{\n                type: Input\n            }] } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass MatIconModule {\n}\nMatIconModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatIconModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nMatIconModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatIconModule, declarations: [MatIcon], imports: [MatCommonModule], exports: [MatIcon, MatCommonModule] });\nMatIconModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatIconModule, imports: [[MatCommonModule], MatCommonModule] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatIconModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [MatCommonModule],\n                    exports: [MatIcon, MatCommonModule],\n                    declarations: [MatIcon],\n                }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { ICON_REGISTRY_PROVIDER, ICON_REGISTRY_PROVIDER_FACTORY, MAT_ICON_LOCATION, MAT_ICON_LOCATION_FACTORY, MatIcon, MatIconModule, MatIconRegistry, getMatIconFailedToSanitizeLiteralError, getMatIconFailedToSanitizeUrlError, getMatIconNameNotFoundError, getMatIconNoHttpProviderError };\n","import { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport * as i1 from '@angular/cdk/platform';\nimport { getSupportedInputTypes } from '@angular/cdk/platform';\nimport * as i0 from '@angular/core';\nimport { InjectionToken, Directive, Optional, Self, Inject, Input, NgModule } from '@angular/core';\nimport * as i2 from '@angular/forms';\nimport { Validators } from '@angular/forms';\nimport * as i3 from '@angular/material/core';\nimport { mixinErrorState, MatCommonModule, ErrorStateMatcher } from '@angular/material/core';\nimport * as i5 from '@angular/material/form-field';\nimport { MAT_FORM_FIELD, MatFormFieldControl, MatFormFieldModule } from '@angular/material/form-field';\nimport { Subject } from 'rxjs';\nimport * as i4 from '@angular/cdk/text-field';\nimport { TextFieldModule } from '@angular/cdk/text-field';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** @docs-private */\nfunction getMatInputUnsupportedTypeError(type) {\n    return Error(`Input type \"${type}\" isn't supported by matInput.`);\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * This token is used to inject the object whose value should be set into `MatInput`. If none is\n * provided, the native `HTMLInputElement` is used. Directives like `MatDatepickerInput` can provide\n * themselves for this token, in order to make `MatInput` delegate the getting and setting of the\n * value to them.\n */\nconst MAT_INPUT_VALUE_ACCESSOR = new InjectionToken('MAT_INPUT_VALUE_ACCESSOR');\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// Invalid input type. Using one of these will throw an MatInputUnsupportedTypeError.\nconst MAT_INPUT_INVALID_TYPES = [\n    'button',\n    'checkbox',\n    'file',\n    'hidden',\n    'image',\n    'radio',\n    'range',\n    'reset',\n    'submit',\n];\nlet nextUniqueId = 0;\n// Boilerplate for applying mixins to MatInput.\n/** @docs-private */\nconst _MatInputBase = mixinErrorState(class {\n    constructor(_defaultErrorStateMatcher, _parentForm, _parentFormGroup, \n    /** @docs-private */\n    ngControl) {\n        this._defaultErrorStateMatcher = _defaultErrorStateMatcher;\n        this._parentForm = _parentForm;\n        this._parentFormGroup = _parentFormGroup;\n        this.ngControl = ngControl;\n    }\n});\n/** Directive that allows a native input to work inside a `MatFormField`. */\nclass MatInput extends _MatInputBase {\n    constructor(_elementRef, _platform, ngControl, _parentForm, _parentFormGroup, _defaultErrorStateMatcher, inputValueAccessor, _autofillMonitor, ngZone, \n    // TODO: Remove this once the legacy appearance has been removed. We only need\n    // to inject the form-field for determining whether the placeholder has been promoted.\n    _formField) {\n        super(_defaultErrorStateMatcher, _parentForm, _parentFormGroup, ngControl);\n        this._elementRef = _elementRef;\n        this._platform = _platform;\n        this._autofillMonitor = _autofillMonitor;\n        this._formField = _formField;\n        this._uid = `mat-input-${nextUniqueId++}`;\n        /**\n         * Implemented as part of MatFormFieldControl.\n         * @docs-private\n         */\n        this.focused = false;\n        /**\n         * Implemented as part of MatFormFieldControl.\n         * @docs-private\n         */\n        this.stateChanges = new Subject();\n        /**\n         * Implemented as part of MatFormFieldControl.\n         * @docs-private\n         */\n        this.controlType = 'mat-input';\n        /**\n         * Implemented as part of MatFormFieldControl.\n         * @docs-private\n         */\n        this.autofilled = false;\n        this._disabled = false;\n        this._type = 'text';\n        this._readonly = false;\n        this._neverEmptyInputTypes = [\n            'date',\n            'datetime',\n            'datetime-local',\n            'month',\n            'time',\n            'week',\n        ].filter(t => getSupportedInputTypes().has(t));\n        const element = this._elementRef.nativeElement;\n        const nodeName = element.nodeName.toLowerCase();\n        // If no input value accessor was explicitly specified, use the element as the input value\n        // accessor.\n        this._inputValueAccessor = inputValueAccessor || element;\n        this._previousNativeValue = this.value;\n        // Force setter to be called in case id was not specified.\n        this.id = this.id;\n        // On some versions of iOS the caret gets stuck in the wrong place when holding down the delete\n        // key. In order to get around this we need to \"jiggle\" the caret loose. Since this bug only\n        // exists on iOS, we only bother to install the listener on iOS.\n        if (_platform.IOS) {\n            ngZone.runOutsideAngular(() => {\n                _elementRef.nativeElement.addEventListener('keyup', (event) => {\n                    const el = event.target;\n                    // Note: We specifically check for 0, rather than `!el.selectionStart`, because the two\n                    // indicate different things. If the value is 0, it means that the caret is at the start\n                    // of the input, whereas a value of `null` means that the input doesn't support\n                    // manipulating the selection range. Inputs that don't support setting the selection range\n                    // will throw an error so we want to avoid calling `setSelectionRange` on them. See:\n                    // https://html.spec.whatwg.org/multipage/input.html#do-not-apply\n                    if (!el.value && el.selectionStart === 0 && el.selectionEnd === 0) {\n                        // Note: Just setting `0, 0` doesn't fix the issue. Setting\n                        // `1, 1` fixes it for the first time that you type text and\n                        // then hold delete. Toggling to `1, 1` and then back to\n                        // `0, 0` seems to completely fix it.\n                        el.setSelectionRange(1, 1);\n                        el.setSelectionRange(0, 0);\n                    }\n                });\n            });\n        }\n        this._isServer = !this._platform.isBrowser;\n        this._isNativeSelect = nodeName === 'select';\n        this._isTextarea = nodeName === 'textarea';\n        this._isInFormField = !!_formField;\n        if (this._isNativeSelect) {\n            this.controlType = element.multiple\n                ? 'mat-native-select-multiple'\n                : 'mat-native-select';\n        }\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * @docs-private\n     */\n    get disabled() {\n        if (this.ngControl && this.ngControl.disabled !== null) {\n            return this.ngControl.disabled;\n        }\n        return this._disabled;\n    }\n    set disabled(value) {\n        this._disabled = coerceBooleanProperty(value);\n        // Browsers may not fire the blur event if the input is disabled too quickly.\n        // Reset from here to ensure that the element doesn't become stuck.\n        if (this.focused) {\n            this.focused = false;\n            this.stateChanges.next();\n        }\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * @docs-private\n     */\n    get id() {\n        return this._id;\n    }\n    set id(value) {\n        this._id = value || this._uid;\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * @docs-private\n     */\n    get required() {\n        var _a, _b, _c, _d;\n        return (_d = (_a = this._required) !== null && _a !== void 0 ? _a : (_c = (_b = this.ngControl) === null || _b === void 0 ? void 0 : _b.control) === null || _c === void 0 ? void 0 : _c.hasValidator(Validators.required)) !== null && _d !== void 0 ? _d : false;\n    }\n    set required(value) {\n        this._required = coerceBooleanProperty(value);\n    }\n    /** Input type of the element. */\n    get type() {\n        return this._type;\n    }\n    set type(value) {\n        this._type = value || 'text';\n        this._validateType();\n        // When using Angular inputs, developers are no longer able to set the properties on the native\n        // input element. To ensure that bindings for `type` work, we need to sync the setter\n        // with the native property. Textarea elements don't support the type property or attribute.\n        if (!this._isTextarea && getSupportedInputTypes().has(this._type)) {\n            this._elementRef.nativeElement.type = this._type;\n        }\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * @docs-private\n     */\n    get value() {\n        return this._inputValueAccessor.value;\n    }\n    set value(value) {\n        if (value !== this.value) {\n            this._inputValueAccessor.value = value;\n            this.stateChanges.next();\n        }\n    }\n    /** Whether the element is readonly. */\n    get readonly() {\n        return this._readonly;\n    }\n    set readonly(value) {\n        this._readonly = coerceBooleanProperty(value);\n    }\n    ngAfterViewInit() {\n        if (this._platform.isBrowser) {\n            this._autofillMonitor.monitor(this._elementRef.nativeElement).subscribe(event => {\n                this.autofilled = event.isAutofilled;\n                this.stateChanges.next();\n            });\n        }\n    }\n    ngOnChanges() {\n        this.stateChanges.next();\n    }\n    ngOnDestroy() {\n        this.stateChanges.complete();\n        if (this._platform.isBrowser) {\n            this._autofillMonitor.stopMonitoring(this._elementRef.nativeElement);\n        }\n    }\n    ngDoCheck() {\n        if (this.ngControl) {\n            // We need to re-evaluate this on every change detection cycle, because there are some\n            // error triggers that we can't subscribe to (e.g. parent form submissions). This means\n            // that whatever logic is in here has to be super lean or we risk destroying the performance.\n            this.updateErrorState();\n        }\n        // We need to dirty-check the native element's value, because there are some cases where\n        // we won't be notified when it changes (e.g. the consumer isn't using forms or they're\n        // updating the value using `emitEvent: false`).\n        this._dirtyCheckNativeValue();\n        // We need to dirty-check and set the placeholder attribute ourselves, because whether it's\n        // present or not depends on a query which is prone to \"changed after checked\" errors.\n        this._dirtyCheckPlaceholder();\n    }\n    /** Focuses the input. */\n    focus(options) {\n        this._elementRef.nativeElement.focus(options);\n    }\n    /** Callback for the cases where the focused state of the input changes. */\n    _focusChanged(isFocused) {\n        if (isFocused !== this.focused) {\n            this.focused = isFocused;\n            this.stateChanges.next();\n        }\n    }\n    _onInput() {\n        // This is a noop function and is used to let Angular know whenever the value changes.\n        // Angular will run a new change detection each time the `input` event has been dispatched.\n        // It's necessary that Angular recognizes the value change, because when floatingLabel\n        // is set to false and Angular forms aren't used, the placeholder won't recognize the\n        // value changes and will not disappear.\n        // Listening to the input event wouldn't be necessary when the input is using the\n        // FormsModule or ReactiveFormsModule, because Angular forms also listens to input events.\n    }\n    /** Does some manual dirty checking on the native input `placeholder` attribute. */\n    _dirtyCheckPlaceholder() {\n        var _a, _b;\n        // If we're hiding the native placeholder, it should also be cleared from the DOM, otherwise\n        // screen readers will read it out twice: once from the label and once from the attribute.\n        // TODO: can be removed once we get rid of the `legacy` style for the form field, because it's\n        // the only one that supports promoting the placeholder to a label.\n        const placeholder = ((_b = (_a = this._formField) === null || _a === void 0 ? void 0 : _a._hideControlPlaceholder) === null || _b === void 0 ? void 0 : _b.call(_a)) ? null : this.placeholder;\n        if (placeholder !== this._previousPlaceholder) {\n            const element = this._elementRef.nativeElement;\n            this._previousPlaceholder = placeholder;\n            placeholder\n                ? element.setAttribute('placeholder', placeholder)\n                : element.removeAttribute('placeholder');\n        }\n    }\n    /** Does some manual dirty checking on the native input `value` property. */\n    _dirtyCheckNativeValue() {\n        const newValue = this._elementRef.nativeElement.value;\n        if (this._previousNativeValue !== newValue) {\n            this._previousNativeValue = newValue;\n            this.stateChanges.next();\n        }\n    }\n    /** Make sure the input is a supported type. */\n    _validateType() {\n        if (MAT_INPUT_INVALID_TYPES.indexOf(this._type) > -1 &&\n            (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw getMatInputUnsupportedTypeError(this._type);\n        }\n    }\n    /** Checks whether the input type is one of the types that are never empty. */\n    _isNeverEmpty() {\n        return this._neverEmptyInputTypes.indexOf(this._type) > -1;\n    }\n    /** Checks whether the input is invalid based on the native validation. */\n    _isBadInput() {\n        // The `validity` property won't be present on platform-server.\n        let validity = this._elementRef.nativeElement.validity;\n        return validity && validity.badInput;\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * @docs-private\n     */\n    get empty() {\n        return (!this._isNeverEmpty() &&\n            !this._elementRef.nativeElement.value &&\n            !this._isBadInput() &&\n            !this.autofilled);\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * @docs-private\n     */\n    get shouldLabelFloat() {\n        if (this._isNativeSelect) {\n            // For a single-selection `<select>`, the label should float when the selected option has\n            // a non-empty display value. For a `<select multiple>`, the label *always* floats to avoid\n            // overlapping the label with the options.\n            const selectElement = this._elementRef.nativeElement;\n            const firstOption = selectElement.options[0];\n            // On most browsers the `selectedIndex` will always be 0, however on IE and Edge it'll be\n            // -1 if the `value` is set to something, that isn't in the list of options, at a later point.\n            return (this.focused ||\n                selectElement.multiple ||\n                !this.empty ||\n                !!(selectElement.selectedIndex > -1 && firstOption && firstOption.label));\n        }\n        else {\n            return this.focused || !this.empty;\n        }\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * @docs-private\n     */\n    setDescribedByIds(ids) {\n        if (ids.length) {\n            this._elementRef.nativeElement.setAttribute('aria-describedby', ids.join(' '));\n        }\n        else {\n            this._elementRef.nativeElement.removeAttribute('aria-describedby');\n        }\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * @docs-private\n     */\n    onContainerClick() {\n        // Do not re-focus the input element if the element is already focused. Otherwise it can happen\n        // that someone clicks on a time input and the cursor resets to the \"hours\" field while the\n        // \"minutes\" field was actually clicked. See: https://github.com/angular/components/issues/12849\n        if (!this.focused) {\n            this.focus();\n        }\n    }\n    /** Whether the form control is a native select that is displayed inline. */\n    _isInlineSelect() {\n        const element = this._elementRef.nativeElement;\n        return this._isNativeSelect && (element.multiple || element.size > 1);\n    }\n}\nMatInput.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatInput, deps: [{ token: i0.ElementRef }, { token: i1.Platform }, { token: i2.NgControl, optional: true, self: true }, { token: i2.NgForm, optional: true }, { token: i2.FormGroupDirective, optional: true }, { token: i3.ErrorStateMatcher }, { token: MAT_INPUT_VALUE_ACCESSOR, optional: true, self: true }, { token: i4.AutofillMonitor }, { token: i0.NgZone }, { token: MAT_FORM_FIELD, optional: true }], target: i0.ɵɵFactoryTarget.Directive });\nMatInput.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.1.0\", type: MatInput, selector: \"input[matInput], textarea[matInput], select[matNativeControl],\\n      input[matNativeControl], textarea[matNativeControl]\", inputs: { disabled: \"disabled\", id: \"id\", placeholder: \"placeholder\", required: \"required\", type: \"type\", errorStateMatcher: \"errorStateMatcher\", userAriaDescribedBy: [\"aria-describedby\", \"userAriaDescribedBy\"], value: \"value\", readonly: \"readonly\" }, host: { listeners: { \"focus\": \"_focusChanged(true)\", \"blur\": \"_focusChanged(false)\", \"input\": \"_onInput()\" }, properties: { \"class.mat-input-server\": \"_isServer\", \"attr.id\": \"id\", \"attr.data-placeholder\": \"placeholder\", \"disabled\": \"disabled\", \"required\": \"required\", \"attr.readonly\": \"readonly && !_isNativeSelect || null\", \"class.mat-native-select-inline\": \"_isInlineSelect()\", \"attr.aria-invalid\": \"(empty && required) ? null : errorState\", \"attr.aria-required\": \"required\" }, classAttribute: \"mat-input-element mat-form-field-autofill-control\" }, providers: [{ provide: MatFormFieldControl, useExisting: MatInput }], exportAs: [\"matInput\"], usesInheritance: true, usesOnChanges: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatInput, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: `input[matInput], textarea[matInput], select[matNativeControl],\n      input[matNativeControl], textarea[matNativeControl]`,\n                    exportAs: 'matInput',\n                    host: {\n                        /**\n                         * @breaking-change 8.0.0 remove .mat-form-field-autofill-control in favor of AutofillMonitor.\n                         */\n                        'class': 'mat-input-element mat-form-field-autofill-control',\n                        '[class.mat-input-server]': '_isServer',\n                        // Native input properties that are overwritten by Angular inputs need to be synced with\n                        // the native input element. Otherwise property bindings for those don't work.\n                        '[attr.id]': 'id',\n                        // At the time of writing, we have a lot of customer tests that look up the input based on its\n                        // placeholder. Since we sometimes omit the placeholder attribute from the DOM to prevent screen\n                        // readers from reading it twice, we have to keep it somewhere in the DOM for the lookup.\n                        '[attr.data-placeholder]': 'placeholder',\n                        '[disabled]': 'disabled',\n                        '[required]': 'required',\n                        '[attr.readonly]': 'readonly && !_isNativeSelect || null',\n                        '[class.mat-native-select-inline]': '_isInlineSelect()',\n                        // Only mark the input as invalid for assistive technology if it has a value since the\n                        // state usually overlaps with `aria-required` when the input is empty and can be redundant.\n                        '[attr.aria-invalid]': '(empty && required) ? null : errorState',\n                        '[attr.aria-required]': 'required',\n                        '(focus)': '_focusChanged(true)',\n                        '(blur)': '_focusChanged(false)',\n                        '(input)': '_onInput()',\n                    },\n                    providers: [{ provide: MatFormFieldControl, useExisting: MatInput }],\n                }]\n        }], ctorParameters: function () {\n        return [{ type: i0.ElementRef }, { type: i1.Platform }, { type: i2.NgControl, decorators: [{\n                        type: Optional\n                    }, {\n                        type: Self\n                    }] }, { type: i2.NgForm, decorators: [{\n                        type: Optional\n                    }] }, { type: i2.FormGroupDirective, decorators: [{\n                        type: Optional\n                    }] }, { type: i3.ErrorStateMatcher }, { type: undefined, decorators: [{\n                        type: Optional\n                    }, {\n                        type: Self\n                    }, {\n                        type: Inject,\n                        args: [MAT_INPUT_VALUE_ACCESSOR]\n                    }] }, { type: i4.AutofillMonitor }, { type: i0.NgZone }, { type: i5.MatFormField, decorators: [{\n                        type: Optional\n                    }, {\n                        type: Inject,\n                        args: [MAT_FORM_FIELD]\n                    }] }];\n    }, propDecorators: { disabled: [{\n                type: Input\n            }], id: [{\n                type: Input\n            }], placeholder: [{\n                type: Input\n            }], required: [{\n                type: Input\n            }], type: [{\n                type: Input\n            }], errorStateMatcher: [{\n                type: Input\n            }], userAriaDescribedBy: [{\n                type: Input,\n                args: ['aria-describedby']\n            }], value: [{\n                type: Input\n            }], readonly: [{\n                type: Input\n            }] } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass MatInputModule {\n}\nMatInputModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatInputModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nMatInputModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatInputModule, declarations: [MatInput], imports: [TextFieldModule, MatFormFieldModule, MatCommonModule], exports: [TextFieldModule,\n        // We re-export the `MatFormFieldModule` since `MatInput` will almost always\n        // be used together with `MatFormField`.\n        MatFormFieldModule,\n        MatInput] });\nMatInputModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatInputModule, providers: [ErrorStateMatcher], imports: [[TextFieldModule, MatFormFieldModule, MatCommonModule], TextFieldModule,\n        // We re-export the `MatFormFieldModule` since `MatInput` will almost always\n        // be used together with `MatFormField`.\n        MatFormFieldModule] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatInputModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    declarations: [MatInput],\n                    imports: [TextFieldModule, MatFormFieldModule, MatCommonModule],\n                    exports: [\n                        TextFieldModule,\n                        // We re-export the `MatFormFieldModule` since `MatInput` will almost always\n                        // be used together with `MatFormField`.\n                        MatFormFieldModule,\n                        MatInput,\n                    ],\n                    providers: [ErrorStateMatcher],\n                }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_INPUT_VALUE_ACCESSOR, MatInput, MatInputModule, getMatInputUnsupportedTypeError };\n","import * as i2 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { InjectionToken, Component, ViewEncapsulation, ChangeDetectionStrategy, Directive, Optional, Inject, ContentChildren, ContentChild, Input, forwardRef, EventEmitter, Output, ViewChild, Attribute, NgModule } from '@angular/core';\nimport * as i1 from '@angular/material/core';\nimport { mixinDisabled, mixinDisableRipple, setLines, MatLine, MatLineModule, MatRippleModule, MatCommonModule, MatPseudoCheckboxModule } from '@angular/material/core';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { Subject } from 'rxjs';\nimport { takeUntil, startWith } from 'rxjs/operators';\nimport * as i3 from '@angular/cdk/a11y';\nimport { FocusKeyManager } from '@angular/cdk/a11y';\nimport { SelectionModel } from '@angular/cdk/collections';\nimport { hasModifierKey, A, ENTER, SPACE, UP_ARROW, DOWN_ARROW } from '@angular/cdk/keycodes';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { MatDividerModule } from '@angular/material/divider';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// Boilerplate for applying mixins to MatList.\n/** @docs-private */\nconst _MatListBase = mixinDisabled(mixinDisableRipple(class {\n}));\n// Boilerplate for applying mixins to MatListItem.\n/** @docs-private */\nconst _MatListItemMixinBase = mixinDisableRipple(class {\n});\n/**\n * Injection token that can be used to inject instances of `MatList`. It serves as\n * alternative token to the actual `MatList` class which could cause unnecessary\n * retention of the class and its component metadata.\n */\nconst MAT_LIST = new InjectionToken('MatList');\n/**\n * Injection token that can be used to inject instances of `MatNavList`. It serves as\n * alternative token to the actual `MatNavList` class which could cause unnecessary\n * retention of the class and its component metadata.\n */\nconst MAT_NAV_LIST = new InjectionToken('MatNavList');\nclass MatNavList extends _MatListBase {\n    constructor() {\n        super(...arguments);\n        /** Emits when the state of the list changes. */\n        this._stateChanges = new Subject();\n    }\n    ngOnChanges() {\n        this._stateChanges.next();\n    }\n    ngOnDestroy() {\n        this._stateChanges.complete();\n    }\n}\nMatNavList.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatNavList, deps: null, target: i0.ɵɵFactoryTarget.Component });\nMatNavList.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: MatNavList, selector: \"mat-nav-list\", inputs: { disableRipple: \"disableRipple\", disabled: \"disabled\" }, host: { attributes: { \"role\": \"navigation\" }, classAttribute: \"mat-nav-list mat-list-base\" }, providers: [{ provide: MAT_NAV_LIST, useExisting: MatNavList }], exportAs: [\"matNavList\"], usesInheritance: true, usesOnChanges: true, ngImport: i0, template: \"<ng-content></ng-content>\\n\\n\", styles: [\".mat-subheader{display:flex;box-sizing:border-box;padding:16px;align-items:center}.mat-list-base .mat-subheader{margin:0}.mat-list-base{padding-top:8px;display:block;-webkit-tap-highlight-color:transparent}.mat-list-base .mat-subheader{height:48px;line-height:16px}.mat-list-base .mat-subheader:first-child{margin-top:-8px}.mat-list-base .mat-list-item,.mat-list-base .mat-list-option{display:block;height:48px;-webkit-tap-highlight-color:transparent;width:100%;padding:0}.mat-list-base .mat-list-item .mat-list-item-content,.mat-list-base .mat-list-option .mat-list-item-content{display:flex;flex-direction:row;align-items:center;box-sizing:border-box;padding:0 16px;position:relative;height:inherit}.mat-list-base .mat-list-item .mat-list-item-content-reverse,.mat-list-base .mat-list-option .mat-list-item-content-reverse{display:flex;align-items:center;padding:0 16px;flex-direction:row-reverse;justify-content:space-around}.mat-list-base .mat-list-item .mat-list-item-ripple,.mat-list-base .mat-list-option .mat-list-item-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.mat-list-base .mat-list-item.mat-list-item-with-avatar,.mat-list-base .mat-list-option.mat-list-item-with-avatar{height:56px}.mat-list-base .mat-list-item.mat-2-line,.mat-list-base .mat-list-option.mat-2-line{height:72px}.mat-list-base .mat-list-item.mat-3-line,.mat-list-base .mat-list-option.mat-3-line{height:88px}.mat-list-base .mat-list-item.mat-multi-line,.mat-list-base .mat-list-option.mat-multi-line{height:auto}.mat-list-base .mat-list-item.mat-multi-line .mat-list-item-content,.mat-list-base .mat-list-option.mat-multi-line .mat-list-item-content{padding-top:16px;padding-bottom:16px}.mat-list-base .mat-list-item .mat-list-text,.mat-list-base .mat-list-option .mat-list-text{display:flex;flex-direction:column;flex:auto;box-sizing:border-box;overflow:hidden;padding:0}.mat-list-base .mat-list-item .mat-list-text>*,.mat-list-base .mat-list-option .mat-list-text>*{margin:0;padding:0;font-weight:normal;font-size:inherit}.mat-list-base .mat-list-item .mat-list-text:empty,.mat-list-base .mat-list-option .mat-list-text:empty{display:none}.mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:0;padding-left:16px}[dir=rtl] .mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:0}.mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-left:0;padding-right:16px}[dir=rtl] .mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-right:0;padding-left:16px}.mat-list-base .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:16px}.mat-list-base .mat-list-item .mat-list-avatar,.mat-list-base .mat-list-option .mat-list-avatar{flex-shrink:0;width:40px;height:40px;border-radius:50%;object-fit:cover}.mat-list-base .mat-list-item .mat-list-avatar~.mat-divider-inset,.mat-list-base .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:72px;width:calc(100% - 72px)}[dir=rtl] .mat-list-base .mat-list-item .mat-list-avatar~.mat-divider-inset,[dir=rtl] .mat-list-base .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:auto;margin-right:72px}.mat-list-base .mat-list-item .mat-list-icon,.mat-list-base .mat-list-option .mat-list-icon{flex-shrink:0;width:24px;height:24px;font-size:24px;box-sizing:content-box;border-radius:50%;padding:4px}.mat-list-base .mat-list-item .mat-list-icon~.mat-divider-inset,.mat-list-base .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:64px;width:calc(100% - 64px)}[dir=rtl] .mat-list-base .mat-list-item .mat-list-icon~.mat-divider-inset,[dir=rtl] .mat-list-base .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:auto;margin-right:64px}.mat-list-base .mat-list-item .mat-divider,.mat-list-base .mat-list-option .mat-divider{position:absolute;bottom:0;left:0;width:100%;margin:0}[dir=rtl] .mat-list-base .mat-list-item .mat-divider,[dir=rtl] .mat-list-base .mat-list-option .mat-divider{margin-left:auto;margin-right:0}.mat-list-base .mat-list-item .mat-divider.mat-divider-inset,.mat-list-base .mat-list-option .mat-divider.mat-divider-inset{position:absolute}.mat-list-base[dense]{padding-top:4px;display:block}.mat-list-base[dense] .mat-subheader{height:40px;line-height:8px}.mat-list-base[dense] .mat-subheader:first-child{margin-top:-4px}.mat-list-base[dense] .mat-list-item,.mat-list-base[dense] .mat-list-option{display:block;height:40px;-webkit-tap-highlight-color:transparent;width:100%;padding:0}.mat-list-base[dense] .mat-list-item .mat-list-item-content,.mat-list-base[dense] .mat-list-option .mat-list-item-content{display:flex;flex-direction:row;align-items:center;box-sizing:border-box;padding:0 16px;position:relative;height:inherit}.mat-list-base[dense] .mat-list-item .mat-list-item-content-reverse,.mat-list-base[dense] .mat-list-option .mat-list-item-content-reverse{display:flex;align-items:center;padding:0 16px;flex-direction:row-reverse;justify-content:space-around}.mat-list-base[dense] .mat-list-item .mat-list-item-ripple,.mat-list-base[dense] .mat-list-option .mat-list-item-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar{height:48px}.mat-list-base[dense] .mat-list-item.mat-2-line,.mat-list-base[dense] .mat-list-option.mat-2-line{height:60px}.mat-list-base[dense] .mat-list-item.mat-3-line,.mat-list-base[dense] .mat-list-option.mat-3-line{height:76px}.mat-list-base[dense] .mat-list-item.mat-multi-line,.mat-list-base[dense] .mat-list-option.mat-multi-line{height:auto}.mat-list-base[dense] .mat-list-item.mat-multi-line .mat-list-item-content,.mat-list-base[dense] .mat-list-option.mat-multi-line .mat-list-item-content{padding-top:16px;padding-bottom:16px}.mat-list-base[dense] .mat-list-item .mat-list-text,.mat-list-base[dense] .mat-list-option .mat-list-text{display:flex;flex-direction:column;flex:auto;box-sizing:border-box;overflow:hidden;padding:0}.mat-list-base[dense] .mat-list-item .mat-list-text>*,.mat-list-base[dense] .mat-list-option .mat-list-text>*{margin:0;padding:0;font-weight:normal;font-size:inherit}.mat-list-base[dense] .mat-list-item .mat-list-text:empty,.mat-list-base[dense] .mat-list-option .mat-list-text:empty{display:none}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:0;padding-left:16px}[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:0}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-left:0;padding-right:16px}[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-right:0;padding-left:16px}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:16px}.mat-list-base[dense] .mat-list-item .mat-list-avatar,.mat-list-base[dense] .mat-list-option .mat-list-avatar{flex-shrink:0;width:36px;height:36px;border-radius:50%;object-fit:cover}.mat-list-base[dense] .mat-list-item .mat-list-avatar~.mat-divider-inset,.mat-list-base[dense] .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:68px;width:calc(100% - 68px)}[dir=rtl] .mat-list-base[dense] .mat-list-item .mat-list-avatar~.mat-divider-inset,[dir=rtl] .mat-list-base[dense] .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:auto;margin-right:68px}.mat-list-base[dense] .mat-list-item .mat-list-icon,.mat-list-base[dense] .mat-list-option .mat-list-icon{flex-shrink:0;width:20px;height:20px;font-size:20px;box-sizing:content-box;border-radius:50%;padding:4px}.mat-list-base[dense] .mat-list-item .mat-list-icon~.mat-divider-inset,.mat-list-base[dense] .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:60px;width:calc(100% - 60px)}[dir=rtl] .mat-list-base[dense] .mat-list-item .mat-list-icon~.mat-divider-inset,[dir=rtl] .mat-list-base[dense] .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:auto;margin-right:60px}.mat-list-base[dense] .mat-list-item .mat-divider,.mat-list-base[dense] .mat-list-option .mat-divider{position:absolute;bottom:0;left:0;width:100%;margin:0}[dir=rtl] .mat-list-base[dense] .mat-list-item .mat-divider,[dir=rtl] .mat-list-base[dense] .mat-list-option .mat-divider{margin-left:auto;margin-right:0}.mat-list-base[dense] .mat-list-item .mat-divider.mat-divider-inset,.mat-list-base[dense] .mat-list-option .mat-divider.mat-divider-inset{position:absolute}.mat-nav-list a{text-decoration:none;color:inherit}.mat-nav-list .mat-list-item{cursor:pointer;outline:none}mat-action-list button{background:none;color:inherit;border:none;font:inherit;outline:inherit;-webkit-tap-highlight-color:transparent;text-align:left}[dir=rtl] mat-action-list button{text-align:right}mat-action-list button::-moz-focus-inner{border:0}mat-action-list .mat-list-item{cursor:pointer;outline:inherit}.mat-list-option:not(.mat-list-item-disabled){cursor:pointer;outline:none}.mat-list-item-disabled{pointer-events:none}.cdk-high-contrast-active .mat-list-item-disabled{opacity:.5}.cdk-high-contrast-active :host .mat-list-item-disabled{opacity:.5}.cdk-high-contrast-active .mat-selection-list:focus{outline-style:dotted}.cdk-high-contrast-active .mat-list-option:hover,.cdk-high-contrast-active .mat-list-option:focus,.cdk-high-contrast-active .mat-nav-list .mat-list-item:hover,.cdk-high-contrast-active .mat-nav-list .mat-list-item:focus,.cdk-high-contrast-active mat-action-list .mat-list-item:hover,.cdk-high-contrast-active mat-action-list .mat-list-item:focus{outline:dotted 1px;z-index:1}.cdk-high-contrast-active .mat-list-single-selected-option::after{content:\\\"\\\";position:absolute;top:50%;right:16px;transform:translateY(-50%);width:10px;height:0;border-bottom:solid 10px;border-radius:10px}.cdk-high-contrast-active [dir=rtl] .mat-list-single-selected-option::after{right:auto;left:16px}@media(hover: none){.mat-list-option:not(.mat-list-single-selected-option):not(.mat-list-item-disabled):hover,.mat-nav-list .mat-list-item:not(.mat-list-item-disabled):hover,.mat-action-list .mat-list-item:not(.mat-list-item-disabled):hover{background:none}}\\n\"], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatNavList, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-nav-list', exportAs: 'matNavList', host: {\n                        'role': 'navigation',\n                        'class': 'mat-nav-list mat-list-base',\n                    }, inputs: ['disableRipple', 'disabled'], encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, providers: [{ provide: MAT_NAV_LIST, useExisting: MatNavList }], template: \"<ng-content></ng-content>\\n\\n\", styles: [\".mat-subheader{display:flex;box-sizing:border-box;padding:16px;align-items:center}.mat-list-base .mat-subheader{margin:0}.mat-list-base{padding-top:8px;display:block;-webkit-tap-highlight-color:transparent}.mat-list-base .mat-subheader{height:48px;line-height:16px}.mat-list-base .mat-subheader:first-child{margin-top:-8px}.mat-list-base .mat-list-item,.mat-list-base .mat-list-option{display:block;height:48px;-webkit-tap-highlight-color:transparent;width:100%;padding:0}.mat-list-base .mat-list-item .mat-list-item-content,.mat-list-base .mat-list-option .mat-list-item-content{display:flex;flex-direction:row;align-items:center;box-sizing:border-box;padding:0 16px;position:relative;height:inherit}.mat-list-base .mat-list-item .mat-list-item-content-reverse,.mat-list-base .mat-list-option .mat-list-item-content-reverse{display:flex;align-items:center;padding:0 16px;flex-direction:row-reverse;justify-content:space-around}.mat-list-base .mat-list-item .mat-list-item-ripple,.mat-list-base .mat-list-option .mat-list-item-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.mat-list-base .mat-list-item.mat-list-item-with-avatar,.mat-list-base .mat-list-option.mat-list-item-with-avatar{height:56px}.mat-list-base .mat-list-item.mat-2-line,.mat-list-base .mat-list-option.mat-2-line{height:72px}.mat-list-base .mat-list-item.mat-3-line,.mat-list-base .mat-list-option.mat-3-line{height:88px}.mat-list-base .mat-list-item.mat-multi-line,.mat-list-base .mat-list-option.mat-multi-line{height:auto}.mat-list-base .mat-list-item.mat-multi-line .mat-list-item-content,.mat-list-base .mat-list-option.mat-multi-line .mat-list-item-content{padding-top:16px;padding-bottom:16px}.mat-list-base .mat-list-item .mat-list-text,.mat-list-base .mat-list-option .mat-list-text{display:flex;flex-direction:column;flex:auto;box-sizing:border-box;overflow:hidden;padding:0}.mat-list-base .mat-list-item .mat-list-text>*,.mat-list-base .mat-list-option .mat-list-text>*{margin:0;padding:0;font-weight:normal;font-size:inherit}.mat-list-base .mat-list-item .mat-list-text:empty,.mat-list-base .mat-list-option .mat-list-text:empty{display:none}.mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:0;padding-left:16px}[dir=rtl] .mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:0}.mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-left:0;padding-right:16px}[dir=rtl] .mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-right:0;padding-left:16px}.mat-list-base .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:16px}.mat-list-base .mat-list-item .mat-list-avatar,.mat-list-base .mat-list-option .mat-list-avatar{flex-shrink:0;width:40px;height:40px;border-radius:50%;object-fit:cover}.mat-list-base .mat-list-item .mat-list-avatar~.mat-divider-inset,.mat-list-base .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:72px;width:calc(100% - 72px)}[dir=rtl] .mat-list-base .mat-list-item .mat-list-avatar~.mat-divider-inset,[dir=rtl] .mat-list-base .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:auto;margin-right:72px}.mat-list-base .mat-list-item .mat-list-icon,.mat-list-base .mat-list-option .mat-list-icon{flex-shrink:0;width:24px;height:24px;font-size:24px;box-sizing:content-box;border-radius:50%;padding:4px}.mat-list-base .mat-list-item .mat-list-icon~.mat-divider-inset,.mat-list-base .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:64px;width:calc(100% - 64px)}[dir=rtl] .mat-list-base .mat-list-item .mat-list-icon~.mat-divider-inset,[dir=rtl] .mat-list-base .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:auto;margin-right:64px}.mat-list-base .mat-list-item .mat-divider,.mat-list-base .mat-list-option .mat-divider{position:absolute;bottom:0;left:0;width:100%;margin:0}[dir=rtl] .mat-list-base .mat-list-item .mat-divider,[dir=rtl] .mat-list-base .mat-list-option .mat-divider{margin-left:auto;margin-right:0}.mat-list-base .mat-list-item .mat-divider.mat-divider-inset,.mat-list-base .mat-list-option .mat-divider.mat-divider-inset{position:absolute}.mat-list-base[dense]{padding-top:4px;display:block}.mat-list-base[dense] .mat-subheader{height:40px;line-height:8px}.mat-list-base[dense] .mat-subheader:first-child{margin-top:-4px}.mat-list-base[dense] .mat-list-item,.mat-list-base[dense] .mat-list-option{display:block;height:40px;-webkit-tap-highlight-color:transparent;width:100%;padding:0}.mat-list-base[dense] .mat-list-item .mat-list-item-content,.mat-list-base[dense] .mat-list-option .mat-list-item-content{display:flex;flex-direction:row;align-items:center;box-sizing:border-box;padding:0 16px;position:relative;height:inherit}.mat-list-base[dense] .mat-list-item .mat-list-item-content-reverse,.mat-list-base[dense] .mat-list-option .mat-list-item-content-reverse{display:flex;align-items:center;padding:0 16px;flex-direction:row-reverse;justify-content:space-around}.mat-list-base[dense] .mat-list-item .mat-list-item-ripple,.mat-list-base[dense] .mat-list-option .mat-list-item-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar{height:48px}.mat-list-base[dense] .mat-list-item.mat-2-line,.mat-list-base[dense] .mat-list-option.mat-2-line{height:60px}.mat-list-base[dense] .mat-list-item.mat-3-line,.mat-list-base[dense] .mat-list-option.mat-3-line{height:76px}.mat-list-base[dense] .mat-list-item.mat-multi-line,.mat-list-base[dense] .mat-list-option.mat-multi-line{height:auto}.mat-list-base[dense] .mat-list-item.mat-multi-line .mat-list-item-content,.mat-list-base[dense] .mat-list-option.mat-multi-line .mat-list-item-content{padding-top:16px;padding-bottom:16px}.mat-list-base[dense] .mat-list-item .mat-list-text,.mat-list-base[dense] .mat-list-option .mat-list-text{display:flex;flex-direction:column;flex:auto;box-sizing:border-box;overflow:hidden;padding:0}.mat-list-base[dense] .mat-list-item .mat-list-text>*,.mat-list-base[dense] .mat-list-option .mat-list-text>*{margin:0;padding:0;font-weight:normal;font-size:inherit}.mat-list-base[dense] .mat-list-item .mat-list-text:empty,.mat-list-base[dense] .mat-list-option .mat-list-text:empty{display:none}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:0;padding-left:16px}[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:0}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-left:0;padding-right:16px}[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-right:0;padding-left:16px}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:16px}.mat-list-base[dense] .mat-list-item .mat-list-avatar,.mat-list-base[dense] .mat-list-option .mat-list-avatar{flex-shrink:0;width:36px;height:36px;border-radius:50%;object-fit:cover}.mat-list-base[dense] .mat-list-item .mat-list-avatar~.mat-divider-inset,.mat-list-base[dense] .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:68px;width:calc(100% - 68px)}[dir=rtl] .mat-list-base[dense] .mat-list-item .mat-list-avatar~.mat-divider-inset,[dir=rtl] .mat-list-base[dense] .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:auto;margin-right:68px}.mat-list-base[dense] .mat-list-item .mat-list-icon,.mat-list-base[dense] .mat-list-option .mat-list-icon{flex-shrink:0;width:20px;height:20px;font-size:20px;box-sizing:content-box;border-radius:50%;padding:4px}.mat-list-base[dense] .mat-list-item .mat-list-icon~.mat-divider-inset,.mat-list-base[dense] .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:60px;width:calc(100% - 60px)}[dir=rtl] .mat-list-base[dense] .mat-list-item .mat-list-icon~.mat-divider-inset,[dir=rtl] .mat-list-base[dense] .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:auto;margin-right:60px}.mat-list-base[dense] .mat-list-item .mat-divider,.mat-list-base[dense] .mat-list-option .mat-divider{position:absolute;bottom:0;left:0;width:100%;margin:0}[dir=rtl] .mat-list-base[dense] .mat-list-item .mat-divider,[dir=rtl] .mat-list-base[dense] .mat-list-option .mat-divider{margin-left:auto;margin-right:0}.mat-list-base[dense] .mat-list-item .mat-divider.mat-divider-inset,.mat-list-base[dense] .mat-list-option .mat-divider.mat-divider-inset{position:absolute}.mat-nav-list a{text-decoration:none;color:inherit}.mat-nav-list .mat-list-item{cursor:pointer;outline:none}mat-action-list button{background:none;color:inherit;border:none;font:inherit;outline:inherit;-webkit-tap-highlight-color:transparent;text-align:left}[dir=rtl] mat-action-list button{text-align:right}mat-action-list button::-moz-focus-inner{border:0}mat-action-list .mat-list-item{cursor:pointer;outline:inherit}.mat-list-option:not(.mat-list-item-disabled){cursor:pointer;outline:none}.mat-list-item-disabled{pointer-events:none}.cdk-high-contrast-active .mat-list-item-disabled{opacity:.5}.cdk-high-contrast-active :host .mat-list-item-disabled{opacity:.5}.cdk-high-contrast-active .mat-selection-list:focus{outline-style:dotted}.cdk-high-contrast-active .mat-list-option:hover,.cdk-high-contrast-active .mat-list-option:focus,.cdk-high-contrast-active .mat-nav-list .mat-list-item:hover,.cdk-high-contrast-active .mat-nav-list .mat-list-item:focus,.cdk-high-contrast-active mat-action-list .mat-list-item:hover,.cdk-high-contrast-active mat-action-list .mat-list-item:focus{outline:dotted 1px;z-index:1}.cdk-high-contrast-active .mat-list-single-selected-option::after{content:\\\"\\\";position:absolute;top:50%;right:16px;transform:translateY(-50%);width:10px;height:0;border-bottom:solid 10px;border-radius:10px}.cdk-high-contrast-active [dir=rtl] .mat-list-single-selected-option::after{right:auto;left:16px}@media(hover: none){.mat-list-option:not(.mat-list-single-selected-option):not(.mat-list-item-disabled):hover,.mat-nav-list .mat-list-item:not(.mat-list-item-disabled):hover,.mat-action-list .mat-list-item:not(.mat-list-item-disabled):hover{background:none}}\\n\"] }]\n        }] });\nclass MatList extends _MatListBase {\n    constructor(_elementRef) {\n        super();\n        this._elementRef = _elementRef;\n        /** Emits when the state of the list changes. */\n        this._stateChanges = new Subject();\n        if (this._getListType() === 'action-list') {\n            _elementRef.nativeElement.classList.add('mat-action-list');\n        }\n    }\n    _getListType() {\n        const nodeName = this._elementRef.nativeElement.nodeName.toLowerCase();\n        if (nodeName === 'mat-list') {\n            return 'list';\n        }\n        if (nodeName === 'mat-action-list') {\n            return 'action-list';\n        }\n        return null;\n    }\n    ngOnChanges() {\n        this._stateChanges.next();\n    }\n    ngOnDestroy() {\n        this._stateChanges.complete();\n    }\n}\nMatList.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatList, deps: [{ token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Component });\nMatList.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: MatList, selector: \"mat-list, mat-action-list\", inputs: { disableRipple: \"disableRipple\", disabled: \"disabled\" }, host: { classAttribute: \"mat-list mat-list-base\" }, providers: [{ provide: MAT_LIST, useExisting: MatList }], exportAs: [\"matList\"], usesInheritance: true, usesOnChanges: true, ngImport: i0, template: \"<ng-content></ng-content>\\n\\n\", styles: [\".mat-subheader{display:flex;box-sizing:border-box;padding:16px;align-items:center}.mat-list-base .mat-subheader{margin:0}.mat-list-base{padding-top:8px;display:block;-webkit-tap-highlight-color:transparent}.mat-list-base .mat-subheader{height:48px;line-height:16px}.mat-list-base .mat-subheader:first-child{margin-top:-8px}.mat-list-base .mat-list-item,.mat-list-base .mat-list-option{display:block;height:48px;-webkit-tap-highlight-color:transparent;width:100%;padding:0}.mat-list-base .mat-list-item .mat-list-item-content,.mat-list-base .mat-list-option .mat-list-item-content{display:flex;flex-direction:row;align-items:center;box-sizing:border-box;padding:0 16px;position:relative;height:inherit}.mat-list-base .mat-list-item .mat-list-item-content-reverse,.mat-list-base .mat-list-option .mat-list-item-content-reverse{display:flex;align-items:center;padding:0 16px;flex-direction:row-reverse;justify-content:space-around}.mat-list-base .mat-list-item .mat-list-item-ripple,.mat-list-base .mat-list-option .mat-list-item-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.mat-list-base .mat-list-item.mat-list-item-with-avatar,.mat-list-base .mat-list-option.mat-list-item-with-avatar{height:56px}.mat-list-base .mat-list-item.mat-2-line,.mat-list-base .mat-list-option.mat-2-line{height:72px}.mat-list-base .mat-list-item.mat-3-line,.mat-list-base .mat-list-option.mat-3-line{height:88px}.mat-list-base .mat-list-item.mat-multi-line,.mat-list-base .mat-list-option.mat-multi-line{height:auto}.mat-list-base .mat-list-item.mat-multi-line .mat-list-item-content,.mat-list-base .mat-list-option.mat-multi-line .mat-list-item-content{padding-top:16px;padding-bottom:16px}.mat-list-base .mat-list-item .mat-list-text,.mat-list-base .mat-list-option .mat-list-text{display:flex;flex-direction:column;flex:auto;box-sizing:border-box;overflow:hidden;padding:0}.mat-list-base .mat-list-item .mat-list-text>*,.mat-list-base .mat-list-option .mat-list-text>*{margin:0;padding:0;font-weight:normal;font-size:inherit}.mat-list-base .mat-list-item .mat-list-text:empty,.mat-list-base .mat-list-option .mat-list-text:empty{display:none}.mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:0;padding-left:16px}[dir=rtl] .mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:0}.mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-left:0;padding-right:16px}[dir=rtl] .mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-right:0;padding-left:16px}.mat-list-base .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:16px}.mat-list-base .mat-list-item .mat-list-avatar,.mat-list-base .mat-list-option .mat-list-avatar{flex-shrink:0;width:40px;height:40px;border-radius:50%;object-fit:cover}.mat-list-base .mat-list-item .mat-list-avatar~.mat-divider-inset,.mat-list-base .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:72px;width:calc(100% - 72px)}[dir=rtl] .mat-list-base .mat-list-item .mat-list-avatar~.mat-divider-inset,[dir=rtl] .mat-list-base .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:auto;margin-right:72px}.mat-list-base .mat-list-item .mat-list-icon,.mat-list-base .mat-list-option .mat-list-icon{flex-shrink:0;width:24px;height:24px;font-size:24px;box-sizing:content-box;border-radius:50%;padding:4px}.mat-list-base .mat-list-item .mat-list-icon~.mat-divider-inset,.mat-list-base .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:64px;width:calc(100% - 64px)}[dir=rtl] .mat-list-base .mat-list-item .mat-list-icon~.mat-divider-inset,[dir=rtl] .mat-list-base .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:auto;margin-right:64px}.mat-list-base .mat-list-item .mat-divider,.mat-list-base .mat-list-option .mat-divider{position:absolute;bottom:0;left:0;width:100%;margin:0}[dir=rtl] .mat-list-base .mat-list-item .mat-divider,[dir=rtl] .mat-list-base .mat-list-option .mat-divider{margin-left:auto;margin-right:0}.mat-list-base .mat-list-item .mat-divider.mat-divider-inset,.mat-list-base .mat-list-option .mat-divider.mat-divider-inset{position:absolute}.mat-list-base[dense]{padding-top:4px;display:block}.mat-list-base[dense] .mat-subheader{height:40px;line-height:8px}.mat-list-base[dense] .mat-subheader:first-child{margin-top:-4px}.mat-list-base[dense] .mat-list-item,.mat-list-base[dense] .mat-list-option{display:block;height:40px;-webkit-tap-highlight-color:transparent;width:100%;padding:0}.mat-list-base[dense] .mat-list-item .mat-list-item-content,.mat-list-base[dense] .mat-list-option .mat-list-item-content{display:flex;flex-direction:row;align-items:center;box-sizing:border-box;padding:0 16px;position:relative;height:inherit}.mat-list-base[dense] .mat-list-item .mat-list-item-content-reverse,.mat-list-base[dense] .mat-list-option .mat-list-item-content-reverse{display:flex;align-items:center;padding:0 16px;flex-direction:row-reverse;justify-content:space-around}.mat-list-base[dense] .mat-list-item .mat-list-item-ripple,.mat-list-base[dense] .mat-list-option .mat-list-item-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar{height:48px}.mat-list-base[dense] .mat-list-item.mat-2-line,.mat-list-base[dense] .mat-list-option.mat-2-line{height:60px}.mat-list-base[dense] .mat-list-item.mat-3-line,.mat-list-base[dense] .mat-list-option.mat-3-line{height:76px}.mat-list-base[dense] .mat-list-item.mat-multi-line,.mat-list-base[dense] .mat-list-option.mat-multi-line{height:auto}.mat-list-base[dense] .mat-list-item.mat-multi-line .mat-list-item-content,.mat-list-base[dense] .mat-list-option.mat-multi-line .mat-list-item-content{padding-top:16px;padding-bottom:16px}.mat-list-base[dense] .mat-list-item .mat-list-text,.mat-list-base[dense] .mat-list-option .mat-list-text{display:flex;flex-direction:column;flex:auto;box-sizing:border-box;overflow:hidden;padding:0}.mat-list-base[dense] .mat-list-item .mat-list-text>*,.mat-list-base[dense] .mat-list-option .mat-list-text>*{margin:0;padding:0;font-weight:normal;font-size:inherit}.mat-list-base[dense] .mat-list-item .mat-list-text:empty,.mat-list-base[dense] .mat-list-option .mat-list-text:empty{display:none}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:0;padding-left:16px}[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:0}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-left:0;padding-right:16px}[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-right:0;padding-left:16px}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:16px}.mat-list-base[dense] .mat-list-item .mat-list-avatar,.mat-list-base[dense] .mat-list-option .mat-list-avatar{flex-shrink:0;width:36px;height:36px;border-radius:50%;object-fit:cover}.mat-list-base[dense] .mat-list-item .mat-list-avatar~.mat-divider-inset,.mat-list-base[dense] .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:68px;width:calc(100% - 68px)}[dir=rtl] .mat-list-base[dense] .mat-list-item .mat-list-avatar~.mat-divider-inset,[dir=rtl] .mat-list-base[dense] .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:auto;margin-right:68px}.mat-list-base[dense] .mat-list-item .mat-list-icon,.mat-list-base[dense] .mat-list-option .mat-list-icon{flex-shrink:0;width:20px;height:20px;font-size:20px;box-sizing:content-box;border-radius:50%;padding:4px}.mat-list-base[dense] .mat-list-item .mat-list-icon~.mat-divider-inset,.mat-list-base[dense] .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:60px;width:calc(100% - 60px)}[dir=rtl] .mat-list-base[dense] .mat-list-item .mat-list-icon~.mat-divider-inset,[dir=rtl] .mat-list-base[dense] .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:auto;margin-right:60px}.mat-list-base[dense] .mat-list-item .mat-divider,.mat-list-base[dense] .mat-list-option .mat-divider{position:absolute;bottom:0;left:0;width:100%;margin:0}[dir=rtl] .mat-list-base[dense] .mat-list-item .mat-divider,[dir=rtl] .mat-list-base[dense] .mat-list-option .mat-divider{margin-left:auto;margin-right:0}.mat-list-base[dense] .mat-list-item .mat-divider.mat-divider-inset,.mat-list-base[dense] .mat-list-option .mat-divider.mat-divider-inset{position:absolute}.mat-nav-list a{text-decoration:none;color:inherit}.mat-nav-list .mat-list-item{cursor:pointer;outline:none}mat-action-list button{background:none;color:inherit;border:none;font:inherit;outline:inherit;-webkit-tap-highlight-color:transparent;text-align:left}[dir=rtl] mat-action-list button{text-align:right}mat-action-list button::-moz-focus-inner{border:0}mat-action-list .mat-list-item{cursor:pointer;outline:inherit}.mat-list-option:not(.mat-list-item-disabled){cursor:pointer;outline:none}.mat-list-item-disabled{pointer-events:none}.cdk-high-contrast-active .mat-list-item-disabled{opacity:.5}.cdk-high-contrast-active :host .mat-list-item-disabled{opacity:.5}.cdk-high-contrast-active .mat-selection-list:focus{outline-style:dotted}.cdk-high-contrast-active .mat-list-option:hover,.cdk-high-contrast-active .mat-list-option:focus,.cdk-high-contrast-active .mat-nav-list .mat-list-item:hover,.cdk-high-contrast-active .mat-nav-list .mat-list-item:focus,.cdk-high-contrast-active mat-action-list .mat-list-item:hover,.cdk-high-contrast-active mat-action-list .mat-list-item:focus{outline:dotted 1px;z-index:1}.cdk-high-contrast-active .mat-list-single-selected-option::after{content:\\\"\\\";position:absolute;top:50%;right:16px;transform:translateY(-50%);width:10px;height:0;border-bottom:solid 10px;border-radius:10px}.cdk-high-contrast-active [dir=rtl] .mat-list-single-selected-option::after{right:auto;left:16px}@media(hover: none){.mat-list-option:not(.mat-list-single-selected-option):not(.mat-list-item-disabled):hover,.mat-nav-list .mat-list-item:not(.mat-list-item-disabled):hover,.mat-action-list .mat-list-item:not(.mat-list-item-disabled):hover{background:none}}\\n\"], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatList, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-list, mat-action-list', exportAs: 'matList', host: {\n                        'class': 'mat-list mat-list-base',\n                    }, inputs: ['disableRipple', 'disabled'], encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, providers: [{ provide: MAT_LIST, useExisting: MatList }], template: \"<ng-content></ng-content>\\n\\n\", styles: [\".mat-subheader{display:flex;box-sizing:border-box;padding:16px;align-items:center}.mat-list-base .mat-subheader{margin:0}.mat-list-base{padding-top:8px;display:block;-webkit-tap-highlight-color:transparent}.mat-list-base .mat-subheader{height:48px;line-height:16px}.mat-list-base .mat-subheader:first-child{margin-top:-8px}.mat-list-base .mat-list-item,.mat-list-base .mat-list-option{display:block;height:48px;-webkit-tap-highlight-color:transparent;width:100%;padding:0}.mat-list-base .mat-list-item .mat-list-item-content,.mat-list-base .mat-list-option .mat-list-item-content{display:flex;flex-direction:row;align-items:center;box-sizing:border-box;padding:0 16px;position:relative;height:inherit}.mat-list-base .mat-list-item .mat-list-item-content-reverse,.mat-list-base .mat-list-option .mat-list-item-content-reverse{display:flex;align-items:center;padding:0 16px;flex-direction:row-reverse;justify-content:space-around}.mat-list-base .mat-list-item .mat-list-item-ripple,.mat-list-base .mat-list-option .mat-list-item-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.mat-list-base .mat-list-item.mat-list-item-with-avatar,.mat-list-base .mat-list-option.mat-list-item-with-avatar{height:56px}.mat-list-base .mat-list-item.mat-2-line,.mat-list-base .mat-list-option.mat-2-line{height:72px}.mat-list-base .mat-list-item.mat-3-line,.mat-list-base .mat-list-option.mat-3-line{height:88px}.mat-list-base .mat-list-item.mat-multi-line,.mat-list-base .mat-list-option.mat-multi-line{height:auto}.mat-list-base .mat-list-item.mat-multi-line .mat-list-item-content,.mat-list-base .mat-list-option.mat-multi-line .mat-list-item-content{padding-top:16px;padding-bottom:16px}.mat-list-base .mat-list-item .mat-list-text,.mat-list-base .mat-list-option .mat-list-text{display:flex;flex-direction:column;flex:auto;box-sizing:border-box;overflow:hidden;padding:0}.mat-list-base .mat-list-item .mat-list-text>*,.mat-list-base .mat-list-option .mat-list-text>*{margin:0;padding:0;font-weight:normal;font-size:inherit}.mat-list-base .mat-list-item .mat-list-text:empty,.mat-list-base .mat-list-option .mat-list-text:empty{display:none}.mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:0;padding-left:16px}[dir=rtl] .mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:0}.mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-left:0;padding-right:16px}[dir=rtl] .mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-right:0;padding-left:16px}.mat-list-base .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:16px}.mat-list-base .mat-list-item .mat-list-avatar,.mat-list-base .mat-list-option .mat-list-avatar{flex-shrink:0;width:40px;height:40px;border-radius:50%;object-fit:cover}.mat-list-base .mat-list-item .mat-list-avatar~.mat-divider-inset,.mat-list-base .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:72px;width:calc(100% - 72px)}[dir=rtl] .mat-list-base .mat-list-item .mat-list-avatar~.mat-divider-inset,[dir=rtl] .mat-list-base .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:auto;margin-right:72px}.mat-list-base .mat-list-item .mat-list-icon,.mat-list-base .mat-list-option .mat-list-icon{flex-shrink:0;width:24px;height:24px;font-size:24px;box-sizing:content-box;border-radius:50%;padding:4px}.mat-list-base .mat-list-item .mat-list-icon~.mat-divider-inset,.mat-list-base .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:64px;width:calc(100% - 64px)}[dir=rtl] .mat-list-base .mat-list-item .mat-list-icon~.mat-divider-inset,[dir=rtl] .mat-list-base .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:auto;margin-right:64px}.mat-list-base .mat-list-item .mat-divider,.mat-list-base .mat-list-option .mat-divider{position:absolute;bottom:0;left:0;width:100%;margin:0}[dir=rtl] .mat-list-base .mat-list-item .mat-divider,[dir=rtl] .mat-list-base .mat-list-option .mat-divider{margin-left:auto;margin-right:0}.mat-list-base .mat-list-item .mat-divider.mat-divider-inset,.mat-list-base .mat-list-option .mat-divider.mat-divider-inset{position:absolute}.mat-list-base[dense]{padding-top:4px;display:block}.mat-list-base[dense] .mat-subheader{height:40px;line-height:8px}.mat-list-base[dense] .mat-subheader:first-child{margin-top:-4px}.mat-list-base[dense] .mat-list-item,.mat-list-base[dense] .mat-list-option{display:block;height:40px;-webkit-tap-highlight-color:transparent;width:100%;padding:0}.mat-list-base[dense] .mat-list-item .mat-list-item-content,.mat-list-base[dense] .mat-list-option .mat-list-item-content{display:flex;flex-direction:row;align-items:center;box-sizing:border-box;padding:0 16px;position:relative;height:inherit}.mat-list-base[dense] .mat-list-item .mat-list-item-content-reverse,.mat-list-base[dense] .mat-list-option .mat-list-item-content-reverse{display:flex;align-items:center;padding:0 16px;flex-direction:row-reverse;justify-content:space-around}.mat-list-base[dense] .mat-list-item .mat-list-item-ripple,.mat-list-base[dense] .mat-list-option .mat-list-item-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar{height:48px}.mat-list-base[dense] .mat-list-item.mat-2-line,.mat-list-base[dense] .mat-list-option.mat-2-line{height:60px}.mat-list-base[dense] .mat-list-item.mat-3-line,.mat-list-base[dense] .mat-list-option.mat-3-line{height:76px}.mat-list-base[dense] .mat-list-item.mat-multi-line,.mat-list-base[dense] .mat-list-option.mat-multi-line{height:auto}.mat-list-base[dense] .mat-list-item.mat-multi-line .mat-list-item-content,.mat-list-base[dense] .mat-list-option.mat-multi-line .mat-list-item-content{padding-top:16px;padding-bottom:16px}.mat-list-base[dense] .mat-list-item .mat-list-text,.mat-list-base[dense] .mat-list-option .mat-list-text{display:flex;flex-direction:column;flex:auto;box-sizing:border-box;overflow:hidden;padding:0}.mat-list-base[dense] .mat-list-item .mat-list-text>*,.mat-list-base[dense] .mat-list-option .mat-list-text>*{margin:0;padding:0;font-weight:normal;font-size:inherit}.mat-list-base[dense] .mat-list-item .mat-list-text:empty,.mat-list-base[dense] .mat-list-option .mat-list-text:empty{display:none}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:0;padding-left:16px}[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:0}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-left:0;padding-right:16px}[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-right:0;padding-left:16px}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:16px}.mat-list-base[dense] .mat-list-item .mat-list-avatar,.mat-list-base[dense] .mat-list-option .mat-list-avatar{flex-shrink:0;width:36px;height:36px;border-radius:50%;object-fit:cover}.mat-list-base[dense] .mat-list-item .mat-list-avatar~.mat-divider-inset,.mat-list-base[dense] .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:68px;width:calc(100% - 68px)}[dir=rtl] .mat-list-base[dense] .mat-list-item .mat-list-avatar~.mat-divider-inset,[dir=rtl] .mat-list-base[dense] .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:auto;margin-right:68px}.mat-list-base[dense] .mat-list-item .mat-list-icon,.mat-list-base[dense] .mat-list-option .mat-list-icon{flex-shrink:0;width:20px;height:20px;font-size:20px;box-sizing:content-box;border-radius:50%;padding:4px}.mat-list-base[dense] .mat-list-item .mat-list-icon~.mat-divider-inset,.mat-list-base[dense] .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:60px;width:calc(100% - 60px)}[dir=rtl] .mat-list-base[dense] .mat-list-item .mat-list-icon~.mat-divider-inset,[dir=rtl] .mat-list-base[dense] .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:auto;margin-right:60px}.mat-list-base[dense] .mat-list-item .mat-divider,.mat-list-base[dense] .mat-list-option .mat-divider{position:absolute;bottom:0;left:0;width:100%;margin:0}[dir=rtl] .mat-list-base[dense] .mat-list-item .mat-divider,[dir=rtl] .mat-list-base[dense] .mat-list-option .mat-divider{margin-left:auto;margin-right:0}.mat-list-base[dense] .mat-list-item .mat-divider.mat-divider-inset,.mat-list-base[dense] .mat-list-option .mat-divider.mat-divider-inset{position:absolute}.mat-nav-list a{text-decoration:none;color:inherit}.mat-nav-list .mat-list-item{cursor:pointer;outline:none}mat-action-list button{background:none;color:inherit;border:none;font:inherit;outline:inherit;-webkit-tap-highlight-color:transparent;text-align:left}[dir=rtl] mat-action-list button{text-align:right}mat-action-list button::-moz-focus-inner{border:0}mat-action-list .mat-list-item{cursor:pointer;outline:inherit}.mat-list-option:not(.mat-list-item-disabled){cursor:pointer;outline:none}.mat-list-item-disabled{pointer-events:none}.cdk-high-contrast-active .mat-list-item-disabled{opacity:.5}.cdk-high-contrast-active :host .mat-list-item-disabled{opacity:.5}.cdk-high-contrast-active .mat-selection-list:focus{outline-style:dotted}.cdk-high-contrast-active .mat-list-option:hover,.cdk-high-contrast-active .mat-list-option:focus,.cdk-high-contrast-active .mat-nav-list .mat-list-item:hover,.cdk-high-contrast-active .mat-nav-list .mat-list-item:focus,.cdk-high-contrast-active mat-action-list .mat-list-item:hover,.cdk-high-contrast-active mat-action-list .mat-list-item:focus{outline:dotted 1px;z-index:1}.cdk-high-contrast-active .mat-list-single-selected-option::after{content:\\\"\\\";position:absolute;top:50%;right:16px;transform:translateY(-50%);width:10px;height:0;border-bottom:solid 10px;border-radius:10px}.cdk-high-contrast-active [dir=rtl] .mat-list-single-selected-option::after{right:auto;left:16px}@media(hover: none){.mat-list-option:not(.mat-list-single-selected-option):not(.mat-list-item-disabled):hover,.mat-nav-list .mat-list-item:not(.mat-list-item-disabled):hover,.mat-action-list .mat-list-item:not(.mat-list-item-disabled):hover{background:none}}\\n\"] }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }]; } });\n/**\n * Directive whose purpose is to add the mat- CSS styling to this selector.\n * @docs-private\n */\nclass MatListAvatarCssMatStyler {\n}\nMatListAvatarCssMatStyler.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatListAvatarCssMatStyler, deps: [], target: i0.ɵɵFactoryTarget.Directive });\nMatListAvatarCssMatStyler.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.1.0\", type: MatListAvatarCssMatStyler, selector: \"[mat-list-avatar], [matListAvatar]\", host: { classAttribute: \"mat-list-avatar\" }, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatListAvatarCssMatStyler, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[mat-list-avatar], [matListAvatar]',\n                    host: { 'class': 'mat-list-avatar' },\n                }]\n        }] });\n/**\n * Directive whose purpose is to add the mat- CSS styling to this selector.\n * @docs-private\n */\nclass MatListIconCssMatStyler {\n}\nMatListIconCssMatStyler.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatListIconCssMatStyler, deps: [], target: i0.ɵɵFactoryTarget.Directive });\nMatListIconCssMatStyler.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.1.0\", type: MatListIconCssMatStyler, selector: \"[mat-list-icon], [matListIcon]\", host: { classAttribute: \"mat-list-icon\" }, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatListIconCssMatStyler, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[mat-list-icon], [matListIcon]',\n                    host: { 'class': 'mat-list-icon' },\n                }]\n        }] });\n/**\n * Directive whose purpose is to add the mat- CSS styling to this selector.\n * @docs-private\n */\nclass MatListSubheaderCssMatStyler {\n}\nMatListSubheaderCssMatStyler.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatListSubheaderCssMatStyler, deps: [], target: i0.ɵɵFactoryTarget.Directive });\nMatListSubheaderCssMatStyler.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.1.0\", type: MatListSubheaderCssMatStyler, selector: \"[mat-subheader], [matSubheader]\", host: { classAttribute: \"mat-subheader\" }, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatListSubheaderCssMatStyler, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[mat-subheader], [matSubheader]',\n                    host: { 'class': 'mat-subheader' },\n                }]\n        }] });\n/** An item within a Material Design list. */\nclass MatListItem extends _MatListItemMixinBase {\n    constructor(_element, _changeDetectorRef, navList, list) {\n        super();\n        this._element = _element;\n        this._isInteractiveList = false;\n        this._destroyed = new Subject();\n        this._disabled = false;\n        this._isInteractiveList = !!(navList || (list && list._getListType() === 'action-list'));\n        this._list = navList || list;\n        // If no type attribute is specified for <button>, set it to \"button\".\n        // If a type attribute is already specified, do nothing.\n        const element = this._getHostElement();\n        if (element.nodeName.toLowerCase() === 'button' && !element.hasAttribute('type')) {\n            element.setAttribute('type', 'button');\n        }\n        if (this._list) {\n            // React to changes in the state of the parent list since\n            // some of the item's properties depend on it (e.g. `disableRipple`).\n            this._list._stateChanges.pipe(takeUntil(this._destroyed)).subscribe(() => {\n                _changeDetectorRef.markForCheck();\n            });\n        }\n    }\n    /** Whether the option is disabled. */\n    get disabled() {\n        return this._disabled || !!(this._list && this._list.disabled);\n    }\n    set disabled(value) {\n        this._disabled = coerceBooleanProperty(value);\n    }\n    ngAfterContentInit() {\n        setLines(this._lines, this._element);\n    }\n    ngOnDestroy() {\n        this._destroyed.next();\n        this._destroyed.complete();\n    }\n    /** Whether this list item should show a ripple effect when clicked. */\n    _isRippleDisabled() {\n        return (!this._isInteractiveList || this.disableRipple || !!(this._list && this._list.disableRipple));\n    }\n    /** Retrieves the DOM element of the component host. */\n    _getHostElement() {\n        return this._element.nativeElement;\n    }\n}\nMatListItem.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatListItem, deps: [{ token: i0.ElementRef }, { token: i0.ChangeDetectorRef }, { token: MAT_NAV_LIST, optional: true }, { token: MAT_LIST, optional: true }], target: i0.ɵɵFactoryTarget.Component });\nMatListItem.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: MatListItem, selector: \"mat-list-item, a[mat-list-item], button[mat-list-item]\", inputs: { disableRipple: \"disableRipple\", disabled: \"disabled\" }, host: { properties: { \"class.mat-list-item-disabled\": \"disabled\", \"class.mat-list-item-avatar\": \"_avatar || _icon\", \"class.mat-list-item-with-avatar\": \"_avatar || _icon\" }, classAttribute: \"mat-list-item mat-focus-indicator\" }, queries: [{ propertyName: \"_avatar\", first: true, predicate: MatListAvatarCssMatStyler, descendants: true }, { propertyName: \"_icon\", first: true, predicate: MatListIconCssMatStyler, descendants: true }, { propertyName: \"_lines\", predicate: MatLine, descendants: true }], exportAs: [\"matListItem\"], usesInheritance: true, ngImport: i0, template: \"<div class=\\\"mat-list-item-content\\\">\\n  <div class=\\\"mat-list-item-ripple\\\" mat-ripple\\n       [matRippleTrigger]=\\\"_getHostElement()\\\"\\n       [matRippleDisabled]=\\\"_isRippleDisabled()\\\">\\n  </div>\\n\\n  <ng-content select=\\\"[mat-list-avatar], [mat-list-icon], [matListAvatar], [matListIcon]\\\">\\n  </ng-content>\\n\\n  <div class=\\\"mat-list-text\\\"><ng-content select=\\\"[mat-line], [matLine]\\\"></ng-content></div>\\n\\n  <ng-content></ng-content>\\n</div>\\n\", directives: [{ type: i1.MatRipple, selector: \"[mat-ripple], [matRipple]\", inputs: [\"matRippleColor\", \"matRippleUnbounded\", \"matRippleCentered\", \"matRippleRadius\", \"matRippleAnimation\", \"matRippleDisabled\", \"matRippleTrigger\"], exportAs: [\"matRipple\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatListItem, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-list-item, a[mat-list-item], button[mat-list-item]', exportAs: 'matListItem', host: {\n                        'class': 'mat-list-item mat-focus-indicator',\n                        '[class.mat-list-item-disabled]': 'disabled',\n                        // @breaking-change 8.0.0 Remove `mat-list-item-avatar` in favor of `mat-list-item-with-avatar`.\n                        '[class.mat-list-item-avatar]': '_avatar || _icon',\n                        '[class.mat-list-item-with-avatar]': '_avatar || _icon',\n                    }, inputs: ['disableRipple'], encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, template: \"<div class=\\\"mat-list-item-content\\\">\\n  <div class=\\\"mat-list-item-ripple\\\" mat-ripple\\n       [matRippleTrigger]=\\\"_getHostElement()\\\"\\n       [matRippleDisabled]=\\\"_isRippleDisabled()\\\">\\n  </div>\\n\\n  <ng-content select=\\\"[mat-list-avatar], [mat-list-icon], [matListAvatar], [matListIcon]\\\">\\n  </ng-content>\\n\\n  <div class=\\\"mat-list-text\\\"><ng-content select=\\\"[mat-line], [matLine]\\\"></ng-content></div>\\n\\n  <ng-content></ng-content>\\n</div>\\n\" }]\n        }], ctorParameters: function () {\n        return [{ type: i0.ElementRef }, { type: i0.ChangeDetectorRef }, { type: MatNavList, decorators: [{\n                        type: Optional\n                    }, {\n                        type: Inject,\n                        args: [MAT_NAV_LIST]\n                    }] }, { type: MatList, decorators: [{\n                        type: Optional\n                    }, {\n                        type: Inject,\n                        args: [MAT_LIST]\n                    }] }];\n    }, propDecorators: { _lines: [{\n                type: ContentChildren,\n                args: [MatLine, { descendants: true }]\n            }], _avatar: [{\n                type: ContentChild,\n                args: [MatListAvatarCssMatStyler]\n            }], _icon: [{\n                type: ContentChild,\n                args: [MatListIconCssMatStyler]\n            }], disabled: [{\n                type: Input\n            }] } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst _MatSelectionListBase = mixinDisableRipple(class {\n});\nconst _MatListOptionBase = mixinDisableRipple(class {\n});\n/** @docs-private */\nconst MAT_SELECTION_LIST_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => MatSelectionList),\n    multi: true,\n};\n/** Change event that is being fired whenever the selected state of an option changes. */\nclass MatSelectionListChange {\n    constructor(\n    /** Reference to the selection list that emitted the event. */\n    source, \n    /**\n     * Reference to the option that has been changed.\n     * @deprecated Use `options` instead, because some events may change more than one option.\n     * @breaking-change 12.0.0\n     */\n    option, \n    /** Reference to the options that have been changed. */\n    options) {\n        this.source = source;\n        this.option = option;\n        this.options = options;\n    }\n}\n/**\n * Component for list-options of selection-list. Each list-option can automatically\n * generate a checkbox and can put current item into the selectionModel of selection-list\n * if the current item is selected.\n */\nclass MatListOption extends _MatListOptionBase {\n    constructor(_element, _changeDetector, \n    /** @docs-private */\n    selectionList) {\n        super();\n        this._element = _element;\n        this._changeDetector = _changeDetector;\n        this.selectionList = selectionList;\n        this._selected = false;\n        this._disabled = false;\n        this._hasFocus = false;\n        /**\n         * Emits when the selected state of the option has changed.\n         * Use to facilitate two-data binding to the `selected` property.\n         * @docs-private\n         */\n        this.selectedChange = new EventEmitter();\n        /** Whether the label should appear before or after the checkbox. Defaults to 'after' */\n        this.checkboxPosition = 'after';\n        /**\n         * This is set to true after the first OnChanges cycle so we don't clear the value of `selected`\n         * in the first cycle.\n         */\n        this._inputsInitialized = false;\n    }\n    /** Theme color of the list option. This sets the color of the checkbox. */\n    get color() {\n        return this._color || this.selectionList.color;\n    }\n    set color(newValue) {\n        this._color = newValue;\n    }\n    /** Value of the option */\n    get value() {\n        return this._value;\n    }\n    set value(newValue) {\n        if (this.selected &&\n            !this.selectionList.compareWith(newValue, this.value) &&\n            this._inputsInitialized) {\n            this.selected = false;\n        }\n        this._value = newValue;\n    }\n    /** Whether the option is disabled. */\n    get disabled() {\n        return this._disabled || (this.selectionList && this.selectionList.disabled);\n    }\n    set disabled(value) {\n        const newValue = coerceBooleanProperty(value);\n        if (newValue !== this._disabled) {\n            this._disabled = newValue;\n            this._changeDetector.markForCheck();\n        }\n    }\n    /** Whether the option is selected. */\n    get selected() {\n        return this.selectionList.selectedOptions.isSelected(this);\n    }\n    set selected(value) {\n        const isSelected = coerceBooleanProperty(value);\n        if (isSelected !== this._selected) {\n            this._setSelected(isSelected);\n            if (isSelected || this.selectionList.multiple) {\n                this.selectionList._reportValueChange();\n            }\n        }\n    }\n    ngOnInit() {\n        const list = this.selectionList;\n        if (list._value && list._value.some(value => list.compareWith(value, this._value))) {\n            this._setSelected(true);\n        }\n        const wasSelected = this._selected;\n        // List options that are selected at initialization can't be reported properly to the form\n        // control. This is because it takes some time until the selection-list knows about all\n        // available options. Also it can happen that the ControlValueAccessor has an initial value\n        // that should be used instead. Deferring the value change report to the next tick ensures\n        // that the form control value is not being overwritten.\n        Promise.resolve().then(() => {\n            if (this._selected || wasSelected) {\n                this.selected = true;\n                this._changeDetector.markForCheck();\n            }\n        });\n        this._inputsInitialized = true;\n    }\n    ngAfterContentInit() {\n        setLines(this._lines, this._element);\n    }\n    ngOnDestroy() {\n        if (this.selected) {\n            // We have to delay this until the next tick in order\n            // to avoid changed after checked errors.\n            Promise.resolve().then(() => {\n                this.selected = false;\n            });\n        }\n        const hadFocus = this._hasFocus;\n        const newActiveItem = this.selectionList._removeOptionFromList(this);\n        // Only move focus if this option was focused at the time it was destroyed.\n        if (hadFocus && newActiveItem) {\n            newActiveItem.focus();\n        }\n    }\n    /** Toggles the selection state of the option. */\n    toggle() {\n        this.selected = !this.selected;\n    }\n    /** Allows for programmatic focusing of the option. */\n    focus() {\n        this._element.nativeElement.focus();\n    }\n    /**\n     * Returns the list item's text label. Implemented as a part of the FocusKeyManager.\n     * @docs-private\n     */\n    getLabel() {\n        return this._text ? this._text.nativeElement.textContent || '' : '';\n    }\n    /** Whether this list item should show a ripple effect when clicked. */\n    _isRippleDisabled() {\n        return this.disabled || this.disableRipple || this.selectionList.disableRipple;\n    }\n    _handleClick() {\n        if (!this.disabled && (this.selectionList.multiple || !this.selected)) {\n            this.toggle();\n            // Emit a change event if the selected state of the option changed through user interaction.\n            this.selectionList._emitChangeEvent([this]);\n        }\n    }\n    _handleFocus() {\n        this.selectionList._setFocusedOption(this);\n        this._hasFocus = true;\n    }\n    _handleBlur() {\n        this.selectionList._onTouched();\n        this._hasFocus = false;\n    }\n    /** Retrieves the DOM element of the component host. */\n    _getHostElement() {\n        return this._element.nativeElement;\n    }\n    /** Sets the selected state of the option. Returns whether the value has changed. */\n    _setSelected(selected) {\n        if (selected === this._selected) {\n            return false;\n        }\n        this._selected = selected;\n        if (selected) {\n            this.selectionList.selectedOptions.select(this);\n        }\n        else {\n            this.selectionList.selectedOptions.deselect(this);\n        }\n        this.selectedChange.emit(selected);\n        this._changeDetector.markForCheck();\n        return true;\n    }\n    /**\n     * Notifies Angular that the option needs to be checked in the next change detection run. Mainly\n     * used to trigger an update of the list option if the disabled state of the selection list\n     * changed.\n     */\n    _markForCheck() {\n        this._changeDetector.markForCheck();\n    }\n}\nMatListOption.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatListOption, deps: [{ token: i0.ElementRef }, { token: i0.ChangeDetectorRef }, { token: forwardRef(() => MatSelectionList) }], target: i0.ɵɵFactoryTarget.Component });\nMatListOption.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: MatListOption, selector: \"mat-list-option\", inputs: { disableRipple: \"disableRipple\", checkboxPosition: \"checkboxPosition\", color: \"color\", value: \"value\", disabled: \"disabled\", selected: \"selected\" }, outputs: { selectedChange: \"selectedChange\" }, host: { attributes: { \"role\": \"option\" }, listeners: { \"focus\": \"_handleFocus()\", \"blur\": \"_handleBlur()\", \"click\": \"_handleClick()\" }, properties: { \"class.mat-list-item-disabled\": \"disabled\", \"class.mat-list-item-with-avatar\": \"_avatar || _icon\", \"class.mat-primary\": \"color === \\\"primary\\\"\", \"class.mat-accent\": \"color !== \\\"primary\\\" && color !== \\\"warn\\\"\", \"class.mat-warn\": \"color === \\\"warn\\\"\", \"class.mat-list-single-selected-option\": \"selected && !selectionList.multiple\", \"attr.aria-selected\": \"selected\", \"attr.aria-disabled\": \"disabled\", \"attr.tabindex\": \"-1\" }, classAttribute: \"mat-list-item mat-list-option mat-focus-indicator\" }, queries: [{ propertyName: \"_avatar\", first: true, predicate: MatListAvatarCssMatStyler, descendants: true }, { propertyName: \"_icon\", first: true, predicate: MatListIconCssMatStyler, descendants: true }, { propertyName: \"_lines\", predicate: MatLine, descendants: true }], viewQueries: [{ propertyName: \"_text\", first: true, predicate: [\"text\"], descendants: true }], exportAs: [\"matListOption\"], usesInheritance: true, ngImport: i0, template: \"<div class=\\\"mat-list-item-content\\\"\\n  [class.mat-list-item-content-reverse]=\\\"checkboxPosition == 'after'\\\">\\n\\n  <div mat-ripple\\n    class=\\\"mat-list-item-ripple\\\"\\n    [matRippleTrigger]=\\\"_getHostElement()\\\"\\n    [matRippleDisabled]=\\\"_isRippleDisabled()\\\"></div>\\n\\n  <mat-pseudo-checkbox\\n    *ngIf=\\\"selectionList.multiple\\\"\\n    [state]=\\\"selected ? 'checked' : 'unchecked'\\\"\\n    [disabled]=\\\"disabled\\\"></mat-pseudo-checkbox>\\n\\n  <div class=\\\"mat-list-text\\\" #text><ng-content></ng-content></div>\\n\\n  <ng-content select=\\\"[mat-list-avatar], [mat-list-icon], [matListAvatar], [matListIcon]\\\">\\n  </ng-content>\\n\\n</div>\\n\", components: [{ type: i1.MatPseudoCheckbox, selector: \"mat-pseudo-checkbox\", inputs: [\"state\", \"disabled\"] }], directives: [{ type: i1.MatRipple, selector: \"[mat-ripple], [matRipple]\", inputs: [\"matRippleColor\", \"matRippleUnbounded\", \"matRippleCentered\", \"matRippleRadius\", \"matRippleAnimation\", \"matRippleDisabled\", \"matRippleTrigger\"], exportAs: [\"matRipple\"] }, { type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatListOption, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-list-option', exportAs: 'matListOption', inputs: ['disableRipple'], host: {\n                        'role': 'option',\n                        'class': 'mat-list-item mat-list-option mat-focus-indicator',\n                        '(focus)': '_handleFocus()',\n                        '(blur)': '_handleBlur()',\n                        '(click)': '_handleClick()',\n                        '[class.mat-list-item-disabled]': 'disabled',\n                        '[class.mat-list-item-with-avatar]': '_avatar || _icon',\n                        // Manually set the \"primary\" or \"warn\" class if the color has been explicitly\n                        // set to \"primary\" or \"warn\". The pseudo checkbox picks up these classes for\n                        // its theme.\n                        '[class.mat-primary]': 'color === \"primary\"',\n                        // Even though accent is the default, we need to set this class anyway, because the  list might\n                        // be placed inside a parent that has one of the other colors with a higher specificity.\n                        '[class.mat-accent]': 'color !== \"primary\" && color !== \"warn\"',\n                        '[class.mat-warn]': 'color === \"warn\"',\n                        '[class.mat-list-single-selected-option]': 'selected && !selectionList.multiple',\n                        '[attr.aria-selected]': 'selected',\n                        '[attr.aria-disabled]': 'disabled',\n                        '[attr.tabindex]': '-1',\n                    }, encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, template: \"<div class=\\\"mat-list-item-content\\\"\\n  [class.mat-list-item-content-reverse]=\\\"checkboxPosition == 'after'\\\">\\n\\n  <div mat-ripple\\n    class=\\\"mat-list-item-ripple\\\"\\n    [matRippleTrigger]=\\\"_getHostElement()\\\"\\n    [matRippleDisabled]=\\\"_isRippleDisabled()\\\"></div>\\n\\n  <mat-pseudo-checkbox\\n    *ngIf=\\\"selectionList.multiple\\\"\\n    [state]=\\\"selected ? 'checked' : 'unchecked'\\\"\\n    [disabled]=\\\"disabled\\\"></mat-pseudo-checkbox>\\n\\n  <div class=\\\"mat-list-text\\\" #text><ng-content></ng-content></div>\\n\\n  <ng-content select=\\\"[mat-list-avatar], [mat-list-icon], [matListAvatar], [matListIcon]\\\">\\n  </ng-content>\\n\\n</div>\\n\" }]\n        }], ctorParameters: function () {\n        return [{ type: i0.ElementRef }, { type: i0.ChangeDetectorRef }, { type: MatSelectionList, decorators: [{\n                        type: Inject,\n                        args: [forwardRef(() => MatSelectionList)]\n                    }] }];\n    }, propDecorators: { _avatar: [{\n                type: ContentChild,\n                args: [MatListAvatarCssMatStyler]\n            }], _icon: [{\n                type: ContentChild,\n                args: [MatListIconCssMatStyler]\n            }], _lines: [{\n                type: ContentChildren,\n                args: [MatLine, { descendants: true }]\n            }], selectedChange: [{\n                type: Output\n            }], _text: [{\n                type: ViewChild,\n                args: ['text']\n            }], checkboxPosition: [{\n                type: Input\n            }], color: [{\n                type: Input\n            }], value: [{\n                type: Input\n            }], disabled: [{\n                type: Input\n            }], selected: [{\n                type: Input\n            }] } });\n/**\n * Material Design list component where each item is a selectable option. Behaves as a listbox.\n */\nclass MatSelectionList extends _MatSelectionListBase {\n    constructor(_element, \n    // @breaking-change 11.0.0 Remove `tabIndex` parameter.\n    tabIndex, _changeDetector, \n    // @breaking-change 11.0.0 `_focusMonitor` parameter to become required.\n    _focusMonitor) {\n        super();\n        this._element = _element;\n        this._changeDetector = _changeDetector;\n        this._focusMonitor = _focusMonitor;\n        this._multiple = true;\n        this._contentInitialized = false;\n        /** Emits a change event whenever the selected state of an option changes. */\n        this.selectionChange = new EventEmitter();\n        /**\n         * Tabindex of the selection list.\n         * @breaking-change 11.0.0 Remove `tabIndex` input.\n         */\n        this.tabIndex = 0;\n        /** Theme color of the selection list. This sets the checkbox color for all list options. */\n        this.color = 'accent';\n        /**\n         * Function used for comparing an option against the selected value when determining which\n         * options should appear as selected. The first argument is the value of an options. The second\n         * one is a value from the selected value. A boolean must be returned.\n         */\n        this.compareWith = (a1, a2) => a1 === a2;\n        this._disabled = false;\n        /** The currently selected options. */\n        this.selectedOptions = new SelectionModel(this._multiple);\n        /** The tabindex of the selection list. */\n        this._tabIndex = -1;\n        /** View to model callback that should be called whenever the selected options change. */\n        this._onChange = (_) => { };\n        /** Emits when the list has been destroyed. */\n        this._destroyed = new Subject();\n        /** View to model callback that should be called if the list or its options lost focus. */\n        this._onTouched = () => { };\n    }\n    /** Whether the selection list is disabled. */\n    get disabled() {\n        return this._disabled;\n    }\n    set disabled(value) {\n        this._disabled = coerceBooleanProperty(value);\n        // The `MatSelectionList` and `MatListOption` are using the `OnPush` change detection\n        // strategy. Therefore the options will not check for any changes if the `MatSelectionList`\n        // changed its state. Since we know that a change to `disabled` property of the list affects\n        // the state of the options, we manually mark each option for check.\n        this._markOptionsForCheck();\n    }\n    /** Whether selection is limited to one or multiple items (default multiple). */\n    get multiple() {\n        return this._multiple;\n    }\n    set multiple(value) {\n        const newValue = coerceBooleanProperty(value);\n        if (newValue !== this._multiple) {\n            if (this._contentInitialized && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n                throw new Error('Cannot change `multiple` mode of mat-selection-list after initialization.');\n            }\n            this._multiple = newValue;\n            this.selectedOptions = new SelectionModel(this._multiple, this.selectedOptions.selected);\n        }\n    }\n    ngAfterContentInit() {\n        var _a;\n        this._contentInitialized = true;\n        this._keyManager = new FocusKeyManager(this.options)\n            .withWrap()\n            .withTypeAhead()\n            .withHomeAndEnd()\n            // Allow disabled items to be focusable. For accessibility reasons, there must be a way for\n            // screenreader users, that allows reading the different options of the list.\n            .skipPredicate(() => false)\n            .withAllowedModifierKeys(['shiftKey']);\n        if (this._value) {\n            this._setOptionsFromValues(this._value);\n        }\n        // If the user attempts to tab out of the selection list, allow focus to escape.\n        this._keyManager.tabOut.pipe(takeUntil(this._destroyed)).subscribe(() => {\n            this._allowFocusEscape();\n        });\n        // When the number of options change, update the tabindex of the selection list.\n        this.options.changes.pipe(startWith(null), takeUntil(this._destroyed)).subscribe(() => {\n            this._updateTabIndex();\n        });\n        // Sync external changes to the model back to the options.\n        this.selectedOptions.changed.pipe(takeUntil(this._destroyed)).subscribe(event => {\n            if (event.added) {\n                for (let item of event.added) {\n                    item.selected = true;\n                }\n            }\n            if (event.removed) {\n                for (let item of event.removed) {\n                    item.selected = false;\n                }\n            }\n        });\n        // @breaking-change 11.0.0 Remove null assertion once _focusMonitor is required.\n        (_a = this._focusMonitor) === null || _a === void 0 ? void 0 : _a.monitor(this._element).pipe(takeUntil(this._destroyed)).subscribe(origin => {\n            var _a;\n            if (origin === 'keyboard' || origin === 'program') {\n                let toFocus = 0;\n                for (let i = 0; i < this.options.length; i++) {\n                    if ((_a = this.options.get(i)) === null || _a === void 0 ? void 0 : _a.selected) {\n                        toFocus = i;\n                        break;\n                    }\n                }\n                this._keyManager.setActiveItem(toFocus);\n            }\n        });\n    }\n    ngOnChanges(changes) {\n        const disableRippleChanges = changes['disableRipple'];\n        const colorChanges = changes['color'];\n        if ((disableRippleChanges && !disableRippleChanges.firstChange) ||\n            (colorChanges && !colorChanges.firstChange)) {\n            this._markOptionsForCheck();\n        }\n    }\n    ngOnDestroy() {\n        var _a;\n        // @breaking-change 11.0.0 Remove null assertion once _focusMonitor is required.\n        (_a = this._focusMonitor) === null || _a === void 0 ? void 0 : _a.stopMonitoring(this._element);\n        this._destroyed.next();\n        this._destroyed.complete();\n        this._isDestroyed = true;\n    }\n    /** Focuses the selection list. */\n    focus(options) {\n        this._element.nativeElement.focus(options);\n    }\n    /** Selects all of the options. Returns the options that changed as a result. */\n    selectAll() {\n        return this._setAllOptionsSelected(true);\n    }\n    /** Deselects all of the options. Returns the options that changed as a result. */\n    deselectAll() {\n        return this._setAllOptionsSelected(false);\n    }\n    /** Sets the focused option of the selection-list. */\n    _setFocusedOption(option) {\n        this._keyManager.updateActiveItem(option);\n    }\n    /**\n     * Removes an option from the selection list and updates the active item.\n     * @returns Currently-active item.\n     */\n    _removeOptionFromList(option) {\n        const optionIndex = this._getOptionIndex(option);\n        if (optionIndex > -1 && this._keyManager.activeItemIndex === optionIndex) {\n            // Check whether the option is the last item\n            if (optionIndex > 0) {\n                this._keyManager.updateActiveItem(optionIndex - 1);\n            }\n            else if (optionIndex === 0 && this.options.length > 1) {\n                this._keyManager.updateActiveItem(Math.min(optionIndex + 1, this.options.length - 1));\n            }\n        }\n        return this._keyManager.activeItem;\n    }\n    /** Passes relevant key presses to our key manager. */\n    _keydown(event) {\n        const keyCode = event.keyCode;\n        const manager = this._keyManager;\n        const previousFocusIndex = manager.activeItemIndex;\n        const hasModifier = hasModifierKey(event);\n        switch (keyCode) {\n            case SPACE:\n            case ENTER:\n                if (!hasModifier && !manager.isTyping()) {\n                    this._toggleFocusedOption();\n                    // Always prevent space from scrolling the page since the list has focus\n                    event.preventDefault();\n                }\n                break;\n            default:\n                // The \"A\" key gets special treatment, because it's used for the \"select all\" functionality.\n                if (keyCode === A &&\n                    this.multiple &&\n                    hasModifierKey(event, 'ctrlKey') &&\n                    !manager.isTyping()) {\n                    const shouldSelect = this.options.some(option => !option.disabled && !option.selected);\n                    this._setAllOptionsSelected(shouldSelect, true, true);\n                    event.preventDefault();\n                }\n                else {\n                    manager.onKeydown(event);\n                }\n        }\n        if (this.multiple &&\n            (keyCode === UP_ARROW || keyCode === DOWN_ARROW) &&\n            event.shiftKey &&\n            manager.activeItemIndex !== previousFocusIndex) {\n            this._toggleFocusedOption();\n        }\n    }\n    /** Reports a value change to the ControlValueAccessor */\n    _reportValueChange() {\n        // Stop reporting value changes after the list has been destroyed. This avoids\n        // cases where the list might wrongly reset its value once it is removed, but\n        // the form control is still live.\n        if (this.options && !this._isDestroyed) {\n            const value = this._getSelectedOptionValues();\n            this._onChange(value);\n            this._value = value;\n        }\n    }\n    /** Emits a change event if the selected state of an option changed. */\n    _emitChangeEvent(options) {\n        this.selectionChange.emit(new MatSelectionListChange(this, options[0], options));\n    }\n    /** Implemented as part of ControlValueAccessor. */\n    writeValue(values) {\n        this._value = values;\n        if (this.options) {\n            this._setOptionsFromValues(values || []);\n        }\n    }\n    /** Implemented as a part of ControlValueAccessor. */\n    setDisabledState(isDisabled) {\n        this.disabled = isDisabled;\n    }\n    /** Implemented as part of ControlValueAccessor. */\n    registerOnChange(fn) {\n        this._onChange = fn;\n    }\n    /** Implemented as part of ControlValueAccessor. */\n    registerOnTouched(fn) {\n        this._onTouched = fn;\n    }\n    /** Sets the selected options based on the specified values. */\n    _setOptionsFromValues(values) {\n        this.options.forEach(option => option._setSelected(false));\n        values.forEach(value => {\n            const correspondingOption = this.options.find(option => {\n                // Skip options that are already in the model. This allows us to handle cases\n                // where the same primitive value is selected multiple times.\n                return option.selected ? false : this.compareWith(option.value, value);\n            });\n            if (correspondingOption) {\n                correspondingOption._setSelected(true);\n            }\n        });\n    }\n    /** Returns the values of the selected options. */\n    _getSelectedOptionValues() {\n        return this.options.filter(option => option.selected).map(option => option.value);\n    }\n    /** Toggles the state of the currently focused option if enabled. */\n    _toggleFocusedOption() {\n        let focusedIndex = this._keyManager.activeItemIndex;\n        if (focusedIndex != null && this._isValidIndex(focusedIndex)) {\n            let focusedOption = this.options.toArray()[focusedIndex];\n            if (focusedOption && !focusedOption.disabled && (this._multiple || !focusedOption.selected)) {\n                focusedOption.toggle();\n                // Emit a change event because the focused option changed its state through user\n                // interaction.\n                this._emitChangeEvent([focusedOption]);\n            }\n        }\n    }\n    /**\n     * Sets the selected state on all of the options\n     * and emits an event if anything changed.\n     */\n    _setAllOptionsSelected(isSelected, skipDisabled, isUserInput) {\n        // Keep track of whether anything changed, because we only want to\n        // emit the changed event when something actually changed.\n        const changedOptions = [];\n        this.options.forEach(option => {\n            if ((!skipDisabled || !option.disabled) && option._setSelected(isSelected)) {\n                changedOptions.push(option);\n            }\n        });\n        if (changedOptions.length) {\n            this._reportValueChange();\n            if (isUserInput) {\n                this._emitChangeEvent(changedOptions);\n            }\n        }\n        return changedOptions;\n    }\n    /**\n     * Utility to ensure all indexes are valid.\n     * @param index The index to be checked.\n     * @returns True if the index is valid for our list of options.\n     */\n    _isValidIndex(index) {\n        return index >= 0 && index < this.options.length;\n    }\n    /** Returns the index of the specified list option. */\n    _getOptionIndex(option) {\n        return this.options.toArray().indexOf(option);\n    }\n    /** Marks all the options to be checked in the next change detection run. */\n    _markOptionsForCheck() {\n        if (this.options) {\n            this.options.forEach(option => option._markForCheck());\n        }\n    }\n    /**\n     * Removes the tabindex from the selection list and resets it back afterwards, allowing the user\n     * to tab out of it. This prevents the list from capturing focus and redirecting it back within\n     * the list, creating a focus trap if it user tries to tab away.\n     */\n    _allowFocusEscape() {\n        this._tabIndex = -1;\n        setTimeout(() => {\n            this._tabIndex = 0;\n            this._changeDetector.markForCheck();\n        });\n    }\n    /** Updates the tabindex based upon if the selection list is empty. */\n    _updateTabIndex() {\n        this._tabIndex = this.options.length === 0 ? -1 : 0;\n    }\n}\nMatSelectionList.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatSelectionList, deps: [{ token: i0.ElementRef }, { token: 'tabindex', attribute: true }, { token: i0.ChangeDetectorRef }, { token: i3.FocusMonitor }], target: i0.ɵɵFactoryTarget.Component });\nMatSelectionList.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: MatSelectionList, selector: \"mat-selection-list\", inputs: { disableRipple: \"disableRipple\", tabIndex: \"tabIndex\", color: \"color\", compareWith: \"compareWith\", disabled: \"disabled\", multiple: \"multiple\" }, outputs: { selectionChange: \"selectionChange\" }, host: { attributes: { \"role\": \"listbox\" }, listeners: { \"keydown\": \"_keydown($event)\" }, properties: { \"attr.aria-multiselectable\": \"multiple\", \"attr.aria-disabled\": \"disabled.toString()\", \"attr.tabindex\": \"_tabIndex\" }, classAttribute: \"mat-selection-list mat-list-base\" }, providers: [MAT_SELECTION_LIST_VALUE_ACCESSOR], queries: [{ propertyName: \"options\", predicate: MatListOption, descendants: true }], exportAs: [\"matSelectionList\"], usesInheritance: true, usesOnChanges: true, ngImport: i0, template: '<ng-content></ng-content>', isInline: true, styles: [\".mat-subheader{display:flex;box-sizing:border-box;padding:16px;align-items:center}.mat-list-base .mat-subheader{margin:0}.mat-list-base{padding-top:8px;display:block;-webkit-tap-highlight-color:transparent}.mat-list-base .mat-subheader{height:48px;line-height:16px}.mat-list-base .mat-subheader:first-child{margin-top:-8px}.mat-list-base .mat-list-item,.mat-list-base .mat-list-option{display:block;height:48px;-webkit-tap-highlight-color:transparent;width:100%;padding:0}.mat-list-base .mat-list-item .mat-list-item-content,.mat-list-base .mat-list-option .mat-list-item-content{display:flex;flex-direction:row;align-items:center;box-sizing:border-box;padding:0 16px;position:relative;height:inherit}.mat-list-base .mat-list-item .mat-list-item-content-reverse,.mat-list-base .mat-list-option .mat-list-item-content-reverse{display:flex;align-items:center;padding:0 16px;flex-direction:row-reverse;justify-content:space-around}.mat-list-base .mat-list-item .mat-list-item-ripple,.mat-list-base .mat-list-option .mat-list-item-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.mat-list-base .mat-list-item.mat-list-item-with-avatar,.mat-list-base .mat-list-option.mat-list-item-with-avatar{height:56px}.mat-list-base .mat-list-item.mat-2-line,.mat-list-base .mat-list-option.mat-2-line{height:72px}.mat-list-base .mat-list-item.mat-3-line,.mat-list-base .mat-list-option.mat-3-line{height:88px}.mat-list-base .mat-list-item.mat-multi-line,.mat-list-base .mat-list-option.mat-multi-line{height:auto}.mat-list-base .mat-list-item.mat-multi-line .mat-list-item-content,.mat-list-base .mat-list-option.mat-multi-line .mat-list-item-content{padding-top:16px;padding-bottom:16px}.mat-list-base .mat-list-item .mat-list-text,.mat-list-base .mat-list-option .mat-list-text{display:flex;flex-direction:column;flex:auto;box-sizing:border-box;overflow:hidden;padding:0}.mat-list-base .mat-list-item .mat-list-text>*,.mat-list-base .mat-list-option .mat-list-text>*{margin:0;padding:0;font-weight:normal;font-size:inherit}.mat-list-base .mat-list-item .mat-list-text:empty,.mat-list-base .mat-list-option .mat-list-text:empty{display:none}.mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:0;padding-left:16px}[dir=rtl] .mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:0}.mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-left:0;padding-right:16px}[dir=rtl] .mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-right:0;padding-left:16px}.mat-list-base .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:16px}.mat-list-base .mat-list-item .mat-list-avatar,.mat-list-base .mat-list-option .mat-list-avatar{flex-shrink:0;width:40px;height:40px;border-radius:50%;object-fit:cover}.mat-list-base .mat-list-item .mat-list-avatar~.mat-divider-inset,.mat-list-base .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:72px;width:calc(100% - 72px)}[dir=rtl] .mat-list-base .mat-list-item .mat-list-avatar~.mat-divider-inset,[dir=rtl] .mat-list-base .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:auto;margin-right:72px}.mat-list-base .mat-list-item .mat-list-icon,.mat-list-base .mat-list-option .mat-list-icon{flex-shrink:0;width:24px;height:24px;font-size:24px;box-sizing:content-box;border-radius:50%;padding:4px}.mat-list-base .mat-list-item .mat-list-icon~.mat-divider-inset,.mat-list-base .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:64px;width:calc(100% - 64px)}[dir=rtl] .mat-list-base .mat-list-item .mat-list-icon~.mat-divider-inset,[dir=rtl] .mat-list-base .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:auto;margin-right:64px}.mat-list-base .mat-list-item .mat-divider,.mat-list-base .mat-list-option .mat-divider{position:absolute;bottom:0;left:0;width:100%;margin:0}[dir=rtl] .mat-list-base .mat-list-item .mat-divider,[dir=rtl] .mat-list-base .mat-list-option .mat-divider{margin-left:auto;margin-right:0}.mat-list-base .mat-list-item .mat-divider.mat-divider-inset,.mat-list-base .mat-list-option .mat-divider.mat-divider-inset{position:absolute}.mat-list-base[dense]{padding-top:4px;display:block}.mat-list-base[dense] .mat-subheader{height:40px;line-height:8px}.mat-list-base[dense] .mat-subheader:first-child{margin-top:-4px}.mat-list-base[dense] .mat-list-item,.mat-list-base[dense] .mat-list-option{display:block;height:40px;-webkit-tap-highlight-color:transparent;width:100%;padding:0}.mat-list-base[dense] .mat-list-item .mat-list-item-content,.mat-list-base[dense] .mat-list-option .mat-list-item-content{display:flex;flex-direction:row;align-items:center;box-sizing:border-box;padding:0 16px;position:relative;height:inherit}.mat-list-base[dense] .mat-list-item .mat-list-item-content-reverse,.mat-list-base[dense] .mat-list-option .mat-list-item-content-reverse{display:flex;align-items:center;padding:0 16px;flex-direction:row-reverse;justify-content:space-around}.mat-list-base[dense] .mat-list-item .mat-list-item-ripple,.mat-list-base[dense] .mat-list-option .mat-list-item-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar{height:48px}.mat-list-base[dense] .mat-list-item.mat-2-line,.mat-list-base[dense] .mat-list-option.mat-2-line{height:60px}.mat-list-base[dense] .mat-list-item.mat-3-line,.mat-list-base[dense] .mat-list-option.mat-3-line{height:76px}.mat-list-base[dense] .mat-list-item.mat-multi-line,.mat-list-base[dense] .mat-list-option.mat-multi-line{height:auto}.mat-list-base[dense] .mat-list-item.mat-multi-line .mat-list-item-content,.mat-list-base[dense] .mat-list-option.mat-multi-line .mat-list-item-content{padding-top:16px;padding-bottom:16px}.mat-list-base[dense] .mat-list-item .mat-list-text,.mat-list-base[dense] .mat-list-option .mat-list-text{display:flex;flex-direction:column;flex:auto;box-sizing:border-box;overflow:hidden;padding:0}.mat-list-base[dense] .mat-list-item .mat-list-text>*,.mat-list-base[dense] .mat-list-option .mat-list-text>*{margin:0;padding:0;font-weight:normal;font-size:inherit}.mat-list-base[dense] .mat-list-item .mat-list-text:empty,.mat-list-base[dense] .mat-list-option .mat-list-text:empty{display:none}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:0;padding-left:16px}[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:0}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-left:0;padding-right:16px}[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-right:0;padding-left:16px}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:16px}.mat-list-base[dense] .mat-list-item .mat-list-avatar,.mat-list-base[dense] .mat-list-option .mat-list-avatar{flex-shrink:0;width:36px;height:36px;border-radius:50%;object-fit:cover}.mat-list-base[dense] .mat-list-item .mat-list-avatar~.mat-divider-inset,.mat-list-base[dense] .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:68px;width:calc(100% - 68px)}[dir=rtl] .mat-list-base[dense] .mat-list-item .mat-list-avatar~.mat-divider-inset,[dir=rtl] .mat-list-base[dense] .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:auto;margin-right:68px}.mat-list-base[dense] .mat-list-item .mat-list-icon,.mat-list-base[dense] .mat-list-option .mat-list-icon{flex-shrink:0;width:20px;height:20px;font-size:20px;box-sizing:content-box;border-radius:50%;padding:4px}.mat-list-base[dense] .mat-list-item .mat-list-icon~.mat-divider-inset,.mat-list-base[dense] .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:60px;width:calc(100% - 60px)}[dir=rtl] .mat-list-base[dense] .mat-list-item .mat-list-icon~.mat-divider-inset,[dir=rtl] .mat-list-base[dense] .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:auto;margin-right:60px}.mat-list-base[dense] .mat-list-item .mat-divider,.mat-list-base[dense] .mat-list-option .mat-divider{position:absolute;bottom:0;left:0;width:100%;margin:0}[dir=rtl] .mat-list-base[dense] .mat-list-item .mat-divider,[dir=rtl] .mat-list-base[dense] .mat-list-option .mat-divider{margin-left:auto;margin-right:0}.mat-list-base[dense] .mat-list-item .mat-divider.mat-divider-inset,.mat-list-base[dense] .mat-list-option .mat-divider.mat-divider-inset{position:absolute}.mat-nav-list a{text-decoration:none;color:inherit}.mat-nav-list .mat-list-item{cursor:pointer;outline:none}mat-action-list button{background:none;color:inherit;border:none;font:inherit;outline:inherit;-webkit-tap-highlight-color:transparent;text-align:left}[dir=rtl] mat-action-list button{text-align:right}mat-action-list button::-moz-focus-inner{border:0}mat-action-list .mat-list-item{cursor:pointer;outline:inherit}.mat-list-option:not(.mat-list-item-disabled){cursor:pointer;outline:none}.mat-list-item-disabled{pointer-events:none}.cdk-high-contrast-active .mat-list-item-disabled{opacity:.5}.cdk-high-contrast-active :host .mat-list-item-disabled{opacity:.5}.cdk-high-contrast-active .mat-selection-list:focus{outline-style:dotted}.cdk-high-contrast-active .mat-list-option:hover,.cdk-high-contrast-active .mat-list-option:focus,.cdk-high-contrast-active .mat-nav-list .mat-list-item:hover,.cdk-high-contrast-active .mat-nav-list .mat-list-item:focus,.cdk-high-contrast-active mat-action-list .mat-list-item:hover,.cdk-high-contrast-active mat-action-list .mat-list-item:focus{outline:dotted 1px;z-index:1}.cdk-high-contrast-active .mat-list-single-selected-option::after{content:\\\"\\\";position:absolute;top:50%;right:16px;transform:translateY(-50%);width:10px;height:0;border-bottom:solid 10px;border-radius:10px}.cdk-high-contrast-active [dir=rtl] .mat-list-single-selected-option::after{right:auto;left:16px}@media(hover: none){.mat-list-option:not(.mat-list-single-selected-option):not(.mat-list-item-disabled):hover,.mat-nav-list .mat-list-item:not(.mat-list-item-disabled):hover,.mat-action-list .mat-list-item:not(.mat-list-item-disabled):hover{background:none}}\\n\"], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatSelectionList, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-selection-list', exportAs: 'matSelectionList', inputs: ['disableRipple'], host: {\n                        'role': 'listbox',\n                        'class': 'mat-selection-list mat-list-base',\n                        '(keydown)': '_keydown($event)',\n                        '[attr.aria-multiselectable]': 'multiple',\n                        '[attr.aria-disabled]': 'disabled.toString()',\n                        '[attr.tabindex]': '_tabIndex',\n                    }, template: '<ng-content></ng-content>', encapsulation: ViewEncapsulation.None, providers: [MAT_SELECTION_LIST_VALUE_ACCESSOR], changeDetection: ChangeDetectionStrategy.OnPush, styles: [\".mat-subheader{display:flex;box-sizing:border-box;padding:16px;align-items:center}.mat-list-base .mat-subheader{margin:0}.mat-list-base{padding-top:8px;display:block;-webkit-tap-highlight-color:transparent}.mat-list-base .mat-subheader{height:48px;line-height:16px}.mat-list-base .mat-subheader:first-child{margin-top:-8px}.mat-list-base .mat-list-item,.mat-list-base .mat-list-option{display:block;height:48px;-webkit-tap-highlight-color:transparent;width:100%;padding:0}.mat-list-base .mat-list-item .mat-list-item-content,.mat-list-base .mat-list-option .mat-list-item-content{display:flex;flex-direction:row;align-items:center;box-sizing:border-box;padding:0 16px;position:relative;height:inherit}.mat-list-base .mat-list-item .mat-list-item-content-reverse,.mat-list-base .mat-list-option .mat-list-item-content-reverse{display:flex;align-items:center;padding:0 16px;flex-direction:row-reverse;justify-content:space-around}.mat-list-base .mat-list-item .mat-list-item-ripple,.mat-list-base .mat-list-option .mat-list-item-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.mat-list-base .mat-list-item.mat-list-item-with-avatar,.mat-list-base .mat-list-option.mat-list-item-with-avatar{height:56px}.mat-list-base .mat-list-item.mat-2-line,.mat-list-base .mat-list-option.mat-2-line{height:72px}.mat-list-base .mat-list-item.mat-3-line,.mat-list-base .mat-list-option.mat-3-line{height:88px}.mat-list-base .mat-list-item.mat-multi-line,.mat-list-base .mat-list-option.mat-multi-line{height:auto}.mat-list-base .mat-list-item.mat-multi-line .mat-list-item-content,.mat-list-base .mat-list-option.mat-multi-line .mat-list-item-content{padding-top:16px;padding-bottom:16px}.mat-list-base .mat-list-item .mat-list-text,.mat-list-base .mat-list-option .mat-list-text{display:flex;flex-direction:column;flex:auto;box-sizing:border-box;overflow:hidden;padding:0}.mat-list-base .mat-list-item .mat-list-text>*,.mat-list-base .mat-list-option .mat-list-text>*{margin:0;padding:0;font-weight:normal;font-size:inherit}.mat-list-base .mat-list-item .mat-list-text:empty,.mat-list-base .mat-list-option .mat-list-text:empty{display:none}.mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:0;padding-left:16px}[dir=rtl] .mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:0}.mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-left:0;padding-right:16px}[dir=rtl] .mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-right:0;padding-left:16px}.mat-list-base .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:16px}.mat-list-base .mat-list-item .mat-list-avatar,.mat-list-base .mat-list-option .mat-list-avatar{flex-shrink:0;width:40px;height:40px;border-radius:50%;object-fit:cover}.mat-list-base .mat-list-item .mat-list-avatar~.mat-divider-inset,.mat-list-base .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:72px;width:calc(100% - 72px)}[dir=rtl] .mat-list-base .mat-list-item .mat-list-avatar~.mat-divider-inset,[dir=rtl] .mat-list-base .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:auto;margin-right:72px}.mat-list-base .mat-list-item .mat-list-icon,.mat-list-base .mat-list-option .mat-list-icon{flex-shrink:0;width:24px;height:24px;font-size:24px;box-sizing:content-box;border-radius:50%;padding:4px}.mat-list-base .mat-list-item .mat-list-icon~.mat-divider-inset,.mat-list-base .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:64px;width:calc(100% - 64px)}[dir=rtl] .mat-list-base .mat-list-item .mat-list-icon~.mat-divider-inset,[dir=rtl] .mat-list-base .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:auto;margin-right:64px}.mat-list-base .mat-list-item .mat-divider,.mat-list-base .mat-list-option .mat-divider{position:absolute;bottom:0;left:0;width:100%;margin:0}[dir=rtl] .mat-list-base .mat-list-item .mat-divider,[dir=rtl] .mat-list-base .mat-list-option .mat-divider{margin-left:auto;margin-right:0}.mat-list-base .mat-list-item .mat-divider.mat-divider-inset,.mat-list-base .mat-list-option .mat-divider.mat-divider-inset{position:absolute}.mat-list-base[dense]{padding-top:4px;display:block}.mat-list-base[dense] .mat-subheader{height:40px;line-height:8px}.mat-list-base[dense] .mat-subheader:first-child{margin-top:-4px}.mat-list-base[dense] .mat-list-item,.mat-list-base[dense] .mat-list-option{display:block;height:40px;-webkit-tap-highlight-color:transparent;width:100%;padding:0}.mat-list-base[dense] .mat-list-item .mat-list-item-content,.mat-list-base[dense] .mat-list-option .mat-list-item-content{display:flex;flex-direction:row;align-items:center;box-sizing:border-box;padding:0 16px;position:relative;height:inherit}.mat-list-base[dense] .mat-list-item .mat-list-item-content-reverse,.mat-list-base[dense] .mat-list-option .mat-list-item-content-reverse{display:flex;align-items:center;padding:0 16px;flex-direction:row-reverse;justify-content:space-around}.mat-list-base[dense] .mat-list-item .mat-list-item-ripple,.mat-list-base[dense] .mat-list-option .mat-list-item-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar{height:48px}.mat-list-base[dense] .mat-list-item.mat-2-line,.mat-list-base[dense] .mat-list-option.mat-2-line{height:60px}.mat-list-base[dense] .mat-list-item.mat-3-line,.mat-list-base[dense] .mat-list-option.mat-3-line{height:76px}.mat-list-base[dense] .mat-list-item.mat-multi-line,.mat-list-base[dense] .mat-list-option.mat-multi-line{height:auto}.mat-list-base[dense] .mat-list-item.mat-multi-line .mat-list-item-content,.mat-list-base[dense] .mat-list-option.mat-multi-line .mat-list-item-content{padding-top:16px;padding-bottom:16px}.mat-list-base[dense] .mat-list-item .mat-list-text,.mat-list-base[dense] .mat-list-option .mat-list-text{display:flex;flex-direction:column;flex:auto;box-sizing:border-box;overflow:hidden;padding:0}.mat-list-base[dense] .mat-list-item .mat-list-text>*,.mat-list-base[dense] .mat-list-option .mat-list-text>*{margin:0;padding:0;font-weight:normal;font-size:inherit}.mat-list-base[dense] .mat-list-item .mat-list-text:empty,.mat-list-base[dense] .mat-list-option .mat-list-text:empty{display:none}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:0;padding-left:16px}[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:0}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-left:0;padding-right:16px}[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-right:0;padding-left:16px}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:16px}.mat-list-base[dense] .mat-list-item .mat-list-avatar,.mat-list-base[dense] .mat-list-option .mat-list-avatar{flex-shrink:0;width:36px;height:36px;border-radius:50%;object-fit:cover}.mat-list-base[dense] .mat-list-item .mat-list-avatar~.mat-divider-inset,.mat-list-base[dense] .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:68px;width:calc(100% - 68px)}[dir=rtl] .mat-list-base[dense] .mat-list-item .mat-list-avatar~.mat-divider-inset,[dir=rtl] .mat-list-base[dense] .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:auto;margin-right:68px}.mat-list-base[dense] .mat-list-item .mat-list-icon,.mat-list-base[dense] .mat-list-option .mat-list-icon{flex-shrink:0;width:20px;height:20px;font-size:20px;box-sizing:content-box;border-radius:50%;padding:4px}.mat-list-base[dense] .mat-list-item .mat-list-icon~.mat-divider-inset,.mat-list-base[dense] .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:60px;width:calc(100% - 60px)}[dir=rtl] .mat-list-base[dense] .mat-list-item .mat-list-icon~.mat-divider-inset,[dir=rtl] .mat-list-base[dense] .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:auto;margin-right:60px}.mat-list-base[dense] .mat-list-item .mat-divider,.mat-list-base[dense] .mat-list-option .mat-divider{position:absolute;bottom:0;left:0;width:100%;margin:0}[dir=rtl] .mat-list-base[dense] .mat-list-item .mat-divider,[dir=rtl] .mat-list-base[dense] .mat-list-option .mat-divider{margin-left:auto;margin-right:0}.mat-list-base[dense] .mat-list-item .mat-divider.mat-divider-inset,.mat-list-base[dense] .mat-list-option .mat-divider.mat-divider-inset{position:absolute}.mat-nav-list a{text-decoration:none;color:inherit}.mat-nav-list .mat-list-item{cursor:pointer;outline:none}mat-action-list button{background:none;color:inherit;border:none;font:inherit;outline:inherit;-webkit-tap-highlight-color:transparent;text-align:left}[dir=rtl] mat-action-list button{text-align:right}mat-action-list button::-moz-focus-inner{border:0}mat-action-list .mat-list-item{cursor:pointer;outline:inherit}.mat-list-option:not(.mat-list-item-disabled){cursor:pointer;outline:none}.mat-list-item-disabled{pointer-events:none}.cdk-high-contrast-active .mat-list-item-disabled{opacity:.5}.cdk-high-contrast-active :host .mat-list-item-disabled{opacity:.5}.cdk-high-contrast-active .mat-selection-list:focus{outline-style:dotted}.cdk-high-contrast-active .mat-list-option:hover,.cdk-high-contrast-active .mat-list-option:focus,.cdk-high-contrast-active .mat-nav-list .mat-list-item:hover,.cdk-high-contrast-active .mat-nav-list .mat-list-item:focus,.cdk-high-contrast-active mat-action-list .mat-list-item:hover,.cdk-high-contrast-active mat-action-list .mat-list-item:focus{outline:dotted 1px;z-index:1}.cdk-high-contrast-active .mat-list-single-selected-option::after{content:\\\"\\\";position:absolute;top:50%;right:16px;transform:translateY(-50%);width:10px;height:0;border-bottom:solid 10px;border-radius:10px}.cdk-high-contrast-active [dir=rtl] .mat-list-single-selected-option::after{right:auto;left:16px}@media(hover: none){.mat-list-option:not(.mat-list-single-selected-option):not(.mat-list-item-disabled):hover,.mat-nav-list .mat-list-item:not(.mat-list-item-disabled):hover,.mat-action-list .mat-list-item:not(.mat-list-item-disabled):hover{background:none}}\\n\"] }]\n        }], ctorParameters: function () {\n        return [{ type: i0.ElementRef }, { type: undefined, decorators: [{\n                        type: Attribute,\n                        args: ['tabindex']\n                    }] }, { type: i0.ChangeDetectorRef }, { type: i3.FocusMonitor }];\n    }, propDecorators: { options: [{\n                type: ContentChildren,\n                args: [MatListOption, { descendants: true }]\n            }], selectionChange: [{\n                type: Output\n            }], tabIndex: [{\n                type: Input\n            }], color: [{\n                type: Input\n            }], compareWith: [{\n                type: Input\n            }], disabled: [{\n                type: Input\n            }], multiple: [{\n                type: Input\n            }] } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass MatListModule {\n}\nMatListModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatListModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nMatListModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatListModule, declarations: [MatList,\n        MatNavList,\n        MatListItem,\n        MatListAvatarCssMatStyler,\n        MatListIconCssMatStyler,\n        MatListSubheaderCssMatStyler,\n        MatSelectionList,\n        MatListOption], imports: [MatLineModule, MatRippleModule, MatCommonModule, MatPseudoCheckboxModule, CommonModule], exports: [MatList,\n        MatNavList,\n        MatListItem,\n        MatListAvatarCssMatStyler,\n        MatLineModule,\n        MatCommonModule,\n        MatListIconCssMatStyler,\n        MatListSubheaderCssMatStyler,\n        MatPseudoCheckboxModule,\n        MatSelectionList,\n        MatListOption,\n        MatDividerModule] });\nMatListModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatListModule, imports: [[MatLineModule, MatRippleModule, MatCommonModule, MatPseudoCheckboxModule, CommonModule], MatLineModule,\n        MatCommonModule,\n        MatPseudoCheckboxModule,\n        MatDividerModule] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatListModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [MatLineModule, MatRippleModule, MatCommonModule, MatPseudoCheckboxModule, CommonModule],\n                    exports: [\n                        MatList,\n                        MatNavList,\n                        MatListItem,\n                        MatListAvatarCssMatStyler,\n                        MatLineModule,\n                        MatCommonModule,\n                        MatListIconCssMatStyler,\n                        MatListSubheaderCssMatStyler,\n                        MatPseudoCheckboxModule,\n                        MatSelectionList,\n                        MatListOption,\n                        MatDividerModule,\n                    ],\n                    declarations: [\n                        MatList,\n                        MatNavList,\n                        MatListItem,\n                        MatListAvatarCssMatStyler,\n                        MatListIconCssMatStyler,\n                        MatListSubheaderCssMatStyler,\n                        MatSelectionList,\n                        MatListOption,\n                    ],\n                }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_LIST, MAT_NAV_LIST, MAT_SELECTION_LIST_VALUE_ACCESSOR, MatList, MatListAvatarCssMatStyler, MatListIconCssMatStyler, MatListItem, MatListModule, MatListOption, MatListSubheaderCssMatStyler, MatNavList, MatSelectionList, MatSelectionListChange };\n","import * as i1 from '@angular/cdk/a11y';\nimport { FocusKeyManager, isFakeTouchstartFromScreenReader, isFakeMousedownFromScreenReader } from '@angular/cdk/a11y';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { UP_ARROW, DOWN_ARROW, RIGHT_ARROW, LEFT_ARROW, ESCAPE, hasModifierKey, ENTER, SPACE } from '@angular/cdk/keycodes';\nimport * as i0 from '@angular/core';\nimport { InjectionToken, Directive, Inject, Component, ChangeDetectionStrategy, ViewEncapsulation, Optional, Input, QueryList, EventEmitter, TemplateRef, ContentChildren, ViewChild, ContentChild, Output, Self, NgModule } from '@angular/core';\nimport { Subject, Subscription, merge, of, asapScheduler } from 'rxjs';\nimport { startWith, switchMap, take, filter, takeUntil, delay } from 'rxjs/operators';\nimport { trigger, state, style, transition, animate } from '@angular/animations';\nimport { TemplatePortal, DomPortalOutlet } from '@angular/cdk/portal';\nimport * as i3 from '@angular/common';\nimport { DOCUMENT, CommonModule } from '@angular/common';\nimport * as i2 from '@angular/material/core';\nimport { mixinDisableRipple, mixinDisabled, MatCommonModule, MatRippleModule } from '@angular/material/core';\nimport * as i1$1 from '@angular/cdk/overlay';\nimport { Overlay, OverlayConfig, OverlayModule } from '@angular/cdk/overlay';\nimport { normalizePassiveListenerOptions } from '@angular/cdk/platform';\nimport * as i3$1 from '@angular/cdk/bidi';\nimport { CdkScrollableModule } from '@angular/cdk/scrolling';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Animations used by the mat-menu component.\n * Animation duration and timing values are based on:\n * https://material.io/guidelines/components/menus.html#menus-usage\n * @docs-private\n */\nconst matMenuAnimations = {\n    /**\n     * This animation controls the menu panel's entry and exit from the page.\n     *\n     * When the menu panel is added to the DOM, it scales in and fades in its border.\n     *\n     * When the menu panel is removed from the DOM, it simply fades out after a brief\n     * delay to display the ripple.\n     */\n    transformMenu: trigger('transformMenu', [\n        state('void', style({\n            opacity: 0,\n            transform: 'scale(0.8)',\n        })),\n        transition('void => enter', animate('120ms cubic-bezier(0, 0, 0.2, 1)', style({\n            opacity: 1,\n            transform: 'scale(1)',\n        }))),\n        transition('* => void', animate('100ms 25ms linear', style({ opacity: 0 }))),\n    ]),\n    /**\n     * This animation fades in the background color and content of the menu panel\n     * after its containing element is scaled in.\n     */\n    fadeInItems: trigger('fadeInItems', [\n        // TODO(crisbeto): this is inside the `transformMenu`\n        // now. Remove next time we do breaking changes.\n        state('showing', style({ opacity: 1 })),\n        transition('void => *', [\n            style({ opacity: 0 }),\n            animate('400ms 100ms cubic-bezier(0.55, 0, 0.55, 0.2)'),\n        ]),\n    ]),\n};\n/**\n * @deprecated\n * @breaking-change 8.0.0\n * @docs-private\n */\nconst fadeInItems = matMenuAnimations.fadeInItems;\n/**\n * @deprecated\n * @breaking-change 8.0.0\n * @docs-private\n */\nconst transformMenu = matMenuAnimations.transformMenu;\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Injection token that can be used to reference instances of `MatMenuContent`. It serves\n * as alternative token to the actual `MatMenuContent` class which could cause unnecessary\n * retention of the class and its directive metadata.\n */\nconst MAT_MENU_CONTENT = new InjectionToken('MatMenuContent');\nclass _MatMenuContentBase {\n    constructor(_template, _componentFactoryResolver, _appRef, _injector, _viewContainerRef, _document, _changeDetectorRef) {\n        this._template = _template;\n        this._componentFactoryResolver = _componentFactoryResolver;\n        this._appRef = _appRef;\n        this._injector = _injector;\n        this._viewContainerRef = _viewContainerRef;\n        this._document = _document;\n        this._changeDetectorRef = _changeDetectorRef;\n        /** Emits when the menu content has been attached. */\n        this._attached = new Subject();\n    }\n    /**\n     * Attaches the content with a particular context.\n     * @docs-private\n     */\n    attach(context = {}) {\n        if (!this._portal) {\n            this._portal = new TemplatePortal(this._template, this._viewContainerRef);\n        }\n        this.detach();\n        if (!this._outlet) {\n            this._outlet = new DomPortalOutlet(this._document.createElement('div'), this._componentFactoryResolver, this._appRef, this._injector);\n        }\n        const element = this._template.elementRef.nativeElement;\n        // Because we support opening the same menu from different triggers (which in turn have their\n        // own `OverlayRef` panel), we have to re-insert the host element every time, otherwise we\n        // risk it staying attached to a pane that's no longer in the DOM.\n        element.parentNode.insertBefore(this._outlet.outletElement, element);\n        // When `MatMenuContent` is used in an `OnPush` component, the insertion of the menu\n        // content via `createEmbeddedView` does not cause the content to be seen as \"dirty\"\n        // by Angular. This causes the `@ContentChildren` for menu items within the menu to\n        // not be updated by Angular. By explicitly marking for check here, we tell Angular that\n        // it needs to check for new menu items and update the `@ContentChild` in `MatMenu`.\n        // @breaking-change 9.0.0 Make change detector ref required\n        if (this._changeDetectorRef) {\n            this._changeDetectorRef.markForCheck();\n        }\n        this._portal.attach(this._outlet, context);\n        this._attached.next();\n    }\n    /**\n     * Detaches the content.\n     * @docs-private\n     */\n    detach() {\n        if (this._portal.isAttached) {\n            this._portal.detach();\n        }\n    }\n    ngOnDestroy() {\n        if (this._outlet) {\n            this._outlet.dispose();\n        }\n    }\n}\n_MatMenuContentBase.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: _MatMenuContentBase, deps: [{ token: i0.TemplateRef }, { token: i0.ComponentFactoryResolver }, { token: i0.ApplicationRef }, { token: i0.Injector }, { token: i0.ViewContainerRef }, { token: DOCUMENT }, { token: i0.ChangeDetectorRef }], target: i0.ɵɵFactoryTarget.Directive });\n_MatMenuContentBase.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.1.0\", type: _MatMenuContentBase, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: _MatMenuContentBase, decorators: [{\n            type: Directive\n        }], ctorParameters: function () {\n        return [{ type: i0.TemplateRef }, { type: i0.ComponentFactoryResolver }, { type: i0.ApplicationRef }, { type: i0.Injector }, { type: i0.ViewContainerRef }, { type: undefined, decorators: [{\n                        type: Inject,\n                        args: [DOCUMENT]\n                    }] }, { type: i0.ChangeDetectorRef }];\n    } });\n/**\n * Menu content that will be rendered lazily once the menu is opened.\n */\nclass MatMenuContent extends _MatMenuContentBase {\n}\nMatMenuContent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatMenuContent, deps: null, target: i0.ɵɵFactoryTarget.Directive });\nMatMenuContent.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.1.0\", type: MatMenuContent, selector: \"ng-template[matMenuContent]\", providers: [{ provide: MAT_MENU_CONTENT, useExisting: MatMenuContent }], usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatMenuContent, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'ng-template[matMenuContent]',\n                    providers: [{ provide: MAT_MENU_CONTENT, useExisting: MatMenuContent }],\n                }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Throws an exception for the case when menu trigger doesn't have a valid mat-menu instance\n * @docs-private\n */\nfunction throwMatMenuMissingError() {\n    throw Error(`matMenuTriggerFor: must pass in an mat-menu instance.\n\n    Example:\n      <mat-menu #menu=\"matMenu\"></mat-menu>\n      <button [matMenuTriggerFor]=\"menu\"></button>`);\n}\n/**\n * Throws an exception for the case when menu's x-position value isn't valid.\n * In other words, it doesn't match 'before' or 'after'.\n * @docs-private\n */\nfunction throwMatMenuInvalidPositionX() {\n    throw Error(`xPosition value must be either 'before' or after'.\n      Example: <mat-menu xPosition=\"before\" #menu=\"matMenu\"></mat-menu>`);\n}\n/**\n * Throws an exception for the case when menu's y-position value isn't valid.\n * In other words, it doesn't match 'above' or 'below'.\n * @docs-private\n */\nfunction throwMatMenuInvalidPositionY() {\n    throw Error(`yPosition value must be either 'above' or below'.\n      Example: <mat-menu yPosition=\"above\" #menu=\"matMenu\"></mat-menu>`);\n}\n/**\n * Throws an exception for the case when a menu is assigned\n * to a trigger that is placed inside the same menu.\n * @docs-private\n */\nfunction throwMatMenuRecursiveError() {\n    throw Error(`matMenuTriggerFor: menu cannot contain its own trigger. Assign a menu that is ` +\n        `not a parent of the trigger or move the trigger outside of the menu.`);\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Injection token used to provide the parent menu to menu-specific components.\n * @docs-private\n */\nconst MAT_MENU_PANEL = new InjectionToken('MAT_MENU_PANEL');\n\n// Boilerplate for applying mixins to MatMenuItem.\n/** @docs-private */\nconst _MatMenuItemBase = mixinDisableRipple(mixinDisabled(class {\n}));\n/**\n * Single item inside of a `mat-menu`. Provides the menu item styling and accessibility treatment.\n */\nclass MatMenuItem extends _MatMenuItemBase {\n    constructor(_elementRef, \n    /**\n     * @deprecated `_document` parameter is no longer being used and will be removed.\n     * @breaking-change 12.0.0\n     */\n    _document, _focusMonitor, _parentMenu, \n    /**\n     * @deprecated `_changeDetectorRef` to become a required parameter.\n     * @breaking-change 14.0.0\n     */\n    _changeDetectorRef) {\n        // @breaking-change 8.0.0 make `_focusMonitor` and `document` required params.\n        super();\n        this._elementRef = _elementRef;\n        this._focusMonitor = _focusMonitor;\n        this._parentMenu = _parentMenu;\n        this._changeDetectorRef = _changeDetectorRef;\n        /** ARIA role for the menu item. */\n        this.role = 'menuitem';\n        /** Stream that emits when the menu item is hovered. */\n        this._hovered = new Subject();\n        /** Stream that emits when the menu item is focused. */\n        this._focused = new Subject();\n        /** Whether the menu item is highlighted. */\n        this._highlighted = false;\n        /** Whether the menu item acts as a trigger for a sub-menu. */\n        this._triggersSubmenu = false;\n        if (_parentMenu && _parentMenu.addItem) {\n            _parentMenu.addItem(this);\n        }\n    }\n    /** Focuses the menu item. */\n    focus(origin, options) {\n        if (this._focusMonitor && origin) {\n            this._focusMonitor.focusVia(this._getHostElement(), origin, options);\n        }\n        else {\n            this._getHostElement().focus(options);\n        }\n        this._focused.next(this);\n    }\n    ngAfterViewInit() {\n        if (this._focusMonitor) {\n            // Start monitoring the element so it gets the appropriate focused classes. We want\n            // to show the focus style for menu items only when the focus was not caused by a\n            // mouse or touch interaction.\n            this._focusMonitor.monitor(this._elementRef, false);\n        }\n    }\n    ngOnDestroy() {\n        if (this._focusMonitor) {\n            this._focusMonitor.stopMonitoring(this._elementRef);\n        }\n        if (this._parentMenu && this._parentMenu.removeItem) {\n            this._parentMenu.removeItem(this);\n        }\n        this._hovered.complete();\n        this._focused.complete();\n    }\n    /** Used to set the `tabindex`. */\n    _getTabIndex() {\n        return this.disabled ? '-1' : '0';\n    }\n    /** Returns the host DOM element. */\n    _getHostElement() {\n        return this._elementRef.nativeElement;\n    }\n    /** Prevents the default element actions if it is disabled. */\n    _checkDisabled(event) {\n        if (this.disabled) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n    }\n    /** Emits to the hover stream. */\n    _handleMouseEnter() {\n        this._hovered.next(this);\n    }\n    /** Gets the label to be used when determining whether the option should be focused. */\n    getLabel() {\n        var _a;\n        const clone = this._elementRef.nativeElement.cloneNode(true);\n        const icons = clone.querySelectorAll('mat-icon, .material-icons');\n        // Strip away icons so they don't show up in the text.\n        for (let i = 0; i < icons.length; i++) {\n            icons[i].remove();\n        }\n        return ((_a = clone.textContent) === null || _a === void 0 ? void 0 : _a.trim()) || '';\n    }\n    _setHighlighted(isHighlighted) {\n        var _a;\n        // We need to mark this for check for the case where the content is coming from a\n        // `matMenuContent` whose change detection tree is at the declaration position,\n        // not the insertion position. See #23175.\n        // @breaking-change 14.0.0 Remove null check for `_changeDetectorRef`.\n        this._highlighted = isHighlighted;\n        (_a = this._changeDetectorRef) === null || _a === void 0 ? void 0 : _a.markForCheck();\n    }\n}\nMatMenuItem.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatMenuItem, deps: [{ token: i0.ElementRef }, { token: DOCUMENT }, { token: i1.FocusMonitor }, { token: MAT_MENU_PANEL, optional: true }, { token: i0.ChangeDetectorRef }], target: i0.ɵɵFactoryTarget.Component });\nMatMenuItem.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: MatMenuItem, selector: \"[mat-menu-item]\", inputs: { disabled: \"disabled\", disableRipple: \"disableRipple\", role: \"role\" }, host: { listeners: { \"click\": \"_checkDisabled($event)\", \"mouseenter\": \"_handleMouseEnter()\" }, properties: { \"attr.role\": \"role\", \"class.mat-menu-item\": \"true\", \"class.mat-menu-item-highlighted\": \"_highlighted\", \"class.mat-menu-item-submenu-trigger\": \"_triggersSubmenu\", \"attr.tabindex\": \"_getTabIndex()\", \"attr.aria-disabled\": \"disabled.toString()\", \"attr.disabled\": \"disabled || null\" }, classAttribute: \"mat-focus-indicator\" }, exportAs: [\"matMenuItem\"], usesInheritance: true, ngImport: i0, template: \"<ng-content></ng-content>\\n<div class=\\\"mat-menu-ripple\\\" matRipple\\n     [matRippleDisabled]=\\\"disableRipple || disabled\\\"\\n     [matRippleTrigger]=\\\"_getHostElement()\\\">\\n</div>\\n\\n<svg\\n  *ngIf=\\\"_triggersSubmenu\\\"\\n  class=\\\"mat-menu-submenu-icon\\\"\\n  viewBox=\\\"0 0 5 10\\\"\\n  focusable=\\\"false\\\"><polygon points=\\\"0,0 5,5 0,10\\\"/></svg>\\n\", directives: [{ type: i2.MatRipple, selector: \"[mat-ripple], [matRipple]\", inputs: [\"matRippleColor\", \"matRippleUnbounded\", \"matRippleCentered\", \"matRippleRadius\", \"matRippleAnimation\", \"matRippleDisabled\", \"matRippleTrigger\"], exportAs: [\"matRipple\"] }, { type: i3.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatMenuItem, decorators: [{\n            type: Component,\n            args: [{ selector: '[mat-menu-item]', exportAs: 'matMenuItem', inputs: ['disabled', 'disableRipple'], host: {\n                        '[attr.role]': 'role',\n                        '[class.mat-menu-item]': 'true',\n                        '[class.mat-menu-item-highlighted]': '_highlighted',\n                        '[class.mat-menu-item-submenu-trigger]': '_triggersSubmenu',\n                        '[attr.tabindex]': '_getTabIndex()',\n                        '[attr.aria-disabled]': 'disabled.toString()',\n                        '[attr.disabled]': 'disabled || null',\n                        'class': 'mat-focus-indicator',\n                        '(click)': '_checkDisabled($event)',\n                        '(mouseenter)': '_handleMouseEnter()',\n                    }, changeDetection: ChangeDetectionStrategy.OnPush, encapsulation: ViewEncapsulation.None, template: \"<ng-content></ng-content>\\n<div class=\\\"mat-menu-ripple\\\" matRipple\\n     [matRippleDisabled]=\\\"disableRipple || disabled\\\"\\n     [matRippleTrigger]=\\\"_getHostElement()\\\">\\n</div>\\n\\n<svg\\n  *ngIf=\\\"_triggersSubmenu\\\"\\n  class=\\\"mat-menu-submenu-icon\\\"\\n  viewBox=\\\"0 0 5 10\\\"\\n  focusable=\\\"false\\\"><polygon points=\\\"0,0 5,5 0,10\\\"/></svg>\\n\" }]\n        }], ctorParameters: function () {\n        return [{ type: i0.ElementRef }, { type: undefined, decorators: [{\n                        type: Inject,\n                        args: [DOCUMENT]\n                    }] }, { type: i1.FocusMonitor }, { type: undefined, decorators: [{\n                        type: Inject,\n                        args: [MAT_MENU_PANEL]\n                    }, {\n                        type: Optional\n                    }] }, { type: i0.ChangeDetectorRef }];\n    }, propDecorators: { role: [{\n                type: Input\n            }] } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Injection token to be used to override the default options for `mat-menu`. */\nconst MAT_MENU_DEFAULT_OPTIONS = new InjectionToken('mat-menu-default-options', {\n    providedIn: 'root',\n    factory: MAT_MENU_DEFAULT_OPTIONS_FACTORY,\n});\n/** @docs-private */\nfunction MAT_MENU_DEFAULT_OPTIONS_FACTORY() {\n    return {\n        overlapTrigger: false,\n        xPosition: 'after',\n        yPosition: 'below',\n        backdropClass: 'cdk-overlay-transparent-backdrop',\n    };\n}\nlet menuPanelUid = 0;\n/** Base class with all of the `MatMenu` functionality. */\nclass _MatMenuBase {\n    constructor(_elementRef, _ngZone, _defaultOptions) {\n        this._elementRef = _elementRef;\n        this._ngZone = _ngZone;\n        this._defaultOptions = _defaultOptions;\n        this._xPosition = this._defaultOptions.xPosition;\n        this._yPosition = this._defaultOptions.yPosition;\n        /** Only the direct descendant menu items. */\n        this._directDescendantItems = new QueryList();\n        /** Subscription to tab events on the menu panel */\n        this._tabSubscription = Subscription.EMPTY;\n        /** Config object to be passed into the menu's ngClass */\n        this._classList = {};\n        /** Current state of the panel animation. */\n        this._panelAnimationState = 'void';\n        /** Emits whenever an animation on the menu completes. */\n        this._animationDone = new Subject();\n        /** Class or list of classes to be added to the overlay panel. */\n        this.overlayPanelClass = this._defaultOptions.overlayPanelClass || '';\n        /** Class to be added to the backdrop element. */\n        this.backdropClass = this._defaultOptions.backdropClass;\n        this._overlapTrigger = this._defaultOptions.overlapTrigger;\n        this._hasBackdrop = this._defaultOptions.hasBackdrop;\n        /** Event emitted when the menu is closed. */\n        this.closed = new EventEmitter();\n        /**\n         * Event emitted when the menu is closed.\n         * @deprecated Switch to `closed` instead\n         * @breaking-change 8.0.0\n         */\n        this.close = this.closed;\n        this.panelId = `mat-menu-panel-${menuPanelUid++}`;\n    }\n    /** Position of the menu in the X axis. */\n    get xPosition() {\n        return this._xPosition;\n    }\n    set xPosition(value) {\n        if (value !== 'before' &&\n            value !== 'after' &&\n            (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throwMatMenuInvalidPositionX();\n        }\n        this._xPosition = value;\n        this.setPositionClasses();\n    }\n    /** Position of the menu in the Y axis. */\n    get yPosition() {\n        return this._yPosition;\n    }\n    set yPosition(value) {\n        if (value !== 'above' && value !== 'below' && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throwMatMenuInvalidPositionY();\n        }\n        this._yPosition = value;\n        this.setPositionClasses();\n    }\n    /** Whether the menu should overlap its trigger. */\n    get overlapTrigger() {\n        return this._overlapTrigger;\n    }\n    set overlapTrigger(value) {\n        this._overlapTrigger = coerceBooleanProperty(value);\n    }\n    /** Whether the menu has a backdrop. */\n    get hasBackdrop() {\n        return this._hasBackdrop;\n    }\n    set hasBackdrop(value) {\n        this._hasBackdrop = coerceBooleanProperty(value);\n    }\n    /**\n     * This method takes classes set on the host mat-menu element and applies them on the\n     * menu template that displays in the overlay container.  Otherwise, it's difficult\n     * to style the containing menu from outside the component.\n     * @param classes list of class names\n     */\n    set panelClass(classes) {\n        const previousPanelClass = this._previousPanelClass;\n        if (previousPanelClass && previousPanelClass.length) {\n            previousPanelClass.split(' ').forEach((className) => {\n                this._classList[className] = false;\n            });\n        }\n        this._previousPanelClass = classes;\n        if (classes && classes.length) {\n            classes.split(' ').forEach((className) => {\n                this._classList[className] = true;\n            });\n            this._elementRef.nativeElement.className = '';\n        }\n    }\n    /**\n     * This method takes classes set on the host mat-menu element and applies them on the\n     * menu template that displays in the overlay container.  Otherwise, it's difficult\n     * to style the containing menu from outside the component.\n     * @deprecated Use `panelClass` instead.\n     * @breaking-change 8.0.0\n     */\n    get classList() {\n        return this.panelClass;\n    }\n    set classList(classes) {\n        this.panelClass = classes;\n    }\n    ngOnInit() {\n        this.setPositionClasses();\n    }\n    ngAfterContentInit() {\n        this._updateDirectDescendants();\n        this._keyManager = new FocusKeyManager(this._directDescendantItems)\n            .withWrap()\n            .withTypeAhead()\n            .withHomeAndEnd();\n        this._tabSubscription = this._keyManager.tabOut.subscribe(() => this.closed.emit('tab'));\n        // If a user manually (programmatically) focuses a menu item, we need to reflect that focus\n        // change back to the key manager. Note that we don't need to unsubscribe here because _focused\n        // is internal and we know that it gets completed on destroy.\n        this._directDescendantItems.changes\n            .pipe(startWith(this._directDescendantItems), switchMap(items => merge(...items.map((item) => item._focused))))\n            .subscribe(focusedItem => this._keyManager.updateActiveItem(focusedItem));\n    }\n    ngOnDestroy() {\n        this._directDescendantItems.destroy();\n        this._tabSubscription.unsubscribe();\n        this.closed.complete();\n    }\n    /** Stream that emits whenever the hovered menu item changes. */\n    _hovered() {\n        // Coerce the `changes` property because Angular types it as `Observable<any>`\n        const itemChanges = this._directDescendantItems.changes;\n        return itemChanges.pipe(startWith(this._directDescendantItems), switchMap(items => merge(...items.map((item) => item._hovered))));\n    }\n    /*\n     * Registers a menu item with the menu.\n     * @docs-private\n     * @deprecated No longer being used. To be removed.\n     * @breaking-change 9.0.0\n     */\n    addItem(_item) { }\n    /**\n     * Removes an item from the menu.\n     * @docs-private\n     * @deprecated No longer being used. To be removed.\n     * @breaking-change 9.0.0\n     */\n    removeItem(_item) { }\n    /** Handle a keyboard event from the menu, delegating to the appropriate action. */\n    _handleKeydown(event) {\n        const keyCode = event.keyCode;\n        const manager = this._keyManager;\n        switch (keyCode) {\n            case ESCAPE:\n                if (!hasModifierKey(event)) {\n                    event.preventDefault();\n                    this.closed.emit('keydown');\n                }\n                break;\n            case LEFT_ARROW:\n                if (this.parentMenu && this.direction === 'ltr') {\n                    this.closed.emit('keydown');\n                }\n                break;\n            case RIGHT_ARROW:\n                if (this.parentMenu && this.direction === 'rtl') {\n                    this.closed.emit('keydown');\n                }\n                break;\n            default:\n                if (keyCode === UP_ARROW || keyCode === DOWN_ARROW) {\n                    manager.setFocusOrigin('keyboard');\n                }\n                manager.onKeydown(event);\n        }\n    }\n    /**\n     * Focus the first item in the menu.\n     * @param origin Action from which the focus originated. Used to set the correct styling.\n     */\n    focusFirstItem(origin = 'program') {\n        // When the content is rendered lazily, it takes a bit before the items are inside the DOM.\n        if (this.lazyContent) {\n            this._ngZone.onStable.pipe(take(1)).subscribe(() => this._focusFirstItem(origin));\n        }\n        else {\n            this._focusFirstItem(origin);\n        }\n    }\n    /**\n     * Actual implementation that focuses the first item. Needs to be separated\n     * out so we don't repeat the same logic in the public `focusFirstItem` method.\n     */\n    _focusFirstItem(origin) {\n        const manager = this._keyManager;\n        manager.setFocusOrigin(origin).setFirstItemActive();\n        // If there's no active item at this point, it means that all the items are disabled.\n        // Move focus to the menu panel so keyboard events like Escape still work. Also this will\n        // give _some_ feedback to screen readers.\n        if (!manager.activeItem && this._directDescendantItems.length) {\n            let element = this._directDescendantItems.first._getHostElement().parentElement;\n            // Because the `mat-menu` is at the DOM insertion point, not inside the overlay, we don't\n            // have a nice way of getting a hold of the menu panel. We can't use a `ViewChild` either\n            // because the panel is inside an `ng-template`. We work around it by starting from one of\n            // the items and walking up the DOM.\n            while (element) {\n                if (element.getAttribute('role') === 'menu') {\n                    element.focus();\n                    break;\n                }\n                else {\n                    element = element.parentElement;\n                }\n            }\n        }\n    }\n    /**\n     * Resets the active item in the menu. This is used when the menu is opened, allowing\n     * the user to start from the first option when pressing the down arrow.\n     */\n    resetActiveItem() {\n        this._keyManager.setActiveItem(-1);\n    }\n    /**\n     * Sets the menu panel elevation.\n     * @param depth Number of parent menus that come before the menu.\n     */\n    setElevation(depth) {\n        // The elevation starts at the base and increases by one for each level.\n        // Capped at 24 because that's the maximum elevation defined in the Material design spec.\n        const elevation = Math.min(this._baseElevation + depth, 24);\n        const newElevation = `${this._elevationPrefix}${elevation}`;\n        const customElevation = Object.keys(this._classList).find(className => {\n            return className.startsWith(this._elevationPrefix);\n        });\n        if (!customElevation || customElevation === this._previousElevation) {\n            if (this._previousElevation) {\n                this._classList[this._previousElevation] = false;\n            }\n            this._classList[newElevation] = true;\n            this._previousElevation = newElevation;\n        }\n    }\n    /**\n     * Adds classes to the menu panel based on its position. Can be used by\n     * consumers to add specific styling based on the position.\n     * @param posX Position of the menu along the x axis.\n     * @param posY Position of the menu along the y axis.\n     * @docs-private\n     */\n    setPositionClasses(posX = this.xPosition, posY = this.yPosition) {\n        const classes = this._classList;\n        classes['mat-menu-before'] = posX === 'before';\n        classes['mat-menu-after'] = posX === 'after';\n        classes['mat-menu-above'] = posY === 'above';\n        classes['mat-menu-below'] = posY === 'below';\n    }\n    /** Starts the enter animation. */\n    _startAnimation() {\n        // @breaking-change 8.0.0 Combine with _resetAnimation.\n        this._panelAnimationState = 'enter';\n    }\n    /** Resets the panel animation to its initial state. */\n    _resetAnimation() {\n        // @breaking-change 8.0.0 Combine with _startAnimation.\n        this._panelAnimationState = 'void';\n    }\n    /** Callback that is invoked when the panel animation completes. */\n    _onAnimationDone(event) {\n        this._animationDone.next(event);\n        this._isAnimating = false;\n    }\n    _onAnimationStart(event) {\n        this._isAnimating = true;\n        // Scroll the content element to the top as soon as the animation starts. This is necessary,\n        // because we move focus to the first item while it's still being animated, which can throw\n        // the browser off when it determines the scroll position. Alternatively we can move focus\n        // when the animation is done, however moving focus asynchronously will interrupt screen\n        // readers which are in the process of reading out the menu already. We take the `element`\n        // from the `event` since we can't use a `ViewChild` to access the pane.\n        if (event.toState === 'enter' && this._keyManager.activeItemIndex === 0) {\n            event.element.scrollTop = 0;\n        }\n    }\n    /**\n     * Sets up a stream that will keep track of any newly-added menu items and will update the list\n     * of direct descendants. We collect the descendants this way, because `_allItems` can include\n     * items that are part of child menus, and using a custom way of registering items is unreliable\n     * when it comes to maintaining the item order.\n     */\n    _updateDirectDescendants() {\n        this._allItems.changes\n            .pipe(startWith(this._allItems))\n            .subscribe((items) => {\n            this._directDescendantItems.reset(items.filter(item => item._parentMenu === this));\n            this._directDescendantItems.notifyOnChanges();\n        });\n    }\n}\n_MatMenuBase.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: _MatMenuBase, deps: [{ token: i0.ElementRef }, { token: i0.NgZone }, { token: MAT_MENU_DEFAULT_OPTIONS }], target: i0.ɵɵFactoryTarget.Directive });\n_MatMenuBase.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.1.0\", type: _MatMenuBase, inputs: { backdropClass: \"backdropClass\", ariaLabel: [\"aria-label\", \"ariaLabel\"], ariaLabelledby: [\"aria-labelledby\", \"ariaLabelledby\"], ariaDescribedby: [\"aria-describedby\", \"ariaDescribedby\"], xPosition: \"xPosition\", yPosition: \"yPosition\", overlapTrigger: \"overlapTrigger\", hasBackdrop: \"hasBackdrop\", panelClass: [\"class\", \"panelClass\"], classList: \"classList\" }, outputs: { closed: \"closed\", close: \"close\" }, queries: [{ propertyName: \"lazyContent\", first: true, predicate: MAT_MENU_CONTENT, descendants: true }, { propertyName: \"_allItems\", predicate: MatMenuItem, descendants: true }, { propertyName: \"items\", predicate: MatMenuItem }], viewQueries: [{ propertyName: \"templateRef\", first: true, predicate: TemplateRef, descendants: true }], ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: _MatMenuBase, decorators: [{\n            type: Directive\n        }], ctorParameters: function () {\n        return [{ type: i0.ElementRef }, { type: i0.NgZone }, { type: undefined, decorators: [{\n                        type: Inject,\n                        args: [MAT_MENU_DEFAULT_OPTIONS]\n                    }] }];\n    }, propDecorators: { _allItems: [{\n                type: ContentChildren,\n                args: [MatMenuItem, { descendants: true }]\n            }], backdropClass: [{\n                type: Input\n            }], ariaLabel: [{\n                type: Input,\n                args: ['aria-label']\n            }], ariaLabelledby: [{\n                type: Input,\n                args: ['aria-labelledby']\n            }], ariaDescribedby: [{\n                type: Input,\n                args: ['aria-describedby']\n            }], xPosition: [{\n                type: Input\n            }], yPosition: [{\n                type: Input\n            }], templateRef: [{\n                type: ViewChild,\n                args: [TemplateRef]\n            }], items: [{\n                type: ContentChildren,\n                args: [MatMenuItem, { descendants: false }]\n            }], lazyContent: [{\n                type: ContentChild,\n                args: [MAT_MENU_CONTENT]\n            }], overlapTrigger: [{\n                type: Input\n            }], hasBackdrop: [{\n                type: Input\n            }], panelClass: [{\n                type: Input,\n                args: ['class']\n            }], classList: [{\n                type: Input\n            }], closed: [{\n                type: Output\n            }], close: [{\n                type: Output\n            }] } });\n/** @docs-public MatMenu */\nclass MatMenu extends _MatMenuBase {\n    constructor(elementRef, ngZone, defaultOptions) {\n        super(elementRef, ngZone, defaultOptions);\n        this._elevationPrefix = 'mat-elevation-z';\n        this._baseElevation = 4;\n    }\n}\nMatMenu.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatMenu, deps: [{ token: i0.ElementRef }, { token: i0.NgZone }, { token: MAT_MENU_DEFAULT_OPTIONS }], target: i0.ɵɵFactoryTarget.Component });\nMatMenu.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: MatMenu, selector: \"mat-menu\", host: { properties: { \"attr.aria-label\": \"null\", \"attr.aria-labelledby\": \"null\", \"attr.aria-describedby\": \"null\" } }, providers: [{ provide: MAT_MENU_PANEL, useExisting: MatMenu }], exportAs: [\"matMenu\"], usesInheritance: true, ngImport: i0, template: \"<ng-template>\\n  <div\\n    class=\\\"mat-menu-panel\\\"\\n    [id]=\\\"panelId\\\"\\n    [ngClass]=\\\"_classList\\\"\\n    (keydown)=\\\"_handleKeydown($event)\\\"\\n    (click)=\\\"closed.emit('click')\\\"\\n    [@transformMenu]=\\\"_panelAnimationState\\\"\\n    (@transformMenu.start)=\\\"_onAnimationStart($event)\\\"\\n    (@transformMenu.done)=\\\"_onAnimationDone($event)\\\"\\n    tabindex=\\\"-1\\\"\\n    role=\\\"menu\\\"\\n    [attr.aria-label]=\\\"ariaLabel || null\\\"\\n    [attr.aria-labelledby]=\\\"ariaLabelledby || null\\\"\\n    [attr.aria-describedby]=\\\"ariaDescribedby || null\\\">\\n    <div class=\\\"mat-menu-content\\\">\\n      <ng-content></ng-content>\\n    </div>\\n  </div>\\n</ng-template>\\n\", styles: [\"mat-menu{display:none}.mat-menu-panel{min-width:112px;max-width:280px;overflow:auto;-webkit-overflow-scrolling:touch;max-height:calc(100vh - 48px);border-radius:4px;outline:0;min-height:64px}.mat-menu-panel.ng-animating{pointer-events:none}.cdk-high-contrast-active .mat-menu-panel{outline:solid 1px}.mat-menu-content:not(:empty){padding-top:8px;padding-bottom:8px}.mat-menu-item{-webkit-user-select:none;-moz-user-select:none;user-select:none;cursor:pointer;outline:none;border:none;-webkit-tap-highlight-color:transparent;white-space:nowrap;overflow:hidden;text-overflow:ellipsis;display:block;line-height:48px;height:48px;padding:0 16px;text-align:left;text-decoration:none;max-width:100%;position:relative}.mat-menu-item::-moz-focus-inner{border:0}.mat-menu-item[disabled]{cursor:default}[dir=rtl] .mat-menu-item{text-align:right}.mat-menu-item .mat-icon{margin-right:16px;vertical-align:middle}.mat-menu-item .mat-icon svg{vertical-align:top}[dir=rtl] .mat-menu-item .mat-icon{margin-left:16px;margin-right:0}.mat-menu-item[disabled]{pointer-events:none}.cdk-high-contrast-active .mat-menu-item{margin-top:1px}.cdk-high-contrast-active .mat-menu-item.cdk-program-focused,.cdk-high-contrast-active .mat-menu-item.cdk-keyboard-focused,.cdk-high-contrast-active .mat-menu-item-highlighted{outline:dotted 1px}.mat-menu-item-submenu-trigger{padding-right:32px}[dir=rtl] .mat-menu-item-submenu-trigger{padding-right:16px;padding-left:32px}.mat-menu-submenu-icon{position:absolute;top:50%;right:16px;transform:translateY(-50%);width:5px;height:10px;fill:currentColor}[dir=rtl] .mat-menu-submenu-icon{right:auto;left:16px;transform:translateY(-50%) scaleX(-1)}.cdk-high-contrast-active .mat-menu-submenu-icon{fill:CanvasText}button.mat-menu-item{width:100%}.mat-menu-item .mat-menu-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}\\n\"], directives: [{ type: i3.NgClass, selector: \"[ngClass]\", inputs: [\"class\", \"ngClass\"] }], animations: [matMenuAnimations.transformMenu, matMenuAnimations.fadeInItems], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatMenu, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-menu', changeDetection: ChangeDetectionStrategy.OnPush, encapsulation: ViewEncapsulation.None, exportAs: 'matMenu', host: {\n                        '[attr.aria-label]': 'null',\n                        '[attr.aria-labelledby]': 'null',\n                        '[attr.aria-describedby]': 'null',\n                    }, animations: [matMenuAnimations.transformMenu, matMenuAnimations.fadeInItems], providers: [{ provide: MAT_MENU_PANEL, useExisting: MatMenu }], template: \"<ng-template>\\n  <div\\n    class=\\\"mat-menu-panel\\\"\\n    [id]=\\\"panelId\\\"\\n    [ngClass]=\\\"_classList\\\"\\n    (keydown)=\\\"_handleKeydown($event)\\\"\\n    (click)=\\\"closed.emit('click')\\\"\\n    [@transformMenu]=\\\"_panelAnimationState\\\"\\n    (@transformMenu.start)=\\\"_onAnimationStart($event)\\\"\\n    (@transformMenu.done)=\\\"_onAnimationDone($event)\\\"\\n    tabindex=\\\"-1\\\"\\n    role=\\\"menu\\\"\\n    [attr.aria-label]=\\\"ariaLabel || null\\\"\\n    [attr.aria-labelledby]=\\\"ariaLabelledby || null\\\"\\n    [attr.aria-describedby]=\\\"ariaDescribedby || null\\\">\\n    <div class=\\\"mat-menu-content\\\">\\n      <ng-content></ng-content>\\n    </div>\\n  </div>\\n</ng-template>\\n\", styles: [\"mat-menu{display:none}.mat-menu-panel{min-width:112px;max-width:280px;overflow:auto;-webkit-overflow-scrolling:touch;max-height:calc(100vh - 48px);border-radius:4px;outline:0;min-height:64px}.mat-menu-panel.ng-animating{pointer-events:none}.cdk-high-contrast-active .mat-menu-panel{outline:solid 1px}.mat-menu-content:not(:empty){padding-top:8px;padding-bottom:8px}.mat-menu-item{-webkit-user-select:none;-moz-user-select:none;user-select:none;cursor:pointer;outline:none;border:none;-webkit-tap-highlight-color:transparent;white-space:nowrap;overflow:hidden;text-overflow:ellipsis;display:block;line-height:48px;height:48px;padding:0 16px;text-align:left;text-decoration:none;max-width:100%;position:relative}.mat-menu-item::-moz-focus-inner{border:0}.mat-menu-item[disabled]{cursor:default}[dir=rtl] .mat-menu-item{text-align:right}.mat-menu-item .mat-icon{margin-right:16px;vertical-align:middle}.mat-menu-item .mat-icon svg{vertical-align:top}[dir=rtl] .mat-menu-item .mat-icon{margin-left:16px;margin-right:0}.mat-menu-item[disabled]{pointer-events:none}.cdk-high-contrast-active .mat-menu-item{margin-top:1px}.cdk-high-contrast-active .mat-menu-item.cdk-program-focused,.cdk-high-contrast-active .mat-menu-item.cdk-keyboard-focused,.cdk-high-contrast-active .mat-menu-item-highlighted{outline:dotted 1px}.mat-menu-item-submenu-trigger{padding-right:32px}[dir=rtl] .mat-menu-item-submenu-trigger{padding-right:16px;padding-left:32px}.mat-menu-submenu-icon{position:absolute;top:50%;right:16px;transform:translateY(-50%);width:5px;height:10px;fill:currentColor}[dir=rtl] .mat-menu-submenu-icon{right:auto;left:16px;transform:translateY(-50%) scaleX(-1)}.cdk-high-contrast-active .mat-menu-submenu-icon{fill:CanvasText}button.mat-menu-item{width:100%}.mat-menu-item .mat-menu-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}\\n\"] }]\n        }], ctorParameters: function () {\n        return [{ type: i0.ElementRef }, { type: i0.NgZone }, { type: undefined, decorators: [{\n                        type: Inject,\n                        args: [MAT_MENU_DEFAULT_OPTIONS]\n                    }] }];\n    } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Injection token that determines the scroll handling while the menu is open. */\nconst MAT_MENU_SCROLL_STRATEGY = new InjectionToken('mat-menu-scroll-strategy');\n/** @docs-private */\nfunction MAT_MENU_SCROLL_STRATEGY_FACTORY(overlay) {\n    return () => overlay.scrollStrategies.reposition();\n}\n/** @docs-private */\nconst MAT_MENU_SCROLL_STRATEGY_FACTORY_PROVIDER = {\n    provide: MAT_MENU_SCROLL_STRATEGY,\n    deps: [Overlay],\n    useFactory: MAT_MENU_SCROLL_STRATEGY_FACTORY,\n};\n/** Default top padding of the menu panel. */\nconst MENU_PANEL_TOP_PADDING = 8;\n/** Options for binding a passive event listener. */\nconst passiveEventListenerOptions = normalizePassiveListenerOptions({ passive: true });\n// TODO(andrewseguin): Remove the kebab versions in favor of camelCased attribute selectors\nclass _MatMenuTriggerBase {\n    constructor(_overlay, _element, _viewContainerRef, scrollStrategy, parentMenu, \n    // `MatMenuTrigger` is commonly used in combination with a `MatMenuItem`.\n    // tslint:disable-next-line: lightweight-tokens\n    _menuItemInstance, _dir, \n    // TODO(crisbeto): make the _focusMonitor required when doing breaking changes.\n    // @breaking-change 8.0.0\n    _focusMonitor) {\n        this._overlay = _overlay;\n        this._element = _element;\n        this._viewContainerRef = _viewContainerRef;\n        this._menuItemInstance = _menuItemInstance;\n        this._dir = _dir;\n        this._focusMonitor = _focusMonitor;\n        this._overlayRef = null;\n        this._menuOpen = false;\n        this._closingActionsSubscription = Subscription.EMPTY;\n        this._hoverSubscription = Subscription.EMPTY;\n        this._menuCloseSubscription = Subscription.EMPTY;\n        /**\n         * Handles touch start events on the trigger.\n         * Needs to be an arrow function so we can easily use addEventListener and removeEventListener.\n         */\n        this._handleTouchStart = (event) => {\n            if (!isFakeTouchstartFromScreenReader(event)) {\n                this._openedBy = 'touch';\n            }\n        };\n        // Tracking input type is necessary so it's possible to only auto-focus\n        // the first item of the list when the menu is opened via the keyboard\n        this._openedBy = undefined;\n        /**\n         * Whether focus should be restored when the menu is closed.\n         * Note that disabling this option can have accessibility implications\n         * and it's up to you to manage focus, if you decide to turn it off.\n         */\n        this.restoreFocus = true;\n        /** Event emitted when the associated menu is opened. */\n        this.menuOpened = new EventEmitter();\n        /**\n         * Event emitted when the associated menu is opened.\n         * @deprecated Switch to `menuOpened` instead\n         * @breaking-change 8.0.0\n         */\n        // tslint:disable-next-line:no-output-on-prefix\n        this.onMenuOpen = this.menuOpened;\n        /** Event emitted when the associated menu is closed. */\n        this.menuClosed = new EventEmitter();\n        /**\n         * Event emitted when the associated menu is closed.\n         * @deprecated Switch to `menuClosed` instead\n         * @breaking-change 8.0.0\n         */\n        // tslint:disable-next-line:no-output-on-prefix\n        this.onMenuClose = this.menuClosed;\n        this._scrollStrategy = scrollStrategy;\n        this._parentMaterialMenu = parentMenu instanceof _MatMenuBase ? parentMenu : undefined;\n        _element.nativeElement.addEventListener('touchstart', this._handleTouchStart, passiveEventListenerOptions);\n        if (_menuItemInstance) {\n            _menuItemInstance._triggersSubmenu = this.triggersSubmenu();\n        }\n    }\n    /**\n     * @deprecated\n     * @breaking-change 8.0.0\n     */\n    get _deprecatedMatMenuTriggerFor() {\n        return this.menu;\n    }\n    set _deprecatedMatMenuTriggerFor(v) {\n        this.menu = v;\n    }\n    /** References the menu instance that the trigger is associated with. */\n    get menu() {\n        return this._menu;\n    }\n    set menu(menu) {\n        if (menu === this._menu) {\n            return;\n        }\n        this._menu = menu;\n        this._menuCloseSubscription.unsubscribe();\n        if (menu) {\n            if (menu === this._parentMaterialMenu && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n                throwMatMenuRecursiveError();\n            }\n            this._menuCloseSubscription = menu.close.subscribe((reason) => {\n                this._destroyMenu(reason);\n                // If a click closed the menu, we should close the entire chain of nested menus.\n                if ((reason === 'click' || reason === 'tab') && this._parentMaterialMenu) {\n                    this._parentMaterialMenu.closed.emit(reason);\n                }\n            });\n        }\n    }\n    ngAfterContentInit() {\n        this._checkMenu();\n        this._handleHover();\n    }\n    ngOnDestroy() {\n        if (this._overlayRef) {\n            this._overlayRef.dispose();\n            this._overlayRef = null;\n        }\n        this._element.nativeElement.removeEventListener('touchstart', this._handleTouchStart, passiveEventListenerOptions);\n        this._menuCloseSubscription.unsubscribe();\n        this._closingActionsSubscription.unsubscribe();\n        this._hoverSubscription.unsubscribe();\n    }\n    /** Whether the menu is open. */\n    get menuOpen() {\n        return this._menuOpen;\n    }\n    /** The text direction of the containing app. */\n    get dir() {\n        return this._dir && this._dir.value === 'rtl' ? 'rtl' : 'ltr';\n    }\n    /** Whether the menu triggers a sub-menu or a top-level one. */\n    triggersSubmenu() {\n        return !!(this._menuItemInstance && this._parentMaterialMenu);\n    }\n    /** Toggles the menu between the open and closed states. */\n    toggleMenu() {\n        return this._menuOpen ? this.closeMenu() : this.openMenu();\n    }\n    /** Opens the menu. */\n    openMenu() {\n        if (this._menuOpen) {\n            return;\n        }\n        this._checkMenu();\n        const overlayRef = this._createOverlay();\n        const overlayConfig = overlayRef.getConfig();\n        this._setPosition(overlayConfig.positionStrategy);\n        overlayConfig.hasBackdrop =\n            this.menu.hasBackdrop == null ? !this.triggersSubmenu() : this.menu.hasBackdrop;\n        overlayRef.attach(this._getPortal());\n        if (this.menu.lazyContent) {\n            this.menu.lazyContent.attach(this.menuData);\n        }\n        this._closingActionsSubscription = this._menuClosingActions().subscribe(() => this.closeMenu());\n        this._initMenu();\n        if (this.menu instanceof _MatMenuBase) {\n            this.menu._startAnimation();\n        }\n    }\n    /** Closes the menu. */\n    closeMenu() {\n        this.menu.close.emit();\n    }\n    /**\n     * Focuses the menu trigger.\n     * @param origin Source of the menu trigger's focus.\n     */\n    focus(origin, options) {\n        if (this._focusMonitor && origin) {\n            this._focusMonitor.focusVia(this._element, origin, options);\n        }\n        else {\n            this._element.nativeElement.focus(options);\n        }\n    }\n    /**\n     * Updates the position of the menu to ensure that it fits all options within the viewport.\n     */\n    updatePosition() {\n        var _a;\n        (_a = this._overlayRef) === null || _a === void 0 ? void 0 : _a.updatePosition();\n    }\n    /** Closes the menu and does the necessary cleanup. */\n    _destroyMenu(reason) {\n        if (!this._overlayRef || !this.menuOpen) {\n            return;\n        }\n        const menu = this.menu;\n        this._closingActionsSubscription.unsubscribe();\n        this._overlayRef.detach();\n        // Always restore focus if the user is navigating using the keyboard or the menu was opened\n        // programmatically. We don't restore for non-root triggers, because it can prevent focus\n        // from making it back to the root trigger when closing a long chain of menus by clicking\n        // on the backdrop.\n        if (this.restoreFocus && (reason === 'keydown' || !this._openedBy || !this.triggersSubmenu())) {\n            this.focus(this._openedBy);\n        }\n        this._openedBy = undefined;\n        if (menu instanceof _MatMenuBase) {\n            menu._resetAnimation();\n            if (menu.lazyContent) {\n                // Wait for the exit animation to finish before detaching the content.\n                menu._animationDone\n                    .pipe(filter(event => event.toState === 'void'), take(1), \n                // Interrupt if the content got re-attached.\n                takeUntil(menu.lazyContent._attached))\n                    .subscribe({\n                    next: () => menu.lazyContent.detach(),\n                    // No matter whether the content got re-attached, reset the menu.\n                    complete: () => this._setIsMenuOpen(false),\n                });\n            }\n            else {\n                this._setIsMenuOpen(false);\n            }\n        }\n        else {\n            this._setIsMenuOpen(false);\n            if (menu.lazyContent) {\n                menu.lazyContent.detach();\n            }\n        }\n    }\n    /**\n     * This method sets the menu state to open and focuses the first item if\n     * the menu was opened via the keyboard.\n     */\n    _initMenu() {\n        this.menu.parentMenu = this.triggersSubmenu() ? this._parentMaterialMenu : undefined;\n        this.menu.direction = this.dir;\n        this._setMenuElevation();\n        this.menu.focusFirstItem(this._openedBy || 'program');\n        this._setIsMenuOpen(true);\n    }\n    /** Updates the menu elevation based on the amount of parent menus that it has. */\n    _setMenuElevation() {\n        if (this.menu.setElevation) {\n            let depth = 0;\n            let parentMenu = this.menu.parentMenu;\n            while (parentMenu) {\n                depth++;\n                parentMenu = parentMenu.parentMenu;\n            }\n            this.menu.setElevation(depth);\n        }\n    }\n    // set state rather than toggle to support triggers sharing a menu\n    _setIsMenuOpen(isOpen) {\n        this._menuOpen = isOpen;\n        this._menuOpen ? this.menuOpened.emit() : this.menuClosed.emit();\n        if (this.triggersSubmenu()) {\n            this._menuItemInstance._setHighlighted(isOpen);\n        }\n    }\n    /**\n     * This method checks that a valid instance of MatMenu has been passed into\n     * matMenuTriggerFor. If not, an exception is thrown.\n     */\n    _checkMenu() {\n        if (!this.menu && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throwMatMenuMissingError();\n        }\n    }\n    /**\n     * This method creates the overlay from the provided menu's template and saves its\n     * OverlayRef so that it can be attached to the DOM when openMenu is called.\n     */\n    _createOverlay() {\n        if (!this._overlayRef) {\n            const config = this._getOverlayConfig();\n            this._subscribeToPositions(config.positionStrategy);\n            this._overlayRef = this._overlay.create(config);\n            // Consume the `keydownEvents` in order to prevent them from going to another overlay.\n            // Ideally we'd also have our keyboard event logic in here, however doing so will\n            // break anybody that may have implemented the `MatMenuPanel` themselves.\n            this._overlayRef.keydownEvents().subscribe();\n        }\n        return this._overlayRef;\n    }\n    /**\n     * This method builds the configuration object needed to create the overlay, the OverlayState.\n     * @returns OverlayConfig\n     */\n    _getOverlayConfig() {\n        return new OverlayConfig({\n            positionStrategy: this._overlay\n                .position()\n                .flexibleConnectedTo(this._element)\n                .withLockedPosition()\n                .withGrowAfterOpen()\n                .withTransformOriginOn('.mat-menu-panel, .mat-mdc-menu-panel'),\n            backdropClass: this.menu.backdropClass || 'cdk-overlay-transparent-backdrop',\n            panelClass: this.menu.overlayPanelClass,\n            scrollStrategy: this._scrollStrategy(),\n            direction: this._dir,\n        });\n    }\n    /**\n     * Listens to changes in the position of the overlay and sets the correct classes\n     * on the menu based on the new position. This ensures the animation origin is always\n     * correct, even if a fallback position is used for the overlay.\n     */\n    _subscribeToPositions(position) {\n        if (this.menu.setPositionClasses) {\n            position.positionChanges.subscribe(change => {\n                const posX = change.connectionPair.overlayX === 'start' ? 'after' : 'before';\n                const posY = change.connectionPair.overlayY === 'top' ? 'below' : 'above';\n                this.menu.setPositionClasses(posX, posY);\n            });\n        }\n    }\n    /**\n     * Sets the appropriate positions on a position strategy\n     * so the overlay connects with the trigger correctly.\n     * @param positionStrategy Strategy whose position to update.\n     */\n    _setPosition(positionStrategy) {\n        let [originX, originFallbackX] = this.menu.xPosition === 'before' ? ['end', 'start'] : ['start', 'end'];\n        let [overlayY, overlayFallbackY] = this.menu.yPosition === 'above' ? ['bottom', 'top'] : ['top', 'bottom'];\n        let [originY, originFallbackY] = [overlayY, overlayFallbackY];\n        let [overlayX, overlayFallbackX] = [originX, originFallbackX];\n        let offsetY = 0;\n        if (this.triggersSubmenu()) {\n            // When the menu is a sub-menu, it should always align itself\n            // to the edges of the trigger, instead of overlapping it.\n            overlayFallbackX = originX = this.menu.xPosition === 'before' ? 'start' : 'end';\n            originFallbackX = overlayX = originX === 'end' ? 'start' : 'end';\n            offsetY = overlayY === 'bottom' ? MENU_PANEL_TOP_PADDING : -MENU_PANEL_TOP_PADDING;\n        }\n        else if (!this.menu.overlapTrigger) {\n            originY = overlayY === 'top' ? 'bottom' : 'top';\n            originFallbackY = overlayFallbackY === 'top' ? 'bottom' : 'top';\n        }\n        positionStrategy.withPositions([\n            { originX, originY, overlayX, overlayY, offsetY },\n            { originX: originFallbackX, originY, overlayX: overlayFallbackX, overlayY, offsetY },\n            {\n                originX,\n                originY: originFallbackY,\n                overlayX,\n                overlayY: overlayFallbackY,\n                offsetY: -offsetY,\n            },\n            {\n                originX: originFallbackX,\n                originY: originFallbackY,\n                overlayX: overlayFallbackX,\n                overlayY: overlayFallbackY,\n                offsetY: -offsetY,\n            },\n        ]);\n    }\n    /** Returns a stream that emits whenever an action that should close the menu occurs. */\n    _menuClosingActions() {\n        const backdrop = this._overlayRef.backdropClick();\n        const detachments = this._overlayRef.detachments();\n        const parentClose = this._parentMaterialMenu ? this._parentMaterialMenu.closed : of();\n        const hover = this._parentMaterialMenu\n            ? this._parentMaterialMenu._hovered().pipe(filter(active => active !== this._menuItemInstance), filter(() => this._menuOpen))\n            : of();\n        return merge(backdrop, parentClose, hover, detachments);\n    }\n    /** Handles mouse presses on the trigger. */\n    _handleMousedown(event) {\n        if (!isFakeMousedownFromScreenReader(event)) {\n            // Since right or middle button clicks won't trigger the `click` event,\n            // we shouldn't consider the menu as opened by mouse in those cases.\n            this._openedBy = event.button === 0 ? 'mouse' : undefined;\n            // Since clicking on the trigger won't close the menu if it opens a sub-menu,\n            // we should prevent focus from moving onto it via click to avoid the\n            // highlight from lingering on the menu item.\n            if (this.triggersSubmenu()) {\n                event.preventDefault();\n            }\n        }\n    }\n    /** Handles key presses on the trigger. */\n    _handleKeydown(event) {\n        const keyCode = event.keyCode;\n        // Pressing enter on the trigger will trigger the click handler later.\n        if (keyCode === ENTER || keyCode === SPACE) {\n            this._openedBy = 'keyboard';\n        }\n        if (this.triggersSubmenu() &&\n            ((keyCode === RIGHT_ARROW && this.dir === 'ltr') ||\n                (keyCode === LEFT_ARROW && this.dir === 'rtl'))) {\n            this._openedBy = 'keyboard';\n            this.openMenu();\n        }\n    }\n    /** Handles click events on the trigger. */\n    _handleClick(event) {\n        if (this.triggersSubmenu()) {\n            // Stop event propagation to avoid closing the parent menu.\n            event.stopPropagation();\n            this.openMenu();\n        }\n        else {\n            this.toggleMenu();\n        }\n    }\n    /** Handles the cases where the user hovers over the trigger. */\n    _handleHover() {\n        // Subscribe to changes in the hovered item in order to toggle the panel.\n        if (!this.triggersSubmenu() || !this._parentMaterialMenu) {\n            return;\n        }\n        this._hoverSubscription = this._parentMaterialMenu\n            ._hovered()\n            // Since we might have multiple competing triggers for the same menu (e.g. a sub-menu\n            // with different data and triggers), we have to delay it by a tick to ensure that\n            // it won't be closed immediately after it is opened.\n            .pipe(filter(active => active === this._menuItemInstance && !active.disabled), delay(0, asapScheduler))\n            .subscribe(() => {\n            this._openedBy = 'mouse';\n            // If the same menu is used between multiple triggers, it might still be animating\n            // while the new trigger tries to re-open it. Wait for the animation to finish\n            // before doing so. Also interrupt if the user moves to another item.\n            if (this.menu instanceof _MatMenuBase && this.menu._isAnimating) {\n                // We need the `delay(0)` here in order to avoid\n                // 'changed after checked' errors in some cases. See #12194.\n                this.menu._animationDone\n                    .pipe(take(1), delay(0, asapScheduler), takeUntil(this._parentMaterialMenu._hovered()))\n                    .subscribe(() => this.openMenu());\n            }\n            else {\n                this.openMenu();\n            }\n        });\n    }\n    /** Gets the portal that should be attached to the overlay. */\n    _getPortal() {\n        // Note that we can avoid this check by keeping the portal on the menu panel.\n        // While it would be cleaner, we'd have to introduce another required method on\n        // `MatMenuPanel`, making it harder to consume.\n        if (!this._portal || this._portal.templateRef !== this.menu.templateRef) {\n            this._portal = new TemplatePortal(this.menu.templateRef, this._viewContainerRef);\n        }\n        return this._portal;\n    }\n}\n_MatMenuTriggerBase.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: _MatMenuTriggerBase, deps: [{ token: i1$1.Overlay }, { token: i0.ElementRef }, { token: i0.ViewContainerRef }, { token: MAT_MENU_SCROLL_STRATEGY }, { token: MAT_MENU_PANEL, optional: true }, { token: MatMenuItem, optional: true, self: true }, { token: i3$1.Directionality, optional: true }, { token: i1.FocusMonitor }], target: i0.ɵɵFactoryTarget.Directive });\n_MatMenuTriggerBase.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.1.0\", type: _MatMenuTriggerBase, inputs: { _deprecatedMatMenuTriggerFor: [\"mat-menu-trigger-for\", \"_deprecatedMatMenuTriggerFor\"], menu: [\"matMenuTriggerFor\", \"menu\"], menuData: [\"matMenuTriggerData\", \"menuData\"], restoreFocus: [\"matMenuTriggerRestoreFocus\", \"restoreFocus\"] }, outputs: { menuOpened: \"menuOpened\", onMenuOpen: \"onMenuOpen\", menuClosed: \"menuClosed\", onMenuClose: \"onMenuClose\" }, host: { attributes: { \"aria-haspopup\": \"true\" }, listeners: { \"click\": \"_handleClick($event)\", \"mousedown\": \"_handleMousedown($event)\", \"keydown\": \"_handleKeydown($event)\" }, properties: { \"attr.aria-expanded\": \"menuOpen || null\", \"attr.aria-controls\": \"menuOpen ? menu.panelId : null\" } }, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: _MatMenuTriggerBase, decorators: [{\n            type: Directive,\n            args: [{\n                    host: {\n                        'aria-haspopup': 'true',\n                        '[attr.aria-expanded]': 'menuOpen || null',\n                        '[attr.aria-controls]': 'menuOpen ? menu.panelId : null',\n                        '(click)': '_handleClick($event)',\n                        '(mousedown)': '_handleMousedown($event)',\n                        '(keydown)': '_handleKeydown($event)',\n                    },\n                }]\n        }], ctorParameters: function () {\n        return [{ type: i1$1.Overlay }, { type: i0.ElementRef }, { type: i0.ViewContainerRef }, { type: undefined, decorators: [{\n                        type: Inject,\n                        args: [MAT_MENU_SCROLL_STRATEGY]\n                    }] }, { type: undefined, decorators: [{\n                        type: Inject,\n                        args: [MAT_MENU_PANEL]\n                    }, {\n                        type: Optional\n                    }] }, { type: MatMenuItem, decorators: [{\n                        type: Optional\n                    }, {\n                        type: Self\n                    }] }, { type: i3$1.Directionality, decorators: [{\n                        type: Optional\n                    }] }, { type: i1.FocusMonitor }];\n    }, propDecorators: { _deprecatedMatMenuTriggerFor: [{\n                type: Input,\n                args: ['mat-menu-trigger-for']\n            }], menu: [{\n                type: Input,\n                args: ['matMenuTriggerFor']\n            }], menuData: [{\n                type: Input,\n                args: ['matMenuTriggerData']\n            }], restoreFocus: [{\n                type: Input,\n                args: ['matMenuTriggerRestoreFocus']\n            }], menuOpened: [{\n                type: Output\n            }], onMenuOpen: [{\n                type: Output\n            }], menuClosed: [{\n                type: Output\n            }], onMenuClose: [{\n                type: Output\n            }] } });\n/** Directive applied to an element that should trigger a `mat-menu`. */\nclass MatMenuTrigger extends _MatMenuTriggerBase {\n}\nMatMenuTrigger.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatMenuTrigger, deps: null, target: i0.ɵɵFactoryTarget.Directive });\nMatMenuTrigger.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.1.0\", type: MatMenuTrigger, selector: \"[mat-menu-trigger-for], [matMenuTriggerFor]\", host: { classAttribute: \"mat-menu-trigger\" }, exportAs: [\"matMenuTrigger\"], usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatMenuTrigger, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: `[mat-menu-trigger-for], [matMenuTriggerFor]`,\n                    host: {\n                        'class': 'mat-menu-trigger',\n                    },\n                    exportAs: 'matMenuTrigger',\n                }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass MatMenuModule {\n}\nMatMenuModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatMenuModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nMatMenuModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatMenuModule, declarations: [MatMenu, MatMenuItem, MatMenuTrigger, MatMenuContent], imports: [CommonModule, MatCommonModule, MatRippleModule, OverlayModule], exports: [CdkScrollableModule,\n        MatCommonModule,\n        MatMenu,\n        MatMenuItem,\n        MatMenuTrigger,\n        MatMenuContent] });\nMatMenuModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatMenuModule, providers: [MAT_MENU_SCROLL_STRATEGY_FACTORY_PROVIDER], imports: [[CommonModule, MatCommonModule, MatRippleModule, OverlayModule], CdkScrollableModule,\n        MatCommonModule] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatMenuModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [CommonModule, MatCommonModule, MatRippleModule, OverlayModule],\n                    exports: [\n                        CdkScrollableModule,\n                        MatCommonModule,\n                        MatMenu,\n                        MatMenuItem,\n                        MatMenuTrigger,\n                        MatMenuContent,\n                    ],\n                    declarations: [MatMenu, MatMenuItem, MatMenuTrigger, MatMenuContent],\n                    providers: [MAT_MENU_SCROLL_STRATEGY_FACTORY_PROVIDER],\n                }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_MENU_CONTENT, MAT_MENU_DEFAULT_OPTIONS, MAT_MENU_PANEL, MAT_MENU_SCROLL_STRATEGY, MatMenu, MatMenuContent, MatMenuItem, MatMenuModule, MatMenuTrigger, _MatMenuBase, _MatMenuContentBase, _MatMenuTriggerBase, fadeInItems, matMenuAnimations, transformMenu };\n","import * as i0 from '@angular/core';\nimport { InjectionToken, Component, ChangeDetectionStrategy, ViewEncapsulation, Optional, Inject, Input, NgModule } from '@angular/core';\nimport * as i2 from '@angular/common';\nimport { DOCUMENT, CommonModule } from '@angular/common';\nimport { mixinColor, MatCommonModule } from '@angular/material/core';\nimport { coerceNumberProperty } from '@angular/cdk/coercion';\nimport * as i1 from '@angular/cdk/platform';\nimport { _getShadowRoot } from '@angular/cdk/platform';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Base reference size of the spinner.\n * @docs-private\n */\nconst BASE_SIZE = 100;\n/**\n * Base reference stroke width of the spinner.\n * @docs-private\n */\nconst BASE_STROKE_WIDTH = 10;\n// Boilerplate for applying mixins to MatProgressSpinner.\n/** @docs-private */\nconst _MatProgressSpinnerBase = mixinColor(class {\n    constructor(_elementRef) {\n        this._elementRef = _elementRef;\n    }\n}, 'primary');\n/** Injection token to be used to override the default options for `mat-progress-spinner`. */\nconst MAT_PROGRESS_SPINNER_DEFAULT_OPTIONS = new InjectionToken('mat-progress-spinner-default-options', {\n    providedIn: 'root',\n    factory: MAT_PROGRESS_SPINNER_DEFAULT_OPTIONS_FACTORY,\n});\n/** @docs-private */\nfunction MAT_PROGRESS_SPINNER_DEFAULT_OPTIONS_FACTORY() {\n    return { diameter: BASE_SIZE };\n}\n// .0001 percentage difference is necessary in order to avoid unwanted animation frames\n// for example because the animation duration is 4 seconds, .1% accounts to 4ms\n// which are enough to see the flicker described in\n// https://github.com/angular/components/issues/8984\nconst INDETERMINATE_ANIMATION_TEMPLATE = `\n @keyframes mat-progress-spinner-stroke-rotate-DIAMETER {\n    0%      { stroke-dashoffset: START_VALUE;  transform: rotate(0); }\n    12.5%   { stroke-dashoffset: END_VALUE;    transform: rotate(0); }\n    12.5001%  { stroke-dashoffset: END_VALUE;    transform: rotateX(180deg) rotate(72.5deg); }\n    25%     { stroke-dashoffset: START_VALUE;  transform: rotateX(180deg) rotate(72.5deg); }\n\n    25.0001%   { stroke-dashoffset: START_VALUE;  transform: rotate(270deg); }\n    37.5%   { stroke-dashoffset: END_VALUE;    transform: rotate(270deg); }\n    37.5001%  { stroke-dashoffset: END_VALUE;    transform: rotateX(180deg) rotate(161.5deg); }\n    50%     { stroke-dashoffset: START_VALUE;  transform: rotateX(180deg) rotate(161.5deg); }\n\n    50.0001%  { stroke-dashoffset: START_VALUE;  transform: rotate(180deg); }\n    62.5%   { stroke-dashoffset: END_VALUE;    transform: rotate(180deg); }\n    62.5001%  { stroke-dashoffset: END_VALUE;    transform: rotateX(180deg) rotate(251.5deg); }\n    75%     { stroke-dashoffset: START_VALUE;  transform: rotateX(180deg) rotate(251.5deg); }\n\n    75.0001%  { stroke-dashoffset: START_VALUE;  transform: rotate(90deg); }\n    87.5%   { stroke-dashoffset: END_VALUE;    transform: rotate(90deg); }\n    87.5001%  { stroke-dashoffset: END_VALUE;    transform: rotateX(180deg) rotate(341.5deg); }\n    100%    { stroke-dashoffset: START_VALUE;  transform: rotateX(180deg) rotate(341.5deg); }\n  }\n`;\n/**\n * `<mat-progress-spinner>` component.\n */\nclass MatProgressSpinner extends _MatProgressSpinnerBase {\n    constructor(elementRef, \n    /**\n     * @deprecated `_platform` parameter no longer being used.\n     * @breaking-change 14.0.0\n     */\n    _platform, _document, animationMode, defaults) {\n        super(elementRef);\n        this._document = _document;\n        this._diameter = BASE_SIZE;\n        this._value = 0;\n        /** Mode of the progress circle */\n        this.mode = 'determinate';\n        const trackedDiameters = MatProgressSpinner._diameters;\n        this._spinnerAnimationLabel = this._getSpinnerAnimationLabel();\n        // The base size is already inserted via the component's structural styles. We still\n        // need to track it so we don't end up adding the same styles again.\n        if (!trackedDiameters.has(_document.head)) {\n            trackedDiameters.set(_document.head, new Set([BASE_SIZE]));\n        }\n        this._noopAnimations =\n            animationMode === 'NoopAnimations' && !!defaults && !defaults._forceAnimations;\n        if (defaults) {\n            if (defaults.diameter) {\n                this.diameter = defaults.diameter;\n            }\n            if (defaults.strokeWidth) {\n                this.strokeWidth = defaults.strokeWidth;\n            }\n        }\n    }\n    /** The diameter of the progress spinner (will set width and height of svg). */\n    get diameter() {\n        return this._diameter;\n    }\n    set diameter(size) {\n        this._diameter = coerceNumberProperty(size);\n        this._spinnerAnimationLabel = this._getSpinnerAnimationLabel();\n        // If this is set before `ngOnInit`, the style root may not have been resolved yet.\n        if (this._styleRoot) {\n            this._attachStyleNode();\n        }\n    }\n    /** Stroke width of the progress spinner. */\n    get strokeWidth() {\n        return this._strokeWidth || this.diameter / 10;\n    }\n    set strokeWidth(value) {\n        this._strokeWidth = coerceNumberProperty(value);\n    }\n    /** Value of the progress circle. */\n    get value() {\n        return this.mode === 'determinate' ? this._value : 0;\n    }\n    set value(newValue) {\n        this._value = Math.max(0, Math.min(100, coerceNumberProperty(newValue)));\n    }\n    ngOnInit() {\n        const element = this._elementRef.nativeElement;\n        // Note that we need to look up the root node in ngOnInit, rather than the constructor, because\n        // Angular seems to create the element outside the shadow root and then moves it inside, if the\n        // node is inside an `ngIf` and a ShadowDom-encapsulated component.\n        this._styleRoot = _getShadowRoot(element) || this._document.head;\n        this._attachStyleNode();\n        element.classList.add('mat-progress-spinner-indeterminate-animation');\n    }\n    /** The radius of the spinner, adjusted for stroke width. */\n    _getCircleRadius() {\n        return (this.diameter - BASE_STROKE_WIDTH) / 2;\n    }\n    /** The view box of the spinner's svg element. */\n    _getViewBox() {\n        const viewBox = this._getCircleRadius() * 2 + this.strokeWidth;\n        return `0 0 ${viewBox} ${viewBox}`;\n    }\n    /** The stroke circumference of the svg circle. */\n    _getStrokeCircumference() {\n        return 2 * Math.PI * this._getCircleRadius();\n    }\n    /** The dash offset of the svg circle. */\n    _getStrokeDashOffset() {\n        if (this.mode === 'determinate') {\n            return (this._getStrokeCircumference() * (100 - this._value)) / 100;\n        }\n        return null;\n    }\n    /** Stroke width of the circle in percent. */\n    _getCircleStrokeWidth() {\n        return (this.strokeWidth / this.diameter) * 100;\n    }\n    /** Dynamically generates a style tag containing the correct animation for this diameter. */\n    _attachStyleNode() {\n        const styleRoot = this._styleRoot;\n        const currentDiameter = this._diameter;\n        const diameters = MatProgressSpinner._diameters;\n        let diametersForElement = diameters.get(styleRoot);\n        if (!diametersForElement || !diametersForElement.has(currentDiameter)) {\n            const styleTag = this._document.createElement('style');\n            styleTag.setAttribute('mat-spinner-animation', this._spinnerAnimationLabel);\n            styleTag.textContent = this._getAnimationText();\n            styleRoot.appendChild(styleTag);\n            if (!diametersForElement) {\n                diametersForElement = new Set();\n                diameters.set(styleRoot, diametersForElement);\n            }\n            diametersForElement.add(currentDiameter);\n        }\n    }\n    /** Generates animation styles adjusted for the spinner's diameter. */\n    _getAnimationText() {\n        const strokeCircumference = this._getStrokeCircumference();\n        return (INDETERMINATE_ANIMATION_TEMPLATE\n            // Animation should begin at 5% and end at 80%\n            .replace(/START_VALUE/g, `${0.95 * strokeCircumference}`)\n            .replace(/END_VALUE/g, `${0.2 * strokeCircumference}`)\n            .replace(/DIAMETER/g, `${this._spinnerAnimationLabel}`));\n    }\n    /** Returns the circle diameter formatted for use with the animation-name CSS property. */\n    _getSpinnerAnimationLabel() {\n        // The string of a float point number will include a period ‘.’ character,\n        // which is not valid for a CSS animation-name.\n        return this.diameter.toString().replace('.', '_');\n    }\n}\n/**\n * Tracks diameters of existing instances to de-dupe generated styles (default d = 100).\n * We need to keep track of which elements the diameters were attached to, because for\n * elements in the Shadow DOM the style tags are attached to the shadow root, rather\n * than the document head.\n */\nMatProgressSpinner._diameters = new WeakMap();\nMatProgressSpinner.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatProgressSpinner, deps: [{ token: i0.ElementRef }, { token: i1.Platform }, { token: DOCUMENT, optional: true }, { token: ANIMATION_MODULE_TYPE, optional: true }, { token: MAT_PROGRESS_SPINNER_DEFAULT_OPTIONS }], target: i0.ɵɵFactoryTarget.Component });\nMatProgressSpinner.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: MatProgressSpinner, selector: \"mat-progress-spinner\", inputs: { color: \"color\", diameter: \"diameter\", strokeWidth: \"strokeWidth\", mode: \"mode\", value: \"value\" }, host: { attributes: { \"role\": \"progressbar\", \"tabindex\": \"-1\" }, properties: { \"class._mat-animation-noopable\": \"_noopAnimations\", \"style.width.px\": \"diameter\", \"style.height.px\": \"diameter\", \"attr.aria-valuemin\": \"mode === \\\"determinate\\\" ? 0 : null\", \"attr.aria-valuemax\": \"mode === \\\"determinate\\\" ? 100 : null\", \"attr.aria-valuenow\": \"mode === \\\"determinate\\\" ? value : null\", \"attr.mode\": \"mode\" }, classAttribute: \"mat-progress-spinner\" }, exportAs: [\"matProgressSpinner\"], usesInheritance: true, ngImport: i0, template: \"<!--\\n  preserveAspectRatio of xMidYMid meet as the center of the viewport is the circle's\\n  center. The center of the circle will remain at the center of the mat-progress-spinner\\n  element containing the SVG.\\n-->\\n<!--\\n  All children need to be hidden for screen readers in order to support ChromeVox.\\n  More context in the issue: https://github.com/angular/components/issues/22165.\\n-->\\n<svg\\n  [style.width.px]=\\\"diameter\\\"\\n  [style.height.px]=\\\"diameter\\\"\\n  [attr.viewBox]=\\\"_getViewBox()\\\"\\n  preserveAspectRatio=\\\"xMidYMid meet\\\"\\n  focusable=\\\"false\\\"\\n  [ngSwitch]=\\\"mode === 'indeterminate'\\\"\\n  aria-hidden=\\\"true\\\">\\n\\n  <!--\\n    Technically we can reuse the same `circle` element, however Safari has an issue that breaks\\n    the SVG rendering in determinate mode, after switching between indeterminate and determinate.\\n    Using a different element avoids the issue. An alternative to this is adding `display: none`\\n    for a split second and then removing it when switching between modes, but it's hard to know\\n    for how long to hide the element and it can cause the UI to blink.\\n  -->\\n  <circle\\n    *ngSwitchCase=\\\"true\\\"\\n    cx=\\\"50%\\\"\\n    cy=\\\"50%\\\"\\n    [attr.r]=\\\"_getCircleRadius()\\\"\\n    [style.animation-name]=\\\"'mat-progress-spinner-stroke-rotate-' + _spinnerAnimationLabel\\\"\\n    [style.stroke-dashoffset.px]=\\\"_getStrokeDashOffset()\\\"\\n    [style.stroke-dasharray.px]=\\\"_getStrokeCircumference()\\\"\\n    [style.stroke-width.%]=\\\"_getCircleStrokeWidth()\\\"></circle>\\n\\n  <circle\\n    *ngSwitchCase=\\\"false\\\"\\n    cx=\\\"50%\\\"\\n    cy=\\\"50%\\\"\\n    [attr.r]=\\\"_getCircleRadius()\\\"\\n    [style.stroke-dashoffset.px]=\\\"_getStrokeDashOffset()\\\"\\n    [style.stroke-dasharray.px]=\\\"_getStrokeCircumference()\\\"\\n    [style.stroke-width.%]=\\\"_getCircleStrokeWidth()\\\"></circle>\\n</svg>\\n\", styles: [\".mat-progress-spinner{display:block;position:relative;overflow:hidden}.mat-progress-spinner svg{position:absolute;transform:rotate(-90deg);top:0;left:0;transform-origin:center;overflow:visible}.mat-progress-spinner circle{fill:transparent;transform-origin:center;transition:stroke-dashoffset 225ms linear}._mat-animation-noopable.mat-progress-spinner circle{transition:none;animation:none}.cdk-high-contrast-active .mat-progress-spinner circle{stroke:CanvasText}.mat-progress-spinner.mat-progress-spinner-indeterminate-animation[mode=indeterminate] svg{animation:mat-progress-spinner-linear-rotate 2000ms linear infinite}._mat-animation-noopable.mat-progress-spinner.mat-progress-spinner-indeterminate-animation[mode=indeterminate] svg{transition:none;animation:none}.mat-progress-spinner.mat-progress-spinner-indeterminate-animation[mode=indeterminate] circle{transition-property:stroke;animation-duration:4000ms;animation-timing-function:cubic-bezier(0.35, 0, 0.25, 1);animation-iteration-count:infinite}._mat-animation-noopable.mat-progress-spinner.mat-progress-spinner-indeterminate-animation[mode=indeterminate] circle{transition:none;animation:none}@keyframes mat-progress-spinner-linear-rotate{0%{transform:rotate(0deg)}100%{transform:rotate(360deg)}}@keyframes mat-progress-spinner-stroke-rotate-100{0%{stroke-dashoffset:268.606171575px;transform:rotate(0)}12.5%{stroke-dashoffset:56.5486677px;transform:rotate(0)}12.5001%{stroke-dashoffset:56.5486677px;transform:rotateX(180deg) rotate(72.5deg)}25%{stroke-dashoffset:268.606171575px;transform:rotateX(180deg) rotate(72.5deg)}25.0001%{stroke-dashoffset:268.606171575px;transform:rotate(270deg)}37.5%{stroke-dashoffset:56.5486677px;transform:rotate(270deg)}37.5001%{stroke-dashoffset:56.5486677px;transform:rotateX(180deg) rotate(161.5deg)}50%{stroke-dashoffset:268.606171575px;transform:rotateX(180deg) rotate(161.5deg)}50.0001%{stroke-dashoffset:268.606171575px;transform:rotate(180deg)}62.5%{stroke-dashoffset:56.5486677px;transform:rotate(180deg)}62.5001%{stroke-dashoffset:56.5486677px;transform:rotateX(180deg) rotate(251.5deg)}75%{stroke-dashoffset:268.606171575px;transform:rotateX(180deg) rotate(251.5deg)}75.0001%{stroke-dashoffset:268.606171575px;transform:rotate(90deg)}87.5%{stroke-dashoffset:56.5486677px;transform:rotate(90deg)}87.5001%{stroke-dashoffset:56.5486677px;transform:rotateX(180deg) rotate(341.5deg)}100%{stroke-dashoffset:268.606171575px;transform:rotateX(180deg) rotate(341.5deg)}}\\n\"], directives: [{ type: i2.NgSwitch, selector: \"[ngSwitch]\", inputs: [\"ngSwitch\"] }, { type: i2.NgSwitchCase, selector: \"[ngSwitchCase]\", inputs: [\"ngSwitchCase\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatProgressSpinner, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-progress-spinner', exportAs: 'matProgressSpinner', host: {\n                        'role': 'progressbar',\n                        'class': 'mat-progress-spinner',\n                        // set tab index to -1 so screen readers will read the aria-label\n                        // Note: there is a known issue with JAWS that does not read progressbar aria labels on FireFox\n                        'tabindex': '-1',\n                        '[class._mat-animation-noopable]': `_noopAnimations`,\n                        '[style.width.px]': 'diameter',\n                        '[style.height.px]': 'diameter',\n                        '[attr.aria-valuemin]': 'mode === \"determinate\" ? 0 : null',\n                        '[attr.aria-valuemax]': 'mode === \"determinate\" ? 100 : null',\n                        '[attr.aria-valuenow]': 'mode === \"determinate\" ? value : null',\n                        '[attr.mode]': 'mode',\n                    }, inputs: ['color'], changeDetection: ChangeDetectionStrategy.OnPush, encapsulation: ViewEncapsulation.None, template: \"<!--\\n  preserveAspectRatio of xMidYMid meet as the center of the viewport is the circle's\\n  center. The center of the circle will remain at the center of the mat-progress-spinner\\n  element containing the SVG.\\n-->\\n<!--\\n  All children need to be hidden for screen readers in order to support ChromeVox.\\n  More context in the issue: https://github.com/angular/components/issues/22165.\\n-->\\n<svg\\n  [style.width.px]=\\\"diameter\\\"\\n  [style.height.px]=\\\"diameter\\\"\\n  [attr.viewBox]=\\\"_getViewBox()\\\"\\n  preserveAspectRatio=\\\"xMidYMid meet\\\"\\n  focusable=\\\"false\\\"\\n  [ngSwitch]=\\\"mode === 'indeterminate'\\\"\\n  aria-hidden=\\\"true\\\">\\n\\n  <!--\\n    Technically we can reuse the same `circle` element, however Safari has an issue that breaks\\n    the SVG rendering in determinate mode, after switching between indeterminate and determinate.\\n    Using a different element avoids the issue. An alternative to this is adding `display: none`\\n    for a split second and then removing it when switching between modes, but it's hard to know\\n    for how long to hide the element and it can cause the UI to blink.\\n  -->\\n  <circle\\n    *ngSwitchCase=\\\"true\\\"\\n    cx=\\\"50%\\\"\\n    cy=\\\"50%\\\"\\n    [attr.r]=\\\"_getCircleRadius()\\\"\\n    [style.animation-name]=\\\"'mat-progress-spinner-stroke-rotate-' + _spinnerAnimationLabel\\\"\\n    [style.stroke-dashoffset.px]=\\\"_getStrokeDashOffset()\\\"\\n    [style.stroke-dasharray.px]=\\\"_getStrokeCircumference()\\\"\\n    [style.stroke-width.%]=\\\"_getCircleStrokeWidth()\\\"></circle>\\n\\n  <circle\\n    *ngSwitchCase=\\\"false\\\"\\n    cx=\\\"50%\\\"\\n    cy=\\\"50%\\\"\\n    [attr.r]=\\\"_getCircleRadius()\\\"\\n    [style.stroke-dashoffset.px]=\\\"_getStrokeDashOffset()\\\"\\n    [style.stroke-dasharray.px]=\\\"_getStrokeCircumference()\\\"\\n    [style.stroke-width.%]=\\\"_getCircleStrokeWidth()\\\"></circle>\\n</svg>\\n\", styles: [\".mat-progress-spinner{display:block;position:relative;overflow:hidden}.mat-progress-spinner svg{position:absolute;transform:rotate(-90deg);top:0;left:0;transform-origin:center;overflow:visible}.mat-progress-spinner circle{fill:transparent;transform-origin:center;transition:stroke-dashoffset 225ms linear}._mat-animation-noopable.mat-progress-spinner circle{transition:none;animation:none}.cdk-high-contrast-active .mat-progress-spinner circle{stroke:CanvasText}.mat-progress-spinner.mat-progress-spinner-indeterminate-animation[mode=indeterminate] svg{animation:mat-progress-spinner-linear-rotate 2000ms linear infinite}._mat-animation-noopable.mat-progress-spinner.mat-progress-spinner-indeterminate-animation[mode=indeterminate] svg{transition:none;animation:none}.mat-progress-spinner.mat-progress-spinner-indeterminate-animation[mode=indeterminate] circle{transition-property:stroke;animation-duration:4000ms;animation-timing-function:cubic-bezier(0.35, 0, 0.25, 1);animation-iteration-count:infinite}._mat-animation-noopable.mat-progress-spinner.mat-progress-spinner-indeterminate-animation[mode=indeterminate] circle{transition:none;animation:none}@keyframes mat-progress-spinner-linear-rotate{0%{transform:rotate(0deg)}100%{transform:rotate(360deg)}}@keyframes mat-progress-spinner-stroke-rotate-100{0%{stroke-dashoffset:268.606171575px;transform:rotate(0)}12.5%{stroke-dashoffset:56.5486677px;transform:rotate(0)}12.5001%{stroke-dashoffset:56.5486677px;transform:rotateX(180deg) rotate(72.5deg)}25%{stroke-dashoffset:268.606171575px;transform:rotateX(180deg) rotate(72.5deg)}25.0001%{stroke-dashoffset:268.606171575px;transform:rotate(270deg)}37.5%{stroke-dashoffset:56.5486677px;transform:rotate(270deg)}37.5001%{stroke-dashoffset:56.5486677px;transform:rotateX(180deg) rotate(161.5deg)}50%{stroke-dashoffset:268.606171575px;transform:rotateX(180deg) rotate(161.5deg)}50.0001%{stroke-dashoffset:268.606171575px;transform:rotate(180deg)}62.5%{stroke-dashoffset:56.5486677px;transform:rotate(180deg)}62.5001%{stroke-dashoffset:56.5486677px;transform:rotateX(180deg) rotate(251.5deg)}75%{stroke-dashoffset:268.606171575px;transform:rotateX(180deg) rotate(251.5deg)}75.0001%{stroke-dashoffset:268.606171575px;transform:rotate(90deg)}87.5%{stroke-dashoffset:56.5486677px;transform:rotate(90deg)}87.5001%{stroke-dashoffset:56.5486677px;transform:rotateX(180deg) rotate(341.5deg)}100%{stroke-dashoffset:268.606171575px;transform:rotateX(180deg) rotate(341.5deg)}}\\n\"] }]\n        }], ctorParameters: function () {\n        return [{ type: i0.ElementRef }, { type: i1.Platform }, { type: undefined, decorators: [{\n                        type: Optional\n                    }, {\n                        type: Inject,\n                        args: [DOCUMENT]\n                    }] }, { type: undefined, decorators: [{\n                        type: Optional\n                    }, {\n                        type: Inject,\n                        args: [ANIMATION_MODULE_TYPE]\n                    }] }, { type: undefined, decorators: [{\n                        type: Inject,\n                        args: [MAT_PROGRESS_SPINNER_DEFAULT_OPTIONS]\n                    }] }];\n    }, propDecorators: { diameter: [{\n                type: Input\n            }], strokeWidth: [{\n                type: Input\n            }], mode: [{\n                type: Input\n            }], value: [{\n                type: Input\n            }] } });\n/**\n * `<mat-spinner>` component.\n *\n * This is a component definition to be used as a convenience reference to create an\n * indeterminate `<mat-progress-spinner>` instance.\n */\nclass MatSpinner extends MatProgressSpinner {\n    constructor(elementRef, platform, document, animationMode, defaults) {\n        super(elementRef, platform, document, animationMode, defaults);\n        this.mode = 'indeterminate';\n    }\n}\nMatSpinner.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatSpinner, deps: [{ token: i0.ElementRef }, { token: i1.Platform }, { token: DOCUMENT, optional: true }, { token: ANIMATION_MODULE_TYPE, optional: true }, { token: MAT_PROGRESS_SPINNER_DEFAULT_OPTIONS }], target: i0.ɵɵFactoryTarget.Component });\nMatSpinner.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: MatSpinner, selector: \"mat-spinner\", inputs: { color: \"color\" }, host: { attributes: { \"role\": \"progressbar\", \"mode\": \"indeterminate\" }, properties: { \"class._mat-animation-noopable\": \"_noopAnimations\", \"style.width.px\": \"diameter\", \"style.height.px\": \"diameter\" }, classAttribute: \"mat-spinner mat-progress-spinner\" }, usesInheritance: true, ngImport: i0, template: \"<!--\\n  preserveAspectRatio of xMidYMid meet as the center of the viewport is the circle's\\n  center. The center of the circle will remain at the center of the mat-progress-spinner\\n  element containing the SVG.\\n-->\\n<!--\\n  All children need to be hidden for screen readers in order to support ChromeVox.\\n  More context in the issue: https://github.com/angular/components/issues/22165.\\n-->\\n<svg\\n  [style.width.px]=\\\"diameter\\\"\\n  [style.height.px]=\\\"diameter\\\"\\n  [attr.viewBox]=\\\"_getViewBox()\\\"\\n  preserveAspectRatio=\\\"xMidYMid meet\\\"\\n  focusable=\\\"false\\\"\\n  [ngSwitch]=\\\"mode === 'indeterminate'\\\"\\n  aria-hidden=\\\"true\\\">\\n\\n  <!--\\n    Technically we can reuse the same `circle` element, however Safari has an issue that breaks\\n    the SVG rendering in determinate mode, after switching between indeterminate and determinate.\\n    Using a different element avoids the issue. An alternative to this is adding `display: none`\\n    for a split second and then removing it when switching between modes, but it's hard to know\\n    for how long to hide the element and it can cause the UI to blink.\\n  -->\\n  <circle\\n    *ngSwitchCase=\\\"true\\\"\\n    cx=\\\"50%\\\"\\n    cy=\\\"50%\\\"\\n    [attr.r]=\\\"_getCircleRadius()\\\"\\n    [style.animation-name]=\\\"'mat-progress-spinner-stroke-rotate-' + _spinnerAnimationLabel\\\"\\n    [style.stroke-dashoffset.px]=\\\"_getStrokeDashOffset()\\\"\\n    [style.stroke-dasharray.px]=\\\"_getStrokeCircumference()\\\"\\n    [style.stroke-width.%]=\\\"_getCircleStrokeWidth()\\\"></circle>\\n\\n  <circle\\n    *ngSwitchCase=\\\"false\\\"\\n    cx=\\\"50%\\\"\\n    cy=\\\"50%\\\"\\n    [attr.r]=\\\"_getCircleRadius()\\\"\\n    [style.stroke-dashoffset.px]=\\\"_getStrokeDashOffset()\\\"\\n    [style.stroke-dasharray.px]=\\\"_getStrokeCircumference()\\\"\\n    [style.stroke-width.%]=\\\"_getCircleStrokeWidth()\\\"></circle>\\n</svg>\\n\", styles: [\".mat-progress-spinner{display:block;position:relative;overflow:hidden}.mat-progress-spinner svg{position:absolute;transform:rotate(-90deg);top:0;left:0;transform-origin:center;overflow:visible}.mat-progress-spinner circle{fill:transparent;transform-origin:center;transition:stroke-dashoffset 225ms linear}._mat-animation-noopable.mat-progress-spinner circle{transition:none;animation:none}.cdk-high-contrast-active .mat-progress-spinner circle{stroke:CanvasText}.mat-progress-spinner.mat-progress-spinner-indeterminate-animation[mode=indeterminate] svg{animation:mat-progress-spinner-linear-rotate 2000ms linear infinite}._mat-animation-noopable.mat-progress-spinner.mat-progress-spinner-indeterminate-animation[mode=indeterminate] svg{transition:none;animation:none}.mat-progress-spinner.mat-progress-spinner-indeterminate-animation[mode=indeterminate] circle{transition-property:stroke;animation-duration:4000ms;animation-timing-function:cubic-bezier(0.35, 0, 0.25, 1);animation-iteration-count:infinite}._mat-animation-noopable.mat-progress-spinner.mat-progress-spinner-indeterminate-animation[mode=indeterminate] circle{transition:none;animation:none}@keyframes mat-progress-spinner-linear-rotate{0%{transform:rotate(0deg)}100%{transform:rotate(360deg)}}@keyframes mat-progress-spinner-stroke-rotate-100{0%{stroke-dashoffset:268.606171575px;transform:rotate(0)}12.5%{stroke-dashoffset:56.5486677px;transform:rotate(0)}12.5001%{stroke-dashoffset:56.5486677px;transform:rotateX(180deg) rotate(72.5deg)}25%{stroke-dashoffset:268.606171575px;transform:rotateX(180deg) rotate(72.5deg)}25.0001%{stroke-dashoffset:268.606171575px;transform:rotate(270deg)}37.5%{stroke-dashoffset:56.5486677px;transform:rotate(270deg)}37.5001%{stroke-dashoffset:56.5486677px;transform:rotateX(180deg) rotate(161.5deg)}50%{stroke-dashoffset:268.606171575px;transform:rotateX(180deg) rotate(161.5deg)}50.0001%{stroke-dashoffset:268.606171575px;transform:rotate(180deg)}62.5%{stroke-dashoffset:56.5486677px;transform:rotate(180deg)}62.5001%{stroke-dashoffset:56.5486677px;transform:rotateX(180deg) rotate(251.5deg)}75%{stroke-dashoffset:268.606171575px;transform:rotateX(180deg) rotate(251.5deg)}75.0001%{stroke-dashoffset:268.606171575px;transform:rotate(90deg)}87.5%{stroke-dashoffset:56.5486677px;transform:rotate(90deg)}87.5001%{stroke-dashoffset:56.5486677px;transform:rotateX(180deg) rotate(341.5deg)}100%{stroke-dashoffset:268.606171575px;transform:rotateX(180deg) rotate(341.5deg)}}\\n\"], directives: [{ type: i2.NgSwitch, selector: \"[ngSwitch]\", inputs: [\"ngSwitch\"] }, { type: i2.NgSwitchCase, selector: \"[ngSwitchCase]\", inputs: [\"ngSwitchCase\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatSpinner, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-spinner', host: {\n                        'role': 'progressbar',\n                        'mode': 'indeterminate',\n                        'class': 'mat-spinner mat-progress-spinner',\n                        '[class._mat-animation-noopable]': `_noopAnimations`,\n                        '[style.width.px]': 'diameter',\n                        '[style.height.px]': 'diameter',\n                    }, inputs: ['color'], changeDetection: ChangeDetectionStrategy.OnPush, encapsulation: ViewEncapsulation.None, template: \"<!--\\n  preserveAspectRatio of xMidYMid meet as the center of the viewport is the circle's\\n  center. The center of the circle will remain at the center of the mat-progress-spinner\\n  element containing the SVG.\\n-->\\n<!--\\n  All children need to be hidden for screen readers in order to support ChromeVox.\\n  More context in the issue: https://github.com/angular/components/issues/22165.\\n-->\\n<svg\\n  [style.width.px]=\\\"diameter\\\"\\n  [style.height.px]=\\\"diameter\\\"\\n  [attr.viewBox]=\\\"_getViewBox()\\\"\\n  preserveAspectRatio=\\\"xMidYMid meet\\\"\\n  focusable=\\\"false\\\"\\n  [ngSwitch]=\\\"mode === 'indeterminate'\\\"\\n  aria-hidden=\\\"true\\\">\\n\\n  <!--\\n    Technically we can reuse the same `circle` element, however Safari has an issue that breaks\\n    the SVG rendering in determinate mode, after switching between indeterminate and determinate.\\n    Using a different element avoids the issue. An alternative to this is adding `display: none`\\n    for a split second and then removing it when switching between modes, but it's hard to know\\n    for how long to hide the element and it can cause the UI to blink.\\n  -->\\n  <circle\\n    *ngSwitchCase=\\\"true\\\"\\n    cx=\\\"50%\\\"\\n    cy=\\\"50%\\\"\\n    [attr.r]=\\\"_getCircleRadius()\\\"\\n    [style.animation-name]=\\\"'mat-progress-spinner-stroke-rotate-' + _spinnerAnimationLabel\\\"\\n    [style.stroke-dashoffset.px]=\\\"_getStrokeDashOffset()\\\"\\n    [style.stroke-dasharray.px]=\\\"_getStrokeCircumference()\\\"\\n    [style.stroke-width.%]=\\\"_getCircleStrokeWidth()\\\"></circle>\\n\\n  <circle\\n    *ngSwitchCase=\\\"false\\\"\\n    cx=\\\"50%\\\"\\n    cy=\\\"50%\\\"\\n    [attr.r]=\\\"_getCircleRadius()\\\"\\n    [style.stroke-dashoffset.px]=\\\"_getStrokeDashOffset()\\\"\\n    [style.stroke-dasharray.px]=\\\"_getStrokeCircumference()\\\"\\n    [style.stroke-width.%]=\\\"_getCircleStrokeWidth()\\\"></circle>\\n</svg>\\n\", styles: [\".mat-progress-spinner{display:block;position:relative;overflow:hidden}.mat-progress-spinner svg{position:absolute;transform:rotate(-90deg);top:0;left:0;transform-origin:center;overflow:visible}.mat-progress-spinner circle{fill:transparent;transform-origin:center;transition:stroke-dashoffset 225ms linear}._mat-animation-noopable.mat-progress-spinner circle{transition:none;animation:none}.cdk-high-contrast-active .mat-progress-spinner circle{stroke:CanvasText}.mat-progress-spinner.mat-progress-spinner-indeterminate-animation[mode=indeterminate] svg{animation:mat-progress-spinner-linear-rotate 2000ms linear infinite}._mat-animation-noopable.mat-progress-spinner.mat-progress-spinner-indeterminate-animation[mode=indeterminate] svg{transition:none;animation:none}.mat-progress-spinner.mat-progress-spinner-indeterminate-animation[mode=indeterminate] circle{transition-property:stroke;animation-duration:4000ms;animation-timing-function:cubic-bezier(0.35, 0, 0.25, 1);animation-iteration-count:infinite}._mat-animation-noopable.mat-progress-spinner.mat-progress-spinner-indeterminate-animation[mode=indeterminate] circle{transition:none;animation:none}@keyframes mat-progress-spinner-linear-rotate{0%{transform:rotate(0deg)}100%{transform:rotate(360deg)}}@keyframes mat-progress-spinner-stroke-rotate-100{0%{stroke-dashoffset:268.606171575px;transform:rotate(0)}12.5%{stroke-dashoffset:56.5486677px;transform:rotate(0)}12.5001%{stroke-dashoffset:56.5486677px;transform:rotateX(180deg) rotate(72.5deg)}25%{stroke-dashoffset:268.606171575px;transform:rotateX(180deg) rotate(72.5deg)}25.0001%{stroke-dashoffset:268.606171575px;transform:rotate(270deg)}37.5%{stroke-dashoffset:56.5486677px;transform:rotate(270deg)}37.5001%{stroke-dashoffset:56.5486677px;transform:rotateX(180deg) rotate(161.5deg)}50%{stroke-dashoffset:268.606171575px;transform:rotateX(180deg) rotate(161.5deg)}50.0001%{stroke-dashoffset:268.606171575px;transform:rotate(180deg)}62.5%{stroke-dashoffset:56.5486677px;transform:rotate(180deg)}62.5001%{stroke-dashoffset:56.5486677px;transform:rotateX(180deg) rotate(251.5deg)}75%{stroke-dashoffset:268.606171575px;transform:rotateX(180deg) rotate(251.5deg)}75.0001%{stroke-dashoffset:268.606171575px;transform:rotate(90deg)}87.5%{stroke-dashoffset:56.5486677px;transform:rotate(90deg)}87.5001%{stroke-dashoffset:56.5486677px;transform:rotateX(180deg) rotate(341.5deg)}100%{stroke-dashoffset:268.606171575px;transform:rotateX(180deg) rotate(341.5deg)}}\\n\"] }]\n        }], ctorParameters: function () {\n        return [{ type: i0.ElementRef }, { type: i1.Platform }, { type: undefined, decorators: [{\n                        type: Optional\n                    }, {\n                        type: Inject,\n                        args: [DOCUMENT]\n                    }] }, { type: undefined, decorators: [{\n                        type: Optional\n                    }, {\n                        type: Inject,\n                        args: [ANIMATION_MODULE_TYPE]\n                    }] }, { type: undefined, decorators: [{\n                        type: Inject,\n                        args: [MAT_PROGRESS_SPINNER_DEFAULT_OPTIONS]\n                    }] }];\n    } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass MatProgressSpinnerModule {\n}\nMatProgressSpinnerModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatProgressSpinnerModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nMatProgressSpinnerModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatProgressSpinnerModule, declarations: [MatProgressSpinner, MatSpinner], imports: [MatCommonModule, CommonModule], exports: [MatProgressSpinner, MatSpinner, MatCommonModule] });\nMatProgressSpinnerModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatProgressSpinnerModule, imports: [[MatCommonModule, CommonModule], MatCommonModule] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatProgressSpinnerModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [MatCommonModule, CommonModule],\n                    exports: [MatProgressSpinner, MatSpinner, MatCommonModule],\n                    declarations: [MatProgressSpinner, MatSpinner],\n                }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_PROGRESS_SPINNER_DEFAULT_OPTIONS, MAT_PROGRESS_SPINNER_DEFAULT_OPTIONS_FACTORY, MatProgressSpinner, MatProgressSpinnerModule, MatSpinner };\n","import * as i3 from '@angular/cdk/platform';\nimport { PlatformModule } from '@angular/cdk/platform';\nimport * as i1 from '@angular/cdk/scrolling';\nimport { CdkScrollable, CdkScrollableModule } from '@angular/cdk/scrolling';\nimport * as i5 from '@angular/common';\nimport { DOCUMENT, CommonModule } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { InjectionToken, forwardRef, Component, ChangeDetectionStrategy, ViewEncapsulation, Inject, EventEmitter, Optional, Input, Output, QueryList, ContentChildren, ContentChild, ViewChild, NgModule } from '@angular/core';\nimport { MatCommonModule } from '@angular/material/core';\nimport { coerceBooleanProperty, coerceNumberProperty } from '@angular/cdk/coercion';\nimport { ESCAPE, hasModifierKey } from '@angular/cdk/keycodes';\nimport { Subject, fromEvent, merge } from 'rxjs';\nimport { filter, map, mapTo, takeUntil, distinctUntilChanged, take, startWith, debounceTime } from 'rxjs/operators';\nimport { trigger, state, style, transition, animate } from '@angular/animations';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\nimport * as i2 from '@angular/cdk/a11y';\nimport * as i4 from '@angular/cdk/bidi';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Animations used by the Material drawers.\n * @docs-private\n */\nconst matDrawerAnimations = {\n    /** Animation that slides a drawer in and out. */\n    transformDrawer: trigger('transform', [\n        // We remove the `transform` here completely, rather than setting it to zero, because:\n        // 1. Having a transform can cause elements with ripples or an animated\n        //    transform to shift around in Chrome with an RTL layout (see #10023).\n        // 2. 3d transforms causes text to appear blurry on IE and Edge.\n        state('open, open-instant', style({\n            'transform': 'none',\n            'visibility': 'visible',\n        })),\n        state('void', style({\n            // Avoids the shadow showing up when closed in SSR.\n            'box-shadow': 'none',\n            'visibility': 'hidden',\n        })),\n        transition('void => open-instant', animate('0ms')),\n        transition('void <=> open, open-instant => void', animate('400ms cubic-bezier(0.25, 0.8, 0.25, 1)')),\n    ]),\n};\n\n/**\n * Throws an exception when two MatDrawer are matching the same position.\n * @docs-private\n */\nfunction throwMatDuplicatedDrawerError(position) {\n    throw Error(`A drawer was already declared for 'position=\"${position}\"'`);\n}\n/** Configures whether drawers should use auto sizing by default. */\nconst MAT_DRAWER_DEFAULT_AUTOSIZE = new InjectionToken('MAT_DRAWER_DEFAULT_AUTOSIZE', {\n    providedIn: 'root',\n    factory: MAT_DRAWER_DEFAULT_AUTOSIZE_FACTORY,\n});\n/**\n * Used to provide a drawer container to a drawer while avoiding circular references.\n * @docs-private\n */\nconst MAT_DRAWER_CONTAINER = new InjectionToken('MAT_DRAWER_CONTAINER');\n/** @docs-private */\nfunction MAT_DRAWER_DEFAULT_AUTOSIZE_FACTORY() {\n    return false;\n}\nclass MatDrawerContent extends CdkScrollable {\n    constructor(_changeDetectorRef, _container, elementRef, scrollDispatcher, ngZone) {\n        super(elementRef, scrollDispatcher, ngZone);\n        this._changeDetectorRef = _changeDetectorRef;\n        this._container = _container;\n    }\n    ngAfterContentInit() {\n        this._container._contentMarginChanges.subscribe(() => {\n            this._changeDetectorRef.markForCheck();\n        });\n    }\n}\nMatDrawerContent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatDrawerContent, deps: [{ token: i0.ChangeDetectorRef }, { token: forwardRef(() => MatDrawerContainer) }, { token: i0.ElementRef }, { token: i1.ScrollDispatcher }, { token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Component });\nMatDrawerContent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: MatDrawerContent, selector: \"mat-drawer-content\", host: { properties: { \"style.margin-left.px\": \"_container._contentMargins.left\", \"style.margin-right.px\": \"_container._contentMargins.right\" }, classAttribute: \"mat-drawer-content\" }, usesInheritance: true, ngImport: i0, template: '<ng-content></ng-content>', isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatDrawerContent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'mat-drawer-content',\n                    template: '<ng-content></ng-content>',\n                    host: {\n                        'class': 'mat-drawer-content',\n                        '[style.margin-left.px]': '_container._contentMargins.left',\n                        '[style.margin-right.px]': '_container._contentMargins.right',\n                    },\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    encapsulation: ViewEncapsulation.None,\n                }]\n        }], ctorParameters: function () {\n        return [{ type: i0.ChangeDetectorRef }, { type: MatDrawerContainer, decorators: [{\n                        type: Inject,\n                        args: [forwardRef(() => MatDrawerContainer)]\n                    }] }, { type: i0.ElementRef }, { type: i1.ScrollDispatcher }, { type: i0.NgZone }];\n    } });\n/**\n * This component corresponds to a drawer that can be opened on the drawer container.\n */\nclass MatDrawer {\n    constructor(_elementRef, _focusTrapFactory, _focusMonitor, _platform, _ngZone, _interactivityChecker, _doc, _container) {\n        this._elementRef = _elementRef;\n        this._focusTrapFactory = _focusTrapFactory;\n        this._focusMonitor = _focusMonitor;\n        this._platform = _platform;\n        this._ngZone = _ngZone;\n        this._interactivityChecker = _interactivityChecker;\n        this._doc = _doc;\n        this._container = _container;\n        this._elementFocusedBeforeDrawerWasOpened = null;\n        /** Whether the drawer is initialized. Used for disabling the initial animation. */\n        this._enableAnimations = false;\n        this._position = 'start';\n        this._mode = 'over';\n        this._disableClose = false;\n        this._opened = false;\n        /** Emits whenever the drawer has started animating. */\n        this._animationStarted = new Subject();\n        /** Emits whenever the drawer is done animating. */\n        this._animationEnd = new Subject();\n        /** Current state of the sidenav animation. */\n        this._animationState = 'void';\n        /** Event emitted when the drawer open state is changed. */\n        this.openedChange =\n            // Note this has to be async in order to avoid some issues with two-bindings (see #8872).\n            new EventEmitter(/* isAsync */ true);\n        /** Event emitted when the drawer has been opened. */\n        this._openedStream = this.openedChange.pipe(filter(o => o), map(() => { }));\n        /** Event emitted when the drawer has started opening. */\n        this.openedStart = this._animationStarted.pipe(filter(e => e.fromState !== e.toState && e.toState.indexOf('open') === 0), mapTo(undefined));\n        /** Event emitted when the drawer has been closed. */\n        this._closedStream = this.openedChange.pipe(filter(o => !o), map(() => { }));\n        /** Event emitted when the drawer has started closing. */\n        this.closedStart = this._animationStarted.pipe(filter(e => e.fromState !== e.toState && e.toState === 'void'), mapTo(undefined));\n        /** Emits when the component is destroyed. */\n        this._destroyed = new Subject();\n        /** Event emitted when the drawer's position changes. */\n        // tslint:disable-next-line:no-output-on-prefix\n        this.onPositionChanged = new EventEmitter();\n        /**\n         * An observable that emits when the drawer mode changes. This is used by the drawer container to\n         * to know when to when the mode changes so it can adapt the margins on the content.\n         */\n        this._modeChanged = new Subject();\n        this.openedChange.subscribe((opened) => {\n            if (opened) {\n                if (this._doc) {\n                    this._elementFocusedBeforeDrawerWasOpened = this._doc.activeElement;\n                }\n                this._takeFocus();\n            }\n            else if (this._isFocusWithinDrawer()) {\n                this._restoreFocus(this._openedVia || 'program');\n            }\n        });\n        /**\n         * Listen to `keydown` events outside the zone so that change detection is not run every\n         * time a key is pressed. Instead we re-enter the zone only if the `ESC` key is pressed\n         * and we don't have close disabled.\n         */\n        this._ngZone.runOutsideAngular(() => {\n            fromEvent(this._elementRef.nativeElement, 'keydown')\n                .pipe(filter(event => {\n                return event.keyCode === ESCAPE && !this.disableClose && !hasModifierKey(event);\n            }), takeUntil(this._destroyed))\n                .subscribe(event => this._ngZone.run(() => {\n                this.close();\n                event.stopPropagation();\n                event.preventDefault();\n            }));\n        });\n        // We need a Subject with distinctUntilChanged, because the `done` event\n        // fires twice on some browsers. See https://github.com/angular/angular/issues/24084\n        this._animationEnd\n            .pipe(distinctUntilChanged((x, y) => {\n            return x.fromState === y.fromState && x.toState === y.toState;\n        }))\n            .subscribe((event) => {\n            const { fromState, toState } = event;\n            if ((toState.indexOf('open') === 0 && fromState === 'void') ||\n                (toState === 'void' && fromState.indexOf('open') === 0)) {\n                this.openedChange.emit(this._opened);\n            }\n        });\n    }\n    /** The side that the drawer is attached to. */\n    get position() {\n        return this._position;\n    }\n    set position(value) {\n        // Make sure we have a valid value.\n        value = value === 'end' ? 'end' : 'start';\n        if (value != this._position) {\n            this._position = value;\n            this.onPositionChanged.emit();\n        }\n    }\n    /** Mode of the drawer; one of 'over', 'push' or 'side'. */\n    get mode() {\n        return this._mode;\n    }\n    set mode(value) {\n        this._mode = value;\n        this._updateFocusTrapState();\n        this._modeChanged.next();\n    }\n    /** Whether the drawer can be closed with the escape key or by clicking on the backdrop. */\n    get disableClose() {\n        return this._disableClose;\n    }\n    set disableClose(value) {\n        this._disableClose = coerceBooleanProperty(value);\n    }\n    /**\n     * Whether the drawer should focus the first focusable element automatically when opened.\n     * Defaults to false in when `mode` is set to `side`, otherwise defaults to `true`. If explicitly\n     * enabled, focus will be moved into the sidenav in `side` mode as well.\n     * @breaking-change 14.0.0 Remove boolean option from autoFocus. Use string or AutoFocusTarget\n     * instead.\n     */\n    get autoFocus() {\n        const value = this._autoFocus;\n        // Note that usually we don't allow autoFocus to be set to `first-tabbable` in `side` mode,\n        // because we don't know how the sidenav is being used, but in some cases it still makes\n        // sense to do it. The consumer can explicitly set `autoFocus`.\n        if (value == null) {\n            if (this.mode === 'side') {\n                return 'dialog';\n            }\n            else {\n                return 'first-tabbable';\n            }\n        }\n        return value;\n    }\n    set autoFocus(value) {\n        if (value === 'true' || value === 'false' || value == null) {\n            value = coerceBooleanProperty(value);\n        }\n        this._autoFocus = value;\n    }\n    /**\n     * Whether the drawer is opened. We overload this because we trigger an event when it\n     * starts or end.\n     */\n    get opened() {\n        return this._opened;\n    }\n    set opened(value) {\n        this.toggle(coerceBooleanProperty(value));\n    }\n    /**\n     * Focuses the provided element. If the element is not focusable, it will add a tabIndex\n     * attribute to forcefully focus it. The attribute is removed after focus is moved.\n     * @param element The element to focus.\n     */\n    _forceFocus(element, options) {\n        if (!this._interactivityChecker.isFocusable(element)) {\n            element.tabIndex = -1;\n            // The tabindex attribute should be removed to avoid navigating to that element again\n            this._ngZone.runOutsideAngular(() => {\n                element.addEventListener('blur', () => element.removeAttribute('tabindex'));\n                element.addEventListener('mousedown', () => element.removeAttribute('tabindex'));\n            });\n        }\n        element.focus(options);\n    }\n    /**\n     * Focuses the first element that matches the given selector within the focus trap.\n     * @param selector The CSS selector for the element to set focus to.\n     */\n    _focusByCssSelector(selector, options) {\n        let elementToFocus = this._elementRef.nativeElement.querySelector(selector);\n        if (elementToFocus) {\n            this._forceFocus(elementToFocus, options);\n        }\n    }\n    /**\n     * Moves focus into the drawer. Note that this works even if\n     * the focus trap is disabled in `side` mode.\n     */\n    _takeFocus() {\n        if (!this._focusTrap) {\n            return;\n        }\n        const element = this._elementRef.nativeElement;\n        // When autoFocus is not on the sidenav, if the element cannot be focused or does\n        // not exist, focus the sidenav itself so the keyboard navigation still works.\n        // We need to check that `focus` is a function due to Universal.\n        switch (this.autoFocus) {\n            case false:\n            case 'dialog':\n                return;\n            case true:\n            case 'first-tabbable':\n                this._focusTrap.focusInitialElementWhenReady().then(hasMovedFocus => {\n                    if (!hasMovedFocus && typeof this._elementRef.nativeElement.focus === 'function') {\n                        element.focus();\n                    }\n                });\n                break;\n            case 'first-heading':\n                this._focusByCssSelector('h1, h2, h3, h4, h5, h6, [role=\"heading\"]');\n                break;\n            default:\n                this._focusByCssSelector(this.autoFocus);\n                break;\n        }\n    }\n    /**\n     * Restores focus to the element that was originally focused when the drawer opened.\n     * If no element was focused at that time, the focus will be restored to the drawer.\n     */\n    _restoreFocus(focusOrigin) {\n        if (this.autoFocus === 'dialog') {\n            return;\n        }\n        if (this._elementFocusedBeforeDrawerWasOpened) {\n            this._focusMonitor.focusVia(this._elementFocusedBeforeDrawerWasOpened, focusOrigin);\n        }\n        else {\n            this._elementRef.nativeElement.blur();\n        }\n        this._elementFocusedBeforeDrawerWasOpened = null;\n    }\n    /** Whether focus is currently within the drawer. */\n    _isFocusWithinDrawer() {\n        var _a;\n        const activeEl = (_a = this._doc) === null || _a === void 0 ? void 0 : _a.activeElement;\n        return !!activeEl && this._elementRef.nativeElement.contains(activeEl);\n    }\n    ngAfterContentInit() {\n        this._focusTrap = this._focusTrapFactory.create(this._elementRef.nativeElement);\n        this._updateFocusTrapState();\n    }\n    ngAfterContentChecked() {\n        // Enable the animations after the lifecycle hooks have run, in order to avoid animating\n        // drawers that are open by default. When we're on the server, we shouldn't enable the\n        // animations, because we don't want the drawer to animate the first time the user sees\n        // the page.\n        if (this._platform.isBrowser) {\n            this._enableAnimations = true;\n        }\n    }\n    ngOnDestroy() {\n        if (this._focusTrap) {\n            this._focusTrap.destroy();\n        }\n        this._animationStarted.complete();\n        this._animationEnd.complete();\n        this._modeChanged.complete();\n        this._destroyed.next();\n        this._destroyed.complete();\n    }\n    /**\n     * Open the drawer.\n     * @param openedVia Whether the drawer was opened by a key press, mouse click or programmatically.\n     * Used for focus management after the sidenav is closed.\n     */\n    open(openedVia) {\n        return this.toggle(true, openedVia);\n    }\n    /** Close the drawer. */\n    close() {\n        return this.toggle(false);\n    }\n    /** Closes the drawer with context that the backdrop was clicked. */\n    _closeViaBackdropClick() {\n        // If the drawer is closed upon a backdrop click, we always want to restore focus. We\n        // don't need to check whether focus is currently in the drawer, as clicking on the\n        // backdrop causes blurs the active element.\n        return this._setOpen(/* isOpen */ false, /* restoreFocus */ true, 'mouse');\n    }\n    /**\n     * Toggle this drawer.\n     * @param isOpen Whether the drawer should be open.\n     * @param openedVia Whether the drawer was opened by a key press, mouse click or programmatically.\n     * Used for focus management after the sidenav is closed.\n     */\n    toggle(isOpen = !this.opened, openedVia) {\n        // If the focus is currently inside the drawer content and we are closing the drawer,\n        // restore the focus to the initially focused element (when the drawer opened).\n        if (isOpen && openedVia) {\n            this._openedVia = openedVia;\n        }\n        const result = this._setOpen(isOpen, \n        /* restoreFocus */ !isOpen && this._isFocusWithinDrawer(), this._openedVia || 'program');\n        if (!isOpen) {\n            this._openedVia = null;\n        }\n        return result;\n    }\n    /**\n     * Toggles the opened state of the drawer.\n     * @param isOpen Whether the drawer should open or close.\n     * @param restoreFocus Whether focus should be restored on close.\n     * @param focusOrigin Origin to use when restoring focus.\n     */\n    _setOpen(isOpen, restoreFocus, focusOrigin) {\n        this._opened = isOpen;\n        if (isOpen) {\n            this._animationState = this._enableAnimations ? 'open' : 'open-instant';\n        }\n        else {\n            this._animationState = 'void';\n            if (restoreFocus) {\n                this._restoreFocus(focusOrigin);\n            }\n        }\n        this._updateFocusTrapState();\n        return new Promise(resolve => {\n            this.openedChange.pipe(take(1)).subscribe(open => resolve(open ? 'open' : 'close'));\n        });\n    }\n    _getWidth() {\n        return this._elementRef.nativeElement ? this._elementRef.nativeElement.offsetWidth || 0 : 0;\n    }\n    /** Updates the enabled state of the focus trap. */\n    _updateFocusTrapState() {\n        if (this._focusTrap) {\n            // The focus trap is only enabled when the drawer is open in any mode other than side.\n            this._focusTrap.enabled = this.opened && this.mode !== 'side';\n        }\n    }\n}\nMatDrawer.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatDrawer, deps: [{ token: i0.ElementRef }, { token: i2.FocusTrapFactory }, { token: i2.FocusMonitor }, { token: i3.Platform }, { token: i0.NgZone }, { token: i2.InteractivityChecker }, { token: DOCUMENT, optional: true }, { token: MAT_DRAWER_CONTAINER, optional: true }], target: i0.ɵɵFactoryTarget.Component });\nMatDrawer.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: MatDrawer, selector: \"mat-drawer\", inputs: { position: \"position\", mode: \"mode\", disableClose: \"disableClose\", autoFocus: \"autoFocus\", opened: \"opened\" }, outputs: { openedChange: \"openedChange\", _openedStream: \"opened\", openedStart: \"openedStart\", _closedStream: \"closed\", closedStart: \"closedStart\", onPositionChanged: \"positionChanged\" }, host: { attributes: { \"tabIndex\": \"-1\" }, listeners: { \"@transform.start\": \"_animationStarted.next($event)\", \"@transform.done\": \"_animationEnd.next($event)\" }, properties: { \"attr.align\": \"null\", \"class.mat-drawer-end\": \"position === \\\"end\\\"\", \"class.mat-drawer-over\": \"mode === \\\"over\\\"\", \"class.mat-drawer-push\": \"mode === \\\"push\\\"\", \"class.mat-drawer-side\": \"mode === \\\"side\\\"\", \"class.mat-drawer-opened\": \"opened\", \"@transform\": \"_animationState\" }, classAttribute: \"mat-drawer\" }, exportAs: [\"matDrawer\"], ngImport: i0, template: \"<div class=\\\"mat-drawer-inner-container\\\" cdkScrollable>\\r\\n  <ng-content></ng-content>\\r\\n</div>\\r\\n\", directives: [{ type: i1.CdkScrollable, selector: \"[cdk-scrollable], [cdkScrollable]\" }], animations: [matDrawerAnimations.transformDrawer], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatDrawer, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-drawer', exportAs: 'matDrawer', animations: [matDrawerAnimations.transformDrawer], host: {\n                        'class': 'mat-drawer',\n                        // must prevent the browser from aligning text based on value\n                        '[attr.align]': 'null',\n                        '[class.mat-drawer-end]': 'position === \"end\"',\n                        '[class.mat-drawer-over]': 'mode === \"over\"',\n                        '[class.mat-drawer-push]': 'mode === \"push\"',\n                        '[class.mat-drawer-side]': 'mode === \"side\"',\n                        '[class.mat-drawer-opened]': 'opened',\n                        'tabIndex': '-1',\n                        '[@transform]': '_animationState',\n                        '(@transform.start)': '_animationStarted.next($event)',\n                        '(@transform.done)': '_animationEnd.next($event)',\n                    }, changeDetection: ChangeDetectionStrategy.OnPush, encapsulation: ViewEncapsulation.None, template: \"<div class=\\\"mat-drawer-inner-container\\\" cdkScrollable>\\r\\n  <ng-content></ng-content>\\r\\n</div>\\r\\n\" }]\n        }], ctorParameters: function () {\n        return [{ type: i0.ElementRef }, { type: i2.FocusTrapFactory }, { type: i2.FocusMonitor }, { type: i3.Platform }, { type: i0.NgZone }, { type: i2.InteractivityChecker }, { type: undefined, decorators: [{\n                        type: Optional\n                    }, {\n                        type: Inject,\n                        args: [DOCUMENT]\n                    }] }, { type: MatDrawerContainer, decorators: [{\n                        type: Optional\n                    }, {\n                        type: Inject,\n                        args: [MAT_DRAWER_CONTAINER]\n                    }] }];\n    }, propDecorators: { position: [{\n                type: Input\n            }], mode: [{\n                type: Input\n            }], disableClose: [{\n                type: Input\n            }], autoFocus: [{\n                type: Input\n            }], opened: [{\n                type: Input\n            }], openedChange: [{\n                type: Output\n            }], _openedStream: [{\n                type: Output,\n                args: ['opened']\n            }], openedStart: [{\n                type: Output\n            }], _closedStream: [{\n                type: Output,\n                args: ['closed']\n            }], closedStart: [{\n                type: Output\n            }], onPositionChanged: [{\n                type: Output,\n                args: ['positionChanged']\n            }] } });\n/**\n * `<mat-drawer-container>` component.\n *\n * This is the parent component to one or two `<mat-drawer>`s that validates the state internally\n * and coordinates the backdrop and content styling.\n */\nclass MatDrawerContainer {\n    constructor(_dir, _element, _ngZone, _changeDetectorRef, viewportRuler, defaultAutosize = false, _animationMode) {\n        this._dir = _dir;\n        this._element = _element;\n        this._ngZone = _ngZone;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._animationMode = _animationMode;\n        /** Drawers that belong to this container. */\n        this._drawers = new QueryList();\n        /** Event emitted when the drawer backdrop is clicked. */\n        this.backdropClick = new EventEmitter();\n        /** Emits when the component is destroyed. */\n        this._destroyed = new Subject();\n        /** Emits on every ngDoCheck. Used for debouncing reflows. */\n        this._doCheckSubject = new Subject();\n        /**\n         * Margins to be applied to the content. These are used to push / shrink the drawer content when a\n         * drawer is open. We use margin rather than transform even for push mode because transform breaks\n         * fixed position elements inside of the transformed element.\n         */\n        this._contentMargins = { left: null, right: null };\n        this._contentMarginChanges = new Subject();\n        // If a `Dir` directive exists up the tree, listen direction changes\n        // and update the left/right properties to point to the proper start/end.\n        if (_dir) {\n            _dir.change.pipe(takeUntil(this._destroyed)).subscribe(() => {\n                this._validateDrawers();\n                this.updateContentMargins();\n            });\n        }\n        // Since the minimum width of the sidenav depends on the viewport width,\n        // we need to recompute the margins if the viewport changes.\n        viewportRuler\n            .change()\n            .pipe(takeUntil(this._destroyed))\n            .subscribe(() => this.updateContentMargins());\n        this._autosize = defaultAutosize;\n    }\n    /** The drawer child with the `start` position. */\n    get start() {\n        return this._start;\n    }\n    /** The drawer child with the `end` position. */\n    get end() {\n        return this._end;\n    }\n    /**\n     * Whether to automatically resize the container whenever\n     * the size of any of its drawers changes.\n     *\n     * **Use at your own risk!** Enabling this option can cause layout thrashing by measuring\n     * the drawers on every change detection cycle. Can be configured globally via the\n     * `MAT_DRAWER_DEFAULT_AUTOSIZE` token.\n     */\n    get autosize() {\n        return this._autosize;\n    }\n    set autosize(value) {\n        this._autosize = coerceBooleanProperty(value);\n    }\n    /**\n     * Whether the drawer container should have a backdrop while one of the sidenavs is open.\n     * If explicitly set to `true`, the backdrop will be enabled for drawers in the `side`\n     * mode as well.\n     */\n    get hasBackdrop() {\n        if (this._backdropOverride == null) {\n            return !this._start || this._start.mode !== 'side' || !this._end || this._end.mode !== 'side';\n        }\n        return this._backdropOverride;\n    }\n    set hasBackdrop(value) {\n        this._backdropOverride = value == null ? null : coerceBooleanProperty(value);\n    }\n    /** Reference to the CdkScrollable instance that wraps the scrollable content. */\n    get scrollable() {\n        return this._userContent || this._content;\n    }\n    ngAfterContentInit() {\n        this._allDrawers.changes\n            .pipe(startWith(this._allDrawers), takeUntil(this._destroyed))\n            .subscribe((drawer) => {\n            this._drawers.reset(drawer.filter(item => !item._container || item._container === this));\n            this._drawers.notifyOnChanges();\n        });\n        this._drawers.changes.pipe(startWith(null)).subscribe(() => {\n            this._validateDrawers();\n            this._drawers.forEach((drawer) => {\n                this._watchDrawerToggle(drawer);\n                this._watchDrawerPosition(drawer);\n                this._watchDrawerMode(drawer);\n            });\n            if (!this._drawers.length ||\n                this._isDrawerOpen(this._start) ||\n                this._isDrawerOpen(this._end)) {\n                this.updateContentMargins();\n            }\n            this._changeDetectorRef.markForCheck();\n        });\n        // Avoid hitting the NgZone through the debounce timeout.\n        this._ngZone.runOutsideAngular(() => {\n            this._doCheckSubject\n                .pipe(debounceTime(10), // Arbitrary debounce time, less than a frame at 60fps\n            takeUntil(this._destroyed))\n                .subscribe(() => this.updateContentMargins());\n        });\n    }\n    ngOnDestroy() {\n        this._contentMarginChanges.complete();\n        this._doCheckSubject.complete();\n        this._drawers.destroy();\n        this._destroyed.next();\n        this._destroyed.complete();\n    }\n    /** Calls `open` of both start and end drawers */\n    open() {\n        this._drawers.forEach(drawer => drawer.open());\n    }\n    /** Calls `close` of both start and end drawers */\n    close() {\n        this._drawers.forEach(drawer => drawer.close());\n    }\n    /**\n     * Recalculates and updates the inline styles for the content. Note that this should be used\n     * sparingly, because it causes a reflow.\n     */\n    updateContentMargins() {\n        // 1. For drawers in `over` mode, they don't affect the content.\n        // 2. For drawers in `side` mode they should shrink the content. We do this by adding to the\n        //    left margin (for left drawer) or right margin (for right the drawer).\n        // 3. For drawers in `push` mode the should shift the content without resizing it. We do this by\n        //    adding to the left or right margin and simultaneously subtracting the same amount of\n        //    margin from the other side.\n        let left = 0;\n        let right = 0;\n        if (this._left && this._left.opened) {\n            if (this._left.mode == 'side') {\n                left += this._left._getWidth();\n            }\n            else if (this._left.mode == 'push') {\n                const width = this._left._getWidth();\n                left += width;\n                right -= width;\n            }\n        }\n        if (this._right && this._right.opened) {\n            if (this._right.mode == 'side') {\n                right += this._right._getWidth();\n            }\n            else if (this._right.mode == 'push') {\n                const width = this._right._getWidth();\n                right += width;\n                left -= width;\n            }\n        }\n        // If either `right` or `left` is zero, don't set a style to the element. This\n        // allows users to specify a custom size via CSS class in SSR scenarios where the\n        // measured widths will always be zero. Note that we reset to `null` here, rather\n        // than below, in order to ensure that the types in the `if` below are consistent.\n        left = left || null;\n        right = right || null;\n        if (left !== this._contentMargins.left || right !== this._contentMargins.right) {\n            this._contentMargins = { left, right };\n            // Pull back into the NgZone since in some cases we could be outside. We need to be careful\n            // to do it only when something changed, otherwise we can end up hitting the zone too often.\n            this._ngZone.run(() => this._contentMarginChanges.next(this._contentMargins));\n        }\n    }\n    ngDoCheck() {\n        // If users opted into autosizing, do a check every change detection cycle.\n        if (this._autosize && this._isPushed()) {\n            // Run outside the NgZone, otherwise the debouncer will throw us into an infinite loop.\n            this._ngZone.runOutsideAngular(() => this._doCheckSubject.next());\n        }\n    }\n    /**\n     * Subscribes to drawer events in order to set a class on the main container element when the\n     * drawer is open and the backdrop is visible. This ensures any overflow on the container element\n     * is properly hidden.\n     */\n    _watchDrawerToggle(drawer) {\n        drawer._animationStarted\n            .pipe(filter((event) => event.fromState !== event.toState), takeUntil(this._drawers.changes))\n            .subscribe((event) => {\n            // Set the transition class on the container so that the animations occur. This should not\n            // be set initially because animations should only be triggered via a change in state.\n            if (event.toState !== 'open-instant' && this._animationMode !== 'NoopAnimations') {\n                this._element.nativeElement.classList.add('mat-drawer-transition');\n            }\n            this.updateContentMargins();\n            this._changeDetectorRef.markForCheck();\n        });\n        if (drawer.mode !== 'side') {\n            drawer.openedChange\n                .pipe(takeUntil(this._drawers.changes))\n                .subscribe(() => this._setContainerClass(drawer.opened));\n        }\n    }\n    /**\n     * Subscribes to drawer onPositionChanged event in order to\n     * re-validate drawers when the position changes.\n     */\n    _watchDrawerPosition(drawer) {\n        if (!drawer) {\n            return;\n        }\n        // NOTE: We need to wait for the microtask queue to be empty before validating,\n        // since both drawers may be swapping positions at the same time.\n        drawer.onPositionChanged.pipe(takeUntil(this._drawers.changes)).subscribe(() => {\n            this._ngZone.onMicrotaskEmpty.pipe(take(1)).subscribe(() => {\n                this._validateDrawers();\n            });\n        });\n    }\n    /** Subscribes to changes in drawer mode so we can run change detection. */\n    _watchDrawerMode(drawer) {\n        if (drawer) {\n            drawer._modeChanged\n                .pipe(takeUntil(merge(this._drawers.changes, this._destroyed)))\n                .subscribe(() => {\n                this.updateContentMargins();\n                this._changeDetectorRef.markForCheck();\n            });\n        }\n    }\n    /** Toggles the 'mat-drawer-opened' class on the main 'mat-drawer-container' element. */\n    _setContainerClass(isAdd) {\n        const classList = this._element.nativeElement.classList;\n        const className = 'mat-drawer-container-has-open';\n        if (isAdd) {\n            classList.add(className);\n        }\n        else {\n            classList.remove(className);\n        }\n    }\n    /** Validate the state of the drawer children components. */\n    _validateDrawers() {\n        this._start = this._end = null;\n        // Ensure that we have at most one start and one end drawer.\n        this._drawers.forEach(drawer => {\n            if (drawer.position == 'end') {\n                if (this._end != null && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n                    throwMatDuplicatedDrawerError('end');\n                }\n                this._end = drawer;\n            }\n            else {\n                if (this._start != null && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n                    throwMatDuplicatedDrawerError('start');\n                }\n                this._start = drawer;\n            }\n        });\n        this._right = this._left = null;\n        // Detect if we're LTR or RTL.\n        if (this._dir && this._dir.value === 'rtl') {\n            this._left = this._end;\n            this._right = this._start;\n        }\n        else {\n            this._left = this._start;\n            this._right = this._end;\n        }\n    }\n    /** Whether the container is being pushed to the side by one of the drawers. */\n    _isPushed() {\n        return ((this._isDrawerOpen(this._start) && this._start.mode != 'over') ||\n            (this._isDrawerOpen(this._end) && this._end.mode != 'over'));\n    }\n    _onBackdropClicked() {\n        this.backdropClick.emit();\n        this._closeModalDrawersViaBackdrop();\n    }\n    _closeModalDrawersViaBackdrop() {\n        // Close all open drawers where closing is not disabled and the mode is not `side`.\n        [this._start, this._end]\n            .filter(drawer => drawer && !drawer.disableClose && this._canHaveBackdrop(drawer))\n            .forEach(drawer => drawer._closeViaBackdropClick());\n    }\n    _isShowingBackdrop() {\n        return ((this._isDrawerOpen(this._start) && this._canHaveBackdrop(this._start)) ||\n            (this._isDrawerOpen(this._end) && this._canHaveBackdrop(this._end)));\n    }\n    _canHaveBackdrop(drawer) {\n        return drawer.mode !== 'side' || !!this._backdropOverride;\n    }\n    _isDrawerOpen(drawer) {\n        return drawer != null && drawer.opened;\n    }\n}\nMatDrawerContainer.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatDrawerContainer, deps: [{ token: i4.Directionality, optional: true }, { token: i0.ElementRef }, { token: i0.NgZone }, { token: i0.ChangeDetectorRef }, { token: i1.ViewportRuler }, { token: MAT_DRAWER_DEFAULT_AUTOSIZE }, { token: ANIMATION_MODULE_TYPE, optional: true }], target: i0.ɵɵFactoryTarget.Component });\nMatDrawerContainer.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: MatDrawerContainer, selector: \"mat-drawer-container\", inputs: { autosize: \"autosize\", hasBackdrop: \"hasBackdrop\" }, outputs: { backdropClick: \"backdropClick\" }, host: { properties: { \"class.mat-drawer-container-explicit-backdrop\": \"_backdropOverride\" }, classAttribute: \"mat-drawer-container\" }, providers: [\n        {\n            provide: MAT_DRAWER_CONTAINER,\n            useExisting: MatDrawerContainer,\n        },\n    ], queries: [{ propertyName: \"_content\", first: true, predicate: MatDrawerContent, descendants: true }, { propertyName: \"_allDrawers\", predicate: MatDrawer, descendants: true }], viewQueries: [{ propertyName: \"_userContent\", first: true, predicate: MatDrawerContent, descendants: true }], exportAs: [\"matDrawerContainer\"], ngImport: i0, template: \"<div class=\\\"mat-drawer-backdrop\\\" (click)=\\\"_onBackdropClicked()\\\" *ngIf=\\\"hasBackdrop\\\"\\n     [class.mat-drawer-shown]=\\\"_isShowingBackdrop()\\\"></div>\\n\\n<ng-content select=\\\"mat-drawer\\\"></ng-content>\\n\\n<ng-content select=\\\"mat-drawer-content\\\">\\n</ng-content>\\n<mat-drawer-content *ngIf=\\\"!_content\\\">\\n  <ng-content></ng-content>\\n</mat-drawer-content>\\n\", styles: [\".mat-drawer-container{position:relative;z-index:1;box-sizing:border-box;-webkit-overflow-scrolling:touch;display:block;overflow:hidden}.mat-drawer-container[fullscreen]{top:0;left:0;right:0;bottom:0;position:absolute}.mat-drawer-container[fullscreen].mat-drawer-container-has-open{overflow:hidden}.mat-drawer-container.mat-drawer-container-explicit-backdrop .mat-drawer-side{z-index:3}.mat-drawer-container.ng-animate-disabled .mat-drawer-backdrop,.mat-drawer-container.ng-animate-disabled .mat-drawer-content,.ng-animate-disabled .mat-drawer-container .mat-drawer-backdrop,.ng-animate-disabled .mat-drawer-container .mat-drawer-content{transition:none}.mat-drawer-backdrop{top:0;left:0;right:0;bottom:0;position:absolute;display:block;z-index:3;visibility:hidden}.mat-drawer-backdrop.mat-drawer-shown{visibility:visible}.mat-drawer-transition .mat-drawer-backdrop{transition-duration:400ms;transition-timing-function:cubic-bezier(0.25, 0.8, 0.25, 1);transition-property:background-color,visibility}.cdk-high-contrast-active .mat-drawer-backdrop{opacity:.5}.mat-drawer-content{position:relative;z-index:1;display:block;height:100%;overflow:auto}.mat-drawer-transition .mat-drawer-content{transition-duration:400ms;transition-timing-function:cubic-bezier(0.25, 0.8, 0.25, 1);transition-property:transform,margin-left,margin-right}.mat-drawer{position:relative;z-index:4;display:block;position:absolute;top:0;bottom:0;z-index:3;outline:0;box-sizing:border-box;overflow-y:auto;transform:translate3d(-100%, 0, 0)}.cdk-high-contrast-active .mat-drawer,.cdk-high-contrast-active [dir=rtl] .mat-drawer.mat-drawer-end{border-right:solid 1px currentColor}.cdk-high-contrast-active [dir=rtl] .mat-drawer,.cdk-high-contrast-active .mat-drawer.mat-drawer-end{border-left:solid 1px currentColor;border-right:none}.mat-drawer.mat-drawer-side{z-index:2}.mat-drawer.mat-drawer-end{right:0;transform:translate3d(100%, 0, 0)}[dir=rtl] .mat-drawer{transform:translate3d(100%, 0, 0)}[dir=rtl] .mat-drawer.mat-drawer-end{left:0;right:auto;transform:translate3d(-100%, 0, 0)}.mat-drawer-inner-container{width:100%;height:100%;overflow:auto;-webkit-overflow-scrolling:touch}.mat-sidenav-fixed{position:fixed}\\n\"], components: [{ type: MatDrawerContent, selector: \"mat-drawer-content\" }], directives: [{ type: i5.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatDrawerContainer, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-drawer-container', exportAs: 'matDrawerContainer', host: {\n                        'class': 'mat-drawer-container',\n                        '[class.mat-drawer-container-explicit-backdrop]': '_backdropOverride',\n                    }, changeDetection: ChangeDetectionStrategy.OnPush, encapsulation: ViewEncapsulation.None, providers: [\n                        {\n                            provide: MAT_DRAWER_CONTAINER,\n                            useExisting: MatDrawerContainer,\n                        },\n                    ], template: \"<div class=\\\"mat-drawer-backdrop\\\" (click)=\\\"_onBackdropClicked()\\\" *ngIf=\\\"hasBackdrop\\\"\\n     [class.mat-drawer-shown]=\\\"_isShowingBackdrop()\\\"></div>\\n\\n<ng-content select=\\\"mat-drawer\\\"></ng-content>\\n\\n<ng-content select=\\\"mat-drawer-content\\\">\\n</ng-content>\\n<mat-drawer-content *ngIf=\\\"!_content\\\">\\n  <ng-content></ng-content>\\n</mat-drawer-content>\\n\", styles: [\".mat-drawer-container{position:relative;z-index:1;box-sizing:border-box;-webkit-overflow-scrolling:touch;display:block;overflow:hidden}.mat-drawer-container[fullscreen]{top:0;left:0;right:0;bottom:0;position:absolute}.mat-drawer-container[fullscreen].mat-drawer-container-has-open{overflow:hidden}.mat-drawer-container.mat-drawer-container-explicit-backdrop .mat-drawer-side{z-index:3}.mat-drawer-container.ng-animate-disabled .mat-drawer-backdrop,.mat-drawer-container.ng-animate-disabled .mat-drawer-content,.ng-animate-disabled .mat-drawer-container .mat-drawer-backdrop,.ng-animate-disabled .mat-drawer-container .mat-drawer-content{transition:none}.mat-drawer-backdrop{top:0;left:0;right:0;bottom:0;position:absolute;display:block;z-index:3;visibility:hidden}.mat-drawer-backdrop.mat-drawer-shown{visibility:visible}.mat-drawer-transition .mat-drawer-backdrop{transition-duration:400ms;transition-timing-function:cubic-bezier(0.25, 0.8, 0.25, 1);transition-property:background-color,visibility}.cdk-high-contrast-active .mat-drawer-backdrop{opacity:.5}.mat-drawer-content{position:relative;z-index:1;display:block;height:100%;overflow:auto}.mat-drawer-transition .mat-drawer-content{transition-duration:400ms;transition-timing-function:cubic-bezier(0.25, 0.8, 0.25, 1);transition-property:transform,margin-left,margin-right}.mat-drawer{position:relative;z-index:4;display:block;position:absolute;top:0;bottom:0;z-index:3;outline:0;box-sizing:border-box;overflow-y:auto;transform:translate3d(-100%, 0, 0)}.cdk-high-contrast-active .mat-drawer,.cdk-high-contrast-active [dir=rtl] .mat-drawer.mat-drawer-end{border-right:solid 1px currentColor}.cdk-high-contrast-active [dir=rtl] .mat-drawer,.cdk-high-contrast-active .mat-drawer.mat-drawer-end{border-left:solid 1px currentColor;border-right:none}.mat-drawer.mat-drawer-side{z-index:2}.mat-drawer.mat-drawer-end{right:0;transform:translate3d(100%, 0, 0)}[dir=rtl] .mat-drawer{transform:translate3d(100%, 0, 0)}[dir=rtl] .mat-drawer.mat-drawer-end{left:0;right:auto;transform:translate3d(-100%, 0, 0)}.mat-drawer-inner-container{width:100%;height:100%;overflow:auto;-webkit-overflow-scrolling:touch}.mat-sidenav-fixed{position:fixed}\\n\"] }]\n        }], ctorParameters: function () {\n        return [{ type: i4.Directionality, decorators: [{\n                        type: Optional\n                    }] }, { type: i0.ElementRef }, { type: i0.NgZone }, { type: i0.ChangeDetectorRef }, { type: i1.ViewportRuler }, { type: undefined, decorators: [{\n                        type: Inject,\n                        args: [MAT_DRAWER_DEFAULT_AUTOSIZE]\n                    }] }, { type: undefined, decorators: [{\n                        type: Optional\n                    }, {\n                        type: Inject,\n                        args: [ANIMATION_MODULE_TYPE]\n                    }] }];\n    }, propDecorators: { _allDrawers: [{\n                type: ContentChildren,\n                args: [MatDrawer, {\n                        // We need to use `descendants: true`, because Ivy will no longer match\n                        // indirect descendants if it's left as false.\n                        descendants: true,\n                    }]\n            }], _content: [{\n                type: ContentChild,\n                args: [MatDrawerContent]\n            }], _userContent: [{\n                type: ViewChild,\n                args: [MatDrawerContent]\n            }], autosize: [{\n                type: Input\n            }], hasBackdrop: [{\n                type: Input\n            }], backdropClick: [{\n                type: Output\n            }] } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass MatSidenavContent extends MatDrawerContent {\n    constructor(changeDetectorRef, container, elementRef, scrollDispatcher, ngZone) {\n        super(changeDetectorRef, container, elementRef, scrollDispatcher, ngZone);\n    }\n}\nMatSidenavContent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatSidenavContent, deps: [{ token: i0.ChangeDetectorRef }, { token: forwardRef(() => MatSidenavContainer) }, { token: i0.ElementRef }, { token: i1.ScrollDispatcher }, { token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Component });\nMatSidenavContent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: MatSidenavContent, selector: \"mat-sidenav-content\", host: { properties: { \"style.margin-left.px\": \"_container._contentMargins.left\", \"style.margin-right.px\": \"_container._contentMargins.right\" }, classAttribute: \"mat-drawer-content mat-sidenav-content\" }, usesInheritance: true, ngImport: i0, template: '<ng-content></ng-content>', isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatSidenavContent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'mat-sidenav-content',\n                    template: '<ng-content></ng-content>',\n                    host: {\n                        'class': 'mat-drawer-content mat-sidenav-content',\n                        '[style.margin-left.px]': '_container._contentMargins.left',\n                        '[style.margin-right.px]': '_container._contentMargins.right',\n                    },\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    encapsulation: ViewEncapsulation.None,\n                }]\n        }], ctorParameters: function () {\n        return [{ type: i0.ChangeDetectorRef }, { type: MatSidenavContainer, decorators: [{\n                        type: Inject,\n                        args: [forwardRef(() => MatSidenavContainer)]\n                    }] }, { type: i0.ElementRef }, { type: i1.ScrollDispatcher }, { type: i0.NgZone }];\n    } });\nclass MatSidenav extends MatDrawer {\n    constructor() {\n        super(...arguments);\n        this._fixedInViewport = false;\n        this._fixedTopGap = 0;\n        this._fixedBottomGap = 0;\n    }\n    /** Whether the sidenav is fixed in the viewport. */\n    get fixedInViewport() {\n        return this._fixedInViewport;\n    }\n    set fixedInViewport(value) {\n        this._fixedInViewport = coerceBooleanProperty(value);\n    }\n    /**\n     * The gap between the top of the sidenav and the top of the viewport when the sidenav is in fixed\n     * mode.\n     */\n    get fixedTopGap() {\n        return this._fixedTopGap;\n    }\n    set fixedTopGap(value) {\n        this._fixedTopGap = coerceNumberProperty(value);\n    }\n    /**\n     * The gap between the bottom of the sidenav and the bottom of the viewport when the sidenav is in\n     * fixed mode.\n     */\n    get fixedBottomGap() {\n        return this._fixedBottomGap;\n    }\n    set fixedBottomGap(value) {\n        this._fixedBottomGap = coerceNumberProperty(value);\n    }\n}\nMatSidenav.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatSidenav, deps: null, target: i0.ɵɵFactoryTarget.Component });\nMatSidenav.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: MatSidenav, selector: \"mat-sidenav\", inputs: { fixedInViewport: \"fixedInViewport\", fixedTopGap: \"fixedTopGap\", fixedBottomGap: \"fixedBottomGap\" }, host: { attributes: { \"tabIndex\": \"-1\" }, properties: { \"attr.align\": \"null\", \"class.mat-drawer-end\": \"position === \\\"end\\\"\", \"class.mat-drawer-over\": \"mode === \\\"over\\\"\", \"class.mat-drawer-push\": \"mode === \\\"push\\\"\", \"class.mat-drawer-side\": \"mode === \\\"side\\\"\", \"class.mat-drawer-opened\": \"opened\", \"class.mat-sidenav-fixed\": \"fixedInViewport\", \"style.top.px\": \"fixedInViewport ? fixedTopGap : null\", \"style.bottom.px\": \"fixedInViewport ? fixedBottomGap : null\" }, classAttribute: \"mat-drawer mat-sidenav\" }, exportAs: [\"matSidenav\"], usesInheritance: true, ngImport: i0, template: \"<div class=\\\"mat-drawer-inner-container\\\" cdkScrollable>\\r\\n  <ng-content></ng-content>\\r\\n</div>\\r\\n\", directives: [{ type: i1.CdkScrollable, selector: \"[cdk-scrollable], [cdkScrollable]\" }], animations: [matDrawerAnimations.transformDrawer], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatSidenav, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-sidenav', exportAs: 'matSidenav', animations: [matDrawerAnimations.transformDrawer], host: {\n                        'class': 'mat-drawer mat-sidenav',\n                        'tabIndex': '-1',\n                        // must prevent the browser from aligning text based on value\n                        '[attr.align]': 'null',\n                        '[class.mat-drawer-end]': 'position === \"end\"',\n                        '[class.mat-drawer-over]': 'mode === \"over\"',\n                        '[class.mat-drawer-push]': 'mode === \"push\"',\n                        '[class.mat-drawer-side]': 'mode === \"side\"',\n                        '[class.mat-drawer-opened]': 'opened',\n                        '[class.mat-sidenav-fixed]': 'fixedInViewport',\n                        '[style.top.px]': 'fixedInViewport ? fixedTopGap : null',\n                        '[style.bottom.px]': 'fixedInViewport ? fixedBottomGap : null',\n                    }, changeDetection: ChangeDetectionStrategy.OnPush, encapsulation: ViewEncapsulation.None, template: \"<div class=\\\"mat-drawer-inner-container\\\" cdkScrollable>\\r\\n  <ng-content></ng-content>\\r\\n</div>\\r\\n\" }]\n        }], propDecorators: { fixedInViewport: [{\n                type: Input\n            }], fixedTopGap: [{\n                type: Input\n            }], fixedBottomGap: [{\n                type: Input\n            }] } });\nclass MatSidenavContainer extends MatDrawerContainer {\n}\nMatSidenavContainer.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatSidenavContainer, deps: null, target: i0.ɵɵFactoryTarget.Component });\nMatSidenavContainer.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: MatSidenavContainer, selector: \"mat-sidenav-container\", host: { properties: { \"class.mat-drawer-container-explicit-backdrop\": \"_backdropOverride\" }, classAttribute: \"mat-drawer-container mat-sidenav-container\" }, providers: [\n        {\n            provide: MAT_DRAWER_CONTAINER,\n            useExisting: MatSidenavContainer,\n        },\n    ], queries: [{ propertyName: \"_content\", first: true, predicate: MatSidenavContent, descendants: true }, { propertyName: \"_allDrawers\", predicate: MatSidenav, descendants: true }], exportAs: [\"matSidenavContainer\"], usesInheritance: true, ngImport: i0, template: \"<div class=\\\"mat-drawer-backdrop\\\" (click)=\\\"_onBackdropClicked()\\\" *ngIf=\\\"hasBackdrop\\\"\\n     [class.mat-drawer-shown]=\\\"_isShowingBackdrop()\\\"></div>\\n\\n<ng-content select=\\\"mat-sidenav\\\"></ng-content>\\n\\n<ng-content select=\\\"mat-sidenav-content\\\">\\n</ng-content>\\n<mat-sidenav-content *ngIf=\\\"!_content\\\" cdkScrollable>\\n  <ng-content></ng-content>\\n</mat-sidenav-content>\\n\", styles: [\".mat-drawer-container{position:relative;z-index:1;box-sizing:border-box;-webkit-overflow-scrolling:touch;display:block;overflow:hidden}.mat-drawer-container[fullscreen]{top:0;left:0;right:0;bottom:0;position:absolute}.mat-drawer-container[fullscreen].mat-drawer-container-has-open{overflow:hidden}.mat-drawer-container.mat-drawer-container-explicit-backdrop .mat-drawer-side{z-index:3}.mat-drawer-container.ng-animate-disabled .mat-drawer-backdrop,.mat-drawer-container.ng-animate-disabled .mat-drawer-content,.ng-animate-disabled .mat-drawer-container .mat-drawer-backdrop,.ng-animate-disabled .mat-drawer-container .mat-drawer-content{transition:none}.mat-drawer-backdrop{top:0;left:0;right:0;bottom:0;position:absolute;display:block;z-index:3;visibility:hidden}.mat-drawer-backdrop.mat-drawer-shown{visibility:visible}.mat-drawer-transition .mat-drawer-backdrop{transition-duration:400ms;transition-timing-function:cubic-bezier(0.25, 0.8, 0.25, 1);transition-property:background-color,visibility}.cdk-high-contrast-active .mat-drawer-backdrop{opacity:.5}.mat-drawer-content{position:relative;z-index:1;display:block;height:100%;overflow:auto}.mat-drawer-transition .mat-drawer-content{transition-duration:400ms;transition-timing-function:cubic-bezier(0.25, 0.8, 0.25, 1);transition-property:transform,margin-left,margin-right}.mat-drawer{position:relative;z-index:4;display:block;position:absolute;top:0;bottom:0;z-index:3;outline:0;box-sizing:border-box;overflow-y:auto;transform:translate3d(-100%, 0, 0)}.cdk-high-contrast-active .mat-drawer,.cdk-high-contrast-active [dir=rtl] .mat-drawer.mat-drawer-end{border-right:solid 1px currentColor}.cdk-high-contrast-active [dir=rtl] .mat-drawer,.cdk-high-contrast-active .mat-drawer.mat-drawer-end{border-left:solid 1px currentColor;border-right:none}.mat-drawer.mat-drawer-side{z-index:2}.mat-drawer.mat-drawer-end{right:0;transform:translate3d(100%, 0, 0)}[dir=rtl] .mat-drawer{transform:translate3d(100%, 0, 0)}[dir=rtl] .mat-drawer.mat-drawer-end{left:0;right:auto;transform:translate3d(-100%, 0, 0)}.mat-drawer-inner-container{width:100%;height:100%;overflow:auto;-webkit-overflow-scrolling:touch}.mat-sidenav-fixed{position:fixed}\\n\"], components: [{ type: MatSidenavContent, selector: \"mat-sidenav-content\" }], directives: [{ type: i5.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: i1.CdkScrollable, selector: \"[cdk-scrollable], [cdkScrollable]\" }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatSidenavContainer, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-sidenav-container', exportAs: 'matSidenavContainer', host: {\n                        'class': 'mat-drawer-container mat-sidenav-container',\n                        '[class.mat-drawer-container-explicit-backdrop]': '_backdropOverride',\n                    }, changeDetection: ChangeDetectionStrategy.OnPush, encapsulation: ViewEncapsulation.None, providers: [\n                        {\n                            provide: MAT_DRAWER_CONTAINER,\n                            useExisting: MatSidenavContainer,\n                        },\n                    ], template: \"<div class=\\\"mat-drawer-backdrop\\\" (click)=\\\"_onBackdropClicked()\\\" *ngIf=\\\"hasBackdrop\\\"\\n     [class.mat-drawer-shown]=\\\"_isShowingBackdrop()\\\"></div>\\n\\n<ng-content select=\\\"mat-sidenav\\\"></ng-content>\\n\\n<ng-content select=\\\"mat-sidenav-content\\\">\\n</ng-content>\\n<mat-sidenav-content *ngIf=\\\"!_content\\\" cdkScrollable>\\n  <ng-content></ng-content>\\n</mat-sidenav-content>\\n\", styles: [\".mat-drawer-container{position:relative;z-index:1;box-sizing:border-box;-webkit-overflow-scrolling:touch;display:block;overflow:hidden}.mat-drawer-container[fullscreen]{top:0;left:0;right:0;bottom:0;position:absolute}.mat-drawer-container[fullscreen].mat-drawer-container-has-open{overflow:hidden}.mat-drawer-container.mat-drawer-container-explicit-backdrop .mat-drawer-side{z-index:3}.mat-drawer-container.ng-animate-disabled .mat-drawer-backdrop,.mat-drawer-container.ng-animate-disabled .mat-drawer-content,.ng-animate-disabled .mat-drawer-container .mat-drawer-backdrop,.ng-animate-disabled .mat-drawer-container .mat-drawer-content{transition:none}.mat-drawer-backdrop{top:0;left:0;right:0;bottom:0;position:absolute;display:block;z-index:3;visibility:hidden}.mat-drawer-backdrop.mat-drawer-shown{visibility:visible}.mat-drawer-transition .mat-drawer-backdrop{transition-duration:400ms;transition-timing-function:cubic-bezier(0.25, 0.8, 0.25, 1);transition-property:background-color,visibility}.cdk-high-contrast-active .mat-drawer-backdrop{opacity:.5}.mat-drawer-content{position:relative;z-index:1;display:block;height:100%;overflow:auto}.mat-drawer-transition .mat-drawer-content{transition-duration:400ms;transition-timing-function:cubic-bezier(0.25, 0.8, 0.25, 1);transition-property:transform,margin-left,margin-right}.mat-drawer{position:relative;z-index:4;display:block;position:absolute;top:0;bottom:0;z-index:3;outline:0;box-sizing:border-box;overflow-y:auto;transform:translate3d(-100%, 0, 0)}.cdk-high-contrast-active .mat-drawer,.cdk-high-contrast-active [dir=rtl] .mat-drawer.mat-drawer-end{border-right:solid 1px currentColor}.cdk-high-contrast-active [dir=rtl] .mat-drawer,.cdk-high-contrast-active .mat-drawer.mat-drawer-end{border-left:solid 1px currentColor;border-right:none}.mat-drawer.mat-drawer-side{z-index:2}.mat-drawer.mat-drawer-end{right:0;transform:translate3d(100%, 0, 0)}[dir=rtl] .mat-drawer{transform:translate3d(100%, 0, 0)}[dir=rtl] .mat-drawer.mat-drawer-end{left:0;right:auto;transform:translate3d(-100%, 0, 0)}.mat-drawer-inner-container{width:100%;height:100%;overflow:auto;-webkit-overflow-scrolling:touch}.mat-sidenav-fixed{position:fixed}\\n\"] }]\n        }], propDecorators: { _allDrawers: [{\n                type: ContentChildren,\n                args: [MatSidenav, {\n                        // We need to use `descendants: true`, because Ivy will no longer match\n                        // indirect descendants if it's left as false.\n                        descendants: true,\n                    }]\n            }], _content: [{\n                type: ContentChild,\n                args: [MatSidenavContent]\n            }] } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass MatSidenavModule {\n}\nMatSidenavModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatSidenavModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nMatSidenavModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatSidenavModule, declarations: [MatDrawer,\n        MatDrawerContainer,\n        MatDrawerContent,\n        MatSidenav,\n        MatSidenavContainer,\n        MatSidenavContent], imports: [CommonModule, MatCommonModule, PlatformModule, CdkScrollableModule], exports: [CdkScrollableModule,\n        MatCommonModule,\n        MatDrawer,\n        MatDrawerContainer,\n        MatDrawerContent,\n        MatSidenav,\n        MatSidenavContainer,\n        MatSidenavContent] });\nMatSidenavModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatSidenavModule, imports: [[CommonModule, MatCommonModule, PlatformModule, CdkScrollableModule], CdkScrollableModule,\n        MatCommonModule] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatSidenavModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [CommonModule, MatCommonModule, PlatformModule, CdkScrollableModule],\n                    exports: [\n                        CdkScrollableModule,\n                        MatCommonModule,\n                        MatDrawer,\n                        MatDrawerContainer,\n                        MatDrawerContent,\n                        MatSidenav,\n                        MatSidenavContainer,\n                        MatSidenavContent,\n                    ],\n                    declarations: [\n                        MatDrawer,\n                        MatDrawerContainer,\n                        MatDrawerContent,\n                        MatSidenav,\n                        MatSidenavContainer,\n                        MatSidenavContent,\n                    ],\n                }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_DRAWER_DEFAULT_AUTOSIZE, MAT_DRAWER_DEFAULT_AUTOSIZE_FACTORY, MatDrawer, MatDrawerContainer, MatDrawerContent, MatSidenav, MatSidenavContainer, MatSidenavContent, MatSidenavModule, matDrawerAnimations, throwMatDuplicatedDrawerError };\n","import * as i0 from '@angular/core';\nimport { Directive, Component, ViewEncapsulation, ChangeDetectionStrategy, Input, NgModule } from '@angular/core';\nimport * as i1 from '@angular/cdk/table';\nimport { CdkTable, CDK_TABLE, _COALESCED_STYLE_SCHEDULER, _CoalescedStyleScheduler, STICKY_POSITIONING_LISTENER, CDK_TABLE_TEMPLATE, CdkCellDef, CdkHeaderCellDef, CdkFooterCellDef, CdkColumnDef, CdkHeaderCell, CdkFooterCell, CdkCell, CdkHeaderRowDef, CdkFooterRowDef, CdkRowDef, CdkHeaderRow, CDK_ROW_TEMPLATE, CdkFooterRow, CdkRow, CdkNoDataRow, CdkTextColumn, CdkTableModule, DataSource } from '@angular/cdk/table';\nimport { _VIEW_REPEATER_STRATEGY, _RecycleViewRepeaterStrategy, _DisposeViewRepeaterStrategy } from '@angular/cdk/collections';\nimport { MatCommonModule } from '@angular/material/core';\nimport { _isNumberValue } from '@angular/cdk/coercion';\nimport { BehaviorSubject, Subject, merge, of, combineLatest } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Enables the recycle view repeater strategy, which reduces rendering latency. Not compatible with\n * tables that animate rows.\n */\nclass MatRecycleRows {\n}\nMatRecycleRows.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatRecycleRows, deps: [], target: i0.ɵɵFactoryTarget.Directive });\nMatRecycleRows.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.1.0\", type: MatRecycleRows, selector: \"mat-table[recycleRows], table[mat-table][recycleRows]\", providers: [{ provide: _VIEW_REPEATER_STRATEGY, useClass: _RecycleViewRepeaterStrategy }], ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatRecycleRows, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'mat-table[recycleRows], table[mat-table][recycleRows]',\n                    providers: [{ provide: _VIEW_REPEATER_STRATEGY, useClass: _RecycleViewRepeaterStrategy }],\n                }]\n        }] });\n/**\n * Wrapper for the CdkTable with Material design styles.\n */\nclass MatTable extends CdkTable {\n    constructor() {\n        super(...arguments);\n        /** Overrides the sticky CSS class set by the `CdkTable`. */\n        this.stickyCssClass = 'mat-table-sticky';\n        /** Overrides the need to add position: sticky on every sticky cell element in `CdkTable`. */\n        this.needsPositionStickyOnElement = false;\n    }\n}\nMatTable.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatTable, deps: null, target: i0.ɵɵFactoryTarget.Component });\nMatTable.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: MatTable, selector: \"mat-table, table[mat-table]\", host: { properties: { \"class.mat-table-fixed-layout\": \"fixedLayout\" }, classAttribute: \"mat-table\" }, providers: [\n        // TODO(michaeljamesparsons) Abstract the view repeater strategy to a directive API so this code\n        //  is only included in the build if used.\n        { provide: _VIEW_REPEATER_STRATEGY, useClass: _DisposeViewRepeaterStrategy },\n        { provide: CdkTable, useExisting: MatTable },\n        { provide: CDK_TABLE, useExisting: MatTable },\n        { provide: _COALESCED_STYLE_SCHEDULER, useClass: _CoalescedStyleScheduler },\n        // Prevent nested tables from seeing this table's StickyPositioningListener.\n        { provide: STICKY_POSITIONING_LISTENER, useValue: null },\n    ], exportAs: [\"matTable\"], usesInheritance: true, ngImport: i0, template: \"\\n  <ng-content select=\\\"caption\\\"></ng-content>\\n  <ng-content select=\\\"colgroup, col\\\"></ng-content>\\n  <ng-container headerRowOutlet></ng-container>\\n  <ng-container rowOutlet></ng-container>\\n  <ng-container noDataRowOutlet></ng-container>\\n  <ng-container footerRowOutlet></ng-container>\\n\", isInline: true, styles: [\"mat-table{display:block}mat-header-row{min-height:56px}mat-row,mat-footer-row{min-height:48px}mat-row,mat-header-row,mat-footer-row{display:flex;border-width:0;border-bottom-width:1px;border-style:solid;align-items:center;box-sizing:border-box}mat-row::after,mat-header-row::after,mat-footer-row::after{display:inline-block;min-height:inherit;content:\\\"\\\"}mat-cell:first-of-type,mat-header-cell:first-of-type,mat-footer-cell:first-of-type{padding-left:24px}[dir=rtl] mat-cell:first-of-type:not(:only-of-type),[dir=rtl] mat-header-cell:first-of-type:not(:only-of-type),[dir=rtl] mat-footer-cell:first-of-type:not(:only-of-type){padding-left:0;padding-right:24px}mat-cell:last-of-type,mat-header-cell:last-of-type,mat-footer-cell:last-of-type{padding-right:24px}[dir=rtl] mat-cell:last-of-type:not(:only-of-type),[dir=rtl] mat-header-cell:last-of-type:not(:only-of-type),[dir=rtl] mat-footer-cell:last-of-type:not(:only-of-type){padding-right:0;padding-left:24px}mat-cell,mat-header-cell,mat-footer-cell{flex:1;display:flex;align-items:center;overflow:hidden;word-wrap:break-word;min-height:inherit}table.mat-table{border-spacing:0}tr.mat-header-row{height:56px}tr.mat-row,tr.mat-footer-row{height:48px}th.mat-header-cell{text-align:left}[dir=rtl] th.mat-header-cell{text-align:right}th.mat-header-cell,td.mat-cell,td.mat-footer-cell{padding:0;border-bottom-width:1px;border-bottom-style:solid}th.mat-header-cell:first-of-type,td.mat-cell:first-of-type,td.mat-footer-cell:first-of-type{padding-left:24px}[dir=rtl] th.mat-header-cell:first-of-type:not(:only-of-type),[dir=rtl] td.mat-cell:first-of-type:not(:only-of-type),[dir=rtl] td.mat-footer-cell:first-of-type:not(:only-of-type){padding-left:0;padding-right:24px}th.mat-header-cell:last-of-type,td.mat-cell:last-of-type,td.mat-footer-cell:last-of-type{padding-right:24px}[dir=rtl] th.mat-header-cell:last-of-type:not(:only-of-type),[dir=rtl] td.mat-cell:last-of-type:not(:only-of-type),[dir=rtl] td.mat-footer-cell:last-of-type:not(:only-of-type){padding-right:0;padding-left:24px}.mat-table-sticky{position:-webkit-sticky !important;position:sticky !important}.mat-table-fixed-layout{table-layout:fixed}\\n\"], directives: [{ type: i1.HeaderRowOutlet, selector: \"[headerRowOutlet]\" }, { type: i1.DataRowOutlet, selector: \"[rowOutlet]\" }, { type: i1.NoDataRowOutlet, selector: \"[noDataRowOutlet]\" }, { type: i1.FooterRowOutlet, selector: \"[footerRowOutlet]\" }], changeDetection: i0.ChangeDetectionStrategy.Default, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatTable, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-table, table[mat-table]', exportAs: 'matTable', template: CDK_TABLE_TEMPLATE, host: {\n                        'class': 'mat-table',\n                        '[class.mat-table-fixed-layout]': 'fixedLayout',\n                    }, providers: [\n                        // TODO(michaeljamesparsons) Abstract the view repeater strategy to a directive API so this code\n                        //  is only included in the build if used.\n                        { provide: _VIEW_REPEATER_STRATEGY, useClass: _DisposeViewRepeaterStrategy },\n                        { provide: CdkTable, useExisting: MatTable },\n                        { provide: CDK_TABLE, useExisting: MatTable },\n                        { provide: _COALESCED_STYLE_SCHEDULER, useClass: _CoalescedStyleScheduler },\n                        // Prevent nested tables from seeing this table's StickyPositioningListener.\n                        { provide: STICKY_POSITIONING_LISTENER, useValue: null },\n                    ], encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.Default, styles: [\"mat-table{display:block}mat-header-row{min-height:56px}mat-row,mat-footer-row{min-height:48px}mat-row,mat-header-row,mat-footer-row{display:flex;border-width:0;border-bottom-width:1px;border-style:solid;align-items:center;box-sizing:border-box}mat-row::after,mat-header-row::after,mat-footer-row::after{display:inline-block;min-height:inherit;content:\\\"\\\"}mat-cell:first-of-type,mat-header-cell:first-of-type,mat-footer-cell:first-of-type{padding-left:24px}[dir=rtl] mat-cell:first-of-type:not(:only-of-type),[dir=rtl] mat-header-cell:first-of-type:not(:only-of-type),[dir=rtl] mat-footer-cell:first-of-type:not(:only-of-type){padding-left:0;padding-right:24px}mat-cell:last-of-type,mat-header-cell:last-of-type,mat-footer-cell:last-of-type{padding-right:24px}[dir=rtl] mat-cell:last-of-type:not(:only-of-type),[dir=rtl] mat-header-cell:last-of-type:not(:only-of-type),[dir=rtl] mat-footer-cell:last-of-type:not(:only-of-type){padding-right:0;padding-left:24px}mat-cell,mat-header-cell,mat-footer-cell{flex:1;display:flex;align-items:center;overflow:hidden;word-wrap:break-word;min-height:inherit}table.mat-table{border-spacing:0}tr.mat-header-row{height:56px}tr.mat-row,tr.mat-footer-row{height:48px}th.mat-header-cell{text-align:left}[dir=rtl] th.mat-header-cell{text-align:right}th.mat-header-cell,td.mat-cell,td.mat-footer-cell{padding:0;border-bottom-width:1px;border-bottom-style:solid}th.mat-header-cell:first-of-type,td.mat-cell:first-of-type,td.mat-footer-cell:first-of-type{padding-left:24px}[dir=rtl] th.mat-header-cell:first-of-type:not(:only-of-type),[dir=rtl] td.mat-cell:first-of-type:not(:only-of-type),[dir=rtl] td.mat-footer-cell:first-of-type:not(:only-of-type){padding-left:0;padding-right:24px}th.mat-header-cell:last-of-type,td.mat-cell:last-of-type,td.mat-footer-cell:last-of-type{padding-right:24px}[dir=rtl] th.mat-header-cell:last-of-type:not(:only-of-type),[dir=rtl] td.mat-cell:last-of-type:not(:only-of-type),[dir=rtl] td.mat-footer-cell:last-of-type:not(:only-of-type){padding-right:0;padding-left:24px}.mat-table-sticky{position:-webkit-sticky !important;position:sticky !important}.mat-table-fixed-layout{table-layout:fixed}\\n\"] }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Cell definition for the mat-table.\n * Captures the template of a column's data row cell as well as cell-specific properties.\n */\nclass MatCellDef extends CdkCellDef {\n}\nMatCellDef.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatCellDef, deps: null, target: i0.ɵɵFactoryTarget.Directive });\nMatCellDef.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.1.0\", type: MatCellDef, selector: \"[matCellDef]\", providers: [{ provide: CdkCellDef, useExisting: MatCellDef }], usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatCellDef, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[matCellDef]',\n                    providers: [{ provide: CdkCellDef, useExisting: MatCellDef }],\n                }]\n        }] });\n/**\n * Header cell definition for the mat-table.\n * Captures the template of a column's header cell and as well as cell-specific properties.\n */\nclass MatHeaderCellDef extends CdkHeaderCellDef {\n}\nMatHeaderCellDef.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatHeaderCellDef, deps: null, target: i0.ɵɵFactoryTarget.Directive });\nMatHeaderCellDef.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.1.0\", type: MatHeaderCellDef, selector: \"[matHeaderCellDef]\", providers: [{ provide: CdkHeaderCellDef, useExisting: MatHeaderCellDef }], usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatHeaderCellDef, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[matHeaderCellDef]',\n                    providers: [{ provide: CdkHeaderCellDef, useExisting: MatHeaderCellDef }],\n                }]\n        }] });\n/**\n * Footer cell definition for the mat-table.\n * Captures the template of a column's footer cell and as well as cell-specific properties.\n */\nclass MatFooterCellDef extends CdkFooterCellDef {\n}\nMatFooterCellDef.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatFooterCellDef, deps: null, target: i0.ɵɵFactoryTarget.Directive });\nMatFooterCellDef.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.1.0\", type: MatFooterCellDef, selector: \"[matFooterCellDef]\", providers: [{ provide: CdkFooterCellDef, useExisting: MatFooterCellDef }], usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatFooterCellDef, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[matFooterCellDef]',\n                    providers: [{ provide: CdkFooterCellDef, useExisting: MatFooterCellDef }],\n                }]\n        }] });\n/**\n * Column definition for the mat-table.\n * Defines a set of cells available for a table column.\n */\nclass MatColumnDef extends CdkColumnDef {\n    /** Unique name for this column. */\n    get name() {\n        return this._name;\n    }\n    set name(name) {\n        this._setNameInput(name);\n    }\n    /**\n     * Add \"mat-column-\" prefix in addition to \"cdk-column-\" prefix.\n     * In the future, this will only add \"mat-column-\" and columnCssClassName\n     * will change from type string[] to string.\n     * @docs-private\n     */\n    _updateColumnCssClassName() {\n        super._updateColumnCssClassName();\n        this._columnCssClassName.push(`mat-column-${this.cssClassFriendlyName}`);\n    }\n}\nMatColumnDef.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatColumnDef, deps: null, target: i0.ɵɵFactoryTarget.Directive });\nMatColumnDef.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.1.0\", type: MatColumnDef, selector: \"[matColumnDef]\", inputs: { sticky: \"sticky\", name: [\"matColumnDef\", \"name\"] }, providers: [\n        { provide: CdkColumnDef, useExisting: MatColumnDef },\n        { provide: 'MAT_SORT_HEADER_COLUMN_DEF', useExisting: MatColumnDef },\n    ], usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatColumnDef, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[matColumnDef]',\n                    inputs: ['sticky'],\n                    providers: [\n                        { provide: CdkColumnDef, useExisting: MatColumnDef },\n                        { provide: 'MAT_SORT_HEADER_COLUMN_DEF', useExisting: MatColumnDef },\n                    ],\n                }]\n        }], propDecorators: { name: [{\n                type: Input,\n                args: ['matColumnDef']\n            }] } });\n/** Header cell template container that adds the right classes and role. */\nclass MatHeaderCell extends CdkHeaderCell {\n}\nMatHeaderCell.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatHeaderCell, deps: null, target: i0.ɵɵFactoryTarget.Directive });\nMatHeaderCell.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.1.0\", type: MatHeaderCell, selector: \"mat-header-cell, th[mat-header-cell]\", host: { attributes: { \"role\": \"columnheader\" }, classAttribute: \"mat-header-cell\" }, usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatHeaderCell, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'mat-header-cell, th[mat-header-cell]',\n                    host: {\n                        'class': 'mat-header-cell',\n                        'role': 'columnheader',\n                    },\n                }]\n        }] });\n/** Footer cell template container that adds the right classes and role. */\nclass MatFooterCell extends CdkFooterCell {\n}\nMatFooterCell.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatFooterCell, deps: null, target: i0.ɵɵFactoryTarget.Directive });\nMatFooterCell.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.1.0\", type: MatFooterCell, selector: \"mat-footer-cell, td[mat-footer-cell]\", host: { attributes: { \"role\": \"gridcell\" }, classAttribute: \"mat-footer-cell\" }, usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatFooterCell, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'mat-footer-cell, td[mat-footer-cell]',\n                    host: {\n                        'class': 'mat-footer-cell',\n                        'role': 'gridcell',\n                    },\n                }]\n        }] });\n/** Cell template container that adds the right classes and role. */\nclass MatCell extends CdkCell {\n}\nMatCell.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatCell, deps: null, target: i0.ɵɵFactoryTarget.Directive });\nMatCell.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.1.0\", type: MatCell, selector: \"mat-cell, td[mat-cell]\", host: { attributes: { \"role\": \"gridcell\" }, classAttribute: \"mat-cell\" }, usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatCell, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'mat-cell, td[mat-cell]',\n                    host: {\n                        'class': 'mat-cell',\n                        'role': 'gridcell',\n                    },\n                }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Header row definition for the mat-table.\n * Captures the header row's template and other header properties such as the columns to display.\n */\nclass MatHeaderRowDef extends CdkHeaderRowDef {\n}\nMatHeaderRowDef.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatHeaderRowDef, deps: null, target: i0.ɵɵFactoryTarget.Directive });\nMatHeaderRowDef.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.1.0\", type: MatHeaderRowDef, selector: \"[matHeaderRowDef]\", inputs: { columns: [\"matHeaderRowDef\", \"columns\"], sticky: [\"matHeaderRowDefSticky\", \"sticky\"] }, providers: [{ provide: CdkHeaderRowDef, useExisting: MatHeaderRowDef }], usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatHeaderRowDef, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[matHeaderRowDef]',\n                    providers: [{ provide: CdkHeaderRowDef, useExisting: MatHeaderRowDef }],\n                    inputs: ['columns: matHeaderRowDef', 'sticky: matHeaderRowDefSticky'],\n                }]\n        }] });\n/**\n * Footer row definition for the mat-table.\n * Captures the footer row's template and other footer properties such as the columns to display.\n */\nclass MatFooterRowDef extends CdkFooterRowDef {\n}\nMatFooterRowDef.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatFooterRowDef, deps: null, target: i0.ɵɵFactoryTarget.Directive });\nMatFooterRowDef.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.1.0\", type: MatFooterRowDef, selector: \"[matFooterRowDef]\", inputs: { columns: [\"matFooterRowDef\", \"columns\"], sticky: [\"matFooterRowDefSticky\", \"sticky\"] }, providers: [{ provide: CdkFooterRowDef, useExisting: MatFooterRowDef }], usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatFooterRowDef, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[matFooterRowDef]',\n                    providers: [{ provide: CdkFooterRowDef, useExisting: MatFooterRowDef }],\n                    inputs: ['columns: matFooterRowDef', 'sticky: matFooterRowDefSticky'],\n                }]\n        }] });\n/**\n * Data row definition for the mat-table.\n * Captures the data row's template and other properties such as the columns to display and\n * a when predicate that describes when this row should be used.\n */\nclass MatRowDef extends CdkRowDef {\n}\nMatRowDef.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatRowDef, deps: null, target: i0.ɵɵFactoryTarget.Directive });\nMatRowDef.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.1.0\", type: MatRowDef, selector: \"[matRowDef]\", inputs: { columns: [\"matRowDefColumns\", \"columns\"], when: [\"matRowDefWhen\", \"when\"] }, providers: [{ provide: CdkRowDef, useExisting: MatRowDef }], usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatRowDef, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[matRowDef]',\n                    providers: [{ provide: CdkRowDef, useExisting: MatRowDef }],\n                    inputs: ['columns: matRowDefColumns', 'when: matRowDefWhen'],\n                }]\n        }] });\n/** Header template container that contains the cell outlet. Adds the right class and role. */\nclass MatHeaderRow extends CdkHeaderRow {\n}\nMatHeaderRow.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatHeaderRow, deps: null, target: i0.ɵɵFactoryTarget.Component });\nMatHeaderRow.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: MatHeaderRow, selector: \"mat-header-row, tr[mat-header-row]\", host: { attributes: { \"role\": \"row\" }, classAttribute: \"mat-header-row\" }, providers: [{ provide: CdkHeaderRow, useExisting: MatHeaderRow }], exportAs: [\"matHeaderRow\"], usesInheritance: true, ngImport: i0, template: \"<ng-container cdkCellOutlet></ng-container>\", isInline: true, directives: [{ type: i1.CdkCellOutlet, selector: \"[cdkCellOutlet]\" }], changeDetection: i0.ChangeDetectionStrategy.Default, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatHeaderRow, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'mat-header-row, tr[mat-header-row]',\n                    template: CDK_ROW_TEMPLATE,\n                    host: {\n                        'class': 'mat-header-row',\n                        'role': 'row',\n                    },\n                    // See note on CdkTable for explanation on why this uses the default change detection strategy.\n                    // tslint:disable-next-line:validate-decorators\n                    changeDetection: ChangeDetectionStrategy.Default,\n                    encapsulation: ViewEncapsulation.None,\n                    exportAs: 'matHeaderRow',\n                    providers: [{ provide: CdkHeaderRow, useExisting: MatHeaderRow }],\n                }]\n        }] });\n/** Footer template container that contains the cell outlet. Adds the right class and role. */\nclass MatFooterRow extends CdkFooterRow {\n}\nMatFooterRow.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatFooterRow, deps: null, target: i0.ɵɵFactoryTarget.Component });\nMatFooterRow.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: MatFooterRow, selector: \"mat-footer-row, tr[mat-footer-row]\", host: { attributes: { \"role\": \"row\" }, classAttribute: \"mat-footer-row\" }, providers: [{ provide: CdkFooterRow, useExisting: MatFooterRow }], exportAs: [\"matFooterRow\"], usesInheritance: true, ngImport: i0, template: \"<ng-container cdkCellOutlet></ng-container>\", isInline: true, directives: [{ type: i1.CdkCellOutlet, selector: \"[cdkCellOutlet]\" }], changeDetection: i0.ChangeDetectionStrategy.Default, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatFooterRow, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'mat-footer-row, tr[mat-footer-row]',\n                    template: CDK_ROW_TEMPLATE,\n                    host: {\n                        'class': 'mat-footer-row',\n                        'role': 'row',\n                    },\n                    // See note on CdkTable for explanation on why this uses the default change detection strategy.\n                    // tslint:disable-next-line:validate-decorators\n                    changeDetection: ChangeDetectionStrategy.Default,\n                    encapsulation: ViewEncapsulation.None,\n                    exportAs: 'matFooterRow',\n                    providers: [{ provide: CdkFooterRow, useExisting: MatFooterRow }],\n                }]\n        }] });\n/** Data row template container that contains the cell outlet. Adds the right class and role. */\nclass MatRow extends CdkRow {\n}\nMatRow.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatRow, deps: null, target: i0.ɵɵFactoryTarget.Component });\nMatRow.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: MatRow, selector: \"mat-row, tr[mat-row]\", host: { attributes: { \"role\": \"row\" }, classAttribute: \"mat-row\" }, providers: [{ provide: CdkRow, useExisting: MatRow }], exportAs: [\"matRow\"], usesInheritance: true, ngImport: i0, template: \"<ng-container cdkCellOutlet></ng-container>\", isInline: true, directives: [{ type: i1.CdkCellOutlet, selector: \"[cdkCellOutlet]\" }], changeDetection: i0.ChangeDetectionStrategy.Default, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatRow, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'mat-row, tr[mat-row]',\n                    template: CDK_ROW_TEMPLATE,\n                    host: {\n                        'class': 'mat-row',\n                        'role': 'row',\n                    },\n                    // See note on CdkTable for explanation on why this uses the default change detection strategy.\n                    // tslint:disable-next-line:validate-decorators\n                    changeDetection: ChangeDetectionStrategy.Default,\n                    encapsulation: ViewEncapsulation.None,\n                    exportAs: 'matRow',\n                    providers: [{ provide: CdkRow, useExisting: MatRow }],\n                }]\n        }] });\n/** Row that can be used to display a message when no data is shown in the table. */\nclass MatNoDataRow extends CdkNoDataRow {\n    constructor() {\n        super(...arguments);\n        this._contentClassName = 'mat-no-data-row';\n    }\n}\nMatNoDataRow.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatNoDataRow, deps: null, target: i0.ɵɵFactoryTarget.Directive });\nMatNoDataRow.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.1.0\", type: MatNoDataRow, selector: \"ng-template[matNoDataRow]\", providers: [{ provide: CdkNoDataRow, useExisting: MatNoDataRow }], usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatNoDataRow, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'ng-template[matNoDataRow]',\n                    providers: [{ provide: CdkNoDataRow, useExisting: MatNoDataRow }],\n                }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Column that simply shows text content for the header and row cells. Assumes that the table\n * is using the native table implementation (`<table>`).\n *\n * By default, the name of this column will be the header text and data property accessor.\n * The header text can be overridden with the `headerText` input. Cell values can be overridden with\n * the `dataAccessor` input. Change the text justification to the start or end using the `justify`\n * input.\n */\nclass MatTextColumn extends CdkTextColumn {\n}\nMatTextColumn.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatTextColumn, deps: null, target: i0.ɵɵFactoryTarget.Component });\nMatTextColumn.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: MatTextColumn, selector: \"mat-text-column\", usesInheritance: true, ngImport: i0, template: `\n    <ng-container matColumnDef>\n      <th mat-header-cell *matHeaderCellDef [style.text-align]=\"justify\">\n        {{headerText}}\n      </th>\n      <td mat-cell *matCellDef=\"let data\" [style.text-align]=\"justify\">\n        {{dataAccessor(data, name)}}\n      </td>\n    </ng-container>\n  `, isInline: true, directives: [{ type: MatColumnDef, selector: \"[matColumnDef]\", inputs: [\"sticky\", \"matColumnDef\"] }, { type: MatHeaderCellDef, selector: \"[matHeaderCellDef]\" }, { type: MatHeaderCell, selector: \"mat-header-cell, th[mat-header-cell]\" }, { type: MatCellDef, selector: \"[matCellDef]\" }, { type: MatCell, selector: \"mat-cell, td[mat-cell]\" }], changeDetection: i0.ChangeDetectionStrategy.Default, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatTextColumn, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'mat-text-column',\n                    template: `\n    <ng-container matColumnDef>\n      <th mat-header-cell *matHeaderCellDef [style.text-align]=\"justify\">\n        {{headerText}}\n      </th>\n      <td mat-cell *matCellDef=\"let data\" [style.text-align]=\"justify\">\n        {{dataAccessor(data, name)}}\n      </td>\n    </ng-container>\n  `,\n                    encapsulation: ViewEncapsulation.None,\n                    // Change detection is intentionally not set to OnPush. This component's template will be provided\n                    // to the table to be inserted into its view. This is problematic when change detection runs since\n                    // the bindings in this template will be evaluated _after_ the table's view is evaluated, which\n                    // mean's the template in the table's view will not have the updated value (and in fact will cause\n                    // an ExpressionChangedAfterItHasBeenCheckedError).\n                    // tslint:disable-next-line:validate-decorators\n                    changeDetection: ChangeDetectionStrategy.Default,\n                }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst EXPORTED_DECLARATIONS = [\n    // Table\n    MatTable,\n    MatRecycleRows,\n    // Template defs\n    MatHeaderCellDef,\n    MatHeaderRowDef,\n    MatColumnDef,\n    MatCellDef,\n    MatRowDef,\n    MatFooterCellDef,\n    MatFooterRowDef,\n    // Cell directives\n    MatHeaderCell,\n    MatCell,\n    MatFooterCell,\n    // Row directives\n    MatHeaderRow,\n    MatRow,\n    MatFooterRow,\n    MatNoDataRow,\n    MatTextColumn,\n];\nclass MatTableModule {\n}\nMatTableModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatTableModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nMatTableModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatTableModule, declarations: [\n        // Table\n        MatTable,\n        MatRecycleRows,\n        // Template defs\n        MatHeaderCellDef,\n        MatHeaderRowDef,\n        MatColumnDef,\n        MatCellDef,\n        MatRowDef,\n        MatFooterCellDef,\n        MatFooterRowDef,\n        // Cell directives\n        MatHeaderCell,\n        MatCell,\n        MatFooterCell,\n        // Row directives\n        MatHeaderRow,\n        MatRow,\n        MatFooterRow,\n        MatNoDataRow,\n        MatTextColumn\n    ], imports: [CdkTableModule, MatCommonModule], exports: [MatCommonModule,\n        // Table\n        MatTable,\n        MatRecycleRows,\n        // Template defs\n        MatHeaderCellDef,\n        MatHeaderRowDef,\n        MatColumnDef,\n        MatCellDef,\n        MatRowDef,\n        MatFooterCellDef,\n        MatFooterRowDef,\n        // Cell directives\n        MatHeaderCell,\n        MatCell,\n        MatFooterCell,\n        // Row directives\n        MatHeaderRow,\n        MatRow,\n        MatFooterRow,\n        MatNoDataRow,\n        MatTextColumn] });\nMatTableModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatTableModule, imports: [[CdkTableModule, MatCommonModule], MatCommonModule] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatTableModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [CdkTableModule, MatCommonModule],\n                    exports: [MatCommonModule, EXPORTED_DECLARATIONS],\n                    declarations: EXPORTED_DECLARATIONS,\n                }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Corresponds to `Number.MAX_SAFE_INTEGER`. Moved out into a variable here due to\n * flaky browser support and the value not being defined in Closure's typings.\n */\nconst MAX_SAFE_INTEGER = 9007199254740991;\n/** Shared base class with MDC-based implementation. */\nclass _MatTableDataSource extends DataSource {\n    constructor(initialData = []) {\n        super();\n        /** Stream emitting render data to the table (depends on ordered data changes). */\n        this._renderData = new BehaviorSubject([]);\n        /** Stream that emits when a new filter string is set on the data source. */\n        this._filter = new BehaviorSubject('');\n        /** Used to react to internal changes of the paginator that are made by the data source itself. */\n        this._internalPageChanges = new Subject();\n        /**\n         * Subscription to the changes that should trigger an update to the table's rendered rows, such\n         * as filtering, sorting, pagination, or base data changes.\n         */\n        this._renderChangesSubscription = null;\n        /**\n         * Data accessor function that is used for accessing data properties for sorting through\n         * the default sortData function.\n         * This default function assumes that the sort header IDs (which defaults to the column name)\n         * matches the data's properties (e.g. column Xyz represents data['Xyz']).\n         * May be set to a custom function for different behavior.\n         * @param data Data object that is being accessed.\n         * @param sortHeaderId The name of the column that represents the data.\n         */\n        this.sortingDataAccessor = (data, sortHeaderId) => {\n            const value = data[sortHeaderId];\n            if (_isNumberValue(value)) {\n                const numberValue = Number(value);\n                // Numbers beyond `MAX_SAFE_INTEGER` can't be compared reliably so we\n                // leave them as strings. For more info: https://goo.gl/y5vbSg\n                return numberValue < MAX_SAFE_INTEGER ? numberValue : value;\n            }\n            return value;\n        };\n        /**\n         * Gets a sorted copy of the data array based on the state of the MatSort. Called\n         * after changes are made to the filtered data or when sort changes are emitted from MatSort.\n         * By default, the function retrieves the active sort and its direction and compares data\n         * by retrieving data using the sortingDataAccessor. May be overridden for a custom implementation\n         * of data ordering.\n         * @param data The array of data that should be sorted.\n         * @param sort The connected MatSort that holds the current sort state.\n         */\n        this.sortData = (data, sort) => {\n            const active = sort.active;\n            const direction = sort.direction;\n            if (!active || direction == '') {\n                return data;\n            }\n            return data.sort((a, b) => {\n                let valueA = this.sortingDataAccessor(a, active);\n                let valueB = this.sortingDataAccessor(b, active);\n                // If there are data in the column that can be converted to a number,\n                // it must be ensured that the rest of the data\n                // is of the same type so as not to order incorrectly.\n                const valueAType = typeof valueA;\n                const valueBType = typeof valueB;\n                if (valueAType !== valueBType) {\n                    if (valueAType === 'number') {\n                        valueA += '';\n                    }\n                    if (valueBType === 'number') {\n                        valueB += '';\n                    }\n                }\n                // If both valueA and valueB exist (truthy), then compare the two. Otherwise, check if\n                // one value exists while the other doesn't. In this case, existing value should come last.\n                // This avoids inconsistent results when comparing values to undefined/null.\n                // If neither value exists, return 0 (equal).\n                let comparatorResult = 0;\n                if (valueA != null && valueB != null) {\n                    // Check if one value is greater than the other; if equal, comparatorResult should remain 0.\n                    if (valueA > valueB) {\n                        comparatorResult = 1;\n                    }\n                    else if (valueA < valueB) {\n                        comparatorResult = -1;\n                    }\n                }\n                else if (valueA != null) {\n                    comparatorResult = 1;\n                }\n                else if (valueB != null) {\n                    comparatorResult = -1;\n                }\n                return comparatorResult * (direction == 'asc' ? 1 : -1);\n            });\n        };\n        /**\n         * Checks if a data object matches the data source's filter string. By default, each data object\n         * is converted to a string of its properties and returns true if the filter has\n         * at least one occurrence in that string. By default, the filter string has its whitespace\n         * trimmed and the match is case-insensitive. May be overridden for a custom implementation of\n         * filter matching.\n         * @param data Data object used to check against the filter.\n         * @param filter Filter string that has been set on the data source.\n         * @returns Whether the filter matches against the data\n         */\n        this.filterPredicate = (data, filter) => {\n            // Transform the data into a lowercase string of all property values.\n            const dataStr = Object.keys(data)\n                .reduce((currentTerm, key) => {\n                // Use an obscure Unicode character to delimit the words in the concatenated string.\n                // This avoids matches where the values of two columns combined will match the user's query\n                // (e.g. `Flute` and `Stop` will match `Test`). The character is intended to be something\n                // that has a very low chance of being typed in by somebody in a text field. This one in\n                // particular is \"White up-pointing triangle with dot\" from\n                // https://en.wikipedia.org/wiki/List_of_Unicode_characters\n                return currentTerm + data[key] + '◬';\n            }, '')\n                .toLowerCase();\n            // Transform the filter by converting it to lowercase and removing whitespace.\n            const transformedFilter = filter.trim().toLowerCase();\n            return dataStr.indexOf(transformedFilter) != -1;\n        };\n        this._data = new BehaviorSubject(initialData);\n        this._updateChangeSubscription();\n    }\n    /** Array of data that should be rendered by the table, where each object represents one row. */\n    get data() {\n        return this._data.value;\n    }\n    set data(data) {\n        this._data.next(data);\n        // Normally the `filteredData` is updated by the re-render\n        // subscription, but that won't happen if it's inactive.\n        if (!this._renderChangesSubscription) {\n            this._filterData(data);\n        }\n    }\n    /**\n     * Filter term that should be used to filter out objects from the data array. To override how\n     * data objects match to this filter string, provide a custom function for filterPredicate.\n     */\n    get filter() {\n        return this._filter.value;\n    }\n    set filter(filter) {\n        this._filter.next(filter);\n        // Normally the `filteredData` is updated by the re-render\n        // subscription, but that won't happen if it's inactive.\n        if (!this._renderChangesSubscription) {\n            this._filterData(this.data);\n        }\n    }\n    /**\n     * Instance of the MatSort directive used by the table to control its sorting. Sort changes\n     * emitted by the MatSort will trigger an update to the table's rendered data.\n     */\n    get sort() {\n        return this._sort;\n    }\n    set sort(sort) {\n        this._sort = sort;\n        this._updateChangeSubscription();\n    }\n    /**\n     * Instance of the MatPaginator component used by the table to control what page of the data is\n     * displayed. Page changes emitted by the MatPaginator will trigger an update to the\n     * table's rendered data.\n     *\n     * Note that the data source uses the paginator's properties to calculate which page of data\n     * should be displayed. If the paginator receives its properties as template inputs,\n     * e.g. `[pageLength]=100` or `[pageIndex]=1`, then be sure that the paginator's view has been\n     * initialized before assigning it to this data source.\n     */\n    get paginator() {\n        return this._paginator;\n    }\n    set paginator(paginator) {\n        this._paginator = paginator;\n        this._updateChangeSubscription();\n    }\n    /**\n     * Subscribe to changes that should trigger an update to the table's rendered rows. When the\n     * changes occur, process the current state of the filter, sort, and pagination along with\n     * the provided base data and send it to the table for rendering.\n     */\n    _updateChangeSubscription() {\n        var _a;\n        // Sorting and/or pagination should be watched if MatSort and/or MatPaginator are provided.\n        // The events should emit whenever the component emits a change or initializes, or if no\n        // component is provided, a stream with just a null event should be provided.\n        // The `sortChange` and `pageChange` acts as a signal to the combineLatests below so that the\n        // pipeline can progress to the next step. Note that the value from these streams are not used,\n        // they purely act as a signal to progress in the pipeline.\n        const sortChange = this._sort\n            ? merge(this._sort.sortChange, this._sort.initialized)\n            : of(null);\n        const pageChange = this._paginator\n            ? merge(this._paginator.page, this._internalPageChanges, this._paginator.initialized)\n            : of(null);\n        const dataStream = this._data;\n        // Watch for base data or filter changes to provide a filtered set of data.\n        const filteredData = combineLatest([dataStream, this._filter]).pipe(map(([data]) => this._filterData(data)));\n        // Watch for filtered data or sort changes to provide an ordered set of data.\n        const orderedData = combineLatest([filteredData, sortChange]).pipe(map(([data]) => this._orderData(data)));\n        // Watch for ordered data or page changes to provide a paged set of data.\n        const paginatedData = combineLatest([orderedData, pageChange]).pipe(map(([data]) => this._pageData(data)));\n        // Watched for paged data changes and send the result to the table to render.\n        (_a = this._renderChangesSubscription) === null || _a === void 0 ? void 0 : _a.unsubscribe();\n        this._renderChangesSubscription = paginatedData.subscribe(data => this._renderData.next(data));\n    }\n    /**\n     * Returns a filtered data array where each filter object contains the filter string within\n     * the result of the filterTermAccessor function. If no filter is set, returns the data array\n     * as provided.\n     */\n    _filterData(data) {\n        // If there is a filter string, filter out data that does not contain it.\n        // Each data object is converted to a string using the function defined by filterTermAccessor.\n        // May be overridden for customization.\n        this.filteredData =\n            this.filter == null || this.filter === ''\n                ? data\n                : data.filter(obj => this.filterPredicate(obj, this.filter));\n        if (this.paginator) {\n            this._updatePaginator(this.filteredData.length);\n        }\n        return this.filteredData;\n    }\n    /**\n     * Returns a sorted copy of the data if MatSort has a sort applied, otherwise just returns the\n     * data array as provided. Uses the default data accessor for data lookup, unless a\n     * sortDataAccessor function is defined.\n     */\n    _orderData(data) {\n        // If there is no active sort or direction, return the data without trying to sort.\n        if (!this.sort) {\n            return data;\n        }\n        return this.sortData(data.slice(), this.sort);\n    }\n    /**\n     * Returns a paged slice of the provided data array according to the provided MatPaginator's page\n     * index and length. If there is no paginator provided, returns the data array as provided.\n     */\n    _pageData(data) {\n        if (!this.paginator) {\n            return data;\n        }\n        const startIndex = this.paginator.pageIndex * this.paginator.pageSize;\n        return data.slice(startIndex, startIndex + this.paginator.pageSize);\n    }\n    /**\n     * Updates the paginator to reflect the length of the filtered data, and makes sure that the page\n     * index does not exceed the paginator's last page. Values are changed in a resolved promise to\n     * guard against making property changes within a round of change detection.\n     */\n    _updatePaginator(filteredDataLength) {\n        Promise.resolve().then(() => {\n            const paginator = this.paginator;\n            if (!paginator) {\n                return;\n            }\n            paginator.length = filteredDataLength;\n            // If the page index is set beyond the page, reduce it to the last page.\n            if (paginator.pageIndex > 0) {\n                const lastPageIndex = Math.ceil(paginator.length / paginator.pageSize) - 1 || 0;\n                const newPageIndex = Math.min(paginator.pageIndex, lastPageIndex);\n                if (newPageIndex !== paginator.pageIndex) {\n                    paginator.pageIndex = newPageIndex;\n                    // Since the paginator only emits after user-generated changes,\n                    // we need our own stream so we know to should re-render the data.\n                    this._internalPageChanges.next();\n                }\n            }\n        });\n    }\n    /**\n     * Used by the MatTable. Called when it connects to the data source.\n     * @docs-private\n     */\n    connect() {\n        if (!this._renderChangesSubscription) {\n            this._updateChangeSubscription();\n        }\n        return this._renderData;\n    }\n    /**\n     * Used by the MatTable. Called when it disconnects from the data source.\n     * @docs-private\n     */\n    disconnect() {\n        var _a;\n        (_a = this._renderChangesSubscription) === null || _a === void 0 ? void 0 : _a.unsubscribe();\n        this._renderChangesSubscription = null;\n    }\n}\n/**\n * Data source that accepts a client-side data array and includes native support of filtering,\n * sorting (using MatSort), and pagination (using MatPaginator).\n *\n * Allows for sort customization by overriding sortingDataAccessor, which defines how data\n * properties are accessed. Also allows for filter customization by overriding filterTermAccessor,\n * which defines how row data is converted to a string for filter matching.\n *\n * **Note:** This class is meant to be a simple data source to help you get started. As such\n * it isn't equipped to handle some more advanced cases like robust i18n support or server-side\n * interactions. If your app needs to support more advanced use cases, consider implementing your\n * own `DataSource`.\n */\nclass MatTableDataSource extends _MatTableDataSource {\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MatCell, MatCellDef, MatColumnDef, MatFooterCell, MatFooterCellDef, MatFooterRow, MatFooterRowDef, MatHeaderCell, MatHeaderCellDef, MatHeaderRow, MatHeaderRowDef, MatNoDataRow, MatRecycleRows, MatRow, MatRowDef, MatTable, MatTableDataSource, MatTableModule, MatTextColumn, _MatTableDataSource };\n","import * as i0 from '@angular/core';\nimport { Directive, Component, ChangeDetectionStrategy, ViewEncapsulation, Inject, ContentChildren, NgModule } from '@angular/core';\nimport { mixinColor, MatCommonModule } from '@angular/material/core';\nimport { DOCUMENT } from '@angular/common';\nimport * as i1 from '@angular/cdk/platform';\n\n// Boilerplate for applying mixins to MatToolbar.\n/** @docs-private */\nconst _MatToolbarBase = mixinColor(class {\n    constructor(_elementRef) {\n        this._elementRef = _elementRef;\n    }\n});\nclass MatToolbarRow {\n}\nMatToolbarRow.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatToolbarRow, deps: [], target: i0.ɵɵFactoryTarget.Directive });\nMatToolbarRow.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.1.0\", type: MatToolbarRow, selector: \"mat-toolbar-row\", host: { classAttribute: \"mat-toolbar-row\" }, exportAs: [\"matToolbarRow\"], ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatToolbarRow, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'mat-toolbar-row',\n                    exportAs: 'matToolbarRow',\n                    host: { 'class': 'mat-toolbar-row' },\n                }]\n        }] });\nclass MatToolbar extends _MatToolbarBase {\n    constructor(elementRef, _platform, document) {\n        super(elementRef);\n        this._platform = _platform;\n        // TODO: make the document a required param when doing breaking changes.\n        this._document = document;\n    }\n    ngAfterViewInit() {\n        if (this._platform.isBrowser) {\n            this._checkToolbarMixedModes();\n            this._toolbarRows.changes.subscribe(() => this._checkToolbarMixedModes());\n        }\n    }\n    /**\n     * Throws an exception when developers are attempting to combine the different toolbar row modes.\n     */\n    _checkToolbarMixedModes() {\n        if (this._toolbarRows.length && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            // Check if there are any other DOM nodes that can display content but aren't inside of\n            // a <mat-toolbar-row> element.\n            const isCombinedUsage = Array.from(this._elementRef.nativeElement.childNodes)\n                .filter(node => !(node.classList && node.classList.contains('mat-toolbar-row')))\n                .filter(node => node.nodeType !== (this._document ? this._document.COMMENT_NODE : 8))\n                .some(node => !!(node.textContent && node.textContent.trim()));\n            if (isCombinedUsage) {\n                throwToolbarMixedModesError();\n            }\n        }\n    }\n}\nMatToolbar.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatToolbar, deps: [{ token: i0.ElementRef }, { token: i1.Platform }, { token: DOCUMENT }], target: i0.ɵɵFactoryTarget.Component });\nMatToolbar.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: MatToolbar, selector: \"mat-toolbar\", inputs: { color: \"color\" }, host: { properties: { \"class.mat-toolbar-multiple-rows\": \"_toolbarRows.length > 0\", \"class.mat-toolbar-single-row\": \"_toolbarRows.length === 0\" }, classAttribute: \"mat-toolbar\" }, queries: [{ propertyName: \"_toolbarRows\", predicate: MatToolbarRow, descendants: true }], exportAs: [\"matToolbar\"], usesInheritance: true, ngImport: i0, template: \"<ng-content></ng-content>\\n<ng-content select=\\\"mat-toolbar-row\\\"></ng-content>\\n\", styles: [\".cdk-high-contrast-active .mat-toolbar{outline:solid 1px}.mat-toolbar-row,.mat-toolbar-single-row{display:flex;box-sizing:border-box;padding:0 16px;width:100%;flex-direction:row;align-items:center;white-space:nowrap}.mat-toolbar-multiple-rows{display:flex;box-sizing:border-box;flex-direction:column;width:100%}\\n\"], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatToolbar, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-toolbar', exportAs: 'matToolbar', inputs: ['color'], host: {\n                        'class': 'mat-toolbar',\n                        '[class.mat-toolbar-multiple-rows]': '_toolbarRows.length > 0',\n                        '[class.mat-toolbar-single-row]': '_toolbarRows.length === 0',\n                    }, changeDetection: ChangeDetectionStrategy.OnPush, encapsulation: ViewEncapsulation.None, template: \"<ng-content></ng-content>\\n<ng-content select=\\\"mat-toolbar-row\\\"></ng-content>\\n\", styles: [\".cdk-high-contrast-active .mat-toolbar{outline:solid 1px}.mat-toolbar-row,.mat-toolbar-single-row{display:flex;box-sizing:border-box;padding:0 16px;width:100%;flex-direction:row;align-items:center;white-space:nowrap}.mat-toolbar-multiple-rows{display:flex;box-sizing:border-box;flex-direction:column;width:100%}\\n\"] }]\n        }], ctorParameters: function () {\n        return [{ type: i0.ElementRef }, { type: i1.Platform }, { type: undefined, decorators: [{\n                        type: Inject,\n                        args: [DOCUMENT]\n                    }] }];\n    }, propDecorators: { _toolbarRows: [{\n                type: ContentChildren,\n                args: [MatToolbarRow, { descendants: true }]\n            }] } });\n/**\n * Throws an exception when attempting to combine the different toolbar row modes.\n * @docs-private\n */\nfunction throwToolbarMixedModesError() {\n    throw Error('MatToolbar: Attempting to combine different toolbar modes. ' +\n        'Either specify multiple `<mat-toolbar-row>` elements explicitly or just place content ' +\n        'inside of a `<mat-toolbar>` for a single row.');\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass MatToolbarModule {\n}\nMatToolbarModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatToolbarModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nMatToolbarModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatToolbarModule, declarations: [MatToolbar, MatToolbarRow], imports: [MatCommonModule], exports: [MatToolbar, MatToolbarRow, MatCommonModule] });\nMatToolbarModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatToolbarModule, imports: [[MatCommonModule], MatCommonModule] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatToolbarModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [MatCommonModule],\n                    exports: [MatToolbar, MatToolbarRow, MatCommonModule],\n                    declarations: [MatToolbar, MatToolbarRow],\n                }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MatToolbar, MatToolbarModule, MatToolbarRow, throwToolbarMixedModesError };\n"],"names":["i0","InjectionToken","Directive","Input","EventEmitter","Optional","Inject","SkipSelf","Output","NgModule","coerceBooleanProperty","Subject","Subscription","i1","nextId$1","CDK_ACCORDION","CdkAccordion","constructor","_stateChanges","_openCloseAllActions","id","_multi","multi","openAll","next","closeAll","ngOnChanges","changes","ngOnDestroy","complete","ɵfac","ɵdir","provide","useExisting","type","args","selector","exportAs","providers","nextId","CdkAccordionItem","accordion","_changeDetectorRef","_expansionDispatcher","_openCloseAllSubscription","EMPTY","closed","opened","destroyed","expandedChange","_expanded","_disabled","_removeUniqueSelectionListener","listen","accordionId","expanded","_subscribeToOpenCloseAllActions","emit","notify","markForCheck","disabled","unsubscribe","toggle","close","open","subscribe","ChangeDetectorRef","UniqueSelectionDispatcher","useValue","undefined","decorators","CdkAccordionModule","ɵmod","ɵinj","exports","declarations","_VIEW_REPEATER_STRATEGY","_RecycleViewRepeaterStrategy","isDataSource","_DisposeViewRepeaterStrategy","DataSource","DOCUMENT","ContentChild","Injectable","Component","ChangeDetectionStrategy","ViewEncapsulation","EmbeddedViewRef","Attribute","ViewChild","ContentChildren","from","BehaviorSubject","isObservable","of","takeUntil","take","i2","i3","ScrollingModule","mixinHasStickyInput","base","_sticky","_hasStickyChanged","sticky","v","prevValue","hasStickyChanged","resetStickyChanged","CDK_TABLE","TEXT_COLUMN_OPTIONS","CdkCellDef","template","TemplateRef","CdkHeaderCellDef","CdkFooterCellDef","CdkColumnDefBase","_CdkColumnDefBase","CdkColumnDef","_table","_stickyEnd","name","_name","_setNameInput","stickyEnd","_updateColumnCssClassName","_columnCssClassName","cssClassFriendlyName","value","replace","inputs","cell","headerCell","footerCell","BaseCdkCell","columnDef","elementRef","classList","nativeElement","className","add","CdkHeaderCell","ElementRef","host","CdkFooterCell","_a","_elementRef","nodeType","tableRole","getAttribute","role","setAttribute","CdkCell","_Schedule","tasks","endTasks","_COALESCED_STYLE_SCHEDULER","_CoalescedStyleScheduler","_ngZone","_currentSchedule","_destroyed","schedule","task","_createScheduleIfNeeded","push","scheduleEnd","_getScheduleObservable","pipe","length","isStable","Promise","resolve","onStable","NgZone","ɵprov","CDK_ROW_TEMPLATE","BaseRowDef","_differs","_columnsDiffer","columns","currentValue","find","create","diff","getColumnsDiff","extractCellTemplate","column","CdkHeaderRowDef","CdkFooterRowDef","IterableDiffers","CdkHeaderRowDefBase","_CdkHeaderRowDefBase","CdkFooterRowDefBase","_CdkFooterRowDefBase","CdkRowDef","CdkCellOutlet","_viewContainer","mostRecentCellOutlet","ViewContainerRef","CdkHeaderRow","ɵcmp","changeDetection","Default","encapsulation","None","CdkFooterRow","CdkRow","CdkNoDataRow","templateRef","_contentClassName","STICKY_DIRECTIONS","StickyStyler","_isNativeHtmlTable","_stickCellCss","direction","_coalescedStyleScheduler","_isBrowser","_needsPositionStickyOnElement","_positionListener","_cachedCellWidths","_borderCellCss","clearStickyPositioning","rows","stickyDirections","elementsToClear","row","ELEMENT_NODE","i","children","element","_removeStickyStyle","updateStickyColumns","stickyStartStates","stickyEndStates","recalculateCellWidths","some","state","stickyColumnsUpdated","sizes","stickyEndColumnsUpdated","firstRow","numCells","cellWidths","_getCellWidths","startPositions","_getStickyStartColumnPositions","endPositions","_getStickyEndColumnPositions","lastStickyStart","lastIndexOf","firstStickyEnd","indexOf","isRtl","start","end","_addStickyStyle","slice","map","width","index","reverse","stickRows","rowsToStick","stickyStates","position","states","stickyOffsets","stickyCellHeights","elementsToStick","rowIndex","stickyOffset","Array","height","getBoundingClientRect","borderedRowIndex","_b","offset","isBorderedRowIndex","stickyHeaderRowsUpdated","offsets","elements","stickyFooterRowsUpdated","updateStickyFooterContainer","tableElement","tfoot","querySelector","dir","style","remove","hasDirection","zIndex","_getCalculatedZIndex","dirValue","isBorderElement","cssText","zIndexIncrements","top","bottom","left","right","firstRowCells","widths","positions","nextPosition","getTableUnknownColumnError","Error","getTableDuplicateColumnNameError","getTableMultipleDefaultRowDefsError","getTableMissingMatchingRowDefError","data","JSON","stringify","getTableMissingRowDefsError","getTableUnknownDataSourceError","getTableTextColumnMissingParentTableError","getTableTextColumnMissingNameError","STICKY_POSITIONING_LISTENER","CdkRecycleRows","useClass","DataRowOutlet","viewContainer","HeaderRowOutlet","FooterRowOutlet","NoDataRowOutlet","CDK_TABLE_TEMPLATE","RowViewRef","CdkTable","_dir","_document","_platform","_viewRepeater","_viewportRuler","_stickyPositioningListener","_onDestroy","_columnDefsByName","Map","_customColumnDefs","Set","_customRowDefs","_customHeaderRowDefs","_customFooterRowDefs","_headerRowDefChanged","_footerRowDefChanged","_stickyColumnStylesNeedReset","_forceRecalculateCellWidths","_cachedRenderRowsMap","stickyCssClass","needsPositionStickyOnElement","_isShowingNoDataRow","_multiTemplateDataRows","_fixedLayout","contentChanged","viewChange","Number","MAX_VALUE","nodeName","trackBy","_trackByFn","fn","ngDevMode","console","warn","dataSource","_dataSource","_switchDataSource","multiTemplateDataRows","_rowOutlet","_forceRenderDataRows","updateStickyColumnStyles","fixedLayout","ngOnInit","_setupStickyStyler","_applyNativeTableSections","_dataDiffer","_i","dataRow","dataIndex","change","ngAfterContentChecked","_cacheRowDefs","_cacheColumnDefs","_headerRowDefs","_footerRowDefs","_rowDefs","columnsChanged","_renderUpdatedColumns","rowDefsChanged","_forceRenderHeaderRows","_forceRenderFooterRows","_renderChangeSubscription","_observeRenderChanges","_checkStickyStates","clear","_noDataRowOutlet","_headerRowOutlet","_footerRowOutlet","disconnect","renderRows","_renderRows","_getAllRenderRows","_updateNoDataRow","applyChanges","record","_adjustedPreviousIndex","currentIndex","_getEmbeddedViewArgs","item","operation","context","_renderCellTemplateForItem","rowDef","_updateRowIndexContext","forEachIdentityChange","rowView","get","$implicit","addColumnDef","removeColumnDef","delete","addRowDef","removeRowDef","addHeaderRowDef","headerRowDef","removeHeaderRowDef","addFooterRowDef","footerRowDef","removeFooterRowDef","setNoDataRow","noDataRow","_customNoDataRow","updateStickyHeaderRowStyles","headerRows","_getRenderedRows","thead","display","def","_stickyStyler","forEach","updateStickyFooterRowStyles","footerRows","dataRows","headerRow","_addStickyColumnStyles","footerRow","values","prevCachedRenderRows","_data","renderRowsForData","_getRenderRowsForData","has","set","WeakMap","j","renderRow","cache","rowDefs","_getRowDefs","cachedRenderRows","shift","columnDefs","mergeArrayAndSet","_getOwnDefs","_contentColumnDefs","_contentHeaderRowDefs","_contentFooterRowDefs","_contentRowDefs","defaultRowDefs","filter","when","_defaultRowDef","columnsDiffReducer","acc","dataColumnsChanged","reduce","headerColumnsChanged","footerColumnsChanged","dataStream","connect","isArray","_renderRow","columnName","rowOutlet","renderedRows","viewRef","rootNodes","outlet","view","createEmbeddedView","cellTemplate","_getCellTemplates","renderIndex","count","first","last","even","odd","columnId","documentFragment","createDocumentFragment","sections","tag","outlets","section","createElement","appendChild","stickyCheckReducer","d","isBrowser","items","_noDataRow","shouldShow","container","rootNode","Directionality","Platform","ViewportRuler","styles","static","descendants","array","concat","CdkTextColumn","_options","justify","_syncColumnDefName","headerText","_createDefaultHeaderText","dataAccessor","defaultDataAccessor","defaultHeaderTextTransform","toUpperCase","EXPORTED_DECLARATIONS","CdkTableModule","imports","normalizePassiveListenerOptions","PlatformModule","coerceElement","coerceNumberProperty","fromEvent","auditTime","listenerOptions","passive","AutofillMonitor","_monitoredElements","monitor","elementOrRef","info","subject","result","cssClass","listener","event","animationName","contains","run","target","isAutofilled","runOutsideAngular","addEventListener","unlisten","removeEventListener","stopMonitoring","_info","providedIn","CdkAutofill","_autofillMonitor","cdkAutofill","CdkTextareaAutosize","document","_enabled","_previousMinRows","_isViewInited","_handleFocusEvent","_hasFocus","_textareaElement","minRows","_minRows","_setMinHeight","maxRows","_maxRows","_setMaxHeight","enabled","resizeToFitContent","reset","placeholder","_cachedPlaceholderHeight","_cacheTextareaPlaceholderHeight","minHeight","_cachedLineHeight","maxHeight","ngAfterViewInit","_initialHeight","window","_getWindow","_cacheTextareaLineHeight","textareaClone","cloneNode","visibility","border","padding","overflow","parentNode","clientHeight","_measureScrollHeight","previousMargin","marginBottom","isFirefox","FIREFOX","needsMarginFiller","measuringClass","scrollHeight","ngDoCheck","force","textarea","_previousValue","Math","max","requestAnimationFrame","_scrollToCaretPosition","setTimeout","_noopInputHandler","_getDocument","doc","defaultView","selectionStart","selectionEnd","isStopped","setSelectionRange","TextFieldModule","ANIMATION_MODULE_TYPE","MatCommonModule","MatCardContent","MatCardTitle","MatCardSubtitle","MatCardActions","align","MatCardFooter","MatCardImage","MatCardSmImage","MatCardMdImage","MatCardLgImage","MatCardXlImage","MatCardAvatar","MatCard","_animationMode","OnPush","MatCardHeader","MatCardTitleGroup","MatCardModule","i4","A11yModule","i9","Overlay","FlexibleConnectedPositionStrategy","OverlayConfig","OverlayModule","i8","ComponentPortal","TemplatePortal","PortalModule","CommonModule","forwardRef","InjectFlags","Self","MatButtonModule","CdkScrollableModule","i1$1","DateAdapter","MAT_DATE_FORMATS","mixinColor","mixinErrorState","merge","ESCAPE","hasModifierKey","SPACE","ENTER","PAGE_DOWN","PAGE_UP","END","HOME","DOWN_ARROW","UP_ARROW","RIGHT_ARROW","LEFT_ARROW","BACKSPACE","startWith","coerceStringArray","_getFocusedElementPierceShadowDom","trigger","transition","animate","keyframes","i2$2","NG_VALUE_ACCESSOR","NG_VALIDATORS","Validators","NgControl","i2$1","MAT_FORM_FIELD","MatFormFieldControl","MAT_INPUT_VALUE_ACCESSOR","createMissingDateImplError","provider","MatCalendarCell","displayValue","ariaLabel","cssClasses","compareValue","rawValue","MatCalendarBody","numCols","activeCell","isRange","cellAspectRatio","previewStart","previewEnd","selectedValueChange","previewChange","_enterHandler","_skipNextFocus","_getCellFromElement","_leaveHandler","isTableCell","_cellClicked","_isSelected","startValue","endValue","columnChanges","_firstRowOffset","_cellPadding","_cellWidth","_isActiveCell","colIndex","cellNumber","_focusActiveCell","movePreview","focus","_isRangeStart","isStart","_isRangeEnd","isEnd","_isInRange","isInRange","_isComparisonStart","comparisonStart","comparisonEnd","_isComparisonBridgeStart","previousCell","previousRow","_isComparisonBridgeEnd","_isComparisonEnd","nextCell","nextRow","_isInComparisonRange","_isComparisonIdentical","_isPreviewStart","_isPreviewEnd","_isInPreview","col","parseInt","NgIf","NgForOf","NgClass","label","todayValue","labelMinRequiredCells","node","rangeEnabled","DateRange","MatDateSelectionModel","selection","_adapter","_selectionChanged","selectionChanged","updateSelection","source","oldValue","_isValidDateInstance","date","isDateInstance","isValid","MatSingleDateSelectionModel","adapter","isComplete","clone","MatRangeDateSelectionModel","compareDate","MAT_SINGLE_DATE_SELECTION_MODEL_FACTORY","parent","MAT_SINGLE_DATE_SELECTION_MODEL_PROVIDER","deps","useFactory","MAT_RANGE_DATE_SELECTION_MODEL_FACTORY","MAT_RANGE_DATE_SELECTION_MODEL_PROVIDER","MAT_DATE_RANGE_SELECTION_STRATEGY","DefaultMatCalendarRangeStrategy","_dateAdapter","selectionFinished","currentRange","createPreview","activeDate","MAT_CALENDAR_RANGE_STRATEGY_PROVIDER_FACTORY","MAT_CALENDAR_RANGE_STRATEGY_PROVIDER","DAYS_PER_WEEK","MatMonthView","_dateFormats","_rangeStrategy","_rerenderSubscription","selectedChange","_userSelection","activeDateChange","_activeDate","today","oldActiveDate","validDate","getValidDateOrNull","deserialize","clampDate","minDate","maxDate","_hasSameMonthAndYear","_init","selected","_selected","_setRanges","_minDate","_maxDate","ngAfterContentInit","localeChanges","comparisonChange","firstChange","_dateSelected","selectedYear","getYear","selectedMonth","getMonth","selectedDate","createDate","rangeStartDate","rangeEndDate","_getDateInCurrentMonth","_previewStart","_previewEnd","_handleCalendarBodyKeydown","_isRtl","keyCode","addCalendarDays","getDate","getNumDaysInMonth","altKey","addCalendarYears","addCalendarMonths","_selectionKeyPressed","_canSelect","preventDefault","stopPropagation","_handleCalendarBodyKeyup","_todayDate","_getCellCompareValue","_monthLabel","monthLabel","format","getMonthNames","toLocaleUpperCase","firstOfMonth","_firstWeekOffset","getDayOfWeek","getFirstDayOfWeek","_initWeekdays","_createWeekCells","_matCalendarBody","_previewChanged","previewRange","detectChanges","firstDayOfWeek","narrowWeekdays","getDayOfWeekNames","longWeekdays","weekdays","long","narrow","_weekdays","daysInMonth","dateNames","getDateNames","_weeks","_shouldEnableDate","dateA11yLabel","cellClasses","dateClass","dateFilter","d1","d2","year","month","day","Date","getTime","selectedValue","_rangeStart","_rangeEnd","_isRange","_comparisonRangeStart","_comparisonRangeEnd","yearsPerPage","yearsPerRow","MatMultiYearView","yearSelected","isSameMultiYearView","_setSelectedYear","_todayYear","activeYear","minYearOfPage","getActiveOffset","_years","_createCellForYear","_yearSelected","min","_getActiveCell","yearName","getYearName","_shouldEnableYear","firstOfYear","_selectedYear","dateAdapter","date1","date2","year1","year2","startingYear","getStartingYear","floor","euclideanModulo","maxYear","a","b","MatYearView","monthSelected","_setSelectedMonth","_monthSelected","normalizedDate","_todayMonth","_getMonthInCurrentYear","_yearLabel","monthNames","_months","_createCellForMonth","monthName","monthYearA11yLabel","_shouldEnableMonth","_isYearAndMonthAfterMaxDate","_isYearAndMonthBeforeMinDate","maxMonth","minYear","minMonth","_selectedMonth","MatDatepickerIntl","calendarLabel","openCalendarLabel","closeCalendarLabel","prevMonthLabel","nextMonthLabel","prevYearLabel","nextYearLabel","prevMultiYearLabel","nextMultiYearLabel","switchToMonthViewLabel","switchToMultiYearViewLabel","formatYearRange","uniqueId","MatCalendarHeader","_intl","calendar","changeDetectorRef","_buttonDescriptionId","stateChanges","periodButtonText","currentView","monthYearLabel","maxYearOfPage","minYearName","maxYearName","periodButtonLabel","prevButtonLabel","nextButtonLabel","currentPeriodClicked","previousClicked","nextClicked","previousEnabled","_isSameView","nextEnabled","MatCalendar","MatButton","CdkAriaLive","_moveFocusOnNextTick","startView","viewChanged","_intlChanges","startAt","_startAt","_clampedActiveDate","_currentView","viewChangedResult","_calendarHeaderPortal","headerComponent","ngAfterViewChecked","focusActiveCell","_getCurrentViewComponent","updateTodaysDate","sameDate","_yearSelectedInMultiYearView","normalizedYear","_monthSelectedInYearView","normalizedMonth","_goToDateInView","monthView","yearView","multiYearView","CdkPortalOutlet","CdkMonitorFocus","NgSwitch","NgSwitchCase","matDatepickerAnimations","transformPanel","opacity","transform","fadeInCalendar","datepickerUid","MAT_DATEPICKER_SCROLL_STRATEGY","MAT_DATEPICKER_SCROLL_STRATEGY_FACTORY","overlay","scrollStrategies","reposition","MAT_DATEPICKER_SCROLL_STRATEGY_FACTORY_PROVIDER","_MatDatepickerContentBase","MatDatepickerContent","_globalModel","_rangeSelectionStrategy","intl","_subscriptions","_animationDone","_actionsPortal","_closeButtonText","_model","_animationState","datepicker","touchUi","_calendar","_handleUserSelection","newSelection","_startExitAnimation","_getSelected","_applyPendingSelection","CdkTrapFocus","animations","MatDatepickerBase","_overlay","_viewContainerRef","scrollStrategy","_inputStateChanges","_touchUi","xPosition","yPosition","_restoreFocus","openedStream","closedStream","_opened","_focusedElementBeforeOpen","_backdropHarnessClass","_scrollStrategy","datepickerInput","getStartValue","color","_color","getThemePalette","newValue","restoreFocus","panelClass","_panelClass","_getMinDate","_getMaxDate","_getDateFilter","positionChange","_overlayRef","positionStrategy","getConfig","_setConnectedPositions","updatePosition","_destroyOverlay","select","_selectYear","_selectMonth","_viewChanged","registerInput","input","registerActions","portal","removeActions","_openOverlay","_componentRef","instance","completeClose","_forwardContentValues","isDialog","labelId","getOverlayLabelId","overlayRef","_getDialogStrategy","_getDropdownStrategy","hasBackdrop","backdropClass","block","overlayElement","_getCloseStream","attach","dispose","global","centerHorizontally","centerVertically","strategy","flexibleConnectedTo","getConnectedOverlayOrigin","withTransformOriginOn","withFlexibleDimensions","withViewportMargin","withLockedPosition","primaryX","secondaryX","primaryY","secondaryY","withPositions","originX","originY","overlayX","overlayY","backdropClick","detachments","keydownEvents","calendarHeaderComponent","MatDatepicker","MatDatepickerInputEvent","targetElement","MatDatepickerInputBase","dateChange","dateInput","_onTouched","_validatorOnChange","_cvaOnChange","_valueChangesSubscription","_localeSubscription","_parseValidator","_lastValueValid","_filterValidator","control","controlValue","_matchesFilter","_minValidator","_maxValidator","_assignValueProgrammatically","_getValueFromModel","_pendingValue","_parentDisabled","_isInitialized","blur","_getValidators","_registerModel","model","_assignValue","_shouldHandleChangeEvent","_isValidValue","_formatValue","dateInputsHaveChanged","registerOnValidatorChange","validate","c","_validator","writeValue","registerOnChange","registerOnTouched","setDisabledState","isDisabled","_onKeydown","isAltDownArrow","readOnly","_openPopup","_onInput","lastValueWasValid","parse","_onChange","_onBlur","_assignValueToModel","keys","Object","key","previousValue","MAT_DATEPICKER_VALUE_ACCESSOR","MatDatepickerInput","MAT_DATEPICKER_VALIDATORS","dateFormats","_formField","_closedSubscription","compose","matDatepicker","_datepicker","_min","validValue","_max","_dateFilter","wasMatchingValue","getLabelId","modelValue","MatFormField","MatDatepickerToggleIcon","MatDatepickerToggle","defaultTabIndex","parsedTabIndex","tabIndex","_watchStateChanges","_open","datepickerStateChanged","inputStateChanged","datepickerToggled","disableRipple","_customIcon","_button","MAT_DATE_RANGE_INPUT_PARENT","MatDateRangeInputPartBase","_rangeInput","_defaultErrorStateMatcher","_injector","_parentForm","_parentFormGroup","ngControl","updateErrorState","isEmpty","_getPlaceholder","_handleChildValueChange","_openDatepicker","_groupDisabled","_startInput","_endInput","opposite","ErrorStateMatcher","Injector","NgForm","FormGroupDirective","_MatDateRangeInputBase","MatStartDate","rangeInput","defaultErrorStateMatcher","injector","parentForm","parentFormGroup","_startValidator","range","getMirrorValue","outputs","MatEndDate","_endValidator","nextUniqueId","MatDateRangeInput","focused","controlType","_ariaDescribedBy","separator","shouldLabelFloat","empty","rangePicker","_rangePicker","required","_required","wasMatchingStart","wasMatchingEnd","_revalidate","errorState","startEmpty","endEmpty","setDescribedByIds","ids","join","onContainerClick","_getInputMirrorValue","_shouldHidePlaceholders","_shouldHideSeparator","_shouldLabelFloat","_getAriaLabelledby","formField","_hasFloatingLabel","_labelId","_updateFocus","origin","ControlContainer","MatDateRangePicker","MatDatepickerApply","_applySelection","MatDatepickerCancel","MatDatepickerActions","_portal","_template","isAttached","detach","MatDatepickerModule","BasePortalOutlet","defer","MatDialogConfig","disableClose","maxWidth","ariaDescribedBy","ariaLabelledBy","autoFocus","closeOnNavigation","matDialogAnimations","dialogContainer","throwMatDialogContentAlreadyAttachedError","_MatDialogContainerBase","_focusTrapFactory","_config","_interactivityChecker","_focusMonitor","_animationStateChanged","_elementFocusedBeforeDialogWasOpened","_closeInteractionType","attachDomPortal","_portalOutlet","hasAttached","_ariaLabelledBy","_initializeWithAttachedContent","_setupFocusTrap","_capturePreviouslyFocusedElement","attachComponentPortal","attachTemplatePortal","_recaptureFocus","_containsFocus","_trapFocus","_forceFocus","options","isFocusable","removeAttribute","_focusByCssSelector","elementToFocus","_focusTrap","focusInitialElementWhenReady","then","focusedSuccessfully","_focusDialogContainer","previousElement","activeElement","body","focusVia","destroy","FocusTrapFactory","InteractivityChecker","FocusMonitor","MatDialogContainer","arguments","_state","_onAnimationDone","toState","totalTime","_onAnimationStart","MatDialogRef","_containerInstance","_afterOpened","_afterClosed","_beforeClosed","_id","clearTimeout","_closeFallbackTimeout","_finishDialogClose","_result","componentInstance","_closeDialogVia","dialogResult","detachBackdrop","afterOpened","afterClosed","beforeClosed","_getPositionStrategy","updateSize","addPanelClass","classes","removePanelClass","getState","ref","interactionType","MAT_DIALOG_DATA","MAT_DIALOG_DEFAULT_OPTIONS","MAT_DIALOG_SCROLL_STRATEGY","MAT_DIALOG_SCROLL_STRATEGY_FACTORY","MAT_DIALOG_SCROLL_STRATEGY_PROVIDER_FACTORY","MAT_DIALOG_SCROLL_STRATEGY_PROVIDER","_MatDialogBase","_defaultOptions","_parentDialog","_overlayContainer","_dialogRefConstructor","_dialogContainerType","_dialogDataToken","_openDialogsAtThisLevel","_afterAllClosedAtThisLevel","_afterOpenedAtThisLevel","_ariaHiddenElements","_dialogAnimatingOpen","afterAllClosed","openDialogs","_getAfterAllClosed","componentOrTemplateRef","config","_applyConfigDefaults","getDialogById","_lastDialogRef","_createOverlay","_attachDialogContainer","animationStateSubscription","dialogAnimationEvent","_animationStateSubscriptions","dialogRef","_attachDialogContent","_hideNonDialogContentFromAssistiveTechnology","_removeOpenDialog","_closeDialogs","dialog","overlayConfig","_getOverlayConfig","dialogConfig","minWidth","disposeOnNavigation","userInjector","viewContainerRef","containerPortal","componentFactoryResolver","containerRef","_createInjector","contentRef","splice","overlayContainer","getContainerElement","parentElement","siblings","sibling","hasAttribute","dialogs","OverlayContainer","Type","MatDialog","location","defaultOptions","parentDialog","animationMode","Location","assign","dialogElementUid","MatDialogClose","_dialog","getClosestDialog","proxiedChange","_onButtonClick","screenX","screenY","_matDialogClose","MatDialogTitle","_dialogRef","MatDialogContent","MatDialogActions","MatDialogModule","MatDivider","_vertical","_inset","vertical","inset","MatDividerModule","Host","QueryList","mixinTabIndex","FocusKeyManager","distinctUntilChanged","MAT_ACCORDION","EXPANSION_PANEL_ANIMATION_TIMING","matExpansionAnimations","indicatorRotate","bodyExpansion","MatExpansionPanelContent","MAT_EXPANSION_PANEL_DEFAULT_OPTIONS","MatExpansionPanel","_uniqueSelectionDispatcher","_hideToggle","afterExpand","afterCollapse","_inputChanges","_headerId","_bodyAnimationDone","x","y","fromState","hideToggle","togglePosition","_togglePosition","_hasSpacing","displayMode","_getExpandedState","_lazyContent","_body","focusedElement","bodyElement","MatExpansionPanelActionRow","class","MatExpansionPanelHeaderBase","_MatExpansionPanelHeaderMixinBase","MatExpansionPanelHeader","panel","_element","_parentChangeSubscription","accordionHideToggleChange","expandedHeight","collapsedHeight","_toggle","_isExpanded","_getPanelId","_getTogglePosition","_showToggle","_getHeaderHeight","isExpanded","_keydown","_handleHeaderKeydown","_handleHeaderFocus","MatExpansionPanelDescription","MatExpansionPanelTitle","MatAccordion","_ownHeaders","show","_headers","headers","header","notifyOnChanges","_keyManager","withWrap","withHomeAndEnd","onKeydown","updateActiveItem","MatExpansionModule","setLines","MatLine","MatLineModule","TileCoordinator","columnIndex","rowCount","rowspan","lastRowMax","tracker","update","numColumns","tiles","fill","tile","_trackTile","gapStartIndex","_findMatchingGap","colspan","_markTilePosition","TilePosition","tileCols","gapEndIndex","_nextRow","_findGapEndIndex","MAT_GRID_LIST","MatGridTile","_gridList","_rowspan","_colspan","round","_setStyle","property","MatGridTileText","_lines","MatGridAvatarCssMatStyler","MatGridTileHeaderCssMatStyler","MatGridTileFooterCssMatStyler","cssCalcAllowedValue","TileStyler","_rows","init","gutterSize","cols","_gutterSize","normalizeUnits","_cols","_direction","getBaseTileSize","sizePercent","gutterFraction","getTilePosition","baseSize","calc","getTileSize","span","setStyle","percentWidthPerTile","gutterWidthFractionPerTile","setColStyles","setRowStyles","percentWidth","gutterWidth","baseTileWidth","side","getGutterSpan","getTileSpan","tileHeight","getComputedHeight","FixedTileStyler","fixedRowHeight","test","list","_setListStyle","_tiles","RatioTileStyler","_parseRatio","percentHeightPerTile","rowHeightRatio","baseTileHeight","ratioParts","split","parseFloat","FitTileStyler","gutterHeightPerTile","exp","match","MAT_FIT_MODE","MatGridList","_gutter","rowHeight","_rowHeight","_setTileStyler","_checkCols","_checkRowHeight","_layoutTiles","_tileStyler","_tileCoordinator","pos","MatGridListModule","ɵTileCoordinator","SecurityContext","ErrorHandler","inject","throwError","forkJoin","tap","catchError","finalize","share","HttpClient","DomSanitizer","policy","getPolicy","ttWindow","trustedTypes","createPolicy","createHTML","s","trustedHTMLFromString","html","getMatIconNameNotFoundError","iconName","getMatIconNoHttpProviderError","getMatIconFailedToSanitizeUrlError","url","getMatIconFailedToSanitizeLiteralError","literal","SvgIconConfig","svgText","MatIconRegistry","_httpClient","_sanitizer","_errorHandler","_svgIconConfigs","_iconSetConfigs","_cachedIconsByUrl","_inProgressUrlFetches","_fontCssClassesByAlias","_resolvers","_defaultFontSetClass","addSvgIcon","addSvgIconInNamespace","addSvgIconLiteral","addSvgIconLiteralInNamespace","namespace","_addSvgIconConfig","addSvgIconResolver","resolver","cleanLiteral","sanitize","HTML","trustedLiteral","addSvgIconSet","addSvgIconSetInNamespace","addSvgIconSetLiteral","addSvgIconSetLiteralInNamespace","_addSvgIconSetConfig","registerFontClassAlias","alias","classNameForFontAlias","setDefaultFontSetClass","getDefaultFontSetClass","getSvgIconFromUrl","safeUrl","RESOURCE_URL","cachedIcon","cloneSvg","_loadSvgIconFromConfig","svg","getNamedSvgIcon","iconKey","_getSvgFromConfig","_getIconConfigFromResolvers","iconSetConfigs","_getSvgFromIconSetConfigs","_svgElementFromConfig","namedIcon","_extractIconWithNameFromAnySet","iconSetFetchRequests","iconSetConfig","_loadSvgIconSetFromConfig","err","errorMessage","message","handleError","foundIcon","toString","_extractSvgIconFromSet","_fetchIcon","iconSet","iconSource","iconElement","toLowerCase","_setSvgAttributes","_toSvgElement","_svgElementFromString","str","div","innerHTML","attributes","childNodes","viewBox","iconConfig","withCredentials","inProgressFetch","req","responseType","configNamespace","svgElement","isSafeUrlWithOptions","ICON_REGISTRY_PROVIDER_FACTORY","parentRegistry","httpClient","sanitizer","errorHandler","ICON_REGISTRY_PROVIDER","_MatIconBase","MAT_ICON_LOCATION","factory","MAT_ICON_LOCATION_FACTORY","_location","getPathname","pathname","search","funcIriAttributes","funcIriAttributeSelector","attr","funcIriPattern","MatIcon","_iconRegistry","ariaHidden","_inline","_currentIconFetch","inline","svgIcon","_svgIcon","_updateSvgIcon","_clearSvgElement","fontSet","_fontSet","_cleanupFontValue","_updateFontIconClasses","fontIcon","_fontIcon","_splitIconName","parts","cachedElements","_elementsWithExternalReferences","size","newPath","_previousPath","_prependPathToReferences","_usingFontIcon","_setSvgElement","styleTags","querySelectorAll","textContent","path","_cacheChildrenWithExternalReferences","layoutElement","childCount","child","elem","fontSetClass","_previousFontSetClass","_previousFontIconClass","trim","attrs","elementsWithFuncIri","elementWithReference","rawName","_svgNamespace","_svgName","MatIconModule","getSupportedInputTypes","i5","MatFormFieldModule","getMatInputUnsupportedTypeError","MAT_INPUT_INVALID_TYPES","_MatInputBase","MatInput","inputValueAccessor","ngZone","_uid","autofilled","_type","_readonly","_neverEmptyInputTypes","t","_inputValueAccessor","_previousNativeValue","IOS","el","_isServer","_isNativeSelect","_isTextarea","_isInFormField","multiple","_c","_d","hasValidator","_validateType","readonly","_dirtyCheckNativeValue","_dirtyCheckPlaceholder","_focusChanged","isFocused","_hideControlPlaceholder","call","_previousPlaceholder","_isNeverEmpty","_isBadInput","validity","badInput","selectElement","firstOption","selectedIndex","_isInlineSelect","errorStateMatcher","userAriaDescribedBy","MatInputModule","mixinDisabled","mixinDisableRipple","MatRippleModule","MatPseudoCheckboxModule","SelectionModel","A","_MatListBase","_MatListItemMixinBase","MAT_LIST","MAT_NAV_LIST","MatNavList","MatList","_getListType","MatListAvatarCssMatStyler","MatListIconCssMatStyler","MatListSubheaderCssMatStyler","MatListItem","navList","_isInteractiveList","_list","_getHostElement","_isRippleDisabled","MatRipple","_avatar","_icon","_MatSelectionListBase","_MatListOptionBase","MAT_SELECTION_LIST_VALUE_ACCESSOR","MatSelectionList","MatSelectionListChange","option","MatListOption","_changeDetector","selectionList","checkboxPosition","_inputsInitialized","_value","compareWith","selectedOptions","isSelected","_setSelected","_reportValueChange","wasSelected","hadFocus","newActiveItem","_removeOptionFromList","getLabel","_text","_handleClick","_emitChangeEvent","_handleFocus","_setFocusedOption","_handleBlur","deselect","_markForCheck","MatPseudoCheckbox","_multiple","_contentInitialized","selectionChange","a1","a2","_tabIndex","_","_markOptionsForCheck","withTypeAhead","skipPredicate","withAllowedModifierKeys","_setOptionsFromValues","tabOut","_allowFocusEscape","_updateTabIndex","changed","added","removed","toFocus","setActiveItem","disableRippleChanges","colorChanges","_isDestroyed","selectAll","_setAllOptionsSelected","deselectAll","optionIndex","_getOptionIndex","activeItemIndex","activeItem","manager","previousFocusIndex","hasModifier","isTyping","_toggleFocusedOption","shouldSelect","shiftKey","_getSelectedOptionValues","correspondingOption","focusedIndex","_isValidIndex","focusedOption","toArray","skipDisabled","isUserInput","changedOptions","MatListModule","isFakeTouchstartFromScreenReader","isFakeMousedownFromScreenReader","asapScheduler","switchMap","delay","DomPortalOutlet","i3$1","matMenuAnimations","transformMenu","fadeInItems","MAT_MENU_CONTENT","_MatMenuContentBase","_componentFactoryResolver","_appRef","_attached","_outlet","insertBefore","outletElement","ComponentFactoryResolver","ApplicationRef","MatMenuContent","throwMatMenuMissingError","throwMatMenuInvalidPositionX","throwMatMenuInvalidPositionY","throwMatMenuRecursiveError","MAT_MENU_PANEL","_MatMenuItemBase","MatMenuItem","_parentMenu","_hovered","_focused","_highlighted","_triggersSubmenu","addItem","removeItem","_getTabIndex","_checkDisabled","_handleMouseEnter","icons","_setHighlighted","isHighlighted","MAT_MENU_DEFAULT_OPTIONS","MAT_MENU_DEFAULT_OPTIONS_FACTORY","overlapTrigger","menuPanelUid","_MatMenuBase","_xPosition","_yPosition","_directDescendantItems","_tabSubscription","_classList","_panelAnimationState","overlayPanelClass","_overlapTrigger","_hasBackdrop","panelId","setPositionClasses","previousPanelClass","_previousPanelClass","_updateDirectDescendants","focusedItem","itemChanges","_item","_handleKeydown","parentMenu","setFocusOrigin","focusFirstItem","lazyContent","_focusFirstItem","setFirstItemActive","resetActiveItem","setElevation","depth","elevation","_baseElevation","newElevation","_elevationPrefix","customElevation","startsWith","_previousElevation","posX","posY","_startAnimation","_resetAnimation","_isAnimating","scrollTop","_allItems","ariaLabelledby","ariaDescribedby","MatMenu","MAT_MENU_SCROLL_STRATEGY","MAT_MENU_SCROLL_STRATEGY_FACTORY","MAT_MENU_SCROLL_STRATEGY_FACTORY_PROVIDER","MENU_PANEL_TOP_PADDING","passiveEventListenerOptions","_MatMenuTriggerBase","_menuItemInstance","_menuOpen","_closingActionsSubscription","_hoverSubscription","_menuCloseSubscription","_handleTouchStart","_openedBy","menuOpened","onMenuOpen","menuClosed","onMenuClose","_parentMaterialMenu","triggersSubmenu","_deprecatedMatMenuTriggerFor","menu","_menu","reason","_destroyMenu","_checkMenu","_handleHover","menuOpen","toggleMenu","closeMenu","openMenu","_setPosition","_getPortal","menuData","_menuClosingActions","_initMenu","_setIsMenuOpen","_setMenuElevation","isOpen","_subscribeToPositions","withGrowAfterOpen","positionChanges","connectionPair","originFallbackX","overlayFallbackY","originFallbackY","overlayFallbackX","offsetY","backdrop","parentClose","hover","active","_handleMousedown","button","MatMenuTrigger","MatMenuModule","_getShadowRoot","BASE_SIZE","BASE_STROKE_WIDTH","_MatProgressSpinnerBase","MAT_PROGRESS_SPINNER_DEFAULT_OPTIONS","MAT_PROGRESS_SPINNER_DEFAULT_OPTIONS_FACTORY","diameter","INDETERMINATE_ANIMATION_TEMPLATE","MatProgressSpinner","defaults","_diameter","mode","trackedDiameters","_diameters","_spinnerAnimationLabel","_getSpinnerAnimationLabel","head","_noopAnimations","_forceAnimations","strokeWidth","_styleRoot","_attachStyleNode","_strokeWidth","_getCircleRadius","_getViewBox","_getStrokeCircumference","PI","_getStrokeDashOffset","_getCircleStrokeWidth","styleRoot","currentDiameter","diameters","diametersForElement","styleTag","_getAnimationText","strokeCircumference","MatSpinner","platform","MatProgressSpinnerModule","CdkScrollable","mapTo","debounceTime","matDrawerAnimations","transformDrawer","throwMatDuplicatedDrawerError","MAT_DRAWER_DEFAULT_AUTOSIZE","MAT_DRAWER_DEFAULT_AUTOSIZE_FACTORY","MAT_DRAWER_CONTAINER","MatDrawerContent","_container","scrollDispatcher","_contentMarginChanges","MatDrawerContainer","ScrollDispatcher","MatDrawer","_doc","_elementFocusedBeforeDrawerWasOpened","_enableAnimations","_position","_mode","_disableClose","_animationStarted","_animationEnd","openedChange","_openedStream","o","openedStart","e","_closedStream","closedStart","onPositionChanged","_modeChanged","_takeFocus","_isFocusWithinDrawer","_openedVia","_updateFocusTrapState","_autoFocus","hasMovedFocus","focusOrigin","activeEl","openedVia","_closeViaBackdropClick","_setOpen","_getWidth","offsetWidth","viewportRuler","defaultAutosize","_drawers","_doCheckSubject","_contentMargins","_validateDrawers","updateContentMargins","_autosize","_start","_end","autosize","_backdropOverride","scrollable","_userContent","_content","_allDrawers","drawer","_watchDrawerToggle","_watchDrawerPosition","_watchDrawerMode","_isDrawerOpen","_left","_right","_isPushed","_setContainerClass","onMicrotaskEmpty","isAdd","_onBackdropClicked","_closeModalDrawersViaBackdrop","_canHaveBackdrop","_isShowingBackdrop","MatSidenavContent","MatSidenavContainer","MatSidenav","_fixedInViewport","_fixedTopGap","_fixedBottomGap","fixedInViewport","fixedTopGap","fixedBottomGap","MatSidenavModule","_isNumberValue","combineLatest","MatRecycleRows","MatTable","MatCellDef","MatHeaderCellDef","MatFooterCellDef","MatColumnDef","MatHeaderCell","MatFooterCell","MatCell","MatHeaderRowDef","MatFooterRowDef","MatRowDef","MatHeaderRow","MatFooterRow","MatRow","MatNoDataRow","MatTextColumn","MatTableModule","MAX_SAFE_INTEGER","_MatTableDataSource","initialData","_renderData","_filter","_internalPageChanges","_renderChangesSubscription","sortingDataAccessor","sortHeaderId","numberValue","sortData","sort","valueA","valueB","valueAType","valueBType","comparatorResult","filterPredicate","dataStr","currentTerm","transformedFilter","_updateChangeSubscription","_filterData","_sort","paginator","_paginator","sortChange","initialized","pageChange","page","filteredData","orderedData","_orderData","paginatedData","_pageData","obj","_updatePaginator","startIndex","pageIndex","pageSize","filteredDataLength","lastPageIndex","ceil","newPageIndex","MatTableDataSource","_MatToolbarBase","MatToolbarRow","MatToolbar","_checkToolbarMixedModes","_toolbarRows","isCombinedUsage","COMMENT_NODE","throwToolbarMixedModesError","MatToolbarModule"],"sourceRoot":"webpack:///"}