{"version":3,"file":"src_app_admin_admin_module_ts.js","mappings":"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xC,kCAAkC,mDAAK;AAC9C,0BAA0B,oDAAM;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,mDAAU;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,kEAAuB;AACzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,sEAA2B;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;ACjF2C;AACpC;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,mDAAU;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;ACpB2C;AACpC;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,mDAAU;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;AC5CO;AACP;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,MAAMuC,uBAAuB,GAAGhB,6EAAsB,EAAtD;AACA;AACA;AACA;;AACA,MAAMiB,mBAAN,CAA0B;AACtBC,EAAAA,WAAW,CAACC,cAAD,EAAiBC,QAAjB,EAA2B;AAClC,SAAKD,cAA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","sources":["./src/app/admin/admin-routing.module.ts","./src/app/admin/admin.module.ts","./src/app/admin/child-routes.ts","./src/app/admin/layout/layout.component.ts","./src/app/admin/layout/layout.component.html","./src/app/admin/layout/top-nav/top-nav.component.ts","./src/app/admin/layout/top-nav/top-nav.component.html","./node_modules/rxjs/_esm2015/internal/operators/delay.js","./node_modules/rxjs/_esm2015/internal/operators/mapTo.js","./node_modules/rxjs/_esm2015/internal/operators/takeWhile.js","./node_modules/rxjs/_esm2015/internal/util/isDate.js","./node_modules/@angular/cdk/fesm2015/overlay.mjs","./node_modules/@angular/material/fesm2015/divider.mjs","./node_modules/@angular/material/fesm2015/icon.mjs","./node_modules/@angular/material/fesm2015/list.mjs","./node_modules/@angular/material/fesm2015/menu.mjs","./node_modules/@angular/material/fesm2015/sidenav.mjs","./node_modules/@angular/material/fesm2015/toolbar.mjs"],"sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { LayoutComponent } from './layout/layout.component';\nimport { childRoutes } from './child-routes';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: LayoutComponent,\n    children: [\n      {\n        path: '',\n        redirectTo: 'dashboard'\n      },\n      ...childRoutes\n    ]\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class AdminRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatListModule } from '@angular/material/list';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { MatToolbarModule } from '@angular/material/toolbar';\n\nimport { AdminRoutingModule } from './admin-routing.module';\nimport { LayoutComponent } from './layout/layout.component';\nimport { TopNavComponent } from './layout/top-nav/top-nav.component';\nimport { FlexLayoutModule } from '@angular/flex-layout';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    AdminRoutingModule,\n    MatToolbarModule,\n    MatButtonModule,\n    MatSidenavModule,\n    MatIconModule,\n    MatInputModule,\n    MatMenuModule,\n    MatListModule,\n    FlexLayoutModule\n  ],\n  declarations: [LayoutComponent, TopNavComponent]\n})\nexport class AdminModule {}\n","export const childRoutes = [\n  {\n    path: 'dashboard',\n    loadChildren: () =>\n      import('./dashboard/dashboard.module').then(m => m.DashboardModule),\n    data: { icon: 'dashboard', text: 'Dashboard' }\n  },\n];\n","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { MediaObserver, MediaChange } from '@angular/flex-layout';\nimport { Subscription } from 'rxjs';\n\n@Component({\n  selector: 'app-layout',\n  templateUrl: './layout.component.html',\n  styleUrls: ['./layout.component.scss']\n})\nexport class LayoutComponent implements OnInit, OnDestroy {\n  sideNavOpened = true;\n  sideNavMode: 'side' | 'over' = 'side';\n  toolBarHeight = 64;\n  private readonly mediaWatcher: Subscription;\n  constructor(media: MediaObserver) {\n    this.mediaWatcher = media.media$.subscribe((change: MediaChange) => {\n      if (change.mqAlias === 'sm' || change.mqAlias === 'xs') {\n        if (this.sideNavOpened) {\n          this.sideNavOpened = false;\n        }\n        this.sideNavMode = 'over';\n      } else {\n        this.sideNavOpened = true;\n        this.sideNavMode = 'side';\n      }\n      if (change.mqAlias === 'xs') {\n        this.toolBarHeight = 56;\n      } else {\n        this.toolBarHeight = 64;\n      }\n    });\n  }\n  ngOnInit() { }\n\n  ngOnDestroy(): void {\n    this.mediaWatcher.unsubscribe();\n  }\n}\n","<div class=\"layout-container\">\n  <app-top-nav></app-top-nav>\n  <main [style.marginTop.px]=\"toolBarHeight\" class=\"main-container\">\n    <router-outlet ></router-outlet>\n  </main>\n</div>\n","import { Component, OnInit, Output, EventEmitter } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-top-nav',\n  templateUrl: './top-nav.component.html',\n  styleUrls: ['./top-nav.component.scss']\n})\nexport class TopNavComponent implements OnInit {\n  @Output() sideNavToggled = new EventEmitter<void>();\n\n  constructor(private readonly router: Router) {}\n\n  ngOnInit() {}\n\n  onLoggedout() {\n    localStorage.removeItem('isLoggedin');\n    this.router.navigate(['/login']);\n  }\n}\n","<mat-toolbar class=\"fix-nav\" fxLayout=\"row\" fxLayoutAlign=\"space-around center\">  \n  <img src=\"assets/images/clarovideo.svg\" alt=\"Claro Video\">\n  <div class=\"top-bar\">\n    <label class=\"w-text mr-15\" fxHide.lt-sm=\"true\">Colombia</label>\n    <label class=\"user-name mr-15\" fxHide.lt-sm=\"true\">marquez</label>\n    <a href=\"#\" class=\"link mr-15\" fxHide.lt-sm=\"true\"> Volver al Inicio </a>\n    <button class=\"blue-btn\" (click)=\"onLoggedout()\">Salir</button>\n  </div>\n</mat-toolbar>\n","import { async } from '../scheduler/async';\nimport { isDate } from '../util/isDate';\nimport { Subscriber } from '../Subscriber';\nimport { Notification } from '../Notification';\nexport function delay(delay, scheduler = async) {\n    const absoluteDelay = isDate(delay);\n    const delayFor = absoluteDelay ? (+delay - scheduler.now()) : Math.abs(delay);\n    return (source) => source.lift(new DelayOperator(delayFor, scheduler));\n}\nclass DelayOperator {\n    constructor(delay, scheduler) {\n        this.delay = delay;\n        this.scheduler = scheduler;\n    }\n    call(subscriber, source) {\n        return source.subscribe(new DelaySubscriber(subscriber, this.delay, this.scheduler));\n    }\n}\nclass DelaySubscriber extends Subscriber {\n    constructor(destination, delay, scheduler) {\n        super(destination);\n        this.delay = delay;\n        this.scheduler = scheduler;\n        this.queue = [];\n        this.active = false;\n        this.errored = false;\n    }\n    static dispatch(state) {\n        const source = state.source;\n        const queue = source.queue;\n        const scheduler = state.scheduler;\n        const destination = state.destination;\n        while (queue.length > 0 && (queue[0].time - scheduler.now()) <= 0) {\n            queue.shift().notification.observe(destination);\n        }\n        if (queue.length > 0) {\n            const delay = Math.max(0, queue[0].time - scheduler.now());\n            this.schedule(state, delay);\n        }\n        else {\n            this.unsubscribe();\n            source.active = false;\n        }\n    }\n    _schedule(scheduler) {\n        this.active = true;\n        const destination = this.destination;\n        destination.add(scheduler.schedule(DelaySubscriber.dispatch, this.delay, {\n            source: this, destination: this.destination, scheduler: scheduler\n        }));\n    }\n    scheduleNotification(notification) {\n        if (this.errored === true) {\n            return;\n        }\n        const scheduler = this.scheduler;\n        const message = new DelayMessage(scheduler.now() + this.delay, notification);\n        this.queue.push(message);\n        if (this.active === false) {\n            this._schedule(scheduler);\n        }\n    }\n    _next(value) {\n        this.scheduleNotification(Notification.createNext(value));\n    }\n    _error(err) {\n        this.errored = true;\n        this.queue = [];\n        this.destination.error(err);\n        this.unsubscribe();\n    }\n    _complete() {\n        this.scheduleNotification(Notification.createComplete());\n        this.unsubscribe();\n    }\n}\nclass DelayMessage {\n    constructor(time, notification) {\n        this.time = time;\n        this.notification = notification;\n    }\n}\n","import { Subscriber } from '../Subscriber';\nexport function mapTo(value) {\n    return (source) => source.lift(new MapToOperator(value));\n}\nclass MapToOperator {\n    constructor(value) {\n        this.value = value;\n    }\n    call(subscriber, source) {\n        return source.subscribe(new MapToSubscriber(subscriber, this.value));\n    }\n}\nclass MapToSubscriber extends Subscriber {\n    constructor(destination, value) {\n        super(destination);\n        this.value = value;\n    }\n    _next(x) {\n        this.destination.next(this.value);\n    }\n}\n","import { Subscriber } from '../Subscriber';\nexport function takeWhile(predicate, inclusive = false) {\n    return (source) => source.lift(new TakeWhileOperator(predicate, inclusive));\n}\nclass TakeWhileOperator {\n    constructor(predicate, inclusive) {\n        this.predicate = predicate;\n        this.inclusive = inclusive;\n    }\n    call(subscriber, source) {\n        return source.subscribe(new TakeWhileSubscriber(subscriber, this.predicate, this.inclusive));\n    }\n}\nclass TakeWhileSubscriber extends Subscriber {\n    constructor(destination, predicate, inclusive) {\n        super(destination);\n        this.predicate = predicate;\n        this.inclusive = inclusive;\n        this.index = 0;\n    }\n    _next(value) {\n        const destination = this.destination;\n        let result;\n        try {\n            result = this.predicate(value, this.index++);\n        }\n        catch (err) {\n            destination.error(err);\n            return;\n        }\n        this.nextOrComplete(value, result);\n    }\n    nextOrComplete(value, predicateResult) {\n        const destination = this.destination;\n        if (Boolean(predicateResult)) {\n            destination.next(value);\n        }\n        else {\n            if (this.inclusive) {\n                destination.next(value);\n            }\n            destination.complete();\n        }\n    }\n}\n","export function isDate(value) {\n    return value instanceof Date && !isNaN(+value);\n}\n","import * as i1 from '@angular/cdk/scrolling';\nimport { ScrollingModule } from '@angular/cdk/scrolling';\nexport { CdkScrollable, ScrollDispatcher, ViewportRuler } from '@angular/cdk/scrolling';\nimport * as i6 from '@angular/common';\nimport { DOCUMENT } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { Injectable, Inject, ElementRef, ApplicationRef, InjectionToken, Directive, EventEmitter, Optional, Input, Output, NgModule } from '@angular/core';\nimport { coerceCssPixelValue, coerceArray, coerceBooleanProperty } from '@angular/cdk/coercion';\nimport * as i1$1 from '@angular/cdk/platform';\nimport { supportsScrollBehavior, _isTestEnvironment, _getEventTarget } from '@angular/cdk/platform';\nimport * as i5 from '@angular/cdk/bidi';\nimport { BidiModule } from '@angular/cdk/bidi';\nimport { DomPortalOutlet, TemplatePortal, PortalModule } from '@angular/cdk/portal';\nimport { Subject, Subscription, merge } from 'rxjs';\nimport { take, takeUntil, takeWhile } from 'rxjs/operators';\nimport { ESCAPE, hasModifierKey } from '@angular/cdk/keycodes';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst scrollBehaviorSupported = supportsScrollBehavior();\n/**\n * Strategy that will prevent the user from scrolling while the overlay is visible.\n */\nclass BlockScrollStrategy {\n    constructor(_viewportRuler, document) {\n        this._viewportRuler = _viewportRuler;\n        this._previousHTMLStyles = { top: '', left: '' };\n        this._isEnabled = false;\n        this._document = document;\n    }\n    /** Attaches this scroll strategy to an overlay. */\n    attach() { }\n    /** Blocks page-level scroll while the attached overlay is open. */\n    enable() {\n        if (this._canBeEnabled()) {\n            const root = this._document.documentElement;\n            this._previousScrollPosition = this._viewportRuler.getViewportScrollPosition();\n            // Cache the previous inline styles in case the user had set them.\n            this._previousHTMLStyles.left = root.style.left || '';\n            this._previousHTMLStyles.top = root.style.top || '';\n            // Note: we're using the `html` node, instead of the `body`, because the `body` may\n            // have the user agent margin, whereas the `html` is guaranteed not to have one.\n            root.style.left = coerceCssPixelValue(-this._previousScrollPosition.left);\n            root.style.top = coerceCssPixelValue(-this._previousScrollPosition.top);\n            root.classList.add('cdk-global-scrollblock');\n            this._isEnabled = true;\n        }\n    }\n    /** Unblocks page-level scroll while the attached overlay is open. */\n    disable() {\n        if (this._isEnabled) {\n            const html = this._document.documentElement;\n            const body = this._document.body;\n            const htmlStyle = html.style;\n            const bodyStyle = body.style;\n            const previousHtmlScrollBehavior = htmlStyle.scrollBehavior || '';\n            const previousBodyScrollBehavior = bodyStyle.scrollBehavior || '';\n            this._isEnabled = false;\n            htmlStyle.left = this._previousHTMLStyles.left;\n            htmlStyle.top = this._previousHTMLStyles.top;\n            html.classList.remove('cdk-global-scrollblock');\n            // Disable user-defined smooth scrolling temporarily while we restore the scroll position.\n            // See https://developer.mozilla.org/en-US/docs/Web/CSS/scroll-behavior\n            // Note that we don't mutate the property if the browser doesn't support `scroll-behavior`,\n            // because it can throw off feature detections in `supportsScrollBehavior` which\n            // checks for `'scrollBehavior' in documentElement.style`.\n            if (scrollBehaviorSupported) {\n                htmlStyle.scrollBehavior = bodyStyle.scrollBehavior = 'auto';\n            }\n            window.scroll(this._previousScrollPosition.left, this._previousScrollPosition.top);\n            if (scrollBehaviorSupported) {\n                htmlStyle.scrollBehavior = previousHtmlScrollBehavior;\n                bodyStyle.scrollBehavior = previousBodyScrollBehavior;\n            }\n        }\n    }\n    _canBeEnabled() {\n        // Since the scroll strategies can't be singletons, we have to use a global CSS class\n        // (`cdk-global-scrollblock`) to make sure that we don't try to disable global\n        // scrolling multiple times.\n        const html = this._document.documentElement;\n        if (html.classList.contains('cdk-global-scrollblock') || this._isEnabled) {\n            return false;\n        }\n        const body = this._document.body;\n        const viewport = this._viewportRuler.getViewportSize();\n        return body.scrollHeight > viewport.height || body.scrollWidth > viewport.width;\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Returns an error to be thrown when attempting to attach an already-attached scroll strategy.\n */\nfunction getMatScrollStrategyAlreadyAttachedError() {\n    return Error(`Scroll strategy has already been attached.`);\n}\n\n/**\n * Strategy that will close the overlay as soon as the user starts scrolling.\n */\nclass CloseScrollStrategy {\n    constructor(_scrollDispatcher, _ngZone, _viewportRuler, _config) {\n        this._scrollDispatcher = _scrollDispatcher;\n        this._ngZone = _ngZone;\n        this._viewportRuler = _viewportRuler;\n        this._config = _config;\n        this._scrollSubscription = null;\n        /** Detaches the overlay ref and disables the scroll strategy. */\n        this._detach = () => {\n            this.disable();\n            if (this._overlayRef.hasAttached()) {\n                this._ngZone.run(() => this._overlayRef.detach());\n            }\n        };\n    }\n    /** Attaches this scroll strategy to an overlay. */\n    attach(overlayRef) {\n        if (this._overlayRef && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw getMatScrollStrategyAlreadyAttachedError();\n        }\n        this._overlayRef = overlayRef;\n    }\n    /** Enables the closing of the attached overlay on scroll. */\n    enable() {\n        if (this._scrollSubscription) {\n            return;\n        }\n        const stream = this._scrollDispatcher.scrolled(0);\n        if (this._config && this._config.threshold && this._config.threshold > 1) {\n            this._initialScrollPosition = this._viewportRuler.getViewportScrollPosition().top;\n            this._scrollSubscription = stream.subscribe(() => {\n                const scrollPosition = this._viewportRuler.getViewportScrollPosition().top;\n                if (Math.abs(scrollPosition - this._initialScrollPosition) > this._config.threshold) {\n                    this._detach();\n                }\n                else {\n                    this._overlayRef.updatePosition();\n                }\n            });\n        }\n        else {\n            this._scrollSubscription = stream.subscribe(this._detach);\n        }\n    }\n    /** Disables the closing the attached overlay on scroll. */\n    disable() {\n        if (this._scrollSubscription) {\n            this._scrollSubscription.unsubscribe();\n            this._scrollSubscription = null;\n        }\n    }\n    detach() {\n        this.disable();\n        this._overlayRef = null;\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Scroll strategy that doesn't do anything. */\nclass NoopScrollStrategy {\n    /** Does nothing, as this scroll strategy is a no-op. */\n    enable() { }\n    /** Does nothing, as this scroll strategy is a no-op. */\n    disable() { }\n    /** Does nothing, as this scroll strategy is a no-op. */\n    attach() { }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Gets whether an element is scrolled outside of view by any of its parent scrolling containers.\n * @param element Dimensions of the element (from getBoundingClientRect)\n * @param scrollContainers Dimensions of element's scrolling containers (from getBoundingClientRect)\n * @returns Whether the element is scrolled out of view\n * @docs-private\n */\nfunction isElementScrolledOutsideView(element, scrollContainers) {\n    return scrollContainers.some(containerBounds => {\n        const outsideAbove = element.bottom < containerBounds.top;\n        const outsideBelow = element.top > containerBounds.bottom;\n        const outsideLeft = element.right < containerBounds.left;\n        const outsideRight = element.left > containerBounds.right;\n        return outsideAbove || outsideBelow || outsideLeft || outsideRight;\n    });\n}\n/**\n * Gets whether an element is clipped by any of its scrolling containers.\n * @param element Dimensions of the element (from getBoundingClientRect)\n * @param scrollContainers Dimensions of element's scrolling containers (from getBoundingClientRect)\n * @returns Whether the element is clipped\n * @docs-private\n */\nfunction isElementClippedByScrolling(element, scrollContainers) {\n    return scrollContainers.some(scrollContainerRect => {\n        const clippedAbove = element.top < scrollContainerRect.top;\n        const clippedBelow = element.bottom > scrollContainerRect.bottom;\n        const clippedLeft = element.left < scrollContainerRect.left;\n        const clippedRight = element.right > scrollContainerRect.right;\n        return clippedAbove || clippedBelow || clippedLeft || clippedRight;\n    });\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Strategy that will update the element position as the user is scrolling.\n */\nclass RepositionScrollStrategy {\n    constructor(_scrollDispatcher, _viewportRuler, _ngZone, _config) {\n        this._scrollDispatcher = _scrollDispatcher;\n        this._viewportRuler = _viewportRuler;\n        this._ngZone = _ngZone;\n        this._config = _config;\n        this._scrollSubscription = null;\n    }\n    /** Attaches this scroll strategy to an overlay. */\n    attach(overlayRef) {\n        if (this._overlayRef && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw getMatScrollStrategyAlreadyAttachedError();\n        }\n        this._overlayRef = overlayRef;\n    }\n    /** Enables repositioning of the attached overlay on scroll. */\n    enable() {\n        if (!this._scrollSubscription) {\n            const throttle = this._config ? this._config.scrollThrottle : 0;\n            this._scrollSubscription = this._scrollDispatcher.scrolled(throttle).subscribe(() => {\n                this._overlayRef.updatePosition();\n                // TODO(crisbeto): make `close` on by default once all components can handle it.\n                if (this._config && this._config.autoClose) {\n                    const overlayRect = this._overlayRef.overlayElement.getBoundingClientRect();\n                    const { width, height } = this._viewportRuler.getViewportSize();\n                    // TODO(crisbeto): include all ancestor scroll containers here once\n                    // we have a way of exposing the trigger element to the scroll strategy.\n                    const parentRects = [{ width, height, bottom: height, right: width, top: 0, left: 0 }];\n                    if (isElementScrolledOutsideView(overlayRect, parentRects)) {\n                        this.disable();\n                        this._ngZone.run(() => this._overlayRef.detach());\n                    }\n                }\n            });\n        }\n    }\n    /** Disables repositioning of the attached overlay on scroll. */\n    disable() {\n        if (this._scrollSubscription) {\n            this._scrollSubscription.unsubscribe();\n            this._scrollSubscription = null;\n        }\n    }\n    detach() {\n        this.disable();\n        this._overlayRef = null;\n    }\n}\n\n/**\n * Options for how an overlay will handle scrolling.\n *\n * Users can provide a custom value for `ScrollStrategyOptions` to replace the default\n * behaviors. This class primarily acts as a factory for ScrollStrategy instances.\n */\nclass ScrollStrategyOptions {\n    constructor(_scrollDispatcher, _viewportRuler, _ngZone, document) {\n        this._scrollDispatcher = _scrollDispatcher;\n        this._viewportRuler = _viewportRuler;\n        this._ngZone = _ngZone;\n        /** Do nothing on scroll. */\n        this.noop = () => new NoopScrollStrategy();\n        /**\n         * Close the overlay as soon as the user scrolls.\n         * @param config Configuration to be used inside the scroll strategy.\n         */\n        this.close = (config) => new CloseScrollStrategy(this._scrollDispatcher, this._ngZone, this._viewportRuler, config);\n        /** Block scrolling. */\n        this.block = () => new BlockScrollStrategy(this._viewportRuler, this._document);\n        /**\n         * Update the overlay's position on scroll.\n         * @param config Configuration to be used inside the scroll strategy.\n         * Allows debouncing the reposition calls.\n         */\n        this.reposition = (config) => new RepositionScrollStrategy(this._scrollDispatcher, this._viewportRuler, this._ngZone, config);\n        this._document = document;\n    }\n}\nScrollStrategyOptions.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: ScrollStrategyOptions, deps: [{ token: i1.ScrollDispatcher }, { token: i1.ViewportRuler }, { token: i0.NgZone }, { token: DOCUMENT }], target: i0.ɵɵFactoryTarget.Injectable });\nScrollStrategyOptions.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: ScrollStrategyOptions, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: ScrollStrategyOptions, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: function () {\n        return [{ type: i1.ScrollDispatcher }, { type: i1.ViewportRuler }, { type: i0.NgZone }, { type: undefined, decorators: [{\n                        type: Inject,\n                        args: [DOCUMENT]\n                    }] }];\n    } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Initial configuration used when creating an overlay. */\nclass OverlayConfig {\n    constructor(config) {\n        /** Strategy to be used when handling scroll events while the overlay is open. */\n        this.scrollStrategy = new NoopScrollStrategy();\n        /** Custom class to add to the overlay pane. */\n        this.panelClass = '';\n        /** Whether the overlay has a backdrop. */\n        this.hasBackdrop = false;\n        /** Custom class to add to the backdrop */\n        this.backdropClass = 'cdk-overlay-dark-backdrop';\n        /**\n         * Whether the overlay should be disposed of when the user goes backwards/forwards in history.\n         * Note that this usually doesn't include clicking on links (unless the user is using\n         * the `HashLocationStrategy`).\n         */\n        this.disposeOnNavigation = false;\n        if (config) {\n            // Use `Iterable` instead of `Array` because TypeScript, as of 3.6.3,\n            // loses the array generic type in the `for of`. But we *also* have to use `Array` because\n            // typescript won't iterate over an `Iterable` unless you compile with `--downlevelIteration`\n            const configKeys = Object.keys(config);\n            for (const key of configKeys) {\n                if (config[key] !== undefined) {\n                    // TypeScript, as of version 3.5, sees the left-hand-side of this expression\n                    // as \"I don't know *which* key this is, so the only valid value is the intersection\n                    // of all the posible values.\" In this case, that happens to be `undefined`. TypeScript\n                    // is not smart enough to see that the right-hand-side is actually an access of the same\n                    // exact type with the same exact key, meaning that the value type must be identical.\n                    // So we use `any` to work around this.\n                    this[key] = config[key];\n                }\n            }\n        }\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** The points of the origin element and the overlay element to connect. */\nclass ConnectionPositionPair {\n    constructor(origin, overlay, \n    /** Offset along the X axis. */\n    offsetX, \n    /** Offset along the Y axis. */\n    offsetY, \n    /** Class(es) to be applied to the panel while this position is active. */\n    panelClass) {\n        this.offsetX = offsetX;\n        this.offsetY = offsetY;\n        this.panelClass = panelClass;\n        this.originX = origin.originX;\n        this.originY = origin.originY;\n        this.overlayX = overlay.overlayX;\n        this.overlayY = overlay.overlayY;\n    }\n}\n/**\n * Set of properties regarding the position of the origin and overlay relative to the viewport\n * with respect to the containing Scrollable elements.\n *\n * The overlay and origin are clipped if any part of their bounding client rectangle exceeds the\n * bounds of any one of the strategy's Scrollable's bounding client rectangle.\n *\n * The overlay and origin are outside view if there is no overlap between their bounding client\n * rectangle and any one of the strategy's Scrollable's bounding client rectangle.\n *\n *       -----------                    -----------\n *       | outside |                    | clipped |\n *       |  view   |              --------------------------\n *       |         |              |     |         |        |\n *       ----------               |     -----------        |\n *  --------------------------    |                        |\n *  |                        |    |      Scrollable        |\n *  |                        |    |                        |\n *  |                        |     --------------------------\n *  |      Scrollable        |\n *  |                        |\n *  --------------------------\n *\n *  @docs-private\n */\nclass ScrollingVisibility {\n}\n/** The change event emitted by the strategy when a fallback position is used. */\nclass ConnectedOverlayPositionChange {\n    constructor(\n    /** The position used as a result of this change. */\n    connectionPair, \n    /** @docs-private */\n    scrollableViewProperties) {\n        this.connectionPair = connectionPair;\n        this.scrollableViewProperties = scrollableViewProperties;\n    }\n}\n/**\n * Validates whether a vertical position property matches the expected values.\n * @param property Name of the property being validated.\n * @param value Value of the property being validated.\n * @docs-private\n */\nfunction validateVerticalPosition(property, value) {\n    if (value !== 'top' && value !== 'bottom' && value !== 'center') {\n        throw Error(`ConnectedPosition: Invalid ${property} \"${value}\". ` +\n            `Expected \"top\", \"bottom\" or \"center\".`);\n    }\n}\n/**\n * Validates whether a horizontal position property matches the expected values.\n * @param property Name of the property being validated.\n * @param value Value of the property being validated.\n * @docs-private\n */\nfunction validateHorizontalPosition(property, value) {\n    if (value !== 'start' && value !== 'end' && value !== 'center') {\n        throw Error(`ConnectedPosition: Invalid ${property} \"${value}\". ` +\n            `Expected \"start\", \"end\" or \"center\".`);\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Reference to an overlay that has been created with the Overlay service.\n * Used to manipulate or dispose of said overlay.\n */\nclass OverlayRef {\n    constructor(_portalOutlet, _host, _pane, _config, _ngZone, _keyboardDispatcher, _document, _location, _outsideClickDispatcher) {\n        this._portalOutlet = _portalOutlet;\n        this._host = _host;\n        this._pane = _pane;\n        this._config = _config;\n        this._ngZone = _ngZone;\n        this._keyboardDispatcher = _keyboardDispatcher;\n        this._document = _document;\n        this._location = _location;\n        this._outsideClickDispatcher = _outsideClickDispatcher;\n        this._backdropElement = null;\n        this._backdropClick = new Subject();\n        this._attachments = new Subject();\n        this._detachments = new Subject();\n        this._locationChanges = Subscription.EMPTY;\n        this._backdropClickHandler = (event) => this._backdropClick.next(event);\n        /** Stream of keydown events dispatched to this overlay. */\n        this._keydownEvents = new Subject();\n        /** Stream of mouse outside events dispatched to this overlay. */\n        this._outsidePointerEvents = new Subject();\n        if (_config.scrollStrategy) {\n            this._scrollStrategy = _config.scrollStrategy;\n            this._scrollStrategy.attach(this);\n        }\n        this._positionStrategy = _config.positionStrategy;\n    }\n    /** The overlay's HTML element */\n    get overlayElement() {\n        return this._pane;\n    }\n    /** The overlay's backdrop HTML element. */\n    get backdropElement() {\n        return this._backdropElement;\n    }\n    /**\n     * Wrapper around the panel element. Can be used for advanced\n     * positioning where a wrapper with specific styling is\n     * required around the overlay pane.\n     */\n    get hostElement() {\n        return this._host;\n    }\n    /**\n     * Attaches content, given via a Portal, to the overlay.\n     * If the overlay is configured to have a backdrop, it will be created.\n     *\n     * @param portal Portal instance to which to attach the overlay.\n     * @returns The portal attachment result.\n     */\n    attach(portal) {\n        let attachResult = this._portalOutlet.attach(portal);\n        // Update the pane element with the given configuration.\n        if (!this._host.parentElement && this._previousHostParent) {\n            this._previousHostParent.appendChild(this._host);\n        }\n        if (this._positionStrategy) {\n            this._positionStrategy.attach(this);\n        }\n        this._updateStackingOrder();\n        this._updateElementSize();\n        this._updateElementDirection();\n        if (this._scrollStrategy) {\n            this._scrollStrategy.enable();\n        }\n        // Update the position once the zone is stable so that the overlay will be fully rendered\n        // before attempting to position it, as the position may depend on the size of the rendered\n        // content.\n        this._ngZone.onStable.pipe(take(1)).subscribe(() => {\n            // The overlay could've been detached before the zone has stabilized.\n            if (this.hasAttached()) {\n                this.updatePosition();\n            }\n        });\n        // Enable pointer events for the overlay pane element.\n        this._togglePointerEvents(true);\n        if (this._config.hasBackdrop) {\n            this._attachBackdrop();\n        }\n        if (this._config.panelClass) {\n            this._toggleClasses(this._pane, this._config.panelClass, true);\n        }\n        // Only emit the `attachments` event once all other setup is done.\n        this._attachments.next();\n        // Track this overlay by the keyboard dispatcher\n        this._keyboardDispatcher.add(this);\n        if (this._config.disposeOnNavigation) {\n            this._locationChanges = this._location.subscribe(() => this.dispose());\n        }\n        this._outsideClickDispatcher.add(this);\n        return attachResult;\n    }\n    /**\n     * Detaches an overlay from a portal.\n     * @returns The portal detachment result.\n     */\n    detach() {\n        if (!this.hasAttached()) {\n            return;\n        }\n        this.detachBackdrop();\n        // When the overlay is detached, the pane element should disable pointer events.\n        // This is necessary because otherwise the pane element will cover the page and disable\n        // pointer events therefore. Depends on the position strategy and the applied pane boundaries.\n        this._togglePointerEvents(false);\n        if (this._positionStrategy && this._positionStrategy.detach) {\n            this._positionStrategy.detach();\n        }\n        if (this._scrollStrategy) {\n            this._scrollStrategy.disable();\n        }\n        const detachmentResult = this._portalOutlet.detach();\n        // Only emit after everything is detached.\n        this._detachments.next();\n        // Remove this overlay from keyboard dispatcher tracking.\n        this._keyboardDispatcher.remove(this);\n        // Keeping the host element in the DOM can cause scroll jank, because it still gets\n        // rendered, even though it's transparent and unclickable which is why we remove it.\n        this._detachContentWhenStable();\n        this._locationChanges.unsubscribe();\n        this._outsideClickDispatcher.remove(this);\n        return detachmentResult;\n    }\n    /** Cleans up the overlay from the DOM. */\n    dispose() {\n        var _a;\n        const isAttached = this.hasAttached();\n        if (this._positionStrategy) {\n            this._positionStrategy.dispose();\n        }\n        this._disposeScrollStrategy();\n        this._disposeBackdrop(this._backdropElement);\n        this._locationChanges.unsubscribe();\n        this._keyboardDispatcher.remove(this);\n        this._portalOutlet.dispose();\n        this._attachments.complete();\n        this._backdropClick.complete();\n        this._keydownEvents.complete();\n        this._outsidePointerEvents.complete();\n        this._outsideClickDispatcher.remove(this);\n        (_a = this._host) === null || _a === void 0 ? void 0 : _a.remove();\n        this._previousHostParent = this._pane = this._host = null;\n        if (isAttached) {\n            this._detachments.next();\n        }\n        this._detachments.complete();\n    }\n    /** Whether the overlay has attached content. */\n    hasAttached() {\n        return this._portalOutlet.hasAttached();\n    }\n    /** Gets an observable that emits when the backdrop has been clicked. */\n    backdropClick() {\n        return this._backdropClick;\n    }\n    /** Gets an observable that emits when the overlay has been attached. */\n    attachments() {\n        return this._attachments;\n    }\n    /** Gets an observable that emits when the overlay has been detached. */\n    detachments() {\n        return this._detachments;\n    }\n    /** Gets an observable of keydown events targeted to this overlay. */\n    keydownEvents() {\n        return this._keydownEvents;\n    }\n    /** Gets an observable of pointer events targeted outside this overlay. */\n    outsidePointerEvents() {\n        return this._outsidePointerEvents;\n    }\n    /** Gets the current overlay configuration, which is immutable. */\n    getConfig() {\n        return this._config;\n    }\n    /** Updates the position of the overlay based on the position strategy. */\n    updatePosition() {\n        if (this._positionStrategy) {\n            this._positionStrategy.apply();\n        }\n    }\n    /** Switches to a new position strategy and updates the overlay position. */\n    updatePositionStrategy(strategy) {\n        if (strategy === this._positionStrategy) {\n            return;\n        }\n        if (this._positionStrategy) {\n            this._positionStrategy.dispose();\n        }\n        this._positionStrategy = strategy;\n        if (this.hasAttached()) {\n            strategy.attach(this);\n            this.updatePosition();\n        }\n    }\n    /** Update the size properties of the overlay. */\n    updateSize(sizeConfig) {\n        this._config = Object.assign(Object.assign({}, this._config), sizeConfig);\n        this._updateElementSize();\n    }\n    /** Sets the LTR/RTL direction for the overlay. */\n    setDirection(dir) {\n        this._config = Object.assign(Object.assign({}, this._config), { direction: dir });\n        this._updateElementDirection();\n    }\n    /** Add a CSS class or an array of classes to the overlay pane. */\n    addPanelClass(classes) {\n        if (this._pane) {\n            this._toggleClasses(this._pane, classes, true);\n        }\n    }\n    /** Remove a CSS class or an array of classes from the overlay pane. */\n    removePanelClass(classes) {\n        if (this._pane) {\n            this._toggleClasses(this._pane, classes, false);\n        }\n    }\n    /**\n     * Returns the layout direction of the overlay panel.\n     */\n    getDirection() {\n        const direction = this._config.direction;\n        if (!direction) {\n            return 'ltr';\n        }\n        return typeof direction === 'string' ? direction : direction.value;\n    }\n    /** Switches to a new scroll strategy. */\n    updateScrollStrategy(strategy) {\n        if (strategy === this._scrollStrategy) {\n            return;\n        }\n        this._disposeScrollStrategy();\n        this._scrollStrategy = strategy;\n        if (this.hasAttached()) {\n            strategy.attach(this);\n            strategy.enable();\n        }\n    }\n    /** Updates the text direction of the overlay panel. */\n    _updateElementDirection() {\n        this._host.setAttribute('dir', this.getDirection());\n    }\n    /** Updates the size of the overlay element based on the overlay config. */\n    _updateElementSize() {\n        if (!this._pane) {\n            return;\n        }\n        const style = this._pane.style;\n        style.width = coerceCssPixelValue(this._config.width);\n        style.height = coerceCssPixelValue(this._config.height);\n        style.minWidth = coerceCssPixelValue(this._config.minWidth);\n        style.minHeight = coerceCssPixelValue(this._config.minHeight);\n        style.maxWidth = coerceCssPixelValue(this._config.maxWidth);\n        style.maxHeight = coerceCssPixelValue(this._config.maxHeight);\n    }\n    /** Toggles the pointer events for the overlay pane element. */\n    _togglePointerEvents(enablePointer) {\n        this._pane.style.pointerEvents = enablePointer ? '' : 'none';\n    }\n    /** Attaches a backdrop for this overlay. */\n    _attachBackdrop() {\n        const showingClass = 'cdk-overlay-backdrop-showing';\n        this._backdropElement = this._document.createElement('div');\n        this._backdropElement.classList.add('cdk-overlay-backdrop');\n        if (this._config.backdropClass) {\n            this._toggleClasses(this._backdropElement, this._config.backdropClass, true);\n        }\n        // Insert the backdrop before the pane in the DOM order,\n        // in order to handle stacked overlays properly.\n        this._host.parentElement.insertBefore(this._backdropElement, this._host);\n        // Forward backdrop clicks such that the consumer of the overlay can perform whatever\n        // action desired when such a click occurs (usually closing the overlay).\n        this._backdropElement.addEventListener('click', this._backdropClickHandler);\n        // Add class to fade-in the backdrop after one frame.\n        if (typeof requestAnimationFrame !== 'undefined') {\n            this._ngZone.runOutsideAngular(() => {\n                requestAnimationFrame(() => {\n                    if (this._backdropElement) {\n                        this._backdropElement.classList.add(showingClass);\n                    }\n                });\n            });\n        }\n        else {\n            this._backdropElement.classList.add(showingClass);\n        }\n    }\n    /**\n     * Updates the stacking order of the element, moving it to the top if necessary.\n     * This is required in cases where one overlay was detached, while another one,\n     * that should be behind it, was destroyed. The next time both of them are opened,\n     * the stacking will be wrong, because the detached element's pane will still be\n     * in its original DOM position.\n     */\n    _updateStackingOrder() {\n        if (this._host.nextSibling) {\n            this._host.parentNode.appendChild(this._host);\n        }\n    }\n    /** Detaches the backdrop (if any) associated with the overlay. */\n    detachBackdrop() {\n        const backdropToDetach = this._backdropElement;\n        if (!backdropToDetach) {\n            return;\n        }\n        let timeoutId;\n        const finishDetach = () => {\n            // It may not be attached to anything in certain cases (e.g. unit tests).\n            if (backdropToDetach) {\n                backdropToDetach.removeEventListener('click', this._backdropClickHandler);\n                backdropToDetach.removeEventListener('transitionend', finishDetach);\n                this._disposeBackdrop(backdropToDetach);\n            }\n            if (this._config.backdropClass) {\n                this._toggleClasses(backdropToDetach, this._config.backdropClass, false);\n            }\n            clearTimeout(timeoutId);\n        };\n        backdropToDetach.classList.remove('cdk-overlay-backdrop-showing');\n        this._ngZone.runOutsideAngular(() => {\n            backdropToDetach.addEventListener('transitionend', finishDetach);\n        });\n        // If the backdrop doesn't have a transition, the `transitionend` event won't fire.\n        // In this case we make it unclickable and we try to remove it after a delay.\n        backdropToDetach.style.pointerEvents = 'none';\n        // Run this outside the Angular zone because there's nothing that Angular cares about.\n        // If it were to run inside the Angular zone, every test that used Overlay would have to be\n        // either async or fakeAsync.\n        timeoutId = this._ngZone.runOutsideAngular(() => setTimeout(finishDetach, 500));\n    }\n    /** Toggles a single CSS class or an array of classes on an element. */\n    _toggleClasses(element, cssClasses, isAdd) {\n        const classes = coerceArray(cssClasses || []).filter(c => !!c);\n        if (classes.length) {\n            isAdd ? element.classList.add(...classes) : element.classList.remove(...classes);\n        }\n    }\n    /** Detaches the overlay content next time the zone stabilizes. */\n    _detachContentWhenStable() {\n        // Normally we wouldn't have to explicitly run this outside the `NgZone`, however\n        // if the consumer is using `zone-patch-rxjs`, the `Subscription.unsubscribe` call will\n        // be patched to run inside the zone, which will throw us into an infinite loop.\n        this._ngZone.runOutsideAngular(() => {\n            // We can't remove the host here immediately, because the overlay pane's content\n            // might still be animating. This stream helps us avoid interrupting the animation\n            // by waiting for the pane to become empty.\n            const subscription = this._ngZone.onStable\n                .pipe(takeUntil(merge(this._attachments, this._detachments)))\n                .subscribe(() => {\n                // Needs a couple of checks for the pane and host, because\n                // they may have been removed by the time the zone stabilizes.\n                if (!this._pane || !this._host || this._pane.children.length === 0) {\n                    if (this._pane && this._config.panelClass) {\n                        this._toggleClasses(this._pane, this._config.panelClass, false);\n                    }\n                    if (this._host && this._host.parentElement) {\n                        this._previousHostParent = this._host.parentElement;\n                        this._host.remove();\n                    }\n                    subscription.unsubscribe();\n                }\n            });\n        });\n    }\n    /** Disposes of a scroll strategy. */\n    _disposeScrollStrategy() {\n        const scrollStrategy = this._scrollStrategy;\n        if (scrollStrategy) {\n            scrollStrategy.disable();\n            if (scrollStrategy.detach) {\n                scrollStrategy.detach();\n            }\n        }\n    }\n    /** Removes a backdrop element from the DOM. */\n    _disposeBackdrop(backdrop) {\n        if (backdrop) {\n            backdrop.remove();\n            // It is possible that a new portal has been attached to this overlay since we started\n            // removing the backdrop. If that is the case, only clear the backdrop reference if it\n            // is still the same instance that we started to remove.\n            if (this._backdropElement === backdrop) {\n                this._backdropElement = null;\n            }\n        }\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Container inside which all overlays will render. */\nclass OverlayContainer {\n    constructor(document, _platform) {\n        this._platform = _platform;\n        this._document = document;\n    }\n    ngOnDestroy() {\n        var _a;\n        (_a = this._containerElement) === null || _a === void 0 ? void 0 : _a.remove();\n    }\n    /**\n     * This method returns the overlay container element. It will lazily\n     * create the element the first time it is called to facilitate using\n     * the container in non-browser environments.\n     * @returns the container element\n     */\n    getContainerElement() {\n        if (!this._containerElement) {\n            this._createContainer();\n        }\n        return this._containerElement;\n    }\n    /**\n     * Create the overlay container element, which is simply a div\n     * with the 'cdk-overlay-container' class on the document body.\n     */\n    _createContainer() {\n        const containerClass = 'cdk-overlay-container';\n        // TODO(crisbeto): remove the testing check once we have an overlay testing\n        // module or Angular starts tearing down the testing `NgModule`. See:\n        // https://github.com/angular/angular/issues/18831\n        if (this._platform.isBrowser || _isTestEnvironment()) {\n            const oppositePlatformContainers = this._document.querySelectorAll(`.${containerClass}[platform=\"server\"], ` + `.${containerClass}[platform=\"test\"]`);\n            // Remove any old containers from the opposite platform.\n            // This can happen when transitioning from the server to the client.\n            for (let i = 0; i < oppositePlatformContainers.length; i++) {\n                oppositePlatformContainers[i].remove();\n            }\n        }\n        const container = this._document.createElement('div');\n        container.classList.add(containerClass);\n        // A long time ago we kept adding new overlay containers whenever a new app was instantiated,\n        // but at some point we added logic which clears the duplicate ones in order to avoid leaks.\n        // The new logic was a little too aggressive since it was breaking some legitimate use cases.\n        // To mitigate the problem we made it so that only containers from a different platform are\n        // cleared, but the side-effect was that people started depending on the overly-aggressive\n        // logic to clean up their tests for them. Until we can introduce an overlay-specific testing\n        // module which does the cleanup, we try to detect that we're in a test environment and we\n        // always clear the container. See #17006.\n        // TODO(crisbeto): remove the test environment check once we have an overlay testing module.\n        if (_isTestEnvironment()) {\n            container.setAttribute('platform', 'test');\n        }\n        else if (!this._platform.isBrowser) {\n            container.setAttribute('platform', 'server');\n        }\n        this._document.body.appendChild(container);\n        this._containerElement = container;\n    }\n}\nOverlayContainer.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: OverlayContainer, deps: [{ token: DOCUMENT }, { token: i1$1.Platform }], target: i0.ɵɵFactoryTarget.Injectable });\nOverlayContainer.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: OverlayContainer, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: OverlayContainer, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: function () {\n        return [{ type: undefined, decorators: [{\n                        type: Inject,\n                        args: [DOCUMENT]\n                    }] }, { type: i1$1.Platform }];\n    } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// TODO: refactor clipping detection into a separate thing (part of scrolling module)\n// TODO: doesn't handle both flexible width and height when it has to scroll along both axis.\n/** Class to be added to the overlay bounding box. */\nconst boundingBoxClass = 'cdk-overlay-connected-position-bounding-box';\n/** Regex used to split a string on its CSS units. */\nconst cssUnitPattern = /([A-Za-z%]+)$/;\n/**\n * A strategy for positioning overlays. Using this strategy, an overlay is given an\n * implicit position relative some origin element. The relative position is defined in terms of\n * a point on the origin element that is connected to a point on the overlay element. For example,\n * a basic dropdown is connecting the bottom-left corner of the origin to the top-left corner\n * of the overlay.\n */\nclass FlexibleConnectedPositionStrategy {\n    constructor(connectedTo, _viewportRuler, _document, _platform, _overlayContainer) {\n        this._viewportRuler = _viewportRuler;\n        this._document = _document;\n        this._platform = _platform;\n        this._overlayContainer = _overlayContainer;\n        /** Last size used for the bounding box. Used to avoid resizing the overlay after open. */\n        this._lastBoundingBoxSize = { width: 0, height: 0 };\n        /** Whether the overlay was pushed in a previous positioning. */\n        this._isPushed = false;\n        /** Whether the overlay can be pushed on-screen on the initial open. */\n        this._canPush = true;\n        /** Whether the overlay can grow via flexible width/height after the initial open. */\n        this._growAfterOpen = false;\n        /** Whether the overlay's width and height can be constrained to fit within the viewport. */\n        this._hasFlexibleDimensions = true;\n        /** Whether the overlay position is locked. */\n        this._positionLocked = false;\n        /** Amount of space that must be maintained between the overlay and the edge of the viewport. */\n        this._viewportMargin = 0;\n        /** The Scrollable containers used to check scrollable view properties on position change. */\n        this._scrollables = [];\n        /** Ordered list of preferred positions, from most to least desirable. */\n        this._preferredPositions = [];\n        /** Subject that emits whenever the position changes. */\n        this._positionChanges = new Subject();\n        /** Subscription to viewport size changes. */\n        this._resizeSubscription = Subscription.EMPTY;\n        /** Default offset for the overlay along the x axis. */\n        this._offsetX = 0;\n        /** Default offset for the overlay along the y axis. */\n        this._offsetY = 0;\n        /** Keeps track of the CSS classes that the position strategy has applied on the overlay panel. */\n        this._appliedPanelClasses = [];\n        /** Observable sequence of position changes. */\n        this.positionChanges = this._positionChanges;\n        this.setOrigin(connectedTo);\n    }\n    /** Ordered list of preferred positions, from most to least desirable. */\n    get positions() {\n        return this._preferredPositions;\n    }\n    /** Attaches this position strategy to an overlay. */\n    attach(overlayRef) {\n        if (this._overlayRef &&\n            overlayRef !== this._overlayRef &&\n            (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw Error('This position strategy is already attached to an overlay');\n        }\n        this._validatePositions();\n        overlayRef.hostElement.classList.add(boundingBoxClass);\n        this._overlayRef = overlayRef;\n        this._boundingBox = overlayRef.hostElement;\n        this._pane = overlayRef.overlayElement;\n        this._isDisposed = false;\n        this._isInitialRender = true;\n        this._lastPosition = null;\n        this._resizeSubscription.unsubscribe();\n        this._resizeSubscription = this._viewportRuler.change().subscribe(() => {\n            // When the window is resized, we want to trigger the next reposition as if it\n            // was an initial render, in order for the strategy to pick a new optimal position,\n            // otherwise position locking will cause it to stay at the old one.\n            this._isInitialRender = true;\n            this.apply();\n        });\n    }\n    /**\n     * Updates the position of the overlay element, using whichever preferred position relative\n     * to the origin best fits on-screen.\n     *\n     * The selection of a position goes as follows:\n     *  - If any positions fit completely within the viewport as-is,\n     *      choose the first position that does so.\n     *  - If flexible dimensions are enabled and at least one satifies the given minimum width/height,\n     *      choose the position with the greatest available size modified by the positions' weight.\n     *  - If pushing is enabled, take the position that went off-screen the least and push it\n     *      on-screen.\n     *  - If none of the previous criteria were met, use the position that goes off-screen the least.\n     * @docs-private\n     */\n    apply() {\n        // We shouldn't do anything if the strategy was disposed or we're on the server.\n        if (this._isDisposed || !this._platform.isBrowser) {\n            return;\n        }\n        // If the position has been applied already (e.g. when the overlay was opened) and the\n        // consumer opted into locking in the position, re-use the old position, in order to\n        // prevent the overlay from jumping around.\n        if (!this._isInitialRender && this._positionLocked && this._lastPosition) {\n            this.reapplyLastPosition();\n            return;\n        }\n        this._clearPanelClasses();\n        this._resetOverlayElementStyles();\n        this._resetBoundingBoxStyles();\n        // We need the bounding rects for the origin and the overlay to determine how to position\n        // the overlay relative to the origin.\n        // We use the viewport rect to determine whether a position would go off-screen.\n        this._viewportRect = this._getNarrowedViewportRect();\n        this._originRect = this._getOriginRect();\n        this._overlayRect = this._pane.getBoundingClientRect();\n        const originRect = this._originRect;\n        const overlayRect = this._overlayRect;\n        const viewportRect = this._viewportRect;\n        // Positions where the overlay will fit with flexible dimensions.\n        const flexibleFits = [];\n        // Fallback if none of the preferred positions fit within the viewport.\n        let fallback;\n        // Go through each of the preferred positions looking for a good fit.\n        // If a good fit is found, it will be applied immediately.\n        for (let pos of this._preferredPositions) {\n            // Get the exact (x, y) coordinate for the point-of-origin on the origin element.\n            let originPoint = this._getOriginPoint(originRect, pos);\n            // From that point-of-origin, get the exact (x, y) coordinate for the top-left corner of the\n            // overlay in this position. We use the top-left corner for calculations and later translate\n            // this into an appropriate (top, left, bottom, right) style.\n            let overlayPoint = this._getOverlayPoint(originPoint, overlayRect, pos);\n            // Calculate how well the overlay would fit into the viewport with this point.\n            let overlayFit = this._getOverlayFit(overlayPoint, overlayRect, viewportRect, pos);\n            // If the overlay, without any further work, fits into the viewport, use this position.\n            if (overlayFit.isCompletelyWithinViewport) {\n                this._isPushed = false;\n                this._applyPosition(pos, originPoint);\n                return;\n            }\n            // If the overlay has flexible dimensions, we can use this position\n            // so long as there's enough space for the minimum dimensions.\n            if (this._canFitWithFlexibleDimensions(overlayFit, overlayPoint, viewportRect)) {\n                // Save positions where the overlay will fit with flexible dimensions. We will use these\n                // if none of the positions fit *without* flexible dimensions.\n                flexibleFits.push({\n                    position: pos,\n                    origin: originPoint,\n                    overlayRect,\n                    boundingBoxRect: this._calculateBoundingBoxRect(originPoint, pos),\n                });\n                continue;\n            }\n            // If the current preferred position does not fit on the screen, remember the position\n            // if it has more visible area on-screen than we've seen and move onto the next preferred\n            // position.\n            if (!fallback || fallback.overlayFit.visibleArea < overlayFit.visibleArea) {\n                fallback = { overlayFit, overlayPoint, originPoint, position: pos, overlayRect };\n            }\n        }\n        // If there are any positions where the overlay would fit with flexible dimensions, choose the\n        // one that has the greatest area available modified by the position's weight\n        if (flexibleFits.length) {\n            let bestFit = null;\n            let bestScore = -1;\n            for (const fit of flexibleFits) {\n                const score = fit.boundingBoxRect.width * fit.boundingBoxRect.height * (fit.position.weight || 1);\n                if (score > bestScore) {\n                    bestScore = score;\n                    bestFit = fit;\n                }\n            }\n            this._isPushed = false;\n            this._applyPosition(bestFit.position, bestFit.origin);\n            return;\n        }\n        // When none of the preferred positions fit within the viewport, take the position\n        // that went off-screen the least and attempt to push it on-screen.\n        if (this._canPush) {\n            // TODO(jelbourn): after pushing, the opening \"direction\" of the overlay might not make sense.\n            this._isPushed = true;\n            this._applyPosition(fallback.position, fallback.originPoint);\n            return;\n        }\n        // All options for getting the overlay within the viewport have been exhausted, so go with the\n        // position that went off-screen the least.\n        this._applyPosition(fallback.position, fallback.originPoint);\n    }\n    detach() {\n        this._clearPanelClasses();\n        this._lastPosition = null;\n        this._previousPushAmount = null;\n        this._resizeSubscription.unsubscribe();\n    }\n    /** Cleanup after the element gets destroyed. */\n    dispose() {\n        if (this._isDisposed) {\n            return;\n        }\n        // We can't use `_resetBoundingBoxStyles` here, because it resets\n        // some properties to zero, rather than removing them.\n        if (this._boundingBox) {\n            extendStyles(this._boundingBox.style, {\n                top: '',\n                left: '',\n                right: '',\n                bottom: '',\n                height: '',\n                width: '',\n                alignItems: '',\n                justifyContent: '',\n            });\n        }\n        if (this._pane) {\n            this._resetOverlayElementStyles();\n        }\n        if (this._overlayRef) {\n            this._overlayRef.hostElement.classList.remove(boundingBoxClass);\n        }\n        this.detach();\n        this._positionChanges.complete();\n        this._overlayRef = this._boundingBox = null;\n        this._isDisposed = true;\n    }\n    /**\n     * This re-aligns the overlay element with the trigger in its last calculated position,\n     * even if a position higher in the \"preferred positions\" list would now fit. This\n     * allows one to re-align the panel without changing the orientation of the panel.\n     */\n    reapplyLastPosition() {\n        if (!this._isDisposed && (!this._platform || this._platform.isBrowser)) {\n            this._originRect = this._getOriginRect();\n            this._overlayRect = this._pane.getBoundingClientRect();\n            this._viewportRect = this._getNarrowedViewportRect();\n            const lastPosition = this._lastPosition || this._preferredPositions[0];\n            const originPoint = this._getOriginPoint(this._originRect, lastPosition);\n            this._applyPosition(lastPosition, originPoint);\n        }\n    }\n    /**\n     * Sets the list of Scrollable containers that host the origin element so that\n     * on reposition we can evaluate if it or the overlay has been clipped or outside view. Every\n     * Scrollable must be an ancestor element of the strategy's origin element.\n     */\n    withScrollableContainers(scrollables) {\n        this._scrollables = scrollables;\n        return this;\n    }\n    /**\n     * Adds new preferred positions.\n     * @param positions List of positions options for this overlay.\n     */\n    withPositions(positions) {\n        this._preferredPositions = positions;\n        // If the last calculated position object isn't part of the positions anymore, clear\n        // it in order to avoid it being picked up if the consumer tries to re-apply.\n        if (positions.indexOf(this._lastPosition) === -1) {\n            this._lastPosition = null;\n        }\n        this._validatePositions();\n        return this;\n    }\n    /**\n     * Sets a minimum distance the overlay may be positioned to the edge of the viewport.\n     * @param margin Required margin between the overlay and the viewport edge in pixels.\n     */\n    withViewportMargin(margin) {\n        this._viewportMargin = margin;\n        return this;\n    }\n    /** Sets whether the overlay's width and height can be constrained to fit within the viewport. */\n    withFlexibleDimensions(flexibleDimensions = true) {\n        this._hasFlexibleDimensions = flexibleDimensions;\n        return this;\n    }\n    /** Sets whether the overlay can grow after the initial open via flexible width/height. */\n    withGrowAfterOpen(growAfterOpen = true) {\n        this._growAfterOpen = growAfterOpen;\n        return this;\n    }\n    /** Sets whether the overlay can be pushed on-screen if none of the provided positions fit. */\n    withPush(canPush = true) {\n        this._canPush = canPush;\n        return this;\n    }\n    /**\n     * Sets whether the overlay's position should be locked in after it is positioned\n     * initially. When an overlay is locked in, it won't attempt to reposition itself\n     * when the position is re-applied (e.g. when the user scrolls away).\n     * @param isLocked Whether the overlay should locked in.\n     */\n    withLockedPosition(isLocked = true) {\n        this._positionLocked = isLocked;\n        return this;\n    }\n    /**\n     * Sets the origin, relative to which to position the overlay.\n     * Using an element origin is useful for building components that need to be positioned\n     * relatively to a trigger (e.g. dropdown menus or tooltips), whereas using a point can be\n     * used for cases like contextual menus which open relative to the user's pointer.\n     * @param origin Reference to the new origin.\n     */\n    setOrigin(origin) {\n        this._origin = origin;\n        return this;\n    }\n    /**\n     * Sets the default offset for the overlay's connection point on the x-axis.\n     * @param offset New offset in the X axis.\n     */\n    withDefaultOffsetX(offset) {\n        this._offsetX = offset;\n        return this;\n    }\n    /**\n     * Sets the default offset for the overlay's connection point on the y-axis.\n     * @param offset New offset in the Y axis.\n     */\n    withDefaultOffsetY(offset) {\n        this._offsetY = offset;\n        return this;\n    }\n    /**\n     * Configures that the position strategy should set a `transform-origin` on some elements\n     * inside the overlay, depending on the current position that is being applied. This is\n     * useful for the cases where the origin of an animation can change depending on the\n     * alignment of the overlay.\n     * @param selector CSS selector that will be used to find the target\n     *    elements onto which to set the transform origin.\n     */\n    withTransformOriginOn(selector) {\n        this._transformOriginSelector = selector;\n        return this;\n    }\n    /**\n     * Gets the (x, y) coordinate of a connection point on the origin based on a relative position.\n     */\n    _getOriginPoint(originRect, pos) {\n        let x;\n        if (pos.originX == 'center') {\n            // Note: when centering we should always use the `left`\n            // offset, otherwise the position will be wrong in RTL.\n            x = originRect.left + originRect.width / 2;\n        }\n        else {\n            const startX = this._isRtl() ? originRect.right : originRect.left;\n            const endX = this._isRtl() ? originRect.left : originRect.right;\n            x = pos.originX == 'start' ? startX : endX;\n        }\n        let y;\n        if (pos.originY == 'center') {\n            y = originRect.top + originRect.height / 2;\n        }\n        else {\n            y = pos.originY == 'top' ? originRect.top : originRect.bottom;\n        }\n        return { x, y };\n    }\n    /**\n     * Gets the (x, y) coordinate of the top-left corner of the overlay given a given position and\n     * origin point to which the overlay should be connected.\n     */\n    _getOverlayPoint(originPoint, overlayRect, pos) {\n        // Calculate the (overlayStartX, overlayStartY), the start of the\n        // potential overlay position relative to the origin point.\n        let overlayStartX;\n        if (pos.overlayX == 'center') {\n            overlayStartX = -overlayRect.width / 2;\n        }\n        else if (pos.overlayX === 'start') {\n            overlayStartX = this._isRtl() ? -overlayRect.width : 0;\n        }\n        else {\n            overlayStartX = this._isRtl() ? 0 : -overlayRect.width;\n        }\n        let overlayStartY;\n        if (pos.overlayY == 'center') {\n            overlayStartY = -overlayRect.height / 2;\n        }\n        else {\n            overlayStartY = pos.overlayY == 'top' ? 0 : -overlayRect.height;\n        }\n        // The (x, y) coordinates of the overlay.\n        return {\n            x: originPoint.x + overlayStartX,\n            y: originPoint.y + overlayStartY,\n        };\n    }\n    /** Gets how well an overlay at the given point will fit within the viewport. */\n    _getOverlayFit(point, rawOverlayRect, viewport, position) {\n        // Round the overlay rect when comparing against the\n        // viewport, because the viewport is always rounded.\n        const overlay = getRoundedBoundingClientRect(rawOverlayRect);\n        let { x, y } = point;\n        let offsetX = this._getOffset(position, 'x');\n        let offsetY = this._getOffset(position, 'y');\n        // Account for the offsets since they could push the overlay out of the viewport.\n        if (offsetX) {\n            x += offsetX;\n        }\n        if (offsetY) {\n            y += offsetY;\n        }\n        // How much the overlay would overflow at this position, on each side.\n        let leftOverflow = 0 - x;\n        let rightOverflow = x + overlay.width - viewport.width;\n        let topOverflow = 0 - y;\n        let bottomOverflow = y + overlay.height - viewport.height;\n        // Visible parts of the element on each axis.\n        let visibleWidth = this._subtractOverflows(overlay.width, leftOverflow, rightOverflow);\n        let visibleHeight = this._subtractOverflows(overlay.height, topOverflow, bottomOverflow);\n        let visibleArea = visibleWidth * visibleHeight;\n        return {\n            visibleArea,\n            isCompletelyWithinViewport: overlay.width * overlay.height === visibleArea,\n            fitsInViewportVertically: visibleHeight === overlay.height,\n            fitsInViewportHorizontally: visibleWidth == overlay.width,\n        };\n    }\n    /**\n     * Whether the overlay can fit within the viewport when it may resize either its width or height.\n     * @param fit How well the overlay fits in the viewport at some position.\n     * @param point The (x, y) coordinates of the overlat at some position.\n     * @param viewport The geometry of the viewport.\n     */\n    _canFitWithFlexibleDimensions(fit, point, viewport) {\n        if (this._hasFlexibleDimensions) {\n            const availableHeight = viewport.bottom - point.y;\n            const availableWidth = viewport.right - point.x;\n            const minHeight = getPixelValue(this._overlayRef.getConfig().minHeight);\n            const minWidth = getPixelValue(this._overlayRef.getConfig().minWidth);\n            const verticalFit = fit.fitsInViewportVertically || (minHeight != null && minHeight <= availableHeight);\n            const horizontalFit = fit.fitsInViewportHorizontally || (minWidth != null && minWidth <= availableWidth);\n            return verticalFit && horizontalFit;\n        }\n        return false;\n    }\n    /**\n     * Gets the point at which the overlay can be \"pushed\" on-screen. If the overlay is larger than\n     * the viewport, the top-left corner will be pushed on-screen (with overflow occuring on the\n     * right and bottom).\n     *\n     * @param start Starting point from which the overlay is pushed.\n     * @param overlay Dimensions of the overlay.\n     * @param scrollPosition Current viewport scroll position.\n     * @returns The point at which to position the overlay after pushing. This is effectively a new\n     *     originPoint.\n     */\n    _pushOverlayOnScreen(start, rawOverlayRect, scrollPosition) {\n        // If the position is locked and we've pushed the overlay already, reuse the previous push\n        // amount, rather than pushing it again. If we were to continue pushing, the element would\n        // remain in the viewport, which goes against the expectations when position locking is enabled.\n        if (this._previousPushAmount && this._positionLocked) {\n            return {\n                x: start.x + this._previousPushAmount.x,\n                y: start.y + this._previousPushAmount.y,\n            };\n        }\n        // Round the overlay rect when comparing against the\n        // viewport, because the viewport is always rounded.\n        const overlay = getRoundedBoundingClientRect(rawOverlayRect);\n        const viewport = this._viewportRect;\n        // Determine how much the overlay goes outside the viewport on each\n        // side, which we'll use to decide which direction to push it.\n        const overflowRight = Math.max(start.x + overlay.width - viewport.width, 0);\n        const overflowBottom = Math.max(start.y + overlay.height - viewport.height, 0);\n        const overflowTop = Math.max(viewport.top - scrollPosition.top - start.y, 0);\n        const overflowLeft = Math.max(viewport.left - scrollPosition.left - start.x, 0);\n        // Amount by which to push the overlay in each axis such that it remains on-screen.\n        let pushX = 0;\n        let pushY = 0;\n        // If the overlay fits completely within the bounds of the viewport, push it from whichever\n        // direction is goes off-screen. Otherwise, push the top-left corner such that its in the\n        // viewport and allow for the trailing end of the overlay to go out of bounds.\n        if (overlay.width <= viewport.width) {\n            pushX = overflowLeft || -overflowRight;\n        }\n        else {\n            pushX = start.x < this._viewportMargin ? viewport.left - scrollPosition.left - start.x : 0;\n        }\n        if (overlay.height <= viewport.height) {\n            pushY = overflowTop || -overflowBottom;\n        }\n        else {\n            pushY = start.y < this._viewportMargin ? viewport.top - scrollPosition.top - start.y : 0;\n        }\n        this._previousPushAmount = { x: pushX, y: pushY };\n        return {\n            x: start.x + pushX,\n            y: start.y + pushY,\n        };\n    }\n    /**\n     * Applies a computed position to the overlay and emits a position change.\n     * @param position The position preference\n     * @param originPoint The point on the origin element where the overlay is connected.\n     */\n    _applyPosition(position, originPoint) {\n        this._setTransformOrigin(position);\n        this._setOverlayElementStyles(originPoint, position);\n        this._setBoundingBoxStyles(originPoint, position);\n        if (position.panelClass) {\n            this._addPanelClasses(position.panelClass);\n        }\n        // Save the last connected position in case the position needs to be re-calculated.\n        this._lastPosition = position;\n        // Notify that the position has been changed along with its change properties.\n        // We only emit if we've got any subscriptions, because the scroll visibility\n        // calculcations can be somewhat expensive.\n        if (this._positionChanges.observers.length) {\n            const scrollableViewProperties = this._getScrollVisibility();\n            const changeEvent = new ConnectedOverlayPositionChange(position, scrollableViewProperties);\n            this._positionChanges.next(changeEvent);\n        }\n        this._isInitialRender = false;\n    }\n    /** Sets the transform origin based on the configured selector and the passed-in position.  */\n    _setTransformOrigin(position) {\n        if (!this._transformOriginSelector) {\n            return;\n        }\n        const elements = this._boundingBox.querySelectorAll(this._transformOriginSelector);\n        let xOrigin;\n        let yOrigin = position.overlayY;\n        if (position.overlayX === 'center') {\n            xOrigin = 'center';\n        }\n        else if (this._isRtl()) {\n            xOrigin = position.overlayX === 'start' ? 'right' : 'left';\n        }\n        else {\n            xOrigin = position.overlayX === 'start' ? 'left' : 'right';\n        }\n        for (let i = 0; i < elements.length; i++) {\n            elements[i].style.transformOrigin = `${xOrigin} ${yOrigin}`;\n        }\n    }\n    /**\n     * Gets the position and size of the overlay's sizing container.\n     *\n     * This method does no measuring and applies no styles so that we can cheaply compute the\n     * bounds for all positions and choose the best fit based on these results.\n     */\n    _calculateBoundingBoxRect(origin, position) {\n        const viewport = this._viewportRect;\n        const isRtl = this._isRtl();\n        let height, top, bottom;\n        if (position.overlayY === 'top') {\n            // Overlay is opening \"downward\" and thus is bound by the bottom viewport edge.\n            top = origin.y;\n            height = viewport.height - top + this._viewportMargin;\n        }\n        else if (position.overlayY === 'bottom') {\n            // Overlay is opening \"upward\" and thus is bound by the top viewport edge. We need to add\n            // the viewport margin back in, because the viewport rect is narrowed down to remove the\n            // margin, whereas the `origin` position is calculated based on its `ClientRect`.\n            bottom = viewport.height - origin.y + this._viewportMargin * 2;\n            height = viewport.height - bottom + this._viewportMargin;\n        }\n        else {\n            // If neither top nor bottom, it means that the overlay is vertically centered on the\n            // origin point. Note that we want the position relative to the viewport, rather than\n            // the page, which is why we don't use something like `viewport.bottom - origin.y` and\n            // `origin.y - viewport.top`.\n            const smallestDistanceToViewportEdge = Math.min(viewport.bottom - origin.y + viewport.top, origin.y);\n            const previousHeight = this._lastBoundingBoxSize.height;\n            height = smallestDistanceToViewportEdge * 2;\n            top = origin.y - smallestDistanceToViewportEdge;\n            if (height > previousHeight && !this._isInitialRender && !this._growAfterOpen) {\n                top = origin.y - previousHeight / 2;\n            }\n        }\n        // The overlay is opening 'right-ward' (the content flows to the right).\n        const isBoundedByRightViewportEdge = (position.overlayX === 'start' && !isRtl) || (position.overlayX === 'end' && isRtl);\n        // The overlay is opening 'left-ward' (the content flows to the left).\n        const isBoundedByLeftViewportEdge = (position.overlayX === 'end' && !isRtl) || (position.overlayX === 'start' && isRtl);\n        let width, left, right;\n        if (isBoundedByLeftViewportEdge) {\n            right = viewport.width - origin.x + this._viewportMargin;\n            width = origin.x - this._viewportMargin;\n        }\n        else if (isBoundedByRightViewportEdge) {\n            left = origin.x;\n            width = viewport.right - origin.x;\n        }\n        else {\n            // If neither start nor end, it means that the overlay is horizontally centered on the\n            // origin point. Note that we want the position relative to the viewport, rather than\n            // the page, which is why we don't use something like `viewport.right - origin.x` and\n            // `origin.x - viewport.left`.\n            const smallestDistanceToViewportEdge = Math.min(viewport.right - origin.x + viewport.left, origin.x);\n            const previousWidth = this._lastBoundingBoxSize.width;\n            width = smallestDistanceToViewportEdge * 2;\n            left = origin.x - smallestDistanceToViewportEdge;\n            if (width > previousWidth && !this._isInitialRender && !this._growAfterOpen) {\n                left = origin.x - previousWidth / 2;\n            }\n        }\n        return { top: top, left: left, bottom: bottom, right: right, width, height };\n    }\n    /**\n     * Sets the position and size of the overlay's sizing wrapper. The wrapper is positioned on the\n     * origin's connection point and stetches to the bounds of the viewport.\n     *\n     * @param origin The point on the origin element where the overlay is connected.\n     * @param position The position preference\n     */\n    _setBoundingBoxStyles(origin, position) {\n        const boundingBoxRect = this._calculateBoundingBoxRect(origin, position);\n        // It's weird if the overlay *grows* while scrolling, so we take the last size into account\n        // when applying a new size.\n        if (!this._isInitialRender && !this._growAfterOpen) {\n            boundingBoxRect.height = Math.min(boundingBoxRect.height, this._lastBoundingBoxSize.height);\n            boundingBoxRect.width = Math.min(boundingBoxRect.width, this._lastBoundingBoxSize.width);\n        }\n        const styles = {};\n        if (this._hasExactPosition()) {\n            styles.top = styles.left = '0';\n            styles.bottom = styles.right = styles.maxHeight = styles.maxWidth = '';\n            styles.width = styles.height = '100%';\n        }\n        else {\n            const maxHeight = this._overlayRef.getConfig().maxHeight;\n            const maxWidth = this._overlayRef.getConfig().maxWidth;\n            styles.height = coerceCssPixelValue(boundingBoxRect.height);\n            styles.top = coerceCssPixelValue(boundingBoxRect.top);\n            styles.bottom = coerceCssPixelValue(boundingBoxRect.bottom);\n            styles.width = coerceCssPixelValue(boundingBoxRect.width);\n            styles.left = coerceCssPixelValue(boundingBoxRect.left);\n            styles.right = coerceCssPixelValue(boundingBoxRect.right);\n            // Push the pane content towards the proper direction.\n            if (position.overlayX === 'center') {\n                styles.alignItems = 'center';\n            }\n            else {\n                styles.alignItems = position.overlayX === 'end' ? 'flex-end' : 'flex-start';\n            }\n            if (position.overlayY === 'center') {\n                styles.justifyContent = 'center';\n            }\n            else {\n                styles.justifyContent = position.overlayY === 'bottom' ? 'flex-end' : 'flex-start';\n            }\n            if (maxHeight) {\n                styles.maxHeight = coerceCssPixelValue(maxHeight);\n            }\n            if (maxWidth) {\n                styles.maxWidth = coerceCssPixelValue(maxWidth);\n            }\n        }\n        this._lastBoundingBoxSize = boundingBoxRect;\n        extendStyles(this._boundingBox.style, styles);\n    }\n    /** Resets the styles for the bounding box so that a new positioning can be computed. */\n    _resetBoundingBoxStyles() {\n        extendStyles(this._boundingBox.style, {\n            top: '0',\n            left: '0',\n            right: '0',\n            bottom: '0',\n            height: '',\n            width: '',\n            alignItems: '',\n            justifyContent: '',\n        });\n    }\n    /** Resets the styles for the overlay pane so that a new positioning can be computed. */\n    _resetOverlayElementStyles() {\n        extendStyles(this._pane.style, {\n            top: '',\n            left: '',\n            bottom: '',\n            right: '',\n            position: '',\n            transform: '',\n        });\n    }\n    /** Sets positioning styles to the overlay element. */\n    _setOverlayElementStyles(originPoint, position) {\n        const styles = {};\n        const hasExactPosition = this._hasExactPosition();\n        const hasFlexibleDimensions = this._hasFlexibleDimensions;\n        const config = this._overlayRef.getConfig();\n        if (hasExactPosition) {\n            const scrollPosition = this._viewportRuler.getViewportScrollPosition();\n            extendStyles(styles, this._getExactOverlayY(position, originPoint, scrollPosition));\n            extendStyles(styles, this._getExactOverlayX(position, originPoint, scrollPosition));\n        }\n        else {\n            styles.position = 'static';\n        }\n        // Use a transform to apply the offsets. We do this because the `center` positions rely on\n        // being in the normal flex flow and setting a `top` / `left` at all will completely throw\n        // off the position. We also can't use margins, because they won't have an effect in some\n        // cases where the element doesn't have anything to \"push off of\". Finally, this works\n        // better both with flexible and non-flexible positioning.\n        let transformString = '';\n        let offsetX = this._getOffset(position, 'x');\n        let offsetY = this._getOffset(position, 'y');\n        if (offsetX) {\n            transformString += `translateX(${offsetX}px) `;\n        }\n        if (offsetY) {\n            transformString += `translateY(${offsetY}px)`;\n        }\n        styles.transform = transformString.trim();\n        // If a maxWidth or maxHeight is specified on the overlay, we remove them. We do this because\n        // we need these values to both be set to \"100%\" for the automatic flexible sizing to work.\n        // The maxHeight and maxWidth are set on the boundingBox in order to enforce the constraint.\n        // Note that this doesn't apply when we have an exact position, in which case we do want to\n        // apply them because they'll be cleared from the bounding box.\n        if (config.maxHeight) {\n            if (hasExactPosition) {\n                styles.maxHeight = coerceCssPixelValue(config.maxHeight);\n            }\n            else if (hasFlexibleDimensions) {\n                styles.maxHeight = '';\n            }\n        }\n        if (config.maxWidth) {\n            if (hasExactPosition) {\n                styles.maxWidth = coerceCssPixelValue(config.maxWidth);\n            }\n            else if (hasFlexibleDimensions) {\n                styles.maxWidth = '';\n            }\n        }\n        extendStyles(this._pane.style, styles);\n    }\n    /** Gets the exact top/bottom for the overlay when not using flexible sizing or when pushing. */\n    _getExactOverlayY(position, originPoint, scrollPosition) {\n        // Reset any existing styles. This is necessary in case the\n        // preferred position has changed since the last `apply`.\n        let styles = { top: '', bottom: '' };\n        let overlayPoint = this._getOverlayPoint(originPoint, this._overlayRect, position);\n        if (this._isPushed) {\n            overlayPoint = this._pushOverlayOnScreen(overlayPoint, this._overlayRect, scrollPosition);\n        }\n        let virtualKeyboardOffset = this._overlayContainer\n            .getContainerElement()\n            .getBoundingClientRect().top;\n        // Normally this would be zero, however when the overlay is attached to an input (e.g. in an\n        // autocomplete), mobile browsers will shift everything in order to put the input in the middle\n        // of the screen and to make space for the virtual keyboard. We need to account for this offset,\n        // otherwise our positioning will be thrown off.\n        overlayPoint.y -= virtualKeyboardOffset;\n        // We want to set either `top` or `bottom` based on whether the overlay wants to appear\n        // above or below the origin and the direction in which the element will expand.\n        if (position.overlayY === 'bottom') {\n            // When using `bottom`, we adjust the y position such that it is the distance\n            // from the bottom of the viewport rather than the top.\n            const documentHeight = this._document.documentElement.clientHeight;\n            styles.bottom = `${documentHeight - (overlayPoint.y + this._overlayRect.height)}px`;\n        }\n        else {\n            styles.top = coerceCssPixelValue(overlayPoint.y);\n        }\n        return styles;\n    }\n    /** Gets the exact left/right for the overlay when not using flexible sizing or when pushing. */\n    _getExactOverlayX(position, originPoint, scrollPosition) {\n        // Reset any existing styles. This is necessary in case the preferred position has\n        // changed since the last `apply`.\n        let styles = { left: '', right: '' };\n        let overlayPoint = this._getOverlayPoint(originPoint, this._overlayRect, position);\n        if (this._isPushed) {\n            overlayPoint = this._pushOverlayOnScreen(overlayPoint, this._overlayRect, scrollPosition);\n        }\n        // We want to set either `left` or `right` based on whether the overlay wants to appear \"before\"\n        // or \"after\" the origin, which determines the direction in which the element will expand.\n        // For the horizontal axis, the meaning of \"before\" and \"after\" change based on whether the\n        // page is in RTL or LTR.\n        let horizontalStyleProperty;\n        if (this._isRtl()) {\n            horizontalStyleProperty = position.overlayX === 'end' ? 'left' : 'right';\n        }\n        else {\n            horizontalStyleProperty = position.overlayX === 'end' ? 'right' : 'left';\n        }\n        // When we're setting `right`, we adjust the x position such that it is the distance\n        // from the right edge of the viewport rather than the left edge.\n        if (horizontalStyleProperty === 'right') {\n            const documentWidth = this._document.documentElement.clientWidth;\n            styles.right = `${documentWidth - (overlayPoint.x + this._overlayRect.width)}px`;\n        }\n        else {\n            styles.left = coerceCssPixelValue(overlayPoint.x);\n        }\n        return styles;\n    }\n    /**\n     * Gets the view properties of the trigger and overlay, including whether they are clipped\n     * or completely outside the view of any of the strategy's scrollables.\n     */\n    _getScrollVisibility() {\n        // Note: needs fresh rects since the position could've changed.\n        const originBounds = this._getOriginRect();\n        const overlayBounds = this._pane.getBoundingClientRect();\n        // TODO(jelbourn): instead of needing all of the client rects for these scrolling containers\n        // every time, we should be able to use the scrollTop of the containers if the size of those\n        // containers hasn't changed.\n        const scrollContainerBounds = this._scrollables.map(scrollable => {\n            return scrollable.getElementRef().nativeElement.getBoundingClientRect();\n        });\n        return {\n            isOriginClipped: isElementClippedByScrolling(originBounds, scrollContainerBounds),\n            isOriginOutsideView: isElementScrolledOutsideView(originBounds, scrollContainerBounds),\n            isOverlayClipped: isElementClippedByScrolling(overlayBounds, scrollContainerBounds),\n            isOverlayOutsideView: isElementScrolledOutsideView(overlayBounds, scrollContainerBounds),\n        };\n    }\n    /** Subtracts the amount that an element is overflowing on an axis from its length. */\n    _subtractOverflows(length, ...overflows) {\n        return overflows.reduce((currentValue, currentOverflow) => {\n            return currentValue - Math.max(currentOverflow, 0);\n        }, length);\n    }\n    /** Narrows the given viewport rect by the current _viewportMargin. */\n    _getNarrowedViewportRect() {\n        // We recalculate the viewport rect here ourselves, rather than using the ViewportRuler,\n        // because we want to use the `clientWidth` and `clientHeight` as the base. The difference\n        // being that the client properties don't include the scrollbar, as opposed to `innerWidth`\n        // and `innerHeight` that do. This is necessary, because the overlay container uses\n        // 100% `width` and `height` which don't include the scrollbar either.\n        const width = this._document.documentElement.clientWidth;\n        const height = this._document.documentElement.clientHeight;\n        const scrollPosition = this._viewportRuler.getViewportScrollPosition();\n        return {\n            top: scrollPosition.top + this._viewportMargin,\n            left: scrollPosition.left + this._viewportMargin,\n            right: scrollPosition.left + width - this._viewportMargin,\n            bottom: scrollPosition.top + height - this._viewportMargin,\n            width: width - 2 * this._viewportMargin,\n            height: height - 2 * this._viewportMargin,\n        };\n    }\n    /** Whether the we're dealing with an RTL context */\n    _isRtl() {\n        return this._overlayRef.getDirection() === 'rtl';\n    }\n    /** Determines whether the overlay uses exact or flexible positioning. */\n    _hasExactPosition() {\n        return !this._hasFlexibleDimensions || this._isPushed;\n    }\n    /** Retrieves the offset of a position along the x or y axis. */\n    _getOffset(position, axis) {\n        if (axis === 'x') {\n            // We don't do something like `position['offset' + axis]` in\n            // order to avoid breking minifiers that rename properties.\n            return position.offsetX == null ? this._offsetX : position.offsetX;\n        }\n        return position.offsetY == null ? this._offsetY : position.offsetY;\n    }\n    /** Validates that the current position match the expected values. */\n    _validatePositions() {\n        if (typeof ngDevMode === 'undefined' || ngDevMode) {\n            if (!this._preferredPositions.length) {\n                throw Error('FlexibleConnectedPositionStrategy: At least one position is required.');\n            }\n            // TODO(crisbeto): remove these once Angular's template type\n            // checking is advanced enough to catch these cases.\n            this._preferredPositions.forEach(pair => {\n                validateHorizontalPosition('originX', pair.originX);\n                validateVerticalPosition('originY', pair.originY);\n                validateHorizontalPosition('overlayX', pair.overlayX);\n                validateVerticalPosition('overlayY', pair.overlayY);\n            });\n        }\n    }\n    /** Adds a single CSS class or an array of classes on the overlay panel. */\n    _addPanelClasses(cssClasses) {\n        if (this._pane) {\n            coerceArray(cssClasses).forEach(cssClass => {\n                if (cssClass !== '' && this._appliedPanelClasses.indexOf(cssClass) === -1) {\n                    this._appliedPanelClasses.push(cssClass);\n                    this._pane.classList.add(cssClass);\n                }\n            });\n        }\n    }\n    /** Clears the classes that the position strategy has applied from the overlay panel. */\n    _clearPanelClasses() {\n        if (this._pane) {\n            this._appliedPanelClasses.forEach(cssClass => {\n                this._pane.classList.remove(cssClass);\n            });\n            this._appliedPanelClasses = [];\n        }\n    }\n    /** Returns the ClientRect of the current origin. */\n    _getOriginRect() {\n        const origin = this._origin;\n        if (origin instanceof ElementRef) {\n            return origin.nativeElement.getBoundingClientRect();\n        }\n        // Check for Element so SVG elements are also supported.\n        if (origin instanceof Element) {\n            return origin.getBoundingClientRect();\n        }\n        const width = origin.width || 0;\n        const height = origin.height || 0;\n        // If the origin is a point, return a client rect as if it was a 0x0 element at the point.\n        return {\n            top: origin.y,\n            bottom: origin.y + height,\n            left: origin.x,\n            right: origin.x + width,\n            height,\n            width,\n        };\n    }\n}\n/** Shallow-extends a stylesheet object with another stylesheet object. */\nfunction extendStyles(destination, source) {\n    for (let key in source) {\n        if (source.hasOwnProperty(key)) {\n            destination[key] = source[key];\n        }\n    }\n    return destination;\n}\n/**\n * Extracts the pixel value as a number from a value, if it's a number\n * or a CSS pixel string (e.g. `1337px`). Otherwise returns null.\n */\nfunction getPixelValue(input) {\n    if (typeof input !== 'number' && input != null) {\n        const [value, units] = input.split(cssUnitPattern);\n        return !units || units === 'px' ? parseFloat(value) : null;\n    }\n    return input || null;\n}\n/**\n * Gets a version of an element's bounding `ClientRect` where all the values are rounded down to\n * the nearest pixel. This allows us to account for the cases where there may be sub-pixel\n * deviations in the `ClientRect` returned by the browser (e.g. when zoomed in with a percentage\n * size, see #21350).\n */\nfunction getRoundedBoundingClientRect(clientRect) {\n    return {\n        top: Math.floor(clientRect.top),\n        right: Math.floor(clientRect.right),\n        bottom: Math.floor(clientRect.bottom),\n        left: Math.floor(clientRect.left),\n        width: Math.floor(clientRect.width),\n        height: Math.floor(clientRect.height),\n    };\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Class to be added to the overlay pane wrapper. */\nconst wrapperClass = 'cdk-global-overlay-wrapper';\n/**\n * A strategy for positioning overlays. Using this strategy, an overlay is given an\n * explicit position relative to the browser's viewport. We use flexbox, instead of\n * transforms, in order to avoid issues with subpixel rendering which can cause the\n * element to become blurry.\n */\nclass GlobalPositionStrategy {\n    constructor() {\n        this._cssPosition = 'static';\n        this._topOffset = '';\n        this._bottomOffset = '';\n        this._leftOffset = '';\n        this._rightOffset = '';\n        this._alignItems = '';\n        this._justifyContent = '';\n        this._width = '';\n        this._height = '';\n    }\n    attach(overlayRef) {\n        const config = overlayRef.getConfig();\n        this._overlayRef = overlayRef;\n        if (this._width && !config.width) {\n            overlayRef.updateSize({ width: this._width });\n        }\n        if (this._height && !config.height) {\n            overlayRef.updateSize({ height: this._height });\n        }\n        overlayRef.hostElement.classList.add(wrapperClass);\n        this._isDisposed = false;\n    }\n    /**\n     * Sets the top position of the overlay. Clears any previously set vertical position.\n     * @param value New top offset.\n     */\n    top(value = '') {\n        this._bottomOffset = '';\n        this._topOffset = value;\n        this._alignItems = 'flex-start';\n        return this;\n    }\n    /**\n     * Sets the left position of the overlay. Clears any previously set horizontal position.\n     * @param value New left offset.\n     */\n    left(value = '') {\n        this._rightOffset = '';\n        this._leftOffset = value;\n        this._justifyContent = 'flex-start';\n        return this;\n    }\n    /**\n     * Sets the bottom position of the overlay. Clears any previously set vertical position.\n     * @param value New bottom offset.\n     */\n    bottom(value = '') {\n        this._topOffset = '';\n        this._bottomOffset = value;\n        this._alignItems = 'flex-end';\n        return this;\n    }\n    /**\n     * Sets the right position of the overlay. Clears any previously set horizontal position.\n     * @param value New right offset.\n     */\n    right(value = '') {\n        this._leftOffset = '';\n        this._rightOffset = value;\n        this._justifyContent = 'flex-end';\n        return this;\n    }\n    /**\n     * Sets the overlay width and clears any previously set width.\n     * @param value New width for the overlay\n     * @deprecated Pass the `width` through the `OverlayConfig`.\n     * @breaking-change 8.0.0\n     */\n    width(value = '') {\n        if (this._overlayRef) {\n            this._overlayRef.updateSize({ width: value });\n        }\n        else {\n            this._width = value;\n        }\n        return this;\n    }\n    /**\n     * Sets the overlay height and clears any previously set height.\n     * @param value New height for the overlay\n     * @deprecated Pass the `height` through the `OverlayConfig`.\n     * @breaking-change 8.0.0\n     */\n    height(value = '') {\n        if (this._overlayRef) {\n            this._overlayRef.updateSize({ height: value });\n        }\n        else {\n            this._height = value;\n        }\n        return this;\n    }\n    /**\n     * Centers the overlay horizontally with an optional offset.\n     * Clears any previously set horizontal position.\n     *\n     * @param offset Overlay offset from the horizontal center.\n     */\n    centerHorizontally(offset = '') {\n        this.left(offset);\n        this._justifyContent = 'center';\n        return this;\n    }\n    /**\n     * Centers the overlay vertically with an optional offset.\n     * Clears any previously set vertical position.\n     *\n     * @param offset Overlay offset from the vertical center.\n     */\n    centerVertically(offset = '') {\n        this.top(offset);\n        this._alignItems = 'center';\n        return this;\n    }\n    /**\n     * Apply the position to the element.\n     * @docs-private\n     */\n    apply() {\n        // Since the overlay ref applies the strategy asynchronously, it could\n        // have been disposed before it ends up being applied. If that is the\n        // case, we shouldn't do anything.\n        if (!this._overlayRef || !this._overlayRef.hasAttached()) {\n            return;\n        }\n        const styles = this._overlayRef.overlayElement.style;\n        const parentStyles = this._overlayRef.hostElement.style;\n        const config = this._overlayRef.getConfig();\n        const { width, height, maxWidth, maxHeight } = config;\n        const shouldBeFlushHorizontally = (width === '100%' || width === '100vw') &&\n            (!maxWidth || maxWidth === '100%' || maxWidth === '100vw');\n        const shouldBeFlushVertically = (height === '100%' || height === '100vh') &&\n            (!maxHeight || maxHeight === '100%' || maxHeight === '100vh');\n        styles.position = this._cssPosition;\n        styles.marginLeft = shouldBeFlushHorizontally ? '0' : this._leftOffset;\n        styles.marginTop = shouldBeFlushVertically ? '0' : this._topOffset;\n        styles.marginBottom = this._bottomOffset;\n        styles.marginRight = this._rightOffset;\n        if (shouldBeFlushHorizontally) {\n            parentStyles.justifyContent = 'flex-start';\n        }\n        else if (this._justifyContent === 'center') {\n            parentStyles.justifyContent = 'center';\n        }\n        else if (this._overlayRef.getConfig().direction === 'rtl') {\n            // In RTL the browser will invert `flex-start` and `flex-end` automatically, but we\n            // don't want that because our positioning is explicitly `left` and `right`, hence\n            // why we do another inversion to ensure that the overlay stays in the same position.\n            // TODO: reconsider this if we add `start` and `end` methods.\n            if (this._justifyContent === 'flex-start') {\n                parentStyles.justifyContent = 'flex-end';\n            }\n            else if (this._justifyContent === 'flex-end') {\n                parentStyles.justifyContent = 'flex-start';\n            }\n        }\n        else {\n            parentStyles.justifyContent = this._justifyContent;\n        }\n        parentStyles.alignItems = shouldBeFlushVertically ? 'flex-start' : this._alignItems;\n    }\n    /**\n     * Cleans up the DOM changes from the position strategy.\n     * @docs-private\n     */\n    dispose() {\n        if (this._isDisposed || !this._overlayRef) {\n            return;\n        }\n        const styles = this._overlayRef.overlayElement.style;\n        const parent = this._overlayRef.hostElement;\n        const parentStyles = parent.style;\n        parent.classList.remove(wrapperClass);\n        parentStyles.justifyContent =\n            parentStyles.alignItems =\n                styles.marginTop =\n                    styles.marginBottom =\n                        styles.marginLeft =\n                            styles.marginRight =\n                                styles.position =\n                                    '';\n        this._overlayRef = null;\n        this._isDisposed = true;\n    }\n}\n\n/** Builder for overlay position strategy. */\nclass OverlayPositionBuilder {\n    constructor(_viewportRuler, _document, _platform, _overlayContainer) {\n        this._viewportRuler = _viewportRuler;\n        this._document = _document;\n        this._platform = _platform;\n        this._overlayContainer = _overlayContainer;\n    }\n    /**\n     * Creates a global position strategy.\n     */\n    global() {\n        return new GlobalPositionStrategy();\n    }\n    /**\n     * Creates a flexible position strategy.\n     * @param origin Origin relative to which to position the overlay.\n     */\n    flexibleConnectedTo(origin) {\n        return new FlexibleConnectedPositionStrategy(origin, this._viewportRuler, this._document, this._platform, this._overlayContainer);\n    }\n}\nOverlayPositionBuilder.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: OverlayPositionBuilder, deps: [{ token: i1.ViewportRuler }, { token: DOCUMENT }, { token: i1$1.Platform }, { token: OverlayContainer }], target: i0.ɵɵFactoryTarget.Injectable });\nOverlayPositionBuilder.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: OverlayPositionBuilder, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: OverlayPositionBuilder, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: function () {\n        return [{ type: i1.ViewportRuler }, { type: undefined, decorators: [{\n                        type: Inject,\n                        args: [DOCUMENT]\n                    }] }, { type: i1$1.Platform }, { type: OverlayContainer }];\n    } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Service for dispatching events that land on the body to appropriate overlay ref,\n * if any. It maintains a list of attached overlays to determine best suited overlay based\n * on event target and order of overlay opens.\n */\nclass BaseOverlayDispatcher {\n    constructor(document) {\n        /** Currently attached overlays in the order they were attached. */\n        this._attachedOverlays = [];\n        this._document = document;\n    }\n    ngOnDestroy() {\n        this.detach();\n    }\n    /** Add a new overlay to the list of attached overlay refs. */\n    add(overlayRef) {\n        // Ensure that we don't get the same overlay multiple times.\n        this.remove(overlayRef);\n        this._attachedOverlays.push(overlayRef);\n    }\n    /** Remove an overlay from the list of attached overlay refs. */\n    remove(overlayRef) {\n        const index = this._attachedOverlays.indexOf(overlayRef);\n        if (index > -1) {\n            this._attachedOverlays.splice(index, 1);\n        }\n        // Remove the global listener once there are no more overlays.\n        if (this._attachedOverlays.length === 0) {\n            this.detach();\n        }\n    }\n}\nBaseOverlayDispatcher.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: BaseOverlayDispatcher, deps: [{ token: DOCUMENT }], target: i0.ɵɵFactoryTarget.Injectable });\nBaseOverlayDispatcher.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: BaseOverlayDispatcher, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: BaseOverlayDispatcher, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: function () {\n        return [{ type: undefined, decorators: [{\n                        type: Inject,\n                        args: [DOCUMENT]\n                    }] }];\n    } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Service for dispatching keyboard events that land on the body to appropriate overlay ref,\n * if any. It maintains a list of attached overlays to determine best suited overlay based\n * on event target and order of overlay opens.\n */\nclass OverlayKeyboardDispatcher extends BaseOverlayDispatcher {\n    constructor(document) {\n        super(document);\n        /** Keyboard event listener that will be attached to the body. */\n        this._keydownListener = (event) => {\n            const overlays = this._attachedOverlays;\n            for (let i = overlays.length - 1; i > -1; i--) {\n                // Dispatch the keydown event to the top overlay which has subscribers to its keydown events.\n                // We want to target the most recent overlay, rather than trying to match where the event came\n                // from, because some components might open an overlay, but keep focus on a trigger element\n                // (e.g. for select and autocomplete). We skip overlays without keydown event subscriptions,\n                // because we don't want overlays that don't handle keyboard events to block the ones below\n                // them that do.\n                if (overlays[i]._keydownEvents.observers.length > 0) {\n                    overlays[i]._keydownEvents.next(event);\n                    break;\n                }\n            }\n        };\n    }\n    /** Add a new overlay to the list of attached overlay refs. */\n    add(overlayRef) {\n        super.add(overlayRef);\n        // Lazily start dispatcher once first overlay is added\n        if (!this._isAttached) {\n            this._document.body.addEventListener('keydown', this._keydownListener);\n            this._isAttached = true;\n        }\n    }\n    /** Detaches the global keyboard event listener. */\n    detach() {\n        if (this._isAttached) {\n            this._document.body.removeEventListener('keydown', this._keydownListener);\n            this._isAttached = false;\n        }\n    }\n}\nOverlayKeyboardDispatcher.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: OverlayKeyboardDispatcher, deps: [{ token: DOCUMENT }], target: i0.ɵɵFactoryTarget.Injectable });\nOverlayKeyboardDispatcher.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: OverlayKeyboardDispatcher, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: OverlayKeyboardDispatcher, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: function () {\n        return [{ type: undefined, decorators: [{\n                        type: Inject,\n                        args: [DOCUMENT]\n                    }] }];\n    } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Service for dispatching mouse click events that land on the body to appropriate overlay ref,\n * if any. It maintains a list of attached overlays to determine best suited overlay based\n * on event target and order of overlay opens.\n */\nclass OverlayOutsideClickDispatcher extends BaseOverlayDispatcher {\n    constructor(document, _platform) {\n        super(document);\n        this._platform = _platform;\n        this._cursorStyleIsSet = false;\n        /** Store pointerdown event target to track origin of click. */\n        this._pointerDownListener = (event) => {\n            this._pointerDownEventTarget = _getEventTarget(event);\n        };\n        /** Click event listener that will be attached to the body propagate phase. */\n        this._clickListener = (event) => {\n            const target = _getEventTarget(event);\n            // In case of a click event, we want to check the origin of the click\n            // (e.g. in case where a user starts a click inside the overlay and\n            // releases the click outside of it).\n            // This is done by using the event target of the preceding pointerdown event.\n            // Every click event caused by a pointer device has a preceding pointerdown\n            // event, unless the click was programmatically triggered (e.g. in a unit test).\n            const origin = event.type === 'click' && this._pointerDownEventTarget\n                ? this._pointerDownEventTarget\n                : target;\n            // Reset the stored pointerdown event target, to avoid having it interfere\n            // in subsequent events.\n            this._pointerDownEventTarget = null;\n            // We copy the array because the original may be modified asynchronously if the\n            // outsidePointerEvents listener decides to detach overlays resulting in index errors inside\n            // the for loop.\n            const overlays = this._attachedOverlays.slice();\n            // Dispatch the mouse event to the top overlay which has subscribers to its mouse events.\n            // We want to target all overlays for which the click could be considered as outside click.\n            // As soon as we reach an overlay for which the click is not outside click we break off\n            // the loop.\n            for (let i = overlays.length - 1; i > -1; i--) {\n                const overlayRef = overlays[i];\n                if (overlayRef._outsidePointerEvents.observers.length < 1 || !overlayRef.hasAttached()) {\n                    continue;\n                }\n                // If it's a click inside the overlay, just break - we should do nothing\n                // If it's an outside click (both origin and target of the click) dispatch the mouse event,\n                // and proceed with the next overlay\n                if (overlayRef.overlayElement.contains(target) ||\n                    overlayRef.overlayElement.contains(origin)) {\n                    break;\n                }\n                overlayRef._outsidePointerEvents.next(event);\n            }\n        };\n    }\n    /** Add a new overlay to the list of attached overlay refs. */\n    add(overlayRef) {\n        super.add(overlayRef);\n        // Safari on iOS does not generate click events for non-interactive\n        // elements. However, we want to receive a click for any element outside\n        // the overlay. We can force a \"clickable\" state by setting\n        // `cursor: pointer` on the document body. See:\n        // https://developer.mozilla.org/en-US/docs/Web/API/Element/click_event#Safari_Mobile\n        // https://developer.apple.com/library/archive/documentation/AppleApplications/Reference/SafariWebContent/HandlingEvents/HandlingEvents.html\n        if (!this._isAttached) {\n            const body = this._document.body;\n            body.addEventListener('pointerdown', this._pointerDownListener, true);\n            body.addEventListener('click', this._clickListener, true);\n            body.addEventListener('auxclick', this._clickListener, true);\n            body.addEventListener('contextmenu', this._clickListener, true);\n            // click event is not fired on iOS. To make element \"clickable\" we are\n            // setting the cursor to pointer\n            if (this._platform.IOS && !this._cursorStyleIsSet) {\n                this._cursorOriginalValue = body.style.cursor;\n                body.style.cursor = 'pointer';\n                this._cursorStyleIsSet = true;\n            }\n            this._isAttached = true;\n        }\n    }\n    /** Detaches the global keyboard event listener. */\n    detach() {\n        if (this._isAttached) {\n            const body = this._document.body;\n            body.removeEventListener('pointerdown', this._pointerDownListener, true);\n            body.removeEventListener('click', this._clickListener, true);\n            body.removeEventListener('auxclick', this._clickListener, true);\n            body.removeEventListener('contextmenu', this._clickListener, true);\n            if (this._platform.IOS && this._cursorStyleIsSet) {\n                body.style.cursor = this._cursorOriginalValue;\n                this._cursorStyleIsSet = false;\n            }\n            this._isAttached = false;\n        }\n    }\n}\nOverlayOutsideClickDispatcher.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: OverlayOutsideClickDispatcher, deps: [{ token: DOCUMENT }, { token: i1$1.Platform }], target: i0.ɵɵFactoryTarget.Injectable });\nOverlayOutsideClickDispatcher.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: OverlayOutsideClickDispatcher, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: OverlayOutsideClickDispatcher, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: function () {\n        return [{ type: undefined, decorators: [{\n                        type: Inject,\n                        args: [DOCUMENT]\n                    }] }, { type: i1$1.Platform }];\n    } });\n\n/** Next overlay unique ID. */\nlet nextUniqueId = 0;\n// Note that Overlay is *not* scoped to the app root because of the ComponentFactoryResolver\n// which needs to be different depending on where OverlayModule is imported.\n/**\n * Service to create Overlays. Overlays are dynamically added pieces of floating UI, meant to be\n * used as a low-level building block for other components. Dialogs, tooltips, menus,\n * selects, etc. can all be built using overlays. The service should primarily be used by authors\n * of re-usable components rather than developers building end-user applications.\n *\n * An overlay *is* a PortalOutlet, so any kind of Portal can be loaded into one.\n */\nclass Overlay {\n    constructor(\n    /** Scrolling strategies that can be used when creating an overlay. */\n    scrollStrategies, _overlayContainer, _componentFactoryResolver, _positionBuilder, _keyboardDispatcher, _injector, _ngZone, _document, _directionality, _location, _outsideClickDispatcher) {\n        this.scrollStrategies = scrollStrategies;\n        this._overlayContainer = _overlayContainer;\n        this._componentFactoryResolver = _componentFactoryResolver;\n        this._positionBuilder = _positionBuilder;\n        this._keyboardDispatcher = _keyboardDispatcher;\n        this._injector = _injector;\n        this._ngZone = _ngZone;\n        this._document = _document;\n        this._directionality = _directionality;\n        this._location = _location;\n        this._outsideClickDispatcher = _outsideClickDispatcher;\n    }\n    /**\n     * Creates an overlay.\n     * @param config Configuration applied to the overlay.\n     * @returns Reference to the created overlay.\n     */\n    create(config) {\n        const host = this._createHostElement();\n        const pane = this._createPaneElement(host);\n        const portalOutlet = this._createPortalOutlet(pane);\n        const overlayConfig = new OverlayConfig(config);\n        overlayConfig.direction = overlayConfig.direction || this._directionality.value;\n        return new OverlayRef(portalOutlet, host, pane, overlayConfig, this._ngZone, this._keyboardDispatcher, this._document, this._location, this._outsideClickDispatcher);\n    }\n    /**\n     * Gets a position builder that can be used, via fluent API,\n     * to construct and configure a position strategy.\n     * @returns An overlay position builder.\n     */\n    position() {\n        return this._positionBuilder;\n    }\n    /**\n     * Creates the DOM element for an overlay and appends it to the overlay container.\n     * @returns Newly-created pane element\n     */\n    _createPaneElement(host) {\n        const pane = this._document.createElement('div');\n        pane.id = `cdk-overlay-${nextUniqueId++}`;\n        pane.classList.add('cdk-overlay-pane');\n        host.appendChild(pane);\n        return pane;\n    }\n    /**\n     * Creates the host element that wraps around an overlay\n     * and can be used for advanced positioning.\n     * @returns Newly-create host element.\n     */\n    _createHostElement() {\n        const host = this._document.createElement('div');\n        this._overlayContainer.getContainerElement().appendChild(host);\n        return host;\n    }\n    /**\n     * Create a DomPortalOutlet into which the overlay content can be loaded.\n     * @param pane The DOM element to turn into a portal outlet.\n     * @returns A portal outlet for the given DOM element.\n     */\n    _createPortalOutlet(pane) {\n        // We have to resolve the ApplicationRef later in order to allow people\n        // to use overlay-based providers during app initialization.\n        if (!this._appRef) {\n            this._appRef = this._injector.get(ApplicationRef);\n        }\n        return new DomPortalOutlet(pane, this._componentFactoryResolver, this._appRef, this._injector, this._document);\n    }\n}\nOverlay.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: Overlay, deps: [{ token: ScrollStrategyOptions }, { token: OverlayContainer }, { token: i0.ComponentFactoryResolver }, { token: OverlayPositionBuilder }, { token: OverlayKeyboardDispatcher }, { token: i0.Injector }, { token: i0.NgZone }, { token: DOCUMENT }, { token: i5.Directionality }, { token: i6.Location }, { token: OverlayOutsideClickDispatcher }], target: i0.ɵɵFactoryTarget.Injectable });\nOverlay.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: Overlay });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: Overlay, decorators: [{\n            type: Injectable\n        }], ctorParameters: function () {\n        return [{ type: ScrollStrategyOptions }, { type: OverlayContainer }, { type: i0.ComponentFactoryResolver }, { type: OverlayPositionBuilder }, { type: OverlayKeyboardDispatcher }, { type: i0.Injector }, { type: i0.NgZone }, { type: undefined, decorators: [{\n                        type: Inject,\n                        args: [DOCUMENT]\n                    }] }, { type: i5.Directionality }, { type: i6.Location }, { type: OverlayOutsideClickDispatcher }];\n    } });\n\n/** Default set of positions for the overlay. Follows the behavior of a dropdown. */\nconst defaultPositionList = [\n    {\n        originX: 'start',\n        originY: 'bottom',\n        overlayX: 'start',\n        overlayY: 'top',\n    },\n    {\n        originX: 'start',\n        originY: 'top',\n        overlayX: 'start',\n        overlayY: 'bottom',\n    },\n    {\n        originX: 'end',\n        originY: 'top',\n        overlayX: 'end',\n        overlayY: 'bottom',\n    },\n    {\n        originX: 'end',\n        originY: 'bottom',\n        overlayX: 'end',\n        overlayY: 'top',\n    },\n];\n/** Injection token that determines the scroll handling while the connected overlay is open. */\nconst CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY = new InjectionToken('cdk-connected-overlay-scroll-strategy');\n/**\n * Directive applied to an element to make it usable as an origin for an Overlay using a\n * ConnectedPositionStrategy.\n */\nclass CdkOverlayOrigin {\n    constructor(\n    /** Reference to the element on which the directive is applied. */\n    elementRef) {\n        this.elementRef = elementRef;\n    }\n}\nCdkOverlayOrigin.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: CdkOverlayOrigin, deps: [{ token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Directive });\nCdkOverlayOrigin.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.1.0\", type: CdkOverlayOrigin, selector: \"[cdk-overlay-origin], [overlay-origin], [cdkOverlayOrigin]\", exportAs: [\"cdkOverlayOrigin\"], ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: CdkOverlayOrigin, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[cdk-overlay-origin], [overlay-origin], [cdkOverlayOrigin]',\n                    exportAs: 'cdkOverlayOrigin',\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }]; } });\n/**\n * Directive to facilitate declarative creation of an\n * Overlay using a FlexibleConnectedPositionStrategy.\n */\nclass CdkConnectedOverlay {\n    // TODO(jelbourn): inputs for size, scroll behavior, animation, etc.\n    constructor(_overlay, templateRef, viewContainerRef, scrollStrategyFactory, _dir) {\n        this._overlay = _overlay;\n        this._dir = _dir;\n        this._hasBackdrop = false;\n        this._lockPosition = false;\n        this._growAfterOpen = false;\n        this._flexibleDimensions = false;\n        this._push = false;\n        this._backdropSubscription = Subscription.EMPTY;\n        this._attachSubscription = Subscription.EMPTY;\n        this._detachSubscription = Subscription.EMPTY;\n        this._positionSubscription = Subscription.EMPTY;\n        /** Margin between the overlay and the viewport edges. */\n        this.viewportMargin = 0;\n        /** Whether the overlay is open. */\n        this.open = false;\n        /** Whether the overlay can be closed by user interaction. */\n        this.disableClose = false;\n        /** Event emitted when the backdrop is clicked. */\n        this.backdropClick = new EventEmitter();\n        /** Event emitted when the position has changed. */\n        this.positionChange = new EventEmitter();\n        /** Event emitted when the overlay has been attached. */\n        this.attach = new EventEmitter();\n        /** Event emitted when the overlay has been detached. */\n        this.detach = new EventEmitter();\n        /** Emits when there are keyboard events that are targeted at the overlay. */\n        this.overlayKeydown = new EventEmitter();\n        /** Emits when there are mouse outside click events that are targeted at the overlay. */\n        this.overlayOutsideClick = new EventEmitter();\n        this._templatePortal = new TemplatePortal(templateRef, viewContainerRef);\n        this._scrollStrategyFactory = scrollStrategyFactory;\n        this.scrollStrategy = this._scrollStrategyFactory();\n    }\n    /** The offset in pixels for the overlay connection point on the x-axis */\n    get offsetX() {\n        return this._offsetX;\n    }\n    set offsetX(offsetX) {\n        this._offsetX = offsetX;\n        if (this._position) {\n            this._updatePositionStrategy(this._position);\n        }\n    }\n    /** The offset in pixels for the overlay connection point on the y-axis */\n    get offsetY() {\n        return this._offsetY;\n    }\n    set offsetY(offsetY) {\n        this._offsetY = offsetY;\n        if (this._position) {\n            this._updatePositionStrategy(this._position);\n        }\n    }\n    /** Whether or not the overlay should attach a backdrop. */\n    get hasBackdrop() {\n        return this._hasBackdrop;\n    }\n    set hasBackdrop(value) {\n        this._hasBackdrop = coerceBooleanProperty(value);\n    }\n    /** Whether or not the overlay should be locked when scrolling. */\n    get lockPosition() {\n        return this._lockPosition;\n    }\n    set lockPosition(value) {\n        this._lockPosition = coerceBooleanProperty(value);\n    }\n    /** Whether the overlay's width and height can be constrained to fit within the viewport. */\n    get flexibleDimensions() {\n        return this._flexibleDimensions;\n    }\n    set flexibleDimensions(value) {\n        this._flexibleDimensions = coerceBooleanProperty(value);\n    }\n    /** Whether the overlay can grow after the initial open when flexible positioning is turned on. */\n    get growAfterOpen() {\n        return this._growAfterOpen;\n    }\n    set growAfterOpen(value) {\n        this._growAfterOpen = coerceBooleanProperty(value);\n    }\n    /** Whether the overlay can be pushed on-screen if none of the provided positions fit. */\n    get push() {\n        return this._push;\n    }\n    set push(value) {\n        this._push = coerceBooleanProperty(value);\n    }\n    /** The associated overlay reference. */\n    get overlayRef() {\n        return this._overlayRef;\n    }\n    /** The element's layout direction. */\n    get dir() {\n        return this._dir ? this._dir.value : 'ltr';\n    }\n    ngOnDestroy() {\n        this._attachSubscription.unsubscribe();\n        this._detachSubscription.unsubscribe();\n        this._backdropSubscription.unsubscribe();\n        this._positionSubscription.unsubscribe();\n        if (this._overlayRef) {\n            this._overlayRef.dispose();\n        }\n    }\n    ngOnChanges(changes) {\n        if (this._position) {\n            this._updatePositionStrategy(this._position);\n            this._overlayRef.updateSize({\n                width: this.width,\n                minWidth: this.minWidth,\n                height: this.height,\n                minHeight: this.minHeight,\n            });\n            if (changes['origin'] && this.open) {\n                this._position.apply();\n            }\n        }\n        if (changes['open']) {\n            this.open ? this._attachOverlay() : this._detachOverlay();\n        }\n    }\n    /** Creates an overlay */\n    _createOverlay() {\n        if (!this.positions || !this.positions.length) {\n            this.positions = defaultPositionList;\n        }\n        const overlayRef = (this._overlayRef = this._overlay.create(this._buildConfig()));\n        this._attachSubscription = overlayRef.attachments().subscribe(() => this.attach.emit());\n        this._detachSubscription = overlayRef.detachments().subscribe(() => this.detach.emit());\n        overlayRef.keydownEvents().subscribe((event) => {\n            this.overlayKeydown.next(event);\n            if (event.keyCode === ESCAPE && !this.disableClose && !hasModifierKey(event)) {\n                event.preventDefault();\n                this._detachOverlay();\n            }\n        });\n        this._overlayRef.outsidePointerEvents().subscribe((event) => {\n            this.overlayOutsideClick.next(event);\n        });\n    }\n    /** Builds the overlay config based on the directive's inputs */\n    _buildConfig() {\n        const positionStrategy = (this._position =\n            this.positionStrategy || this._createPositionStrategy());\n        const overlayConfig = new OverlayConfig({\n            direction: this._dir,\n            positionStrategy,\n            scrollStrategy: this.scrollStrategy,\n            hasBackdrop: this.hasBackdrop,\n        });\n        if (this.width || this.width === 0) {\n            overlayConfig.width = this.width;\n        }\n        if (this.height || this.height === 0) {\n            overlayConfig.height = this.height;\n        }\n        if (this.minWidth || this.minWidth === 0) {\n            overlayConfig.minWidth = this.minWidth;\n        }\n        if (this.minHeight || this.minHeight === 0) {\n            overlayConfig.minHeight = this.minHeight;\n        }\n        if (this.backdropClass) {\n            overlayConfig.backdropClass = this.backdropClass;\n        }\n        if (this.panelClass) {\n            overlayConfig.panelClass = this.panelClass;\n        }\n        return overlayConfig;\n    }\n    /** Updates the state of a position strategy, based on the values of the directive inputs. */\n    _updatePositionStrategy(positionStrategy) {\n        const positions = this.positions.map(currentPosition => ({\n            originX: currentPosition.originX,\n            originY: currentPosition.originY,\n            overlayX: currentPosition.overlayX,\n            overlayY: currentPosition.overlayY,\n            offsetX: currentPosition.offsetX || this.offsetX,\n            offsetY: currentPosition.offsetY || this.offsetY,\n            panelClass: currentPosition.panelClass || undefined,\n        }));\n        return positionStrategy\n            .setOrigin(this._getFlexibleConnectedPositionStrategyOrigin())\n            .withPositions(positions)\n            .withFlexibleDimensions(this.flexibleDimensions)\n            .withPush(this.push)\n            .withGrowAfterOpen(this.growAfterOpen)\n            .withViewportMargin(this.viewportMargin)\n            .withLockedPosition(this.lockPosition)\n            .withTransformOriginOn(this.transformOriginSelector);\n    }\n    /** Returns the position strategy of the overlay to be set on the overlay config */\n    _createPositionStrategy() {\n        const strategy = this._overlay\n            .position()\n            .flexibleConnectedTo(this._getFlexibleConnectedPositionStrategyOrigin());\n        this._updatePositionStrategy(strategy);\n        return strategy;\n    }\n    _getFlexibleConnectedPositionStrategyOrigin() {\n        if (this.origin instanceof CdkOverlayOrigin) {\n            return this.origin.elementRef;\n        }\n        else {\n            return this.origin;\n        }\n    }\n    /** Attaches the overlay and subscribes to backdrop clicks if backdrop exists */\n    _attachOverlay() {\n        if (!this._overlayRef) {\n            this._createOverlay();\n        }\n        else {\n            // Update the overlay size, in case the directive's inputs have changed\n            this._overlayRef.getConfig().hasBackdrop = this.hasBackdrop;\n        }\n        if (!this._overlayRef.hasAttached()) {\n            this._overlayRef.attach(this._templatePortal);\n        }\n        if (this.hasBackdrop) {\n            this._backdropSubscription = this._overlayRef.backdropClick().subscribe(event => {\n                this.backdropClick.emit(event);\n            });\n        }\n        else {\n            this._backdropSubscription.unsubscribe();\n        }\n        this._positionSubscription.unsubscribe();\n        // Only subscribe to `positionChanges` if requested, because putting\n        // together all the information for it can be expensive.\n        if (this.positionChange.observers.length > 0) {\n            this._positionSubscription = this._position.positionChanges\n                .pipe(takeWhile(() => this.positionChange.observers.length > 0))\n                .subscribe(position => {\n                this.positionChange.emit(position);\n                if (this.positionChange.observers.length === 0) {\n                    this._positionSubscription.unsubscribe();\n                }\n            });\n        }\n    }\n    /** Detaches the overlay and unsubscribes to backdrop clicks if backdrop exists */\n    _detachOverlay() {\n        if (this._overlayRef) {\n            this._overlayRef.detach();\n        }\n        this._backdropSubscription.unsubscribe();\n        this._positionSubscription.unsubscribe();\n    }\n}\nCdkConnectedOverlay.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: CdkConnectedOverlay, deps: [{ token: Overlay }, { token: i0.TemplateRef }, { token: i0.ViewContainerRef }, { token: CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY }, { token: i5.Directionality, optional: true }], target: i0.ɵɵFactoryTarget.Directive });\nCdkConnectedOverlay.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.1.0\", type: CdkConnectedOverlay, selector: \"[cdk-connected-overlay], [connected-overlay], [cdkConnectedOverlay]\", inputs: { origin: [\"cdkConnectedOverlayOrigin\", \"origin\"], positions: [\"cdkConnectedOverlayPositions\", \"positions\"], positionStrategy: [\"cdkConnectedOverlayPositionStrategy\", \"positionStrategy\"], offsetX: [\"cdkConnectedOverlayOffsetX\", \"offsetX\"], offsetY: [\"cdkConnectedOverlayOffsetY\", \"offsetY\"], width: [\"cdkConnectedOverlayWidth\", \"width\"], height: [\"cdkConnectedOverlayHeight\", \"height\"], minWidth: [\"cdkConnectedOverlayMinWidth\", \"minWidth\"], minHeight: [\"cdkConnectedOverlayMinHeight\", \"minHeight\"], backdropClass: [\"cdkConnectedOverlayBackdropClass\", \"backdropClass\"], panelClass: [\"cdkConnectedOverlayPanelClass\", \"panelClass\"], viewportMargin: [\"cdkConnectedOverlayViewportMargin\", \"viewportMargin\"], scrollStrategy: [\"cdkConnectedOverlayScrollStrategy\", \"scrollStrategy\"], open: [\"cdkConnectedOverlayOpen\", \"open\"], disableClose: [\"cdkConnectedOverlayDisableClose\", \"disableClose\"], transformOriginSelector: [\"cdkConnectedOverlayTransformOriginOn\", \"transformOriginSelector\"], hasBackdrop: [\"cdkConnectedOverlayHasBackdrop\", \"hasBackdrop\"], lockPosition: [\"cdkConnectedOverlayLockPosition\", \"lockPosition\"], flexibleDimensions: [\"cdkConnectedOverlayFlexibleDimensions\", \"flexibleDimensions\"], growAfterOpen: [\"cdkConnectedOverlayGrowAfterOpen\", \"growAfterOpen\"], push: [\"cdkConnectedOverlayPush\", \"push\"] }, outputs: { backdropClick: \"backdropClick\", positionChange: \"positionChange\", attach: \"attach\", detach: \"detach\", overlayKeydown: \"overlayKeydown\", overlayOutsideClick: \"overlayOutsideClick\" }, exportAs: [\"cdkConnectedOverlay\"], usesOnChanges: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: CdkConnectedOverlay, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[cdk-connected-overlay], [connected-overlay], [cdkConnectedOverlay]',\n                    exportAs: 'cdkConnectedOverlay',\n                }]\n        }], ctorParameters: function () {\n        return [{ type: Overlay }, { type: i0.TemplateRef }, { type: i0.ViewContainerRef }, { type: undefined, decorators: [{\n                        type: Inject,\n                        args: [CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY]\n                    }] }, { type: i5.Directionality, decorators: [{\n                        type: Optional\n                    }] }];\n    }, propDecorators: { origin: [{\n                type: Input,\n                args: ['cdkConnectedOverlayOrigin']\n            }], positions: [{\n                type: Input,\n                args: ['cdkConnectedOverlayPositions']\n            }], positionStrategy: [{\n                type: Input,\n                args: ['cdkConnectedOverlayPositionStrategy']\n            }], offsetX: [{\n                type: Input,\n                args: ['cdkConnectedOverlayOffsetX']\n            }], offsetY: [{\n                type: Input,\n                args: ['cdkConnectedOverlayOffsetY']\n            }], width: [{\n                type: Input,\n                args: ['cdkConnectedOverlayWidth']\n            }], height: [{\n                type: Input,\n                args: ['cdkConnectedOverlayHeight']\n            }], minWidth: [{\n                type: Input,\n                args: ['cdkConnectedOverlayMinWidth']\n            }], minHeight: [{\n                type: Input,\n                args: ['cdkConnectedOverlayMinHeight']\n            }], backdropClass: [{\n                type: Input,\n                args: ['cdkConnectedOverlayBackdropClass']\n            }], panelClass: [{\n                type: Input,\n                args: ['cdkConnectedOverlayPanelClass']\n            }], viewportMargin: [{\n                type: Input,\n                args: ['cdkConnectedOverlayViewportMargin']\n            }], scrollStrategy: [{\n                type: Input,\n                args: ['cdkConnectedOverlayScrollStrategy']\n            }], open: [{\n                type: Input,\n                args: ['cdkConnectedOverlayOpen']\n            }], disableClose: [{\n                type: Input,\n                args: ['cdkConnectedOverlayDisableClose']\n            }], transformOriginSelector: [{\n                type: Input,\n                args: ['cdkConnectedOverlayTransformOriginOn']\n            }], hasBackdrop: [{\n                type: Input,\n                args: ['cdkConnectedOverlayHasBackdrop']\n            }], lockPosition: [{\n                type: Input,\n                args: ['cdkConnectedOverlayLockPosition']\n            }], flexibleDimensions: [{\n                type: Input,\n                args: ['cdkConnectedOverlayFlexibleDimensions']\n            }], growAfterOpen: [{\n                type: Input,\n                args: ['cdkConnectedOverlayGrowAfterOpen']\n            }], push: [{\n                type: Input,\n                args: ['cdkConnectedOverlayPush']\n            }], backdropClick: [{\n                type: Output\n            }], positionChange: [{\n                type: Output\n            }], attach: [{\n                type: Output\n            }], detach: [{\n                type: Output\n            }], overlayKeydown: [{\n                type: Output\n            }], overlayOutsideClick: [{\n                type: Output\n            }] } });\n/** @docs-private */\nfunction CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY_PROVIDER_FACTORY(overlay) {\n    return () => overlay.scrollStrategies.reposition();\n}\n/** @docs-private */\nconst CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY_PROVIDER = {\n    provide: CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY,\n    deps: [Overlay],\n    useFactory: CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY_PROVIDER_FACTORY,\n};\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass OverlayModule {\n}\nOverlayModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: OverlayModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nOverlayModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: OverlayModule, declarations: [CdkConnectedOverlay, CdkOverlayOrigin], imports: [BidiModule, PortalModule, ScrollingModule], exports: [CdkConnectedOverlay, CdkOverlayOrigin, ScrollingModule] });\nOverlayModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: OverlayModule, providers: [Overlay, CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY_PROVIDER], imports: [[BidiModule, PortalModule, ScrollingModule], ScrollingModule] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: OverlayModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [BidiModule, PortalModule, ScrollingModule],\n                    exports: [CdkConnectedOverlay, CdkOverlayOrigin, ScrollingModule],\n                    declarations: [CdkConnectedOverlay, CdkOverlayOrigin],\n                    providers: [Overlay, CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY_PROVIDER],\n                }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Alternative to OverlayContainer that supports correct displaying of overlay elements in\n * Fullscreen mode\n * https://developer.mozilla.org/en-US/docs/Web/API/Element/requestFullScreen\n *\n * Should be provided in the root component.\n */\nclass FullscreenOverlayContainer extends OverlayContainer {\n    constructor(_document, platform) {\n        super(_document, platform);\n    }\n    ngOnDestroy() {\n        super.ngOnDestroy();\n        if (this._fullScreenEventName && this._fullScreenListener) {\n            this._document.removeEventListener(this._fullScreenEventName, this._fullScreenListener);\n        }\n    }\n    _createContainer() {\n        super._createContainer();\n        this._adjustParentForFullscreenChange();\n        this._addFullscreenChangeListener(() => this._adjustParentForFullscreenChange());\n    }\n    _adjustParentForFullscreenChange() {\n        if (!this._containerElement) {\n            return;\n        }\n        const fullscreenElement = this.getFullscreenElement();\n        const parent = fullscreenElement || this._document.body;\n        parent.appendChild(this._containerElement);\n    }\n    _addFullscreenChangeListener(fn) {\n        const eventName = this._getEventName();\n        if (eventName) {\n            if (this._fullScreenListener) {\n                this._document.removeEventListener(eventName, this._fullScreenListener);\n            }\n            this._document.addEventListener(eventName, fn);\n            this._fullScreenListener = fn;\n        }\n    }\n    _getEventName() {\n        if (!this._fullScreenEventName) {\n            const _document = this._document;\n            if (_document.fullscreenEnabled) {\n                this._fullScreenEventName = 'fullscreenchange';\n            }\n            else if (_document.webkitFullscreenEnabled) {\n                this._fullScreenEventName = 'webkitfullscreenchange';\n            }\n            else if (_document.mozFullScreenEnabled) {\n                this._fullScreenEventName = 'mozfullscreenchange';\n            }\n            else if (_document.msFullscreenEnabled) {\n                this._fullScreenEventName = 'MSFullscreenChange';\n            }\n        }\n        return this._fullScreenEventName;\n    }\n    /**\n     * When the page is put into fullscreen mode, a specific element is specified.\n     * Only that element and its children are visible when in fullscreen mode.\n     */\n    getFullscreenElement() {\n        const _document = this._document;\n        return (_document.fullscreenElement ||\n            _document.webkitFullscreenElement ||\n            _document.mozFullScreenElement ||\n            _document.msFullscreenElement ||\n            null);\n    }\n}\nFullscreenOverlayContainer.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: FullscreenOverlayContainer, deps: [{ token: DOCUMENT }, { token: i1$1.Platform }], target: i0.ɵɵFactoryTarget.Injectable });\nFullscreenOverlayContainer.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: FullscreenOverlayContainer, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: FullscreenOverlayContainer, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: function () {\n        return [{ type: undefined, decorators: [{\n                        type: Inject,\n                        args: [DOCUMENT]\n                    }] }, { type: i1$1.Platform }];\n    } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { BlockScrollStrategy, CdkConnectedOverlay, CdkOverlayOrigin, CloseScrollStrategy, ConnectedOverlayPositionChange, ConnectionPositionPair, FlexibleConnectedPositionStrategy, FullscreenOverlayContainer, GlobalPositionStrategy, NoopScrollStrategy, Overlay, OverlayConfig, OverlayContainer, OverlayKeyboardDispatcher, OverlayModule, OverlayOutsideClickDispatcher, OverlayPositionBuilder, OverlayRef, RepositionScrollStrategy, ScrollStrategyOptions, ScrollingVisibility, validateHorizontalPosition, validateVerticalPosition };\n","import * as i0 from '@angular/core';\nimport { Component, ViewEncapsulation, ChangeDetectionStrategy, Input, NgModule } from '@angular/core';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { MatCommonModule } from '@angular/material/core';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass MatDivider {\n    constructor() {\n        this._vertical = false;\n        this._inset = false;\n    }\n    /** Whether the divider is vertically aligned. */\n    get vertical() {\n        return this._vertical;\n    }\n    set vertical(value) {\n        this._vertical = coerceBooleanProperty(value);\n    }\n    /** Whether the divider is an inset divider. */\n    get inset() {\n        return this._inset;\n    }\n    set inset(value) {\n        this._inset = coerceBooleanProperty(value);\n    }\n}\nMatDivider.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatDivider, deps: [], target: i0.ɵɵFactoryTarget.Component });\nMatDivider.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: MatDivider, selector: \"mat-divider\", inputs: { vertical: \"vertical\", inset: \"inset\" }, host: { attributes: { \"role\": \"separator\" }, properties: { \"attr.aria-orientation\": \"vertical ? \\\"vertical\\\" : \\\"horizontal\\\"\", \"class.mat-divider-vertical\": \"vertical\", \"class.mat-divider-horizontal\": \"!vertical\", \"class.mat-divider-inset\": \"inset\" }, classAttribute: \"mat-divider\" }, ngImport: i0, template: '', isInline: true, styles: [\".mat-divider{display:block;margin:0;border-top-width:1px;border-top-style:solid}.mat-divider.mat-divider-vertical{border-top:0;border-right-width:1px;border-right-style:solid}.mat-divider.mat-divider-inset{margin-left:80px}[dir=rtl] .mat-divider.mat-divider-inset{margin-left:auto;margin-right:80px}\\n\"], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatDivider, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-divider', host: {\n                        'role': 'separator',\n                        '[attr.aria-orientation]': 'vertical ? \"vertical\" : \"horizontal\"',\n                        '[class.mat-divider-vertical]': 'vertical',\n                        '[class.mat-divider-horizontal]': '!vertical',\n                        '[class.mat-divider-inset]': 'inset',\n                        'class': 'mat-divider',\n                    }, template: '', encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, styles: [\".mat-divider{display:block;margin:0;border-top-width:1px;border-top-style:solid}.mat-divider.mat-divider-vertical{border-top:0;border-right-width:1px;border-right-style:solid}.mat-divider.mat-divider-inset{margin-left:80px}[dir=rtl] .mat-divider.mat-divider-inset{margin-left:auto;margin-right:80px}\\n\"] }]\n        }], propDecorators: { vertical: [{\n                type: Input\n            }], inset: [{\n                type: Input\n            }] } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass MatDividerModule {\n}\nMatDividerModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatDividerModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nMatDividerModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatDividerModule, declarations: [MatDivider], imports: [MatCommonModule], exports: [MatDivider, MatCommonModule] });\nMatDividerModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatDividerModule, imports: [[MatCommonModule], MatCommonModule] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatDividerModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [MatCommonModule],\n                    exports: [MatDivider, MatCommonModule],\n                    declarations: [MatDivider],\n                }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MatDivider, MatDividerModule };\n","import * as i0 from '@angular/core';\nimport { SecurityContext, Injectable, Optional, Inject, SkipSelf, ErrorHandler, InjectionToken, inject, Component, ViewEncapsulation, ChangeDetectionStrategy, Attribute, Input, NgModule } from '@angular/core';\nimport { mixinColor, MatCommonModule } from '@angular/material/core';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { DOCUMENT } from '@angular/common';\nimport { of, throwError, forkJoin, Subscription } from 'rxjs';\nimport { tap, map, catchError, finalize, share, take } from 'rxjs/operators';\nimport * as i1 from '@angular/common/http';\nimport { HttpClient } from '@angular/common/http';\nimport * as i2 from '@angular/platform-browser';\nimport { DomSanitizer } from '@angular/platform-browser';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * The Trusted Types policy, or null if Trusted Types are not\n * enabled/supported, or undefined if the policy has not been created yet.\n */\nlet policy;\n/**\n * Returns the Trusted Types policy, or null if Trusted Types are not\n * enabled/supported. The first call to this function will create the policy.\n */\nfunction getPolicy() {\n    if (policy === undefined) {\n        policy = null;\n        if (typeof window !== 'undefined') {\n            const ttWindow = window;\n            if (ttWindow.trustedTypes !== undefined) {\n                policy = ttWindow.trustedTypes.createPolicy('angular#components', {\n                    createHTML: (s) => s,\n                });\n            }\n        }\n    }\n    return policy;\n}\n/**\n * Unsafely promote a string to a TrustedHTML, falling back to strings when\n * Trusted Types are not available.\n * @security This is a security-sensitive function; any use of this function\n * must go through security review. In particular, it must be assured that the\n * provided string will never cause an XSS vulnerability if used in a context\n * that will be interpreted as HTML by a browser, e.g. when assigning to\n * element.innerHTML.\n */\nfunction trustedHTMLFromString(html) {\n    var _a;\n    return ((_a = getPolicy()) === null || _a === void 0 ? void 0 : _a.createHTML(html)) || html;\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Returns an exception to be thrown in the case when attempting to\n * load an icon with a name that cannot be found.\n * @docs-private\n */\nfunction getMatIconNameNotFoundError(iconName) {\n    return Error(`Unable to find icon with the name \"${iconName}\"`);\n}\n/**\n * Returns an exception to be thrown when the consumer attempts to use\n * `<mat-icon>` without including @angular/common/http.\n * @docs-private\n */\nfunction getMatIconNoHttpProviderError() {\n    return Error('Could not find HttpClient provider for use with Angular Material icons. ' +\n        'Please include the HttpClientModule from @angular/common/http in your ' +\n        'app imports.');\n}\n/**\n * Returns an exception to be thrown when a URL couldn't be sanitized.\n * @param url URL that was attempted to be sanitized.\n * @docs-private\n */\nfunction getMatIconFailedToSanitizeUrlError(url) {\n    return Error(`The URL provided to MatIconRegistry was not trusted as a resource URL ` +\n        `via Angular's DomSanitizer. Attempted URL was \"${url}\".`);\n}\n/**\n * Returns an exception to be thrown when a HTML string couldn't be sanitized.\n * @param literal HTML that was attempted to be sanitized.\n * @docs-private\n */\nfunction getMatIconFailedToSanitizeLiteralError(literal) {\n    return Error(`The literal provided to MatIconRegistry was not trusted as safe HTML by ` +\n        `Angular's DomSanitizer. Attempted literal was \"${literal}\".`);\n}\n/**\n * Configuration for an icon, including the URL and possibly the cached SVG element.\n * @docs-private\n */\nclass SvgIconConfig {\n    constructor(url, svgText, options) {\n        this.url = url;\n        this.svgText = svgText;\n        this.options = options;\n    }\n}\n/**\n * Service to register and display icons used by the `<mat-icon>` component.\n * - Registers icon URLs by namespace and name.\n * - Registers icon set URLs by namespace.\n * - Registers aliases for CSS classes, for use with icon fonts.\n * - Loads icons from URLs and extracts individual icons from icon sets.\n */\nclass MatIconRegistry {\n    constructor(_httpClient, _sanitizer, document, _errorHandler) {\n        this._httpClient = _httpClient;\n        this._sanitizer = _sanitizer;\n        this._errorHandler = _errorHandler;\n        /**\n         * URLs and cached SVG elements for individual icons. Keys are of the format \"[namespace]:[icon]\".\n         */\n        this._svgIconConfigs = new Map();\n        /**\n         * SvgIconConfig objects and cached SVG elements for icon sets, keyed by namespace.\n         * Multiple icon sets can be registered under the same namespace.\n         */\n        this._iconSetConfigs = new Map();\n        /** Cache for icons loaded by direct URLs. */\n        this._cachedIconsByUrl = new Map();\n        /** In-progress icon fetches. Used to coalesce multiple requests to the same URL. */\n        this._inProgressUrlFetches = new Map();\n        /** Map from font identifiers to their CSS class names. Used for icon fonts. */\n        this._fontCssClassesByAlias = new Map();\n        /** Registered icon resolver functions. */\n        this._resolvers = [];\n        /**\n         * The CSS class to apply when an `<mat-icon>` component has no icon name, url, or font specified.\n         * The default 'material-icons' value assumes that the material icon font has been loaded as\n         * described at http://google.github.io/material-design-icons/#icon-font-for-the-web\n         */\n        this._defaultFontSetClass = 'material-icons';\n        this._document = document;\n    }\n    /**\n     * Registers an icon by URL in the default namespace.\n     * @param iconName Name under which the icon should be registered.\n     * @param url\n     */\n    addSvgIcon(iconName, url, options) {\n        return this.addSvgIconInNamespace('', iconName, url, options);\n    }\n    /**\n     * Registers an icon using an HTML string in the default namespace.\n     * @param iconName Name under which the icon should be registered.\n     * @param literal SVG source of the icon.\n     */\n    addSvgIconLiteral(iconName, literal, options) {\n        return this.addSvgIconLiteralInNamespace('', iconName, literal, options);\n    }\n    /**\n     * Registers an icon by URL in the specified namespace.\n     * @param namespace Namespace in which the icon should be registered.\n     * @param iconName Name under which the icon should be registered.\n     * @param url\n     */\n    addSvgIconInNamespace(namespace, iconName, url, options) {\n        return this._addSvgIconConfig(namespace, iconName, new SvgIconConfig(url, null, options));\n    }\n    /**\n     * Registers an icon resolver function with the registry. The function will be invoked with the\n     * name and namespace of an icon when the registry tries to resolve the URL from which to fetch\n     * the icon. The resolver is expected to return a `SafeResourceUrl` that points to the icon,\n     * an object with the icon URL and icon options, or `null` if the icon is not supported. Resolvers\n     * will be invoked in the order in which they have been registered.\n     * @param resolver Resolver function to be registered.\n     */\n    addSvgIconResolver(resolver) {\n        this._resolvers.push(resolver);\n        return this;\n    }\n    /**\n     * Registers an icon using an HTML string in the specified namespace.\n     * @param namespace Namespace in which the icon should be registered.\n     * @param iconName Name under which the icon should be registered.\n     * @param literal SVG source of the icon.\n     */\n    addSvgIconLiteralInNamespace(namespace, iconName, literal, options) {\n        const cleanLiteral = this._sanitizer.sanitize(SecurityContext.HTML, literal);\n        // TODO: add an ngDevMode check\n        if (!cleanLiteral) {\n            throw getMatIconFailedToSanitizeLiteralError(literal);\n        }\n        // Security: The literal is passed in as SafeHtml, and is thus trusted.\n        const trustedLiteral = trustedHTMLFromString(cleanLiteral);\n        return this._addSvgIconConfig(namespace, iconName, new SvgIconConfig('', trustedLiteral, options));\n    }\n    /**\n     * Registers an icon set by URL in the default namespace.\n     * @param url\n     */\n    addSvgIconSet(url, options) {\n        return this.addSvgIconSetInNamespace('', url, options);\n    }\n    /**\n     * Registers an icon set using an HTML string in the default namespace.\n     * @param literal SVG source of the icon set.\n     */\n    addSvgIconSetLiteral(literal, options) {\n        return this.addSvgIconSetLiteralInNamespace('', literal, options);\n    }\n    /**\n     * Registers an icon set by URL in the specified namespace.\n     * @param namespace Namespace in which to register the icon set.\n     * @param url\n     */\n    addSvgIconSetInNamespace(namespace, url, options) {\n        return this._addSvgIconSetConfig(namespace, new SvgIconConfig(url, null, options));\n    }\n    /**\n     * Registers an icon set using an HTML string in the specified namespace.\n     * @param namespace Namespace in which to register the icon set.\n     * @param literal SVG source of the icon set.\n     */\n    addSvgIconSetLiteralInNamespace(namespace, literal, options) {\n        const cleanLiteral = this._sanitizer.sanitize(SecurityContext.HTML, literal);\n        if (!cleanLiteral) {\n            throw getMatIconFailedToSanitizeLiteralError(literal);\n        }\n        // Security: The literal is passed in as SafeHtml, and is thus trusted.\n        const trustedLiteral = trustedHTMLFromString(cleanLiteral);\n        return this._addSvgIconSetConfig(namespace, new SvgIconConfig('', trustedLiteral, options));\n    }\n    /**\n     * Defines an alias for a CSS class name to be used for icon fonts. Creating an matIcon\n     * component with the alias as the fontSet input will cause the class name to be applied\n     * to the `<mat-icon>` element.\n     *\n     * @param alias Alias for the font.\n     * @param className Class name override to be used instead of the alias.\n     */\n    registerFontClassAlias(alias, className = alias) {\n        this._fontCssClassesByAlias.set(alias, className);\n        return this;\n    }\n    /**\n     * Returns the CSS class name associated with the alias by a previous call to\n     * registerFontClassAlias. If no CSS class has been associated, returns the alias unmodified.\n     */\n    classNameForFontAlias(alias) {\n        return this._fontCssClassesByAlias.get(alias) || alias;\n    }\n    /**\n     * Sets the CSS class name to be used for icon fonts when an `<mat-icon>` component does not\n     * have a fontSet input value, and is not loading an icon by name or URL.\n     *\n     * @param className\n     */\n    setDefaultFontSetClass(className) {\n        this._defaultFontSetClass = className;\n        return this;\n    }\n    /**\n     * Returns the CSS class name to be used for icon fonts when an `<mat-icon>` component does not\n     * have a fontSet input value, and is not loading an icon by name or URL.\n     */\n    getDefaultFontSetClass() {\n        return this._defaultFontSetClass;\n    }\n    /**\n     * Returns an Observable that produces the icon (as an `<svg>` DOM element) from the given URL.\n     * The response from the URL may be cached so this will not always cause an HTTP request, but\n     * the produced element will always be a new copy of the originally fetched icon. (That is,\n     * it will not contain any modifications made to elements previously returned).\n     *\n     * @param safeUrl URL from which to fetch the SVG icon.\n     */\n    getSvgIconFromUrl(safeUrl) {\n        const url = this._sanitizer.sanitize(SecurityContext.RESOURCE_URL, safeUrl);\n        if (!url) {\n            throw getMatIconFailedToSanitizeUrlError(safeUrl);\n        }\n        const cachedIcon = this._cachedIconsByUrl.get(url);\n        if (cachedIcon) {\n            return of(cloneSvg(cachedIcon));\n        }\n        return this._loadSvgIconFromConfig(new SvgIconConfig(safeUrl, null)).pipe(tap(svg => this._cachedIconsByUrl.set(url, svg)), map(svg => cloneSvg(svg)));\n    }\n    /**\n     * Returns an Observable that produces the icon (as an `<svg>` DOM element) with the given name\n     * and namespace. The icon must have been previously registered with addIcon or addIconSet;\n     * if not, the Observable will throw an error.\n     *\n     * @param name Name of the icon to be retrieved.\n     * @param namespace Namespace in which to look for the icon.\n     */\n    getNamedSvgIcon(name, namespace = '') {\n        const key = iconKey(namespace, name);\n        let config = this._svgIconConfigs.get(key);\n        // Return (copy of) cached icon if possible.\n        if (config) {\n            return this._getSvgFromConfig(config);\n        }\n        // Otherwise try to resolve the config from one of the resolver functions.\n        config = this._getIconConfigFromResolvers(namespace, name);\n        if (config) {\n            this._svgIconConfigs.set(key, config);\n            return this._getSvgFromConfig(config);\n        }\n        // See if we have any icon sets registered for the namespace.\n        const iconSetConfigs = this._iconSetConfigs.get(namespace);\n        if (iconSetConfigs) {\n            return this._getSvgFromIconSetConfigs(name, iconSetConfigs);\n        }\n        return throwError(getMatIconNameNotFoundError(key));\n    }\n    ngOnDestroy() {\n        this._resolvers = [];\n        this._svgIconConfigs.clear();\n        this._iconSetConfigs.clear();\n        this._cachedIconsByUrl.clear();\n    }\n    /**\n     * Returns the cached icon for a SvgIconConfig if available, or fetches it from its URL if not.\n     */\n    _getSvgFromConfig(config) {\n        if (config.svgText) {\n            // We already have the SVG element for this icon, return a copy.\n            return of(cloneSvg(this._svgElementFromConfig(config)));\n        }\n        else {\n            // Fetch the icon from the config's URL, cache it, and return a copy.\n            return this._loadSvgIconFromConfig(config).pipe(map(svg => cloneSvg(svg)));\n        }\n    }\n    /**\n     * Attempts to find an icon with the specified name in any of the SVG icon sets.\n     * First searches the available cached icons for a nested element with a matching name, and\n     * if found copies the element to a new `<svg>` element. If not found, fetches all icon sets\n     * that have not been cached, and searches again after all fetches are completed.\n     * The returned Observable produces the SVG element if possible, and throws\n     * an error if no icon with the specified name can be found.\n     */\n    _getSvgFromIconSetConfigs(name, iconSetConfigs) {\n        // For all the icon set SVG elements we've fetched, see if any contain an icon with the\n        // requested name.\n        const namedIcon = this._extractIconWithNameFromAnySet(name, iconSetConfigs);\n        if (namedIcon) {\n            // We could cache namedIcon in _svgIconConfigs, but since we have to make a copy every\n            // time anyway, there's probably not much advantage compared to just always extracting\n            // it from the icon set.\n            return of(namedIcon);\n        }\n        // Not found in any cached icon sets. If there are icon sets with URLs that we haven't\n        // fetched, fetch them now and look for iconName in the results.\n        const iconSetFetchRequests = iconSetConfigs\n            .filter(iconSetConfig => !iconSetConfig.svgText)\n            .map(iconSetConfig => {\n            return this._loadSvgIconSetFromConfig(iconSetConfig).pipe(catchError((err) => {\n                const url = this._sanitizer.sanitize(SecurityContext.RESOURCE_URL, iconSetConfig.url);\n                // Swallow errors fetching individual URLs so the\n                // combined Observable won't necessarily fail.\n                const errorMessage = `Loading icon set URL: ${url} failed: ${err.message}`;\n                this._errorHandler.handleError(new Error(errorMessage));\n                return of(null);\n            }));\n        });\n        // Fetch all the icon set URLs. When the requests complete, every IconSet should have a\n        // cached SVG element (unless the request failed), and we can check again for the icon.\n        return forkJoin(iconSetFetchRequests).pipe(map(() => {\n            const foundIcon = this._extractIconWithNameFromAnySet(name, iconSetConfigs);\n            // TODO: add an ngDevMode check\n            if (!foundIcon) {\n                throw getMatIconNameNotFoundError(name);\n            }\n            return foundIcon;\n        }));\n    }\n    /**\n     * Searches the cached SVG elements for the given icon sets for a nested icon element whose \"id\"\n     * tag matches the specified name. If found, copies the nested element to a new SVG element and\n     * returns it. Returns null if no matching element is found.\n     */\n    _extractIconWithNameFromAnySet(iconName, iconSetConfigs) {\n        // Iterate backwards, so icon sets added later have precedence.\n        for (let i = iconSetConfigs.length - 1; i >= 0; i--) {\n            const config = iconSetConfigs[i];\n            // Parsing the icon set's text into an SVG element can be expensive. We can avoid some of\n            // the parsing by doing a quick check using `indexOf` to see if there's any chance for the\n            // icon to be in the set. This won't be 100% accurate, but it should help us avoid at least\n            // some of the parsing.\n            if (config.svgText && config.svgText.toString().indexOf(iconName) > -1) {\n                const svg = this._svgElementFromConfig(config);\n                const foundIcon = this._extractSvgIconFromSet(svg, iconName, config.options);\n                if (foundIcon) {\n                    return foundIcon;\n                }\n            }\n        }\n        return null;\n    }\n    /**\n     * Loads the content of the icon URL specified in the SvgIconConfig and creates an SVG element\n     * from it.\n     */\n    _loadSvgIconFromConfig(config) {\n        return this._fetchIcon(config).pipe(tap(svgText => (config.svgText = svgText)), map(() => this._svgElementFromConfig(config)));\n    }\n    /**\n     * Loads the content of the icon set URL specified in the\n     * SvgIconConfig and attaches it to the config.\n     */\n    _loadSvgIconSetFromConfig(config) {\n        if (config.svgText) {\n            return of(null);\n        }\n        return this._fetchIcon(config).pipe(tap(svgText => (config.svgText = svgText)));\n    }\n    /**\n     * Searches the cached element of the given SvgIconConfig for a nested icon element whose \"id\"\n     * tag matches the specified name. If found, copies the nested element to a new SVG element and\n     * returns it. Returns null if no matching element is found.\n     */\n    _extractSvgIconFromSet(iconSet, iconName, options) {\n        // Use the `id=\"iconName\"` syntax in order to escape special\n        // characters in the ID (versus using the #iconName syntax).\n        const iconSource = iconSet.querySelector(`[id=\"${iconName}\"]`);\n        if (!iconSource) {\n            return null;\n        }\n        // Clone the element and remove the ID to prevent multiple elements from being added\n        // to the page with the same ID.\n        const iconElement = iconSource.cloneNode(true);\n        iconElement.removeAttribute('id');\n        // If the icon node is itself an <svg> node, clone and return it directly. If not, set it as\n        // the content of a new <svg> node.\n        if (iconElement.nodeName.toLowerCase() === 'svg') {\n            return this._setSvgAttributes(iconElement, options);\n        }\n        // If the node is a <symbol>, it won't be rendered so we have to convert it into <svg>. Note\n        // that the same could be achieved by referring to it via <use href=\"#id\">, however the <use>\n        // tag is problematic on Firefox, because it needs to include the current page path.\n        if (iconElement.nodeName.toLowerCase() === 'symbol') {\n            return this._setSvgAttributes(this._toSvgElement(iconElement), options);\n        }\n        // createElement('SVG') doesn't work as expected; the DOM ends up with\n        // the correct nodes, but the SVG content doesn't render. Instead we\n        // have to create an empty SVG node using innerHTML and append its content.\n        // Elements created using DOMParser.parseFromString have the same problem.\n        // http://stackoverflow.com/questions/23003278/svg-innerhtml-in-firefox-can-not-display\n        const svg = this._svgElementFromString(trustedHTMLFromString('<svg></svg>'));\n        // Clone the node so we don't remove it from the parent icon set element.\n        svg.appendChild(iconElement);\n        return this._setSvgAttributes(svg, options);\n    }\n    /**\n     * Creates a DOM element from the given SVG string.\n     */\n    _svgElementFromString(str) {\n        const div = this._document.createElement('DIV');\n        div.innerHTML = str;\n        const svg = div.querySelector('svg');\n        // TODO: add an ngDevMode check\n        if (!svg) {\n            throw Error('<svg> tag not found');\n        }\n        return svg;\n    }\n    /**\n     * Converts an element into an SVG node by cloning all of its children.\n     */\n    _toSvgElement(element) {\n        const svg = this._svgElementFromString(trustedHTMLFromString('<svg></svg>'));\n        const attributes = element.attributes;\n        // Copy over all the attributes from the `symbol` to the new SVG, except the id.\n        for (let i = 0; i < attributes.length; i++) {\n            const { name, value } = attributes[i];\n            if (name !== 'id') {\n                svg.setAttribute(name, value);\n            }\n        }\n        for (let i = 0; i < element.childNodes.length; i++) {\n            if (element.childNodes[i].nodeType === this._document.ELEMENT_NODE) {\n                svg.appendChild(element.childNodes[i].cloneNode(true));\n            }\n        }\n        return svg;\n    }\n    /**\n     * Sets the default attributes for an SVG element to be used as an icon.\n     */\n    _setSvgAttributes(svg, options) {\n        svg.setAttribute('fit', '');\n        svg.setAttribute('height', '100%');\n        svg.setAttribute('width', '100%');\n        svg.setAttribute('preserveAspectRatio', 'xMidYMid meet');\n        svg.setAttribute('focusable', 'false'); // Disable IE11 default behavior to make SVGs focusable.\n        if (options && options.viewBox) {\n            svg.setAttribute('viewBox', options.viewBox);\n        }\n        return svg;\n    }\n    /**\n     * Returns an Observable which produces the string contents of the given icon. Results may be\n     * cached, so future calls with the same URL may not cause another HTTP request.\n     */\n    _fetchIcon(iconConfig) {\n        var _a;\n        const { url: safeUrl, options } = iconConfig;\n        const withCredentials = (_a = options === null || options === void 0 ? void 0 : options.withCredentials) !== null && _a !== void 0 ? _a : false;\n        if (!this._httpClient) {\n            throw getMatIconNoHttpProviderError();\n        }\n        // TODO: add an ngDevMode check\n        if (safeUrl == null) {\n            throw Error(`Cannot fetch icon from URL \"${safeUrl}\".`);\n        }\n        const url = this._sanitizer.sanitize(SecurityContext.RESOURCE_URL, safeUrl);\n        // TODO: add an ngDevMode check\n        if (!url) {\n            throw getMatIconFailedToSanitizeUrlError(safeUrl);\n        }\n        // Store in-progress fetches to avoid sending a duplicate request for a URL when there is\n        // already a request in progress for that URL. It's necessary to call share() on the\n        // Observable returned by http.get() so that multiple subscribers don't cause multiple XHRs.\n        const inProgressFetch = this._inProgressUrlFetches.get(url);\n        if (inProgressFetch) {\n            return inProgressFetch;\n        }\n        const req = this._httpClient.get(url, { responseType: 'text', withCredentials }).pipe(map(svg => {\n            // Security: This SVG is fetched from a SafeResourceUrl, and is thus\n            // trusted HTML.\n            return trustedHTMLFromString(svg);\n        }), finalize(() => this._inProgressUrlFetches.delete(url)), share());\n        this._inProgressUrlFetches.set(url, req);\n        return req;\n    }\n    /**\n     * Registers an icon config by name in the specified namespace.\n     * @param namespace Namespace in which to register the icon config.\n     * @param iconName Name under which to register the config.\n     * @param config Config to be registered.\n     */\n    _addSvgIconConfig(namespace, iconName, config) {\n        this._svgIconConfigs.set(iconKey(namespace, iconName), config);\n        return this;\n    }\n    /**\n     * Registers an icon set config in the specified namespace.\n     * @param namespace Namespace in which to register the icon config.\n     * @param config Config to be registered.\n     */\n    _addSvgIconSetConfig(namespace, config) {\n        const configNamespace = this._iconSetConfigs.get(namespace);\n        if (configNamespace) {\n            configNamespace.push(config);\n        }\n        else {\n            this._iconSetConfigs.set(namespace, [config]);\n        }\n        return this;\n    }\n    /** Parses a config's text into an SVG element. */\n    _svgElementFromConfig(config) {\n        if (!config.svgElement) {\n            const svg = this._svgElementFromString(config.svgText);\n            this._setSvgAttributes(svg, config.options);\n            config.svgElement = svg;\n        }\n        return config.svgElement;\n    }\n    /** Tries to create an icon config through the registered resolver functions. */\n    _getIconConfigFromResolvers(namespace, name) {\n        for (let i = 0; i < this._resolvers.length; i++) {\n            const result = this._resolvers[i](name, namespace);\n            if (result) {\n                return isSafeUrlWithOptions(result)\n                    ? new SvgIconConfig(result.url, null, result.options)\n                    : new SvgIconConfig(result, null);\n            }\n        }\n        return undefined;\n    }\n}\nMatIconRegistry.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatIconRegistry, deps: [{ token: i1.HttpClient, optional: true }, { token: i2.DomSanitizer }, { token: DOCUMENT, optional: true }, { token: i0.ErrorHandler }], target: i0.ɵɵFactoryTarget.Injectable });\nMatIconRegistry.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatIconRegistry, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatIconRegistry, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: function () {\n        return [{ type: i1.HttpClient, decorators: [{\n                        type: Optional\n                    }] }, { type: i2.DomSanitizer }, { type: undefined, decorators: [{\n                        type: Optional\n                    }, {\n                        type: Inject,\n                        args: [DOCUMENT]\n                    }] }, { type: i0.ErrorHandler }];\n    } });\n/** @docs-private */\nfunction ICON_REGISTRY_PROVIDER_FACTORY(parentRegistry, httpClient, sanitizer, errorHandler, document) {\n    return parentRegistry || new MatIconRegistry(httpClient, sanitizer, document, errorHandler);\n}\n/** @docs-private */\nconst ICON_REGISTRY_PROVIDER = {\n    // If there is already an MatIconRegistry available, use that. Otherwise, provide a new one.\n    provide: MatIconRegistry,\n    deps: [\n        [new Optional(), new SkipSelf(), MatIconRegistry],\n        [new Optional(), HttpClient],\n        DomSanitizer,\n        ErrorHandler,\n        [new Optional(), DOCUMENT],\n    ],\n    useFactory: ICON_REGISTRY_PROVIDER_FACTORY,\n};\n/** Clones an SVGElement while preserving type information. */\nfunction cloneSvg(svg) {\n    return svg.cloneNode(true);\n}\n/** Returns the cache key to use for an icon namespace and name. */\nfunction iconKey(namespace, name) {\n    return namespace + ':' + name;\n}\nfunction isSafeUrlWithOptions(value) {\n    return !!(value.url && value.options);\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// Boilerplate for applying mixins to MatIcon.\n/** @docs-private */\nconst _MatIconBase = mixinColor(class {\n    constructor(_elementRef) {\n        this._elementRef = _elementRef;\n    }\n});\n/**\n * Injection token used to provide the current location to `MatIcon`.\n * Used to handle server-side rendering and to stub out during unit tests.\n * @docs-private\n */\nconst MAT_ICON_LOCATION = new InjectionToken('mat-icon-location', {\n    providedIn: 'root',\n    factory: MAT_ICON_LOCATION_FACTORY,\n});\n/** @docs-private */\nfunction MAT_ICON_LOCATION_FACTORY() {\n    const _document = inject(DOCUMENT);\n    const _location = _document ? _document.location : null;\n    return {\n        // Note that this needs to be a function, rather than a property, because Angular\n        // will only resolve it once, but we want the current path on each call.\n        getPathname: () => (_location ? _location.pathname + _location.search : ''),\n    };\n}\n/** SVG attributes that accept a FuncIRI (e.g. `url(<something>)`). */\nconst funcIriAttributes = [\n    'clip-path',\n    'color-profile',\n    'src',\n    'cursor',\n    'fill',\n    'filter',\n    'marker',\n    'marker-start',\n    'marker-mid',\n    'marker-end',\n    'mask',\n    'stroke',\n];\n/** Selector that can be used to find all elements that are using a `FuncIRI`. */\nconst funcIriAttributeSelector = funcIriAttributes.map(attr => `[${attr}]`).join(', ');\n/** Regex that can be used to extract the id out of a FuncIRI. */\nconst funcIriPattern = /^url\\(['\"]?#(.*?)['\"]?\\)$/;\n/**\n * Component to display an icon. It can be used in the following ways:\n *\n * - Specify the svgIcon input to load an SVG icon from a URL previously registered with the\n *   addSvgIcon, addSvgIconInNamespace, addSvgIconSet, or addSvgIconSetInNamespace methods of\n *   MatIconRegistry. If the svgIcon value contains a colon it is assumed to be in the format\n *   \"[namespace]:[name]\", if not the value will be the name of an icon in the default namespace.\n *   Examples:\n *     `<mat-icon svgIcon=\"left-arrow\"></mat-icon>\n *     <mat-icon svgIcon=\"animals:cat\"></mat-icon>`\n *\n * - Use a font ligature as an icon by putting the ligature text in the content of the `<mat-icon>`\n *   component. By default the Material icons font is used as described at\n *   http://google.github.io/material-design-icons/#icon-font-for-the-web. You can specify an\n *   alternate font by setting the fontSet input to either the CSS class to apply to use the\n *   desired font, or to an alias previously registered with MatIconRegistry.registerFontClassAlias.\n *   Examples:\n *     `<mat-icon>home</mat-icon>\n *     <mat-icon fontSet=\"myfont\">sun</mat-icon>`\n *\n * - Specify a font glyph to be included via CSS rules by setting the fontSet input to specify the\n *   font, and the fontIcon input to specify the icon. Typically the fontIcon will specify a\n *   CSS class which causes the glyph to be displayed via a :before selector, as in\n *   https://fortawesome.github.io/Font-Awesome/examples/\n *   Example:\n *     `<mat-icon fontSet=\"fa\" fontIcon=\"alarm\"></mat-icon>`\n */\nclass MatIcon extends _MatIconBase {\n    constructor(elementRef, _iconRegistry, ariaHidden, _location, _errorHandler) {\n        super(elementRef);\n        this._iconRegistry = _iconRegistry;\n        this._location = _location;\n        this._errorHandler = _errorHandler;\n        this._inline = false;\n        /** Subscription to the current in-progress SVG icon request. */\n        this._currentIconFetch = Subscription.EMPTY;\n        // If the user has not explicitly set aria-hidden, mark the icon as hidden, as this is\n        // the right thing to do for the majority of icon use-cases.\n        if (!ariaHidden) {\n            elementRef.nativeElement.setAttribute('aria-hidden', 'true');\n        }\n    }\n    /**\n     * Whether the icon should be inlined, automatically sizing the icon to match the font size of\n     * the element the icon is contained in.\n     */\n    get inline() {\n        return this._inline;\n    }\n    set inline(inline) {\n        this._inline = coerceBooleanProperty(inline);\n    }\n    /** Name of the icon in the SVG icon set. */\n    get svgIcon() {\n        return this._svgIcon;\n    }\n    set svgIcon(value) {\n        if (value !== this._svgIcon) {\n            if (value) {\n                this._updateSvgIcon(value);\n            }\n            else if (this._svgIcon) {\n                this._clearSvgElement();\n            }\n            this._svgIcon = value;\n        }\n    }\n    /** Font set that the icon is a part of. */\n    get fontSet() {\n        return this._fontSet;\n    }\n    set fontSet(value) {\n        const newValue = this._cleanupFontValue(value);\n        if (newValue !== this._fontSet) {\n            this._fontSet = newValue;\n            this._updateFontIconClasses();\n        }\n    }\n    /** Name of an icon within a font set. */\n    get fontIcon() {\n        return this._fontIcon;\n    }\n    set fontIcon(value) {\n        const newValue = this._cleanupFontValue(value);\n        if (newValue !== this._fontIcon) {\n            this._fontIcon = newValue;\n            this._updateFontIconClasses();\n        }\n    }\n    /**\n     * Splits an svgIcon binding value into its icon set and icon name components.\n     * Returns a 2-element array of [(icon set), (icon name)].\n     * The separator for the two fields is ':'. If there is no separator, an empty\n     * string is returned for the icon set and the entire value is returned for\n     * the icon name. If the argument is falsy, returns an array of two empty strings.\n     * Throws an error if the name contains two or more ':' separators.\n     * Examples:\n     *   `'social:cake' -> ['social', 'cake']\n     *   'penguin' -> ['', 'penguin']\n     *   null -> ['', '']\n     *   'a:b:c' -> (throws Error)`\n     */\n    _splitIconName(iconName) {\n        if (!iconName) {\n            return ['', ''];\n        }\n        const parts = iconName.split(':');\n        switch (parts.length) {\n            case 1:\n                return ['', parts[0]]; // Use default namespace.\n            case 2:\n                return parts;\n            default:\n                throw Error(`Invalid icon name: \"${iconName}\"`); // TODO: add an ngDevMode check\n        }\n    }\n    ngOnInit() {\n        // Update font classes because ngOnChanges won't be called if none of the inputs are present,\n        // e.g. <mat-icon>arrow</mat-icon> In this case we need to add a CSS class for the default font.\n        this._updateFontIconClasses();\n    }\n    ngAfterViewChecked() {\n        const cachedElements = this._elementsWithExternalReferences;\n        if (cachedElements && cachedElements.size) {\n            const newPath = this._location.getPathname();\n            // We need to check whether the URL has changed on each change detection since\n            // the browser doesn't have an API that will let us react on link clicks and\n            // we can't depend on the Angular router. The references need to be updated,\n            // because while most browsers don't care whether the URL is correct after\n            // the first render, Safari will break if the user navigates to a different\n            // page and the SVG isn't re-rendered.\n            if (newPath !== this._previousPath) {\n                this._previousPath = newPath;\n                this._prependPathToReferences(newPath);\n            }\n        }\n    }\n    ngOnDestroy() {\n        this._currentIconFetch.unsubscribe();\n        if (this._elementsWithExternalReferences) {\n            this._elementsWithExternalReferences.clear();\n        }\n    }\n    _usingFontIcon() {\n        return !this.svgIcon;\n    }\n    _setSvgElement(svg) {\n        this._clearSvgElement();\n        // Workaround for IE11 and Edge ignoring `style` tags inside dynamically-created SVGs.\n        // See: https://developer.microsoft.com/en-us/microsoft-edge/platform/issues/10898469/\n        // Do this before inserting the element into the DOM, in order to avoid a style recalculation.\n        const styleTags = svg.querySelectorAll('style');\n        for (let i = 0; i < styleTags.length; i++) {\n            styleTags[i].textContent += ' ';\n        }\n        // Note: we do this fix here, rather than the icon registry, because the\n        // references have to point to the URL at the time that the icon was created.\n        const path = this._location.getPathname();\n        this._previousPath = path;\n        this._cacheChildrenWithExternalReferences(svg);\n        this._prependPathToReferences(path);\n        this._elementRef.nativeElement.appendChild(svg);\n    }\n    _clearSvgElement() {\n        const layoutElement = this._elementRef.nativeElement;\n        let childCount = layoutElement.childNodes.length;\n        if (this._elementsWithExternalReferences) {\n            this._elementsWithExternalReferences.clear();\n        }\n        // Remove existing non-element child nodes and SVGs, and add the new SVG element. Note that\n        // we can't use innerHTML, because IE will throw if the element has a data binding.\n        while (childCount--) {\n            const child = layoutElement.childNodes[childCount];\n            // 1 corresponds to Node.ELEMENT_NODE. We remove all non-element nodes in order to get rid\n            // of any loose text nodes, as well as any SVG elements in order to remove any old icons.\n            if (child.nodeType !== 1 || child.nodeName.toLowerCase() === 'svg') {\n                child.remove();\n            }\n        }\n    }\n    _updateFontIconClasses() {\n        if (!this._usingFontIcon()) {\n            return;\n        }\n        const elem = this._elementRef.nativeElement;\n        const fontSetClass = this.fontSet\n            ? this._iconRegistry.classNameForFontAlias(this.fontSet)\n            : this._iconRegistry.getDefaultFontSetClass();\n        if (fontSetClass != this._previousFontSetClass) {\n            if (this._previousFontSetClass) {\n                elem.classList.remove(this._previousFontSetClass);\n            }\n            if (fontSetClass) {\n                elem.classList.add(fontSetClass);\n            }\n            this._previousFontSetClass = fontSetClass;\n        }\n        if (this.fontIcon != this._previousFontIconClass) {\n            if (this._previousFontIconClass) {\n                elem.classList.remove(this._previousFontIconClass);\n            }\n            if (this.fontIcon) {\n                elem.classList.add(this.fontIcon);\n            }\n            this._previousFontIconClass = this.fontIcon;\n        }\n    }\n    /**\n     * Cleans up a value to be used as a fontIcon or fontSet.\n     * Since the value ends up being assigned as a CSS class, we\n     * have to trim the value and omit space-separated values.\n     */\n    _cleanupFontValue(value) {\n        return typeof value === 'string' ? value.trim().split(' ')[0] : value;\n    }\n    /**\n     * Prepends the current path to all elements that have an attribute pointing to a `FuncIRI`\n     * reference. This is required because WebKit browsers require references to be prefixed with\n     * the current path, if the page has a `base` tag.\n     */\n    _prependPathToReferences(path) {\n        const elements = this._elementsWithExternalReferences;\n        if (elements) {\n            elements.forEach((attrs, element) => {\n                attrs.forEach(attr => {\n                    element.setAttribute(attr.name, `url('${path}#${attr.value}')`);\n                });\n            });\n        }\n    }\n    /**\n     * Caches the children of an SVG element that have `url()`\n     * references that we need to prefix with the current path.\n     */\n    _cacheChildrenWithExternalReferences(element) {\n        const elementsWithFuncIri = element.querySelectorAll(funcIriAttributeSelector);\n        const elements = (this._elementsWithExternalReferences =\n            this._elementsWithExternalReferences || new Map());\n        for (let i = 0; i < elementsWithFuncIri.length; i++) {\n            funcIriAttributes.forEach(attr => {\n                const elementWithReference = elementsWithFuncIri[i];\n                const value = elementWithReference.getAttribute(attr);\n                const match = value ? value.match(funcIriPattern) : null;\n                if (match) {\n                    let attributes = elements.get(elementWithReference);\n                    if (!attributes) {\n                        attributes = [];\n                        elements.set(elementWithReference, attributes);\n                    }\n                    attributes.push({ name: attr, value: match[1] });\n                }\n            });\n        }\n    }\n    /** Sets a new SVG icon with a particular name. */\n    _updateSvgIcon(rawName) {\n        this._svgNamespace = null;\n        this._svgName = null;\n        this._currentIconFetch.unsubscribe();\n        if (rawName) {\n            const [namespace, iconName] = this._splitIconName(rawName);\n            if (namespace) {\n                this._svgNamespace = namespace;\n            }\n            if (iconName) {\n                this._svgName = iconName;\n            }\n            this._currentIconFetch = this._iconRegistry\n                .getNamedSvgIcon(iconName, namespace)\n                .pipe(take(1))\n                .subscribe(svg => this._setSvgElement(svg), (err) => {\n                const errorMessage = `Error retrieving icon ${namespace}:${iconName}! ${err.message}`;\n                this._errorHandler.handleError(new Error(errorMessage));\n            });\n        }\n    }\n}\nMatIcon.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatIcon, deps: [{ token: i0.ElementRef }, { token: MatIconRegistry }, { token: 'aria-hidden', attribute: true }, { token: MAT_ICON_LOCATION }, { token: i0.ErrorHandler }], target: i0.ɵɵFactoryTarget.Component });\nMatIcon.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: MatIcon, selector: \"mat-icon\", inputs: { color: \"color\", inline: \"inline\", svgIcon: \"svgIcon\", fontSet: \"fontSet\", fontIcon: \"fontIcon\" }, host: { attributes: { \"role\": \"img\" }, properties: { \"attr.data-mat-icon-type\": \"_usingFontIcon() ? \\\"font\\\" : \\\"svg\\\"\", \"attr.data-mat-icon-name\": \"_svgName || fontIcon\", \"attr.data-mat-icon-namespace\": \"_svgNamespace || fontSet\", \"class.mat-icon-inline\": \"inline\", \"class.mat-icon-no-color\": \"color !== \\\"primary\\\" && color !== \\\"accent\\\" && color !== \\\"warn\\\"\" }, classAttribute: \"mat-icon notranslate\" }, exportAs: [\"matIcon\"], usesInheritance: true, ngImport: i0, template: '<ng-content></ng-content>', isInline: true, styles: [\".mat-icon{-webkit-user-select:none;-moz-user-select:none;user-select:none;background-repeat:no-repeat;display:inline-block;fill:currentColor;height:24px;width:24px}.mat-icon.mat-icon-inline{font-size:inherit;height:inherit;line-height:inherit;width:inherit}[dir=rtl] .mat-icon-rtl-mirror{transform:scale(-1, 1)}.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-prefix .mat-icon,.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-suffix .mat-icon{display:block}.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-prefix .mat-icon-button .mat-icon,.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-suffix .mat-icon-button .mat-icon{margin:auto}\\n\"], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatIcon, decorators: [{\n            type: Component,\n            args: [{ template: '<ng-content></ng-content>', selector: 'mat-icon', exportAs: 'matIcon', inputs: ['color'], host: {\n                        'role': 'img',\n                        'class': 'mat-icon notranslate',\n                        '[attr.data-mat-icon-type]': '_usingFontIcon() ? \"font\" : \"svg\"',\n                        '[attr.data-mat-icon-name]': '_svgName || fontIcon',\n                        '[attr.data-mat-icon-namespace]': '_svgNamespace || fontSet',\n                        '[class.mat-icon-inline]': 'inline',\n                        '[class.mat-icon-no-color]': 'color !== \"primary\" && color !== \"accent\" && color !== \"warn\"',\n                    }, encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, styles: [\".mat-icon{-webkit-user-select:none;-moz-user-select:none;user-select:none;background-repeat:no-repeat;display:inline-block;fill:currentColor;height:24px;width:24px}.mat-icon.mat-icon-inline{font-size:inherit;height:inherit;line-height:inherit;width:inherit}[dir=rtl] .mat-icon-rtl-mirror{transform:scale(-1, 1)}.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-prefix .mat-icon,.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-suffix .mat-icon{display:block}.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-prefix .mat-icon-button .mat-icon,.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-suffix .mat-icon-button .mat-icon{margin:auto}\\n\"] }]\n        }], ctorParameters: function () {\n        return [{ type: i0.ElementRef }, { type: MatIconRegistry }, { type: undefined, decorators: [{\n                        type: Attribute,\n                        args: ['aria-hidden']\n                    }] }, { type: undefined, decorators: [{\n                        type: Inject,\n                        args: [MAT_ICON_LOCATION]\n                    }] }, { type: i0.ErrorHandler }];\n    }, propDecorators: { inline: [{\n                type: Input\n            }], svgIcon: [{\n                type: Input\n            }], fontSet: [{\n                type: Input\n            }], fontIcon: [{\n                type: Input\n            }] } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass MatIconModule {\n}\nMatIconModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatIconModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nMatIconModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatIconModule, declarations: [MatIcon], imports: [MatCommonModule], exports: [MatIcon, MatCommonModule] });\nMatIconModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatIconModule, imports: [[MatCommonModule], MatCommonModule] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatIconModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [MatCommonModule],\n                    exports: [MatIcon, MatCommonModule],\n                    declarations: [MatIcon],\n                }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { ICON_REGISTRY_PROVIDER, ICON_REGISTRY_PROVIDER_FACTORY, MAT_ICON_LOCATION, MAT_ICON_LOCATION_FACTORY, MatIcon, MatIconModule, MatIconRegistry, getMatIconFailedToSanitizeLiteralError, getMatIconFailedToSanitizeUrlError, getMatIconNameNotFoundError, getMatIconNoHttpProviderError };\n","import * as i2 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { InjectionToken, Component, ViewEncapsulation, ChangeDetectionStrategy, Directive, Optional, Inject, ContentChildren, ContentChild, Input, forwardRef, EventEmitter, Output, ViewChild, Attribute, NgModule } from '@angular/core';\nimport * as i1 from '@angular/material/core';\nimport { mixinDisabled, mixinDisableRipple, setLines, MatLine, MatLineModule, MatRippleModule, MatCommonModule, MatPseudoCheckboxModule } from '@angular/material/core';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { Subject } from 'rxjs';\nimport { takeUntil, startWith } from 'rxjs/operators';\nimport * as i3 from '@angular/cdk/a11y';\nimport { FocusKeyManager } from '@angular/cdk/a11y';\nimport { SelectionModel } from '@angular/cdk/collections';\nimport { hasModifierKey, A, ENTER, SPACE, UP_ARROW, DOWN_ARROW } from '@angular/cdk/keycodes';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { MatDividerModule } from '@angular/material/divider';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// Boilerplate for applying mixins to MatList.\n/** @docs-private */\nconst _MatListBase = mixinDisabled(mixinDisableRipple(class {\n}));\n// Boilerplate for applying mixins to MatListItem.\n/** @docs-private */\nconst _MatListItemMixinBase = mixinDisableRipple(class {\n});\n/**\n * Injection token that can be used to inject instances of `MatList`. It serves as\n * alternative token to the actual `MatList` class which could cause unnecessary\n * retention of the class and its component metadata.\n */\nconst MAT_LIST = new InjectionToken('MatList');\n/**\n * Injection token that can be used to inject instances of `MatNavList`. It serves as\n * alternative token to the actual `MatNavList` class which could cause unnecessary\n * retention of the class and its component metadata.\n */\nconst MAT_NAV_LIST = new InjectionToken('MatNavList');\nclass MatNavList extends _MatListBase {\n    constructor() {\n        super(...arguments);\n        /** Emits when the state of the list changes. */\n        this._stateChanges = new Subject();\n    }\n    ngOnChanges() {\n        this._stateChanges.next();\n    }\n    ngOnDestroy() {\n        this._stateChanges.complete();\n    }\n}\nMatNavList.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatNavList, deps: null, target: i0.ɵɵFactoryTarget.Component });\nMatNavList.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: MatNavList, selector: \"mat-nav-list\", inputs: { disableRipple: \"disableRipple\", disabled: \"disabled\" }, host: { attributes: { \"role\": \"navigation\" }, classAttribute: \"mat-nav-list mat-list-base\" }, providers: [{ provide: MAT_NAV_LIST, useExisting: MatNavList }], exportAs: [\"matNavList\"], usesInheritance: true, usesOnChanges: true, ngImport: i0, template: \"<ng-content></ng-content>\\n\\n\", styles: [\".mat-subheader{display:flex;box-sizing:border-box;padding:16px;align-items:center}.mat-list-base .mat-subheader{margin:0}.mat-list-base{padding-top:8px;display:block;-webkit-tap-highlight-color:transparent}.mat-list-base .mat-subheader{height:48px;line-height:16px}.mat-list-base .mat-subheader:first-child{margin-top:-8px}.mat-list-base .mat-list-item,.mat-list-base .mat-list-option{display:block;height:48px;-webkit-tap-highlight-color:transparent;width:100%;padding:0}.mat-list-base .mat-list-item .mat-list-item-content,.mat-list-base .mat-list-option .mat-list-item-content{display:flex;flex-direction:row;align-items:center;box-sizing:border-box;padding:0 16px;position:relative;height:inherit}.mat-list-base .mat-list-item .mat-list-item-content-reverse,.mat-list-base .mat-list-option .mat-list-item-content-reverse{display:flex;align-items:center;padding:0 16px;flex-direction:row-reverse;justify-content:space-around}.mat-list-base .mat-list-item .mat-list-item-ripple,.mat-list-base .mat-list-option .mat-list-item-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.mat-list-base .mat-list-item.mat-list-item-with-avatar,.mat-list-base .mat-list-option.mat-list-item-with-avatar{height:56px}.mat-list-base .mat-list-item.mat-2-line,.mat-list-base .mat-list-option.mat-2-line{height:72px}.mat-list-base .mat-list-item.mat-3-line,.mat-list-base .mat-list-option.mat-3-line{height:88px}.mat-list-base .mat-list-item.mat-multi-line,.mat-list-base .mat-list-option.mat-multi-line{height:auto}.mat-list-base .mat-list-item.mat-multi-line .mat-list-item-content,.mat-list-base .mat-list-option.mat-multi-line .mat-list-item-content{padding-top:16px;padding-bottom:16px}.mat-list-base .mat-list-item .mat-list-text,.mat-list-base .mat-list-option .mat-list-text{display:flex;flex-direction:column;flex:auto;box-sizing:border-box;overflow:hidden;padding:0}.mat-list-base .mat-list-item .mat-list-text>*,.mat-list-base .mat-list-option .mat-list-text>*{margin:0;padding:0;font-weight:normal;font-size:inherit}.mat-list-base .mat-list-item .mat-list-text:empty,.mat-list-base .mat-list-option .mat-list-text:empty{display:none}.mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:0;padding-left:16px}[dir=rtl] .mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:0}.mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-left:0;padding-right:16px}[dir=rtl] .mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-right:0;padding-left:16px}.mat-list-base .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:16px}.mat-list-base .mat-list-item .mat-list-avatar,.mat-list-base .mat-list-option .mat-list-avatar{flex-shrink:0;width:40px;height:40px;border-radius:50%;object-fit:cover}.mat-list-base .mat-list-item .mat-list-avatar~.mat-divider-inset,.mat-list-base .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:72px;width:calc(100% - 72px)}[dir=rtl] .mat-list-base .mat-list-item .mat-list-avatar~.mat-divider-inset,[dir=rtl] .mat-list-base .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:auto;margin-right:72px}.mat-list-base .mat-list-item .mat-list-icon,.mat-list-base .mat-list-option .mat-list-icon{flex-shrink:0;width:24px;height:24px;font-size:24px;box-sizing:content-box;border-radius:50%;padding:4px}.mat-list-base .mat-list-item .mat-list-icon~.mat-divider-inset,.mat-list-base .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:64px;width:calc(100% - 64px)}[dir=rtl] .mat-list-base .mat-list-item .mat-list-icon~.mat-divider-inset,[dir=rtl] .mat-list-base .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:auto;margin-right:64px}.mat-list-base .mat-list-item .mat-divider,.mat-list-base .mat-list-option .mat-divider{position:absolute;bottom:0;left:0;width:100%;margin:0}[dir=rtl] .mat-list-base .mat-list-item .mat-divider,[dir=rtl] .mat-list-base .mat-list-option .mat-divider{margin-left:auto;margin-right:0}.mat-list-base .mat-list-item .mat-divider.mat-divider-inset,.mat-list-base .mat-list-option .mat-divider.mat-divider-inset{position:absolute}.mat-list-base[dense]{padding-top:4px;display:block}.mat-list-base[dense] .mat-subheader{height:40px;line-height:8px}.mat-list-base[dense] .mat-subheader:first-child{margin-top:-4px}.mat-list-base[dense] .mat-list-item,.mat-list-base[dense] .mat-list-option{display:block;height:40px;-webkit-tap-highlight-color:transparent;width:100%;padding:0}.mat-list-base[dense] .mat-list-item .mat-list-item-content,.mat-list-base[dense] .mat-list-option .mat-list-item-content{display:flex;flex-direction:row;align-items:center;box-sizing:border-box;padding:0 16px;position:relative;height:inherit}.mat-list-base[dense] .mat-list-item .mat-list-item-content-reverse,.mat-list-base[dense] .mat-list-option .mat-list-item-content-reverse{display:flex;align-items:center;padding:0 16px;flex-direction:row-reverse;justify-content:space-around}.mat-list-base[dense] .mat-list-item .mat-list-item-ripple,.mat-list-base[dense] .mat-list-option .mat-list-item-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar{height:48px}.mat-list-base[dense] .mat-list-item.mat-2-line,.mat-list-base[dense] .mat-list-option.mat-2-line{height:60px}.mat-list-base[dense] .mat-list-item.mat-3-line,.mat-list-base[dense] .mat-list-option.mat-3-line{height:76px}.mat-list-base[dense] .mat-list-item.mat-multi-line,.mat-list-base[dense] .mat-list-option.mat-multi-line{height:auto}.mat-list-base[dense] .mat-list-item.mat-multi-line .mat-list-item-content,.mat-list-base[dense] .mat-list-option.mat-multi-line .mat-list-item-content{padding-top:16px;padding-bottom:16px}.mat-list-base[dense] .mat-list-item .mat-list-text,.mat-list-base[dense] .mat-list-option .mat-list-text{display:flex;flex-direction:column;flex:auto;box-sizing:border-box;overflow:hidden;padding:0}.mat-list-base[dense] .mat-list-item .mat-list-text>*,.mat-list-base[dense] .mat-list-option .mat-list-text>*{margin:0;padding:0;font-weight:normal;font-size:inherit}.mat-list-base[dense] .mat-list-item .mat-list-text:empty,.mat-list-base[dense] .mat-list-option .mat-list-text:empty{display:none}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:0;padding-left:16px}[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:0}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-left:0;padding-right:16px}[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-right:0;padding-left:16px}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:16px}.mat-list-base[dense] .mat-list-item .mat-list-avatar,.mat-list-base[dense] .mat-list-option .mat-list-avatar{flex-shrink:0;width:36px;height:36px;border-radius:50%;object-fit:cover}.mat-list-base[dense] .mat-list-item .mat-list-avatar~.mat-divider-inset,.mat-list-base[dense] .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:68px;width:calc(100% - 68px)}[dir=rtl] .mat-list-base[dense] .mat-list-item .mat-list-avatar~.mat-divider-inset,[dir=rtl] .mat-list-base[dense] .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:auto;margin-right:68px}.mat-list-base[dense] .mat-list-item .mat-list-icon,.mat-list-base[dense] .mat-list-option .mat-list-icon{flex-shrink:0;width:20px;height:20px;font-size:20px;box-sizing:content-box;border-radius:50%;padding:4px}.mat-list-base[dense] .mat-list-item .mat-list-icon~.mat-divider-inset,.mat-list-base[dense] .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:60px;width:calc(100% - 60px)}[dir=rtl] .mat-list-base[dense] .mat-list-item .mat-list-icon~.mat-divider-inset,[dir=rtl] .mat-list-base[dense] .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:auto;margin-right:60px}.mat-list-base[dense] .mat-list-item .mat-divider,.mat-list-base[dense] .mat-list-option .mat-divider{position:absolute;bottom:0;left:0;width:100%;margin:0}[dir=rtl] .mat-list-base[dense] .mat-list-item .mat-divider,[dir=rtl] .mat-list-base[dense] .mat-list-option .mat-divider{margin-left:auto;margin-right:0}.mat-list-base[dense] .mat-list-item .mat-divider.mat-divider-inset,.mat-list-base[dense] .mat-list-option .mat-divider.mat-divider-inset{position:absolute}.mat-nav-list a{text-decoration:none;color:inherit}.mat-nav-list .mat-list-item{cursor:pointer;outline:none}mat-action-list button{background:none;color:inherit;border:none;font:inherit;outline:inherit;-webkit-tap-highlight-color:transparent;text-align:left}[dir=rtl] mat-action-list button{text-align:right}mat-action-list button::-moz-focus-inner{border:0}mat-action-list .mat-list-item{cursor:pointer;outline:inherit}.mat-list-option:not(.mat-list-item-disabled){cursor:pointer;outline:none}.mat-list-item-disabled{pointer-events:none}.cdk-high-contrast-active .mat-list-item-disabled{opacity:.5}.cdk-high-contrast-active :host .mat-list-item-disabled{opacity:.5}.cdk-high-contrast-active .mat-selection-list:focus{outline-style:dotted}.cdk-high-contrast-active .mat-list-option:hover,.cdk-high-contrast-active .mat-list-option:focus,.cdk-high-contrast-active .mat-nav-list .mat-list-item:hover,.cdk-high-contrast-active .mat-nav-list .mat-list-item:focus,.cdk-high-contrast-active mat-action-list .mat-list-item:hover,.cdk-high-contrast-active mat-action-list .mat-list-item:focus{outline:dotted 1px;z-index:1}.cdk-high-contrast-active .mat-list-single-selected-option::after{content:\\\"\\\";position:absolute;top:50%;right:16px;transform:translateY(-50%);width:10px;height:0;border-bottom:solid 10px;border-radius:10px}.cdk-high-contrast-active [dir=rtl] .mat-list-single-selected-option::after{right:auto;left:16px}@media(hover: none){.mat-list-option:not(.mat-list-single-selected-option):not(.mat-list-item-disabled):hover,.mat-nav-list .mat-list-item:not(.mat-list-item-disabled):hover,.mat-action-list .mat-list-item:not(.mat-list-item-disabled):hover{background:none}}\\n\"], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatNavList, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-nav-list', exportAs: 'matNavList', host: {\n                        'role': 'navigation',\n                        'class': 'mat-nav-list mat-list-base',\n                    }, inputs: ['disableRipple', 'disabled'], encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, providers: [{ provide: MAT_NAV_LIST, useExisting: MatNavList }], template: \"<ng-content></ng-content>\\n\\n\", styles: [\".mat-subheader{display:flex;box-sizing:border-box;padding:16px;align-items:center}.mat-list-base .mat-subheader{margin:0}.mat-list-base{padding-top:8px;display:block;-webkit-tap-highlight-color:transparent}.mat-list-base .mat-subheader{height:48px;line-height:16px}.mat-list-base .mat-subheader:first-child{margin-top:-8px}.mat-list-base .mat-list-item,.mat-list-base .mat-list-option{display:block;height:48px;-webkit-tap-highlight-color:transparent;width:100%;padding:0}.mat-list-base .mat-list-item .mat-list-item-content,.mat-list-base .mat-list-option .mat-list-item-content{display:flex;flex-direction:row;align-items:center;box-sizing:border-box;padding:0 16px;position:relative;height:inherit}.mat-list-base .mat-list-item .mat-list-item-content-reverse,.mat-list-base .mat-list-option .mat-list-item-content-reverse{display:flex;align-items:center;padding:0 16px;flex-direction:row-reverse;justify-content:space-around}.mat-list-base .mat-list-item .mat-list-item-ripple,.mat-list-base .mat-list-option .mat-list-item-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.mat-list-base .mat-list-item.mat-list-item-with-avatar,.mat-list-base .mat-list-option.mat-list-item-with-avatar{height:56px}.mat-list-base .mat-list-item.mat-2-line,.mat-list-base .mat-list-option.mat-2-line{height:72px}.mat-list-base .mat-list-item.mat-3-line,.mat-list-base .mat-list-option.mat-3-line{height:88px}.mat-list-base .mat-list-item.mat-multi-line,.mat-list-base .mat-list-option.mat-multi-line{height:auto}.mat-list-base .mat-list-item.mat-multi-line .mat-list-item-content,.mat-list-base .mat-list-option.mat-multi-line .mat-list-item-content{padding-top:16px;padding-bottom:16px}.mat-list-base .mat-list-item .mat-list-text,.mat-list-base .mat-list-option .mat-list-text{display:flex;flex-direction:column;flex:auto;box-sizing:border-box;overflow:hidden;padding:0}.mat-list-base .mat-list-item .mat-list-text>*,.mat-list-base .mat-list-option .mat-list-text>*{margin:0;padding:0;font-weight:normal;font-size:inherit}.mat-list-base .mat-list-item .mat-list-text:empty,.mat-list-base .mat-list-option .mat-list-text:empty{display:none}.mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:0;padding-left:16px}[dir=rtl] .mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:0}.mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-left:0;padding-right:16px}[dir=rtl] .mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-right:0;padding-left:16px}.mat-list-base .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:16px}.mat-list-base .mat-list-item .mat-list-avatar,.mat-list-base .mat-list-option .mat-list-avatar{flex-shrink:0;width:40px;height:40px;border-radius:50%;object-fit:cover}.mat-list-base .mat-list-item .mat-list-avatar~.mat-divider-inset,.mat-list-base .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:72px;width:calc(100% - 72px)}[dir=rtl] .mat-list-base .mat-list-item .mat-list-avatar~.mat-divider-inset,[dir=rtl] .mat-list-base .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:auto;margin-right:72px}.mat-list-base .mat-list-item .mat-list-icon,.mat-list-base .mat-list-option .mat-list-icon{flex-shrink:0;width:24px;height:24px;font-size:24px;box-sizing:content-box;border-radius:50%;padding:4px}.mat-list-base .mat-list-item .mat-list-icon~.mat-divider-inset,.mat-list-base .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:64px;width:calc(100% - 64px)}[dir=rtl] .mat-list-base .mat-list-item .mat-list-icon~.mat-divider-inset,[dir=rtl] .mat-list-base .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:auto;margin-right:64px}.mat-list-base .mat-list-item .mat-divider,.mat-list-base .mat-list-option .mat-divider{position:absolute;bottom:0;left:0;width:100%;margin:0}[dir=rtl] .mat-list-base .mat-list-item .mat-divider,[dir=rtl] .mat-list-base .mat-list-option .mat-divider{margin-left:auto;margin-right:0}.mat-list-base .mat-list-item .mat-divider.mat-divider-inset,.mat-list-base .mat-list-option .mat-divider.mat-divider-inset{position:absolute}.mat-list-base[dense]{padding-top:4px;display:block}.mat-list-base[dense] .mat-subheader{height:40px;line-height:8px}.mat-list-base[dense] .mat-subheader:first-child{margin-top:-4px}.mat-list-base[dense] .mat-list-item,.mat-list-base[dense] .mat-list-option{display:block;height:40px;-webkit-tap-highlight-color:transparent;width:100%;padding:0}.mat-list-base[dense] .mat-list-item .mat-list-item-content,.mat-list-base[dense] .mat-list-option .mat-list-item-content{display:flex;flex-direction:row;align-items:center;box-sizing:border-box;padding:0 16px;position:relative;height:inherit}.mat-list-base[dense] .mat-list-item .mat-list-item-content-reverse,.mat-list-base[dense] .mat-list-option .mat-list-item-content-reverse{display:flex;align-items:center;padding:0 16px;flex-direction:row-reverse;justify-content:space-around}.mat-list-base[dense] .mat-list-item .mat-list-item-ripple,.mat-list-base[dense] .mat-list-option .mat-list-item-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar{height:48px}.mat-list-base[dense] .mat-list-item.mat-2-line,.mat-list-base[dense] .mat-list-option.mat-2-line{height:60px}.mat-list-base[dense] .mat-list-item.mat-3-line,.mat-list-base[dense] .mat-list-option.mat-3-line{height:76px}.mat-list-base[dense] .mat-list-item.mat-multi-line,.mat-list-base[dense] .mat-list-option.mat-multi-line{height:auto}.mat-list-base[dense] .mat-list-item.mat-multi-line .mat-list-item-content,.mat-list-base[dense] .mat-list-option.mat-multi-line .mat-list-item-content{padding-top:16px;padding-bottom:16px}.mat-list-base[dense] .mat-list-item .mat-list-text,.mat-list-base[dense] .mat-list-option .mat-list-text{display:flex;flex-direction:column;flex:auto;box-sizing:border-box;overflow:hidden;padding:0}.mat-list-base[dense] .mat-list-item .mat-list-text>*,.mat-list-base[dense] .mat-list-option .mat-list-text>*{margin:0;padding:0;font-weight:normal;font-size:inherit}.mat-list-base[dense] .mat-list-item .mat-list-text:empty,.mat-list-base[dense] .mat-list-option .mat-list-text:empty{display:none}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:0;padding-left:16px}[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:0}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-left:0;padding-right:16px}[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-right:0;padding-left:16px}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:16px}.mat-list-base[dense] .mat-list-item .mat-list-avatar,.mat-list-base[dense] .mat-list-option .mat-list-avatar{flex-shrink:0;width:36px;height:36px;border-radius:50%;object-fit:cover}.mat-list-base[dense] .mat-list-item .mat-list-avatar~.mat-divider-inset,.mat-list-base[dense] .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:68px;width:calc(100% - 68px)}[dir=rtl] .mat-list-base[dense] .mat-list-item .mat-list-avatar~.mat-divider-inset,[dir=rtl] .mat-list-base[dense] .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:auto;margin-right:68px}.mat-list-base[dense] .mat-list-item .mat-list-icon,.mat-list-base[dense] .mat-list-option .mat-list-icon{flex-shrink:0;width:20px;height:20px;font-size:20px;box-sizing:content-box;border-radius:50%;padding:4px}.mat-list-base[dense] .mat-list-item .mat-list-icon~.mat-divider-inset,.mat-list-base[dense] .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:60px;width:calc(100% - 60px)}[dir=rtl] .mat-list-base[dense] .mat-list-item .mat-list-icon~.mat-divider-inset,[dir=rtl] .mat-list-base[dense] .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:auto;margin-right:60px}.mat-list-base[dense] .mat-list-item .mat-divider,.mat-list-base[dense] .mat-list-option .mat-divider{position:absolute;bottom:0;left:0;width:100%;margin:0}[dir=rtl] .mat-list-base[dense] .mat-list-item .mat-divider,[dir=rtl] .mat-list-base[dense] .mat-list-option .mat-divider{margin-left:auto;margin-right:0}.mat-list-base[dense] .mat-list-item .mat-divider.mat-divider-inset,.mat-list-base[dense] .mat-list-option .mat-divider.mat-divider-inset{position:absolute}.mat-nav-list a{text-decoration:none;color:inherit}.mat-nav-list .mat-list-item{cursor:pointer;outline:none}mat-action-list button{background:none;color:inherit;border:none;font:inherit;outline:inherit;-webkit-tap-highlight-color:transparent;text-align:left}[dir=rtl] mat-action-list button{text-align:right}mat-action-list button::-moz-focus-inner{border:0}mat-action-list .mat-list-item{cursor:pointer;outline:inherit}.mat-list-option:not(.mat-list-item-disabled){cursor:pointer;outline:none}.mat-list-item-disabled{pointer-events:none}.cdk-high-contrast-active .mat-list-item-disabled{opacity:.5}.cdk-high-contrast-active :host .mat-list-item-disabled{opacity:.5}.cdk-high-contrast-active .mat-selection-list:focus{outline-style:dotted}.cdk-high-contrast-active .mat-list-option:hover,.cdk-high-contrast-active .mat-list-option:focus,.cdk-high-contrast-active .mat-nav-list .mat-list-item:hover,.cdk-high-contrast-active .mat-nav-list .mat-list-item:focus,.cdk-high-contrast-active mat-action-list .mat-list-item:hover,.cdk-high-contrast-active mat-action-list .mat-list-item:focus{outline:dotted 1px;z-index:1}.cdk-high-contrast-active .mat-list-single-selected-option::after{content:\\\"\\\";position:absolute;top:50%;right:16px;transform:translateY(-50%);width:10px;height:0;border-bottom:solid 10px;border-radius:10px}.cdk-high-contrast-active [dir=rtl] .mat-list-single-selected-option::after{right:auto;left:16px}@media(hover: none){.mat-list-option:not(.mat-list-single-selected-option):not(.mat-list-item-disabled):hover,.mat-nav-list .mat-list-item:not(.mat-list-item-disabled):hover,.mat-action-list .mat-list-item:not(.mat-list-item-disabled):hover{background:none}}\\n\"] }]\n        }] });\nclass MatList extends _MatListBase {\n    constructor(_elementRef) {\n        super();\n        this._elementRef = _elementRef;\n        /** Emits when the state of the list changes. */\n        this._stateChanges = new Subject();\n        if (this._getListType() === 'action-list') {\n            _elementRef.nativeElement.classList.add('mat-action-list');\n        }\n    }\n    _getListType() {\n        const nodeName = this._elementRef.nativeElement.nodeName.toLowerCase();\n        if (nodeName === 'mat-list') {\n            return 'list';\n        }\n        if (nodeName === 'mat-action-list') {\n            return 'action-list';\n        }\n        return null;\n    }\n    ngOnChanges() {\n        this._stateChanges.next();\n    }\n    ngOnDestroy() {\n        this._stateChanges.complete();\n    }\n}\nMatList.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatList, deps: [{ token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Component });\nMatList.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: MatList, selector: \"mat-list, mat-action-list\", inputs: { disableRipple: \"disableRipple\", disabled: \"disabled\" }, host: { classAttribute: \"mat-list mat-list-base\" }, providers: [{ provide: MAT_LIST, useExisting: MatList }], exportAs: [\"matList\"], usesInheritance: true, usesOnChanges: true, ngImport: i0, template: \"<ng-content></ng-content>\\n\\n\", styles: [\".mat-subheader{display:flex;box-sizing:border-box;padding:16px;align-items:center}.mat-list-base .mat-subheader{margin:0}.mat-list-base{padding-top:8px;display:block;-webkit-tap-highlight-color:transparent}.mat-list-base .mat-subheader{height:48px;line-height:16px}.mat-list-base .mat-subheader:first-child{margin-top:-8px}.mat-list-base .mat-list-item,.mat-list-base .mat-list-option{display:block;height:48px;-webkit-tap-highlight-color:transparent;width:100%;padding:0}.mat-list-base .mat-list-item .mat-list-item-content,.mat-list-base .mat-list-option .mat-list-item-content{display:flex;flex-direction:row;align-items:center;box-sizing:border-box;padding:0 16px;position:relative;height:inherit}.mat-list-base .mat-list-item .mat-list-item-content-reverse,.mat-list-base .mat-list-option .mat-list-item-content-reverse{display:flex;align-items:center;padding:0 16px;flex-direction:row-reverse;justify-content:space-around}.mat-list-base .mat-list-item .mat-list-item-ripple,.mat-list-base .mat-list-option .mat-list-item-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.mat-list-base .mat-list-item.mat-list-item-with-avatar,.mat-list-base .mat-list-option.mat-list-item-with-avatar{height:56px}.mat-list-base .mat-list-item.mat-2-line,.mat-list-base .mat-list-option.mat-2-line{height:72px}.mat-list-base .mat-list-item.mat-3-line,.mat-list-base .mat-list-option.mat-3-line{height:88px}.mat-list-base .mat-list-item.mat-multi-line,.mat-list-base .mat-list-option.mat-multi-line{height:auto}.mat-list-base .mat-list-item.mat-multi-line .mat-list-item-content,.mat-list-base .mat-list-option.mat-multi-line .mat-list-item-content{padding-top:16px;padding-bottom:16px}.mat-list-base .mat-list-item .mat-list-text,.mat-list-base .mat-list-option .mat-list-text{display:flex;flex-direction:column;flex:auto;box-sizing:border-box;overflow:hidden;padding:0}.mat-list-base .mat-list-item .mat-list-text>*,.mat-list-base .mat-list-option .mat-list-text>*{margin:0;padding:0;font-weight:normal;font-size:inherit}.mat-list-base .mat-list-item .mat-list-text:empty,.mat-list-base .mat-list-option .mat-list-text:empty{display:none}.mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:0;padding-left:16px}[dir=rtl] .mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:0}.mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-left:0;padding-right:16px}[dir=rtl] .mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-right:0;padding-left:16px}.mat-list-base .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:16px}.mat-list-base .mat-list-item .mat-list-avatar,.mat-list-base .mat-list-option .mat-list-avatar{flex-shrink:0;width:40px;height:40px;border-radius:50%;object-fit:cover}.mat-list-base .mat-list-item .mat-list-avatar~.mat-divider-inset,.mat-list-base .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:72px;width:calc(100% - 72px)}[dir=rtl] .mat-list-base .mat-list-item .mat-list-avatar~.mat-divider-inset,[dir=rtl] .mat-list-base .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:auto;margin-right:72px}.mat-list-base .mat-list-item .mat-list-icon,.mat-list-base .mat-list-option .mat-list-icon{flex-shrink:0;width:24px;height:24px;font-size:24px;box-sizing:content-box;border-radius:50%;padding:4px}.mat-list-base .mat-list-item .mat-list-icon~.mat-divider-inset,.mat-list-base .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:64px;width:calc(100% - 64px)}[dir=rtl] .mat-list-base .mat-list-item .mat-list-icon~.mat-divider-inset,[dir=rtl] .mat-list-base .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:auto;margin-right:64px}.mat-list-base .mat-list-item .mat-divider,.mat-list-base .mat-list-option .mat-divider{position:absolute;bottom:0;left:0;width:100%;margin:0}[dir=rtl] .mat-list-base .mat-list-item .mat-divider,[dir=rtl] .mat-list-base .mat-list-option .mat-divider{margin-left:auto;margin-right:0}.mat-list-base .mat-list-item .mat-divider.mat-divider-inset,.mat-list-base .mat-list-option .mat-divider.mat-divider-inset{position:absolute}.mat-list-base[dense]{padding-top:4px;display:block}.mat-list-base[dense] .mat-subheader{height:40px;line-height:8px}.mat-list-base[dense] .mat-subheader:first-child{margin-top:-4px}.mat-list-base[dense] .mat-list-item,.mat-list-base[dense] .mat-list-option{display:block;height:40px;-webkit-tap-highlight-color:transparent;width:100%;padding:0}.mat-list-base[dense] .mat-list-item .mat-list-item-content,.mat-list-base[dense] .mat-list-option .mat-list-item-content{display:flex;flex-direction:row;align-items:center;box-sizing:border-box;padding:0 16px;position:relative;height:inherit}.mat-list-base[dense] .mat-list-item .mat-list-item-content-reverse,.mat-list-base[dense] .mat-list-option .mat-list-item-content-reverse{display:flex;align-items:center;padding:0 16px;flex-direction:row-reverse;justify-content:space-around}.mat-list-base[dense] .mat-list-item .mat-list-item-ripple,.mat-list-base[dense] .mat-list-option .mat-list-item-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar{height:48px}.mat-list-base[dense] .mat-list-item.mat-2-line,.mat-list-base[dense] .mat-list-option.mat-2-line{height:60px}.mat-list-base[dense] .mat-list-item.mat-3-line,.mat-list-base[dense] .mat-list-option.mat-3-line{height:76px}.mat-list-base[dense] .mat-list-item.mat-multi-line,.mat-list-base[dense] .mat-list-option.mat-multi-line{height:auto}.mat-list-base[dense] .mat-list-item.mat-multi-line .mat-list-item-content,.mat-list-base[dense] .mat-list-option.mat-multi-line .mat-list-item-content{padding-top:16px;padding-bottom:16px}.mat-list-base[dense] .mat-list-item .mat-list-text,.mat-list-base[dense] .mat-list-option .mat-list-text{display:flex;flex-direction:column;flex:auto;box-sizing:border-box;overflow:hidden;padding:0}.mat-list-base[dense] .mat-list-item .mat-list-text>*,.mat-list-base[dense] .mat-list-option .mat-list-text>*{margin:0;padding:0;font-weight:normal;font-size:inherit}.mat-list-base[dense] .mat-list-item .mat-list-text:empty,.mat-list-base[dense] .mat-list-option .mat-list-text:empty{display:none}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:0;padding-left:16px}[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:0}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-left:0;padding-right:16px}[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-right:0;padding-left:16px}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:16px}.mat-list-base[dense] .mat-list-item .mat-list-avatar,.mat-list-base[dense] .mat-list-option .mat-list-avatar{flex-shrink:0;width:36px;height:36px;border-radius:50%;object-fit:cover}.mat-list-base[dense] .mat-list-item .mat-list-avatar~.mat-divider-inset,.mat-list-base[dense] .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:68px;width:calc(100% - 68px)}[dir=rtl] .mat-list-base[dense] .mat-list-item .mat-list-avatar~.mat-divider-inset,[dir=rtl] .mat-list-base[dense] .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:auto;margin-right:68px}.mat-list-base[dense] .mat-list-item .mat-list-icon,.mat-list-base[dense] .mat-list-option .mat-list-icon{flex-shrink:0;width:20px;height:20px;font-size:20px;box-sizing:content-box;border-radius:50%;padding:4px}.mat-list-base[dense] .mat-list-item .mat-list-icon~.mat-divider-inset,.mat-list-base[dense] .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:60px;width:calc(100% - 60px)}[dir=rtl] .mat-list-base[dense] .mat-list-item .mat-list-icon~.mat-divider-inset,[dir=rtl] .mat-list-base[dense] .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:auto;margin-right:60px}.mat-list-base[dense] .mat-list-item .mat-divider,.mat-list-base[dense] .mat-list-option .mat-divider{position:absolute;bottom:0;left:0;width:100%;margin:0}[dir=rtl] .mat-list-base[dense] .mat-list-item .mat-divider,[dir=rtl] .mat-list-base[dense] .mat-list-option .mat-divider{margin-left:auto;margin-right:0}.mat-list-base[dense] .mat-list-item .mat-divider.mat-divider-inset,.mat-list-base[dense] .mat-list-option .mat-divider.mat-divider-inset{position:absolute}.mat-nav-list a{text-decoration:none;color:inherit}.mat-nav-list .mat-list-item{cursor:pointer;outline:none}mat-action-list button{background:none;color:inherit;border:none;font:inherit;outline:inherit;-webkit-tap-highlight-color:transparent;text-align:left}[dir=rtl] mat-action-list button{text-align:right}mat-action-list button::-moz-focus-inner{border:0}mat-action-list .mat-list-item{cursor:pointer;outline:inherit}.mat-list-option:not(.mat-list-item-disabled){cursor:pointer;outline:none}.mat-list-item-disabled{pointer-events:none}.cdk-high-contrast-active .mat-list-item-disabled{opacity:.5}.cdk-high-contrast-active :host .mat-list-item-disabled{opacity:.5}.cdk-high-contrast-active .mat-selection-list:focus{outline-style:dotted}.cdk-high-contrast-active .mat-list-option:hover,.cdk-high-contrast-active .mat-list-option:focus,.cdk-high-contrast-active .mat-nav-list .mat-list-item:hover,.cdk-high-contrast-active .mat-nav-list .mat-list-item:focus,.cdk-high-contrast-active mat-action-list .mat-list-item:hover,.cdk-high-contrast-active mat-action-list .mat-list-item:focus{outline:dotted 1px;z-index:1}.cdk-high-contrast-active .mat-list-single-selected-option::after{content:\\\"\\\";position:absolute;top:50%;right:16px;transform:translateY(-50%);width:10px;height:0;border-bottom:solid 10px;border-radius:10px}.cdk-high-contrast-active [dir=rtl] .mat-list-single-selected-option::after{right:auto;left:16px}@media(hover: none){.mat-list-option:not(.mat-list-single-selected-option):not(.mat-list-item-disabled):hover,.mat-nav-list .mat-list-item:not(.mat-list-item-disabled):hover,.mat-action-list .mat-list-item:not(.mat-list-item-disabled):hover{background:none}}\\n\"], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatList, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-list, mat-action-list', exportAs: 'matList', host: {\n                        'class': 'mat-list mat-list-base',\n                    }, inputs: ['disableRipple', 'disabled'], encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, providers: [{ provide: MAT_LIST, useExisting: MatList }], template: \"<ng-content></ng-content>\\n\\n\", styles: [\".mat-subheader{display:flex;box-sizing:border-box;padding:16px;align-items:center}.mat-list-base .mat-subheader{margin:0}.mat-list-base{padding-top:8px;display:block;-webkit-tap-highlight-color:transparent}.mat-list-base .mat-subheader{height:48px;line-height:16px}.mat-list-base .mat-subheader:first-child{margin-top:-8px}.mat-list-base .mat-list-item,.mat-list-base .mat-list-option{display:block;height:48px;-webkit-tap-highlight-color:transparent;width:100%;padding:0}.mat-list-base .mat-list-item .mat-list-item-content,.mat-list-base .mat-list-option .mat-list-item-content{display:flex;flex-direction:row;align-items:center;box-sizing:border-box;padding:0 16px;position:relative;height:inherit}.mat-list-base .mat-list-item .mat-list-item-content-reverse,.mat-list-base .mat-list-option .mat-list-item-content-reverse{display:flex;align-items:center;padding:0 16px;flex-direction:row-reverse;justify-content:space-around}.mat-list-base .mat-list-item .mat-list-item-ripple,.mat-list-base .mat-list-option .mat-list-item-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.mat-list-base .mat-list-item.mat-list-item-with-avatar,.mat-list-base .mat-list-option.mat-list-item-with-avatar{height:56px}.mat-list-base .mat-list-item.mat-2-line,.mat-list-base .mat-list-option.mat-2-line{height:72px}.mat-list-base .mat-list-item.mat-3-line,.mat-list-base .mat-list-option.mat-3-line{height:88px}.mat-list-base .mat-list-item.mat-multi-line,.mat-list-base .mat-list-option.mat-multi-line{height:auto}.mat-list-base .mat-list-item.mat-multi-line .mat-list-item-content,.mat-list-base .mat-list-option.mat-multi-line .mat-list-item-content{padding-top:16px;padding-bottom:16px}.mat-list-base .mat-list-item .mat-list-text,.mat-list-base .mat-list-option .mat-list-text{display:flex;flex-direction:column;flex:auto;box-sizing:border-box;overflow:hidden;padding:0}.mat-list-base .mat-list-item .mat-list-text>*,.mat-list-base .mat-list-option .mat-list-text>*{margin:0;padding:0;font-weight:normal;font-size:inherit}.mat-list-base .mat-list-item .mat-list-text:empty,.mat-list-base .mat-list-option .mat-list-text:empty{display:none}.mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:0;padding-left:16px}[dir=rtl] .mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:0}.mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-left:0;padding-right:16px}[dir=rtl] .mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-right:0;padding-left:16px}.mat-list-base .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:16px}.mat-list-base .mat-list-item .mat-list-avatar,.mat-list-base .mat-list-option .mat-list-avatar{flex-shrink:0;width:40px;height:40px;border-radius:50%;object-fit:cover}.mat-list-base .mat-list-item .mat-list-avatar~.mat-divider-inset,.mat-list-base .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:72px;width:calc(100% - 72px)}[dir=rtl] .mat-list-base .mat-list-item .mat-list-avatar~.mat-divider-inset,[dir=rtl] .mat-list-base .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:auto;margin-right:72px}.mat-list-base .mat-list-item .mat-list-icon,.mat-list-base .mat-list-option .mat-list-icon{flex-shrink:0;width:24px;height:24px;font-size:24px;box-sizing:content-box;border-radius:50%;padding:4px}.mat-list-base .mat-list-item .mat-list-icon~.mat-divider-inset,.mat-list-base .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:64px;width:calc(100% - 64px)}[dir=rtl] .mat-list-base .mat-list-item .mat-list-icon~.mat-divider-inset,[dir=rtl] .mat-list-base .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:auto;margin-right:64px}.mat-list-base .mat-list-item .mat-divider,.mat-list-base .mat-list-option .mat-divider{position:absolute;bottom:0;left:0;width:100%;margin:0}[dir=rtl] .mat-list-base .mat-list-item .mat-divider,[dir=rtl] .mat-list-base .mat-list-option .mat-divider{margin-left:auto;margin-right:0}.mat-list-base .mat-list-item .mat-divider.mat-divider-inset,.mat-list-base .mat-list-option .mat-divider.mat-divider-inset{position:absolute}.mat-list-base[dense]{padding-top:4px;display:block}.mat-list-base[dense] .mat-subheader{height:40px;line-height:8px}.mat-list-base[dense] .mat-subheader:first-child{margin-top:-4px}.mat-list-base[dense] .mat-list-item,.mat-list-base[dense] .mat-list-option{display:block;height:40px;-webkit-tap-highlight-color:transparent;width:100%;padding:0}.mat-list-base[dense] .mat-list-item .mat-list-item-content,.mat-list-base[dense] .mat-list-option .mat-list-item-content{display:flex;flex-direction:row;align-items:center;box-sizing:border-box;padding:0 16px;position:relative;height:inherit}.mat-list-base[dense] .mat-list-item .mat-list-item-content-reverse,.mat-list-base[dense] .mat-list-option .mat-list-item-content-reverse{display:flex;align-items:center;padding:0 16px;flex-direction:row-reverse;justify-content:space-around}.mat-list-base[dense] .mat-list-item .mat-list-item-ripple,.mat-list-base[dense] .mat-list-option .mat-list-item-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar{height:48px}.mat-list-base[dense] .mat-list-item.mat-2-line,.mat-list-base[dense] .mat-list-option.mat-2-line{height:60px}.mat-list-base[dense] .mat-list-item.mat-3-line,.mat-list-base[dense] .mat-list-option.mat-3-line{height:76px}.mat-list-base[dense] .mat-list-item.mat-multi-line,.mat-list-base[dense] .mat-list-option.mat-multi-line{height:auto}.mat-list-base[dense] .mat-list-item.mat-multi-line .mat-list-item-content,.mat-list-base[dense] .mat-list-option.mat-multi-line .mat-list-item-content{padding-top:16px;padding-bottom:16px}.mat-list-base[dense] .mat-list-item .mat-list-text,.mat-list-base[dense] .mat-list-option .mat-list-text{display:flex;flex-direction:column;flex:auto;box-sizing:border-box;overflow:hidden;padding:0}.mat-list-base[dense] .mat-list-item .mat-list-text>*,.mat-list-base[dense] .mat-list-option .mat-list-text>*{margin:0;padding:0;font-weight:normal;font-size:inherit}.mat-list-base[dense] .mat-list-item .mat-list-text:empty,.mat-list-base[dense] .mat-list-option .mat-list-text:empty{display:none}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:0;padding-left:16px}[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:0}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-left:0;padding-right:16px}[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-right:0;padding-left:16px}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:16px}.mat-list-base[dense] .mat-list-item .mat-list-avatar,.mat-list-base[dense] .mat-list-option .mat-list-avatar{flex-shrink:0;width:36px;height:36px;border-radius:50%;object-fit:cover}.mat-list-base[dense] .mat-list-item .mat-list-avatar~.mat-divider-inset,.mat-list-base[dense] .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:68px;width:calc(100% - 68px)}[dir=rtl] .mat-list-base[dense] .mat-list-item .mat-list-avatar~.mat-divider-inset,[dir=rtl] .mat-list-base[dense] .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:auto;margin-right:68px}.mat-list-base[dense] .mat-list-item .mat-list-icon,.mat-list-base[dense] .mat-list-option .mat-list-icon{flex-shrink:0;width:20px;height:20px;font-size:20px;box-sizing:content-box;border-radius:50%;padding:4px}.mat-list-base[dense] .mat-list-item .mat-list-icon~.mat-divider-inset,.mat-list-base[dense] .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:60px;width:calc(100% - 60px)}[dir=rtl] .mat-list-base[dense] .mat-list-item .mat-list-icon~.mat-divider-inset,[dir=rtl] .mat-list-base[dense] .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:auto;margin-right:60px}.mat-list-base[dense] .mat-list-item .mat-divider,.mat-list-base[dense] .mat-list-option .mat-divider{position:absolute;bottom:0;left:0;width:100%;margin:0}[dir=rtl] .mat-list-base[dense] .mat-list-item .mat-divider,[dir=rtl] .mat-list-base[dense] .mat-list-option .mat-divider{margin-left:auto;margin-right:0}.mat-list-base[dense] .mat-list-item .mat-divider.mat-divider-inset,.mat-list-base[dense] .mat-list-option .mat-divider.mat-divider-inset{position:absolute}.mat-nav-list a{text-decoration:none;color:inherit}.mat-nav-list .mat-list-item{cursor:pointer;outline:none}mat-action-list button{background:none;color:inherit;border:none;font:inherit;outline:inherit;-webkit-tap-highlight-color:transparent;text-align:left}[dir=rtl] mat-action-list button{text-align:right}mat-action-list button::-moz-focus-inner{border:0}mat-action-list .mat-list-item{cursor:pointer;outline:inherit}.mat-list-option:not(.mat-list-item-disabled){cursor:pointer;outline:none}.mat-list-item-disabled{pointer-events:none}.cdk-high-contrast-active .mat-list-item-disabled{opacity:.5}.cdk-high-contrast-active :host .mat-list-item-disabled{opacity:.5}.cdk-high-contrast-active .mat-selection-list:focus{outline-style:dotted}.cdk-high-contrast-active .mat-list-option:hover,.cdk-high-contrast-active .mat-list-option:focus,.cdk-high-contrast-active .mat-nav-list .mat-list-item:hover,.cdk-high-contrast-active .mat-nav-list .mat-list-item:focus,.cdk-high-contrast-active mat-action-list .mat-list-item:hover,.cdk-high-contrast-active mat-action-list .mat-list-item:focus{outline:dotted 1px;z-index:1}.cdk-high-contrast-active .mat-list-single-selected-option::after{content:\\\"\\\";position:absolute;top:50%;right:16px;transform:translateY(-50%);width:10px;height:0;border-bottom:solid 10px;border-radius:10px}.cdk-high-contrast-active [dir=rtl] .mat-list-single-selected-option::after{right:auto;left:16px}@media(hover: none){.mat-list-option:not(.mat-list-single-selected-option):not(.mat-list-item-disabled):hover,.mat-nav-list .mat-list-item:not(.mat-list-item-disabled):hover,.mat-action-list .mat-list-item:not(.mat-list-item-disabled):hover{background:none}}\\n\"] }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }]; } });\n/**\n * Directive whose purpose is to add the mat- CSS styling to this selector.\n * @docs-private\n */\nclass MatListAvatarCssMatStyler {\n}\nMatListAvatarCssMatStyler.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatListAvatarCssMatStyler, deps: [], target: i0.ɵɵFactoryTarget.Directive });\nMatListAvatarCssMatStyler.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.1.0\", type: MatListAvatarCssMatStyler, selector: \"[mat-list-avatar], [matListAvatar]\", host: { classAttribute: \"mat-list-avatar\" }, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatListAvatarCssMatStyler, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[mat-list-avatar], [matListAvatar]',\n                    host: { 'class': 'mat-list-avatar' },\n                }]\n        }] });\n/**\n * Directive whose purpose is to add the mat- CSS styling to this selector.\n * @docs-private\n */\nclass MatListIconCssMatStyler {\n}\nMatListIconCssMatStyler.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatListIconCssMatStyler, deps: [], target: i0.ɵɵFactoryTarget.Directive });\nMatListIconCssMatStyler.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.1.0\", type: MatListIconCssMatStyler, selector: \"[mat-list-icon], [matListIcon]\", host: { classAttribute: \"mat-list-icon\" }, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatListIconCssMatStyler, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[mat-list-icon], [matListIcon]',\n                    host: { 'class': 'mat-list-icon' },\n                }]\n        }] });\n/**\n * Directive whose purpose is to add the mat- CSS styling to this selector.\n * @docs-private\n */\nclass MatListSubheaderCssMatStyler {\n}\nMatListSubheaderCssMatStyler.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatListSubheaderCssMatStyler, deps: [], target: i0.ɵɵFactoryTarget.Directive });\nMatListSubheaderCssMatStyler.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.1.0\", type: MatListSubheaderCssMatStyler, selector: \"[mat-subheader], [matSubheader]\", host: { classAttribute: \"mat-subheader\" }, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatListSubheaderCssMatStyler, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[mat-subheader], [matSubheader]',\n                    host: { 'class': 'mat-subheader' },\n                }]\n        }] });\n/** An item within a Material Design list. */\nclass MatListItem extends _MatListItemMixinBase {\n    constructor(_element, _changeDetectorRef, navList, list) {\n        super();\n        this._element = _element;\n        this._isInteractiveList = false;\n        this._destroyed = new Subject();\n        this._disabled = false;\n        this._isInteractiveList = !!(navList || (list && list._getListType() === 'action-list'));\n        this._list = navList || list;\n        // If no type attribute is specified for <button>, set it to \"button\".\n        // If a type attribute is already specified, do nothing.\n        const element = this._getHostElement();\n        if (element.nodeName.toLowerCase() === 'button' && !element.hasAttribute('type')) {\n            element.setAttribute('type', 'button');\n        }\n        if (this._list) {\n            // React to changes in the state of the parent list since\n            // some of the item's properties depend on it (e.g. `disableRipple`).\n            this._list._stateChanges.pipe(takeUntil(this._destroyed)).subscribe(() => {\n                _changeDetectorRef.markForCheck();\n            });\n        }\n    }\n    /** Whether the option is disabled. */\n    get disabled() {\n        return this._disabled || !!(this._list && this._list.disabled);\n    }\n    set disabled(value) {\n        this._disabled = coerceBooleanProperty(value);\n    }\n    ngAfterContentInit() {\n        setLines(this._lines, this._element);\n    }\n    ngOnDestroy() {\n        this._destroyed.next();\n        this._destroyed.complete();\n    }\n    /** Whether this list item should show a ripple effect when clicked. */\n    _isRippleDisabled() {\n        return (!this._isInteractiveList || this.disableRipple || !!(this._list && this._list.disableRipple));\n    }\n    /** Retrieves the DOM element of the component host. */\n    _getHostElement() {\n        return this._element.nativeElement;\n    }\n}\nMatListItem.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatListItem, deps: [{ token: i0.ElementRef }, { token: i0.ChangeDetectorRef }, { token: MAT_NAV_LIST, optional: true }, { token: MAT_LIST, optional: true }], target: i0.ɵɵFactoryTarget.Component });\nMatListItem.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: MatListItem, selector: \"mat-list-item, a[mat-list-item], button[mat-list-item]\", inputs: { disableRipple: \"disableRipple\", disabled: \"disabled\" }, host: { properties: { \"class.mat-list-item-disabled\": \"disabled\", \"class.mat-list-item-avatar\": \"_avatar || _icon\", \"class.mat-list-item-with-avatar\": \"_avatar || _icon\" }, classAttribute: \"mat-list-item mat-focus-indicator\" }, queries: [{ propertyName: \"_avatar\", first: true, predicate: MatListAvatarCssMatStyler, descendants: true }, { propertyName: \"_icon\", first: true, predicate: MatListIconCssMatStyler, descendants: true }, { propertyName: \"_lines\", predicate: MatLine, descendants: true }], exportAs: [\"matListItem\"], usesInheritance: true, ngImport: i0, template: \"<div class=\\\"mat-list-item-content\\\">\\n  <div class=\\\"mat-list-item-ripple\\\" mat-ripple\\n       [matRippleTrigger]=\\\"_getHostElement()\\\"\\n       [matRippleDisabled]=\\\"_isRippleDisabled()\\\">\\n  </div>\\n\\n  <ng-content select=\\\"[mat-list-avatar], [mat-list-icon], [matListAvatar], [matListIcon]\\\">\\n  </ng-content>\\n\\n  <div class=\\\"mat-list-text\\\"><ng-content select=\\\"[mat-line], [matLine]\\\"></ng-content></div>\\n\\n  <ng-content></ng-content>\\n</div>\\n\", directives: [{ type: i1.MatRipple, selector: \"[mat-ripple], [matRipple]\", inputs: [\"matRippleColor\", \"matRippleUnbounded\", \"matRippleCentered\", \"matRippleRadius\", \"matRippleAnimation\", \"matRippleDisabled\", \"matRippleTrigger\"], exportAs: [\"matRipple\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatListItem, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-list-item, a[mat-list-item], button[mat-list-item]', exportAs: 'matListItem', host: {\n                        'class': 'mat-list-item mat-focus-indicator',\n                        '[class.mat-list-item-disabled]': 'disabled',\n                        // @breaking-change 8.0.0 Remove `mat-list-item-avatar` in favor of `mat-list-item-with-avatar`.\n                        '[class.mat-list-item-avatar]': '_avatar || _icon',\n                        '[class.mat-list-item-with-avatar]': '_avatar || _icon',\n                    }, inputs: ['disableRipple'], encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, template: \"<div class=\\\"mat-list-item-content\\\">\\n  <div class=\\\"mat-list-item-ripple\\\" mat-ripple\\n       [matRippleTrigger]=\\\"_getHostElement()\\\"\\n       [matRippleDisabled]=\\\"_isRippleDisabled()\\\">\\n  </div>\\n\\n  <ng-content select=\\\"[mat-list-avatar], [mat-list-icon], [matListAvatar], [matListIcon]\\\">\\n  </ng-content>\\n\\n  <div class=\\\"mat-list-text\\\"><ng-content select=\\\"[mat-line], [matLine]\\\"></ng-content></div>\\n\\n  <ng-content></ng-content>\\n</div>\\n\" }]\n        }], ctorParameters: function () {\n        return [{ type: i0.ElementRef }, { type: i0.ChangeDetectorRef }, { type: MatNavList, decorators: [{\n                        type: Optional\n                    }, {\n                        type: Inject,\n                        args: [MAT_NAV_LIST]\n                    }] }, { type: MatList, decorators: [{\n                        type: Optional\n                    }, {\n                        type: Inject,\n                        args: [MAT_LIST]\n                    }] }];\n    }, propDecorators: { _lines: [{\n                type: ContentChildren,\n                args: [MatLine, { descendants: true }]\n            }], _avatar: [{\n                type: ContentChild,\n                args: [MatListAvatarCssMatStyler]\n            }], _icon: [{\n                type: ContentChild,\n                args: [MatListIconCssMatStyler]\n            }], disabled: [{\n                type: Input\n            }] } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst _MatSelectionListBase = mixinDisableRipple(class {\n});\nconst _MatListOptionBase = mixinDisableRipple(class {\n});\n/** @docs-private */\nconst MAT_SELECTION_LIST_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => MatSelectionList),\n    multi: true,\n};\n/** Change event that is being fired whenever the selected state of an option changes. */\nclass MatSelectionListChange {\n    constructor(\n    /** Reference to the selection list that emitted the event. */\n    source, \n    /**\n     * Reference to the option that has been changed.\n     * @deprecated Use `options` instead, because some events may change more than one option.\n     * @breaking-change 12.0.0\n     */\n    option, \n    /** Reference to the options that have been changed. */\n    options) {\n        this.source = source;\n        this.option = option;\n        this.options = options;\n    }\n}\n/**\n * Component for list-options of selection-list. Each list-option can automatically\n * generate a checkbox and can put current item into the selectionModel of selection-list\n * if the current item is selected.\n */\nclass MatListOption extends _MatListOptionBase {\n    constructor(_element, _changeDetector, \n    /** @docs-private */\n    selectionList) {\n        super();\n        this._element = _element;\n        this._changeDetector = _changeDetector;\n        this.selectionList = selectionList;\n        this._selected = false;\n        this._disabled = false;\n        this._hasFocus = false;\n        /**\n         * Emits when the selected state of the option has changed.\n         * Use to facilitate two-data binding to the `selected` property.\n         * @docs-private\n         */\n        this.selectedChange = new EventEmitter();\n        /** Whether the label should appear before or after the checkbox. Defaults to 'after' */\n        this.checkboxPosition = 'after';\n        /**\n         * This is set to true after the first OnChanges cycle so we don't clear the value of `selected`\n         * in the first cycle.\n         */\n        this._inputsInitialized = false;\n    }\n    /** Theme color of the list option. This sets the color of the checkbox. */\n    get color() {\n        return this._color || this.selectionList.color;\n    }\n    set color(newValue) {\n        this._color = newValue;\n    }\n    /** Value of the option */\n    get value() {\n        return this._value;\n    }\n    set value(newValue) {\n        if (this.selected &&\n            !this.selectionList.compareWith(newValue, this.value) &&\n            this._inputsInitialized) {\n            this.selected = false;\n        }\n        this._value = newValue;\n    }\n    /** Whether the option is disabled. */\n    get disabled() {\n        return this._disabled || (this.selectionList && this.selectionList.disabled);\n    }\n    set disabled(value) {\n        const newValue = coerceBooleanProperty(value);\n        if (newValue !== this._disabled) {\n            this._disabled = newValue;\n            this._changeDetector.markForCheck();\n        }\n    }\n    /** Whether the option is selected. */\n    get selected() {\n        return this.selectionList.selectedOptions.isSelected(this);\n    }\n    set selected(value) {\n        const isSelected = coerceBooleanProperty(value);\n        if (isSelected !== this._selected) {\n            this._setSelected(isSelected);\n            if (isSelected || this.selectionList.multiple) {\n                this.selectionList._reportValueChange();\n            }\n        }\n    }\n    ngOnInit() {\n        const list = this.selectionList;\n        if (list._value && list._value.some(value => list.compareWith(value, this._value))) {\n            this._setSelected(true);\n        }\n        const wasSelected = this._selected;\n        // List options that are selected at initialization can't be reported properly to the form\n        // control. This is because it takes some time until the selection-list knows about all\n        // available options. Also it can happen that the ControlValueAccessor has an initial value\n        // that should be used instead. Deferring the value change report to the next tick ensures\n        // that the form control value is not being overwritten.\n        Promise.resolve().then(() => {\n            if (this._selected || wasSelected) {\n                this.selected = true;\n                this._changeDetector.markForCheck();\n            }\n        });\n        this._inputsInitialized = true;\n    }\n    ngAfterContentInit() {\n        setLines(this._lines, this._element);\n    }\n    ngOnDestroy() {\n        if (this.selected) {\n            // We have to delay this until the next tick in order\n            // to avoid changed after checked errors.\n            Promise.resolve().then(() => {\n                this.selected = false;\n            });\n        }\n        const hadFocus = this._hasFocus;\n        const newActiveItem = this.selectionList._removeOptionFromList(this);\n        // Only move focus if this option was focused at the time it was destroyed.\n        if (hadFocus && newActiveItem) {\n            newActiveItem.focus();\n        }\n    }\n    /** Toggles the selection state of the option. */\n    toggle() {\n        this.selected = !this.selected;\n    }\n    /** Allows for programmatic focusing of the option. */\n    focus() {\n        this._element.nativeElement.focus();\n    }\n    /**\n     * Returns the list item's text label. Implemented as a part of the FocusKeyManager.\n     * @docs-private\n     */\n    getLabel() {\n        return this._text ? this._text.nativeElement.textContent || '' : '';\n    }\n    /** Whether this list item should show a ripple effect when clicked. */\n    _isRippleDisabled() {\n        return this.disabled || this.disableRipple || this.selectionList.disableRipple;\n    }\n    _handleClick() {\n        if (!this.disabled && (this.selectionList.multiple || !this.selected)) {\n            this.toggle();\n            // Emit a change event if the selected state of the option changed through user interaction.\n            this.selectionList._emitChangeEvent([this]);\n        }\n    }\n    _handleFocus() {\n        this.selectionList._setFocusedOption(this);\n        this._hasFocus = true;\n    }\n    _handleBlur() {\n        this.selectionList._onTouched();\n        this._hasFocus = false;\n    }\n    /** Retrieves the DOM element of the component host. */\n    _getHostElement() {\n        return this._element.nativeElement;\n    }\n    /** Sets the selected state of the option. Returns whether the value has changed. */\n    _setSelected(selected) {\n        if (selected === this._selected) {\n            return false;\n        }\n        this._selected = selected;\n        if (selected) {\n            this.selectionList.selectedOptions.select(this);\n        }\n        else {\n            this.selectionList.selectedOptions.deselect(this);\n        }\n        this.selectedChange.emit(selected);\n        this._changeDetector.markForCheck();\n        return true;\n    }\n    /**\n     * Notifies Angular that the option needs to be checked in the next change detection run. Mainly\n     * used to trigger an update of the list option if the disabled state of the selection list\n     * changed.\n     */\n    _markForCheck() {\n        this._changeDetector.markForCheck();\n    }\n}\nMatListOption.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatListOption, deps: [{ token: i0.ElementRef }, { token: i0.ChangeDetectorRef }, { token: forwardRef(() => MatSelectionList) }], target: i0.ɵɵFactoryTarget.Component });\nMatListOption.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: MatListOption, selector: \"mat-list-option\", inputs: { disableRipple: \"disableRipple\", checkboxPosition: \"checkboxPosition\", color: \"color\", value: \"value\", disabled: \"disabled\", selected: \"selected\" }, outputs: { selectedChange: \"selectedChange\" }, host: { attributes: { \"role\": \"option\" }, listeners: { \"focus\": \"_handleFocus()\", \"blur\": \"_handleBlur()\", \"click\": \"_handleClick()\" }, properties: { \"class.mat-list-item-disabled\": \"disabled\", \"class.mat-list-item-with-avatar\": \"_avatar || _icon\", \"class.mat-primary\": \"color === \\\"primary\\\"\", \"class.mat-accent\": \"color !== \\\"primary\\\" && color !== \\\"warn\\\"\", \"class.mat-warn\": \"color === \\\"warn\\\"\", \"class.mat-list-single-selected-option\": \"selected && !selectionList.multiple\", \"attr.aria-selected\": \"selected\", \"attr.aria-disabled\": \"disabled\", \"attr.tabindex\": \"-1\" }, classAttribute: \"mat-list-item mat-list-option mat-focus-indicator\" }, queries: [{ propertyName: \"_avatar\", first: true, predicate: MatListAvatarCssMatStyler, descendants: true }, { propertyName: \"_icon\", first: true, predicate: MatListIconCssMatStyler, descendants: true }, { propertyName: \"_lines\", predicate: MatLine, descendants: true }], viewQueries: [{ propertyName: \"_text\", first: true, predicate: [\"text\"], descendants: true }], exportAs: [\"matListOption\"], usesInheritance: true, ngImport: i0, template: \"<div class=\\\"mat-list-item-content\\\"\\n  [class.mat-list-item-content-reverse]=\\\"checkboxPosition == 'after'\\\">\\n\\n  <div mat-ripple\\n    class=\\\"mat-list-item-ripple\\\"\\n    [matRippleTrigger]=\\\"_getHostElement()\\\"\\n    [matRippleDisabled]=\\\"_isRippleDisabled()\\\"></div>\\n\\n  <mat-pseudo-checkbox\\n    *ngIf=\\\"selectionList.multiple\\\"\\n    [state]=\\\"selected ? 'checked' : 'unchecked'\\\"\\n    [disabled]=\\\"disabled\\\"></mat-pseudo-checkbox>\\n\\n  <div class=\\\"mat-list-text\\\" #text><ng-content></ng-content></div>\\n\\n  <ng-content select=\\\"[mat-list-avatar], [mat-list-icon], [matListAvatar], [matListIcon]\\\">\\n  </ng-content>\\n\\n</div>\\n\", components: [{ type: i1.MatPseudoCheckbox, selector: \"mat-pseudo-checkbox\", inputs: [\"state\", \"disabled\"] }], directives: [{ type: i1.MatRipple, selector: \"[mat-ripple], [matRipple]\", inputs: [\"matRippleColor\", \"matRippleUnbounded\", \"matRippleCentered\", \"matRippleRadius\", \"matRippleAnimation\", \"matRippleDisabled\", \"matRippleTrigger\"], exportAs: [\"matRipple\"] }, { type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatListOption, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-list-option', exportAs: 'matListOption', inputs: ['disableRipple'], host: {\n                        'role': 'option',\n                        'class': 'mat-list-item mat-list-option mat-focus-indicator',\n                        '(focus)': '_handleFocus()',\n                        '(blur)': '_handleBlur()',\n                        '(click)': '_handleClick()',\n                        '[class.mat-list-item-disabled]': 'disabled',\n                        '[class.mat-list-item-with-avatar]': '_avatar || _icon',\n                        // Manually set the \"primary\" or \"warn\" class if the color has been explicitly\n                        // set to \"primary\" or \"warn\". The pseudo checkbox picks up these classes for\n                        // its theme.\n                        '[class.mat-primary]': 'color === \"primary\"',\n                        // Even though accent is the default, we need to set this class anyway, because the  list might\n                        // be placed inside a parent that has one of the other colors with a higher specificity.\n                        '[class.mat-accent]': 'color !== \"primary\" && color !== \"warn\"',\n                        '[class.mat-warn]': 'color === \"warn\"',\n                        '[class.mat-list-single-selected-option]': 'selected && !selectionList.multiple',\n                        '[attr.aria-selected]': 'selected',\n                        '[attr.aria-disabled]': 'disabled',\n                        '[attr.tabindex]': '-1',\n                    }, encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, template: \"<div class=\\\"mat-list-item-content\\\"\\n  [class.mat-list-item-content-reverse]=\\\"checkboxPosition == 'after'\\\">\\n\\n  <div mat-ripple\\n    class=\\\"mat-list-item-ripple\\\"\\n    [matRippleTrigger]=\\\"_getHostElement()\\\"\\n    [matRippleDisabled]=\\\"_isRippleDisabled()\\\"></div>\\n\\n  <mat-pseudo-checkbox\\n    *ngIf=\\\"selectionList.multiple\\\"\\n    [state]=\\\"selected ? 'checked' : 'unchecked'\\\"\\n    [disabled]=\\\"disabled\\\"></mat-pseudo-checkbox>\\n\\n  <div class=\\\"mat-list-text\\\" #text><ng-content></ng-content></div>\\n\\n  <ng-content select=\\\"[mat-list-avatar], [mat-list-icon], [matListAvatar], [matListIcon]\\\">\\n  </ng-content>\\n\\n</div>\\n\" }]\n        }], ctorParameters: function () {\n        return [{ type: i0.ElementRef }, { type: i0.ChangeDetectorRef }, { type: MatSelectionList, decorators: [{\n                        type: Inject,\n                        args: [forwardRef(() => MatSelectionList)]\n                    }] }];\n    }, propDecorators: { _avatar: [{\n                type: ContentChild,\n                args: [MatListAvatarCssMatStyler]\n            }], _icon: [{\n                type: ContentChild,\n                args: [MatListIconCssMatStyler]\n            }], _lines: [{\n                type: ContentChildren,\n                args: [MatLine, { descendants: true }]\n            }], selectedChange: [{\n                type: Output\n            }], _text: [{\n                type: ViewChild,\n                args: ['text']\n            }], checkboxPosition: [{\n                type: Input\n            }], color: [{\n                type: Input\n            }], value: [{\n                type: Input\n            }], disabled: [{\n                type: Input\n            }], selected: [{\n                type: Input\n            }] } });\n/**\n * Material Design list component where each item is a selectable option. Behaves as a listbox.\n */\nclass MatSelectionList extends _MatSelectionListBase {\n    constructor(_element, \n    // @breaking-change 11.0.0 Remove `tabIndex` parameter.\n    tabIndex, _changeDetector, \n    // @breaking-change 11.0.0 `_focusMonitor` parameter to become required.\n    _focusMonitor) {\n        super();\n        this._element = _element;\n        this._changeDetector = _changeDetector;\n        this._focusMonitor = _focusMonitor;\n        this._multiple = true;\n        this._contentInitialized = false;\n        /** Emits a change event whenever the selected state of an option changes. */\n        this.selectionChange = new EventEmitter();\n        /**\n         * Tabindex of the selection list.\n         * @breaking-change 11.0.0 Remove `tabIndex` input.\n         */\n        this.tabIndex = 0;\n        /** Theme color of the selection list. This sets the checkbox color for all list options. */\n        this.color = 'accent';\n        /**\n         * Function used for comparing an option against the selected value when determining which\n         * options should appear as selected. The first argument is the value of an options. The second\n         * one is a value from the selected value. A boolean must be returned.\n         */\n        this.compareWith = (a1, a2) => a1 === a2;\n        this._disabled = false;\n        /** The currently selected options. */\n        this.selectedOptions = new SelectionModel(this._multiple);\n        /** The tabindex of the selection list. */\n        this._tabIndex = -1;\n        /** View to model callback that should be called whenever the selected options change. */\n        this._onChange = (_) => { };\n        /** Emits when the list has been destroyed. */\n        this._destroyed = new Subject();\n        /** View to model callback that should be called if the list or its options lost focus. */\n        this._onTouched = () => { };\n    }\n    /** Whether the selection list is disabled. */\n    get disabled() {\n        return this._disabled;\n    }\n    set disabled(value) {\n        this._disabled = coerceBooleanProperty(value);\n        // The `MatSelectionList` and `MatListOption` are using the `OnPush` change detection\n        // strategy. Therefore the options will not check for any changes if the `MatSelectionList`\n        // changed its state. Since we know that a change to `disabled` property of the list affects\n        // the state of the options, we manually mark each option for check.\n        this._markOptionsForCheck();\n    }\n    /** Whether selection is limited to one or multiple items (default multiple). */\n    get multiple() {\n        return this._multiple;\n    }\n    set multiple(value) {\n        const newValue = coerceBooleanProperty(value);\n        if (newValue !== this._multiple) {\n            if (this._contentInitialized && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n                throw new Error('Cannot change `multiple` mode of mat-selection-list after initialization.');\n            }\n            this._multiple = newValue;\n            this.selectedOptions = new SelectionModel(this._multiple, this.selectedOptions.selected);\n        }\n    }\n    ngAfterContentInit() {\n        var _a;\n        this._contentInitialized = true;\n        this._keyManager = new FocusKeyManager(this.options)\n            .withWrap()\n            .withTypeAhead()\n            .withHomeAndEnd()\n            // Allow disabled items to be focusable. For accessibility reasons, there must be a way for\n            // screenreader users, that allows reading the different options of the list.\n            .skipPredicate(() => false)\n            .withAllowedModifierKeys(['shiftKey']);\n        if (this._value) {\n            this._setOptionsFromValues(this._value);\n        }\n        // If the user attempts to tab out of the selection list, allow focus to escape.\n        this._keyManager.tabOut.pipe(takeUntil(this._destroyed)).subscribe(() => {\n            this._allowFocusEscape();\n        });\n        // When the number of options change, update the tabindex of the selection list.\n        this.options.changes.pipe(startWith(null), takeUntil(this._destroyed)).subscribe(() => {\n            this._updateTabIndex();\n        });\n        // Sync external changes to the model back to the options.\n        this.selectedOptions.changed.pipe(takeUntil(this._destroyed)).subscribe(event => {\n            if (event.added) {\n                for (let item of event.added) {\n                    item.selected = true;\n                }\n            }\n            if (event.removed) {\n                for (let item of event.removed) {\n                    item.selected = false;\n                }\n            }\n        });\n        // @breaking-change 11.0.0 Remove null assertion once _focusMonitor is required.\n        (_a = this._focusMonitor) === null || _a === void 0 ? void 0 : _a.monitor(this._element).pipe(takeUntil(this._destroyed)).subscribe(origin => {\n            var _a;\n            if (origin === 'keyboard' || origin === 'program') {\n                let toFocus = 0;\n                for (let i = 0; i < this.options.length; i++) {\n                    if ((_a = this.options.get(i)) === null || _a === void 0 ? void 0 : _a.selected) {\n                        toFocus = i;\n                        break;\n                    }\n                }\n                this._keyManager.setActiveItem(toFocus);\n            }\n        });\n    }\n    ngOnChanges(changes) {\n        const disableRippleChanges = changes['disableRipple'];\n        const colorChanges = changes['color'];\n        if ((disableRippleChanges && !disableRippleChanges.firstChange) ||\n            (colorChanges && !colorChanges.firstChange)) {\n            this._markOptionsForCheck();\n        }\n    }\n    ngOnDestroy() {\n        var _a;\n        // @breaking-change 11.0.0 Remove null assertion once _focusMonitor is required.\n        (_a = this._focusMonitor) === null || _a === void 0 ? void 0 : _a.stopMonitoring(this._element);\n        this._destroyed.next();\n        this._destroyed.complete();\n        this._isDestroyed = true;\n    }\n    /** Focuses the selection list. */\n    focus(options) {\n        this._element.nativeElement.focus(options);\n    }\n    /** Selects all of the options. Returns the options that changed as a result. */\n    selectAll() {\n        return this._setAllOptionsSelected(true);\n    }\n    /** Deselects all of the options. Returns the options that changed as a result. */\n    deselectAll() {\n        return this._setAllOptionsSelected(false);\n    }\n    /** Sets the focused option of the selection-list. */\n    _setFocusedOption(option) {\n        this._keyManager.updateActiveItem(option);\n    }\n    /**\n     * Removes an option from the selection list and updates the active item.\n     * @returns Currently-active item.\n     */\n    _removeOptionFromList(option) {\n        const optionIndex = this._getOptionIndex(option);\n        if (optionIndex > -1 && this._keyManager.activeItemIndex === optionIndex) {\n            // Check whether the option is the last item\n            if (optionIndex > 0) {\n                this._keyManager.updateActiveItem(optionIndex - 1);\n            }\n            else if (optionIndex === 0 && this.options.length > 1) {\n                this._keyManager.updateActiveItem(Math.min(optionIndex + 1, this.options.length - 1));\n            }\n        }\n        return this._keyManager.activeItem;\n    }\n    /** Passes relevant key presses to our key manager. */\n    _keydown(event) {\n        const keyCode = event.keyCode;\n        const manager = this._keyManager;\n        const previousFocusIndex = manager.activeItemIndex;\n        const hasModifier = hasModifierKey(event);\n        switch (keyCode) {\n            case SPACE:\n            case ENTER:\n                if (!hasModifier && !manager.isTyping()) {\n                    this._toggleFocusedOption();\n                    // Always prevent space from scrolling the page since the list has focus\n                    event.preventDefault();\n                }\n                break;\n            default:\n                // The \"A\" key gets special treatment, because it's used for the \"select all\" functionality.\n                if (keyCode === A &&\n                    this.multiple &&\n                    hasModifierKey(event, 'ctrlKey') &&\n                    !manager.isTyping()) {\n                    const shouldSelect = this.options.some(option => !option.disabled && !option.selected);\n                    this._setAllOptionsSelected(shouldSelect, true, true);\n                    event.preventDefault();\n                }\n                else {\n                    manager.onKeydown(event);\n                }\n        }\n        if (this.multiple &&\n            (keyCode === UP_ARROW || keyCode === DOWN_ARROW) &&\n            event.shiftKey &&\n            manager.activeItemIndex !== previousFocusIndex) {\n            this._toggleFocusedOption();\n        }\n    }\n    /** Reports a value change to the ControlValueAccessor */\n    _reportValueChange() {\n        // Stop reporting value changes after the list has been destroyed. This avoids\n        // cases where the list might wrongly reset its value once it is removed, but\n        // the form control is still live.\n        if (this.options && !this._isDestroyed) {\n            const value = this._getSelectedOptionValues();\n            this._onChange(value);\n            this._value = value;\n        }\n    }\n    /** Emits a change event if the selected state of an option changed. */\n    _emitChangeEvent(options) {\n        this.selectionChange.emit(new MatSelectionListChange(this, options[0], options));\n    }\n    /** Implemented as part of ControlValueAccessor. */\n    writeValue(values) {\n        this._value = values;\n        if (this.options) {\n            this._setOptionsFromValues(values || []);\n        }\n    }\n    /** Implemented as a part of ControlValueAccessor. */\n    setDisabledState(isDisabled) {\n        this.disabled = isDisabled;\n    }\n    /** Implemented as part of ControlValueAccessor. */\n    registerOnChange(fn) {\n        this._onChange = fn;\n    }\n    /** Implemented as part of ControlValueAccessor. */\n    registerOnTouched(fn) {\n        this._onTouched = fn;\n    }\n    /** Sets the selected options based on the specified values. */\n    _setOptionsFromValues(values) {\n        this.options.forEach(option => option._setSelected(false));\n        values.forEach(value => {\n            const correspondingOption = this.options.find(option => {\n                // Skip options that are already in the model. This allows us to handle cases\n                // where the same primitive value is selected multiple times.\n                return option.selected ? false : this.compareWith(option.value, value);\n            });\n            if (correspondingOption) {\n                correspondingOption._setSelected(true);\n            }\n        });\n    }\n    /** Returns the values of the selected options. */\n    _getSelectedOptionValues() {\n        return this.options.filter(option => option.selected).map(option => option.value);\n    }\n    /** Toggles the state of the currently focused option if enabled. */\n    _toggleFocusedOption() {\n        let focusedIndex = this._keyManager.activeItemIndex;\n        if (focusedIndex != null && this._isValidIndex(focusedIndex)) {\n            let focusedOption = this.options.toArray()[focusedIndex];\n            if (focusedOption && !focusedOption.disabled && (this._multiple || !focusedOption.selected)) {\n                focusedOption.toggle();\n                // Emit a change event because the focused option changed its state through user\n                // interaction.\n                this._emitChangeEvent([focusedOption]);\n            }\n        }\n    }\n    /**\n     * Sets the selected state on all of the options\n     * and emits an event if anything changed.\n     */\n    _setAllOptionsSelected(isSelected, skipDisabled, isUserInput) {\n        // Keep track of whether anything changed, because we only want to\n        // emit the changed event when something actually changed.\n        const changedOptions = [];\n        this.options.forEach(option => {\n            if ((!skipDisabled || !option.disabled) && option._setSelected(isSelected)) {\n                changedOptions.push(option);\n            }\n        });\n        if (changedOptions.length) {\n            this._reportValueChange();\n            if (isUserInput) {\n                this._emitChangeEvent(changedOptions);\n            }\n        }\n        return changedOptions;\n    }\n    /**\n     * Utility to ensure all indexes are valid.\n     * @param index The index to be checked.\n     * @returns True if the index is valid for our list of options.\n     */\n    _isValidIndex(index) {\n        return index >= 0 && index < this.options.length;\n    }\n    /** Returns the index of the specified list option. */\n    _getOptionIndex(option) {\n        return this.options.toArray().indexOf(option);\n    }\n    /** Marks all the options to be checked in the next change detection run. */\n    _markOptionsForCheck() {\n        if (this.options) {\n            this.options.forEach(option => option._markForCheck());\n        }\n    }\n    /**\n     * Removes the tabindex from the selection list and resets it back afterwards, allowing the user\n     * to tab out of it. This prevents the list from capturing focus and redirecting it back within\n     * the list, creating a focus trap if it user tries to tab away.\n     */\n    _allowFocusEscape() {\n        this._tabIndex = -1;\n        setTimeout(() => {\n            this._tabIndex = 0;\n            this._changeDetector.markForCheck();\n        });\n    }\n    /** Updates the tabindex based upon if the selection list is empty. */\n    _updateTabIndex() {\n        this._tabIndex = this.options.length === 0 ? -1 : 0;\n    }\n}\nMatSelectionList.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatSelectionList, deps: [{ token: i0.ElementRef }, { token: 'tabindex', attribute: true }, { token: i0.ChangeDetectorRef }, { token: i3.FocusMonitor }], target: i0.ɵɵFactoryTarget.Component });\nMatSelectionList.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: MatSelectionList, selector: \"mat-selection-list\", inputs: { disableRipple: \"disableRipple\", tabIndex: \"tabIndex\", color: \"color\", compareWith: \"compareWith\", disabled: \"disabled\", multiple: \"multiple\" }, outputs: { selectionChange: \"selectionChange\" }, host: { attributes: { \"role\": \"listbox\" }, listeners: { \"keydown\": \"_keydown($event)\" }, properties: { \"attr.aria-multiselectable\": \"multiple\", \"attr.aria-disabled\": \"disabled.toString()\", \"attr.tabindex\": \"_tabIndex\" }, classAttribute: \"mat-selection-list mat-list-base\" }, providers: [MAT_SELECTION_LIST_VALUE_ACCESSOR], queries: [{ propertyName: \"options\", predicate: MatListOption, descendants: true }], exportAs: [\"matSelectionList\"], usesInheritance: true, usesOnChanges: true, ngImport: i0, template: '<ng-content></ng-content>', isInline: true, styles: [\".mat-subheader{display:flex;box-sizing:border-box;padding:16px;align-items:center}.mat-list-base .mat-subheader{margin:0}.mat-list-base{padding-top:8px;display:block;-webkit-tap-highlight-color:transparent}.mat-list-base .mat-subheader{height:48px;line-height:16px}.mat-list-base .mat-subheader:first-child{margin-top:-8px}.mat-list-base .mat-list-item,.mat-list-base .mat-list-option{display:block;height:48px;-webkit-tap-highlight-color:transparent;width:100%;padding:0}.mat-list-base .mat-list-item .mat-list-item-content,.mat-list-base .mat-list-option .mat-list-item-content{display:flex;flex-direction:row;align-items:center;box-sizing:border-box;padding:0 16px;position:relative;height:inherit}.mat-list-base .mat-list-item .mat-list-item-content-reverse,.mat-list-base .mat-list-option .mat-list-item-content-reverse{display:flex;align-items:center;padding:0 16px;flex-direction:row-reverse;justify-content:space-around}.mat-list-base .mat-list-item .mat-list-item-ripple,.mat-list-base .mat-list-option .mat-list-item-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.mat-list-base .mat-list-item.mat-list-item-with-avatar,.mat-list-base .mat-list-option.mat-list-item-with-avatar{height:56px}.mat-list-base .mat-list-item.mat-2-line,.mat-list-base .mat-list-option.mat-2-line{height:72px}.mat-list-base .mat-list-item.mat-3-line,.mat-list-base .mat-list-option.mat-3-line{height:88px}.mat-list-base .mat-list-item.mat-multi-line,.mat-list-base .mat-list-option.mat-multi-line{height:auto}.mat-list-base .mat-list-item.mat-multi-line .mat-list-item-content,.mat-list-base .mat-list-option.mat-multi-line .mat-list-item-content{padding-top:16px;padding-bottom:16px}.mat-list-base .mat-list-item .mat-list-text,.mat-list-base .mat-list-option .mat-list-text{display:flex;flex-direction:column;flex:auto;box-sizing:border-box;overflow:hidden;padding:0}.mat-list-base .mat-list-item .mat-list-text>*,.mat-list-base .mat-list-option .mat-list-text>*{margin:0;padding:0;font-weight:normal;font-size:inherit}.mat-list-base .mat-list-item .mat-list-text:empty,.mat-list-base .mat-list-option .mat-list-text:empty{display:none}.mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:0;padding-left:16px}[dir=rtl] .mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:0}.mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-left:0;padding-right:16px}[dir=rtl] .mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-right:0;padding-left:16px}.mat-list-base .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:16px}.mat-list-base .mat-list-item .mat-list-avatar,.mat-list-base .mat-list-option .mat-list-avatar{flex-shrink:0;width:40px;height:40px;border-radius:50%;object-fit:cover}.mat-list-base .mat-list-item .mat-list-avatar~.mat-divider-inset,.mat-list-base .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:72px;width:calc(100% - 72px)}[dir=rtl] .mat-list-base .mat-list-item .mat-list-avatar~.mat-divider-inset,[dir=rtl] .mat-list-base .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:auto;margin-right:72px}.mat-list-base .mat-list-item .mat-list-icon,.mat-list-base .mat-list-option .mat-list-icon{flex-shrink:0;width:24px;height:24px;font-size:24px;box-sizing:content-box;border-radius:50%;padding:4px}.mat-list-base .mat-list-item .mat-list-icon~.mat-divider-inset,.mat-list-base .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:64px;width:calc(100% - 64px)}[dir=rtl] .mat-list-base .mat-list-item .mat-list-icon~.mat-divider-inset,[dir=rtl] .mat-list-base .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:auto;margin-right:64px}.mat-list-base .mat-list-item .mat-divider,.mat-list-base .mat-list-option .mat-divider{position:absolute;bottom:0;left:0;width:100%;margin:0}[dir=rtl] .mat-list-base .mat-list-item .mat-divider,[dir=rtl] .mat-list-base .mat-list-option .mat-divider{margin-left:auto;margin-right:0}.mat-list-base .mat-list-item .mat-divider.mat-divider-inset,.mat-list-base .mat-list-option .mat-divider.mat-divider-inset{position:absolute}.mat-list-base[dense]{padding-top:4px;display:block}.mat-list-base[dense] .mat-subheader{height:40px;line-height:8px}.mat-list-base[dense] .mat-subheader:first-child{margin-top:-4px}.mat-list-base[dense] .mat-list-item,.mat-list-base[dense] .mat-list-option{display:block;height:40px;-webkit-tap-highlight-color:transparent;width:100%;padding:0}.mat-list-base[dense] .mat-list-item .mat-list-item-content,.mat-list-base[dense] .mat-list-option .mat-list-item-content{display:flex;flex-direction:row;align-items:center;box-sizing:border-box;padding:0 16px;position:relative;height:inherit}.mat-list-base[dense] .mat-list-item .mat-list-item-content-reverse,.mat-list-base[dense] .mat-list-option .mat-list-item-content-reverse{display:flex;align-items:center;padding:0 16px;flex-direction:row-reverse;justify-content:space-around}.mat-list-base[dense] .mat-list-item .mat-list-item-ripple,.mat-list-base[dense] .mat-list-option .mat-list-item-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar{height:48px}.mat-list-base[dense] .mat-list-item.mat-2-line,.mat-list-base[dense] .mat-list-option.mat-2-line{height:60px}.mat-list-base[dense] .mat-list-item.mat-3-line,.mat-list-base[dense] .mat-list-option.mat-3-line{height:76px}.mat-list-base[dense] .mat-list-item.mat-multi-line,.mat-list-base[dense] .mat-list-option.mat-multi-line{height:auto}.mat-list-base[dense] .mat-list-item.mat-multi-line .mat-list-item-content,.mat-list-base[dense] .mat-list-option.mat-multi-line .mat-list-item-content{padding-top:16px;padding-bottom:16px}.mat-list-base[dense] .mat-list-item .mat-list-text,.mat-list-base[dense] .mat-list-option .mat-list-text{display:flex;flex-direction:column;flex:auto;box-sizing:border-box;overflow:hidden;padding:0}.mat-list-base[dense] .mat-list-item .mat-list-text>*,.mat-list-base[dense] .mat-list-option .mat-list-text>*{margin:0;padding:0;font-weight:normal;font-size:inherit}.mat-list-base[dense] .mat-list-item .mat-list-text:empty,.mat-list-base[dense] .mat-list-option .mat-list-text:empty{display:none}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:0;padding-left:16px}[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:0}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-left:0;padding-right:16px}[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-right:0;padding-left:16px}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:16px}.mat-list-base[dense] .mat-list-item .mat-list-avatar,.mat-list-base[dense] .mat-list-option .mat-list-avatar{flex-shrink:0;width:36px;height:36px;border-radius:50%;object-fit:cover}.mat-list-base[dense] .mat-list-item .mat-list-avatar~.mat-divider-inset,.mat-list-base[dense] .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:68px;width:calc(100% - 68px)}[dir=rtl] .mat-list-base[dense] .mat-list-item .mat-list-avatar~.mat-divider-inset,[dir=rtl] .mat-list-base[dense] .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:auto;margin-right:68px}.mat-list-base[dense] .mat-list-item .mat-list-icon,.mat-list-base[dense] .mat-list-option .mat-list-icon{flex-shrink:0;width:20px;height:20px;font-size:20px;box-sizing:content-box;border-radius:50%;padding:4px}.mat-list-base[dense] .mat-list-item .mat-list-icon~.mat-divider-inset,.mat-list-base[dense] .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:60px;width:calc(100% - 60px)}[dir=rtl] .mat-list-base[dense] .mat-list-item .mat-list-icon~.mat-divider-inset,[dir=rtl] .mat-list-base[dense] .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:auto;margin-right:60px}.mat-list-base[dense] .mat-list-item .mat-divider,.mat-list-base[dense] .mat-list-option .mat-divider{position:absolute;bottom:0;left:0;width:100%;margin:0}[dir=rtl] .mat-list-base[dense] .mat-list-item .mat-divider,[dir=rtl] .mat-list-base[dense] .mat-list-option .mat-divider{margin-left:auto;margin-right:0}.mat-list-base[dense] .mat-list-item .mat-divider.mat-divider-inset,.mat-list-base[dense] .mat-list-option .mat-divider.mat-divider-inset{position:absolute}.mat-nav-list a{text-decoration:none;color:inherit}.mat-nav-list .mat-list-item{cursor:pointer;outline:none}mat-action-list button{background:none;color:inherit;border:none;font:inherit;outline:inherit;-webkit-tap-highlight-color:transparent;text-align:left}[dir=rtl] mat-action-list button{text-align:right}mat-action-list button::-moz-focus-inner{border:0}mat-action-list .mat-list-item{cursor:pointer;outline:inherit}.mat-list-option:not(.mat-list-item-disabled){cursor:pointer;outline:none}.mat-list-item-disabled{pointer-events:none}.cdk-high-contrast-active .mat-list-item-disabled{opacity:.5}.cdk-high-contrast-active :host .mat-list-item-disabled{opacity:.5}.cdk-high-contrast-active .mat-selection-list:focus{outline-style:dotted}.cdk-high-contrast-active .mat-list-option:hover,.cdk-high-contrast-active .mat-list-option:focus,.cdk-high-contrast-active .mat-nav-list .mat-list-item:hover,.cdk-high-contrast-active .mat-nav-list .mat-list-item:focus,.cdk-high-contrast-active mat-action-list .mat-list-item:hover,.cdk-high-contrast-active mat-action-list .mat-list-item:focus{outline:dotted 1px;z-index:1}.cdk-high-contrast-active .mat-list-single-selected-option::after{content:\\\"\\\";position:absolute;top:50%;right:16px;transform:translateY(-50%);width:10px;height:0;border-bottom:solid 10px;border-radius:10px}.cdk-high-contrast-active [dir=rtl] .mat-list-single-selected-option::after{right:auto;left:16px}@media(hover: none){.mat-list-option:not(.mat-list-single-selected-option):not(.mat-list-item-disabled):hover,.mat-nav-list .mat-list-item:not(.mat-list-item-disabled):hover,.mat-action-list .mat-list-item:not(.mat-list-item-disabled):hover{background:none}}\\n\"], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatSelectionList, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-selection-list', exportAs: 'matSelectionList', inputs: ['disableRipple'], host: {\n                        'role': 'listbox',\n                        'class': 'mat-selection-list mat-list-base',\n                        '(keydown)': '_keydown($event)',\n                        '[attr.aria-multiselectable]': 'multiple',\n                        '[attr.aria-disabled]': 'disabled.toString()',\n                        '[attr.tabindex]': '_tabIndex',\n                    }, template: '<ng-content></ng-content>', encapsulation: ViewEncapsulation.None, providers: [MAT_SELECTION_LIST_VALUE_ACCESSOR], changeDetection: ChangeDetectionStrategy.OnPush, styles: [\".mat-subheader{display:flex;box-sizing:border-box;padding:16px;align-items:center}.mat-list-base .mat-subheader{margin:0}.mat-list-base{padding-top:8px;display:block;-webkit-tap-highlight-color:transparent}.mat-list-base .mat-subheader{height:48px;line-height:16px}.mat-list-base .mat-subheader:first-child{margin-top:-8px}.mat-list-base .mat-list-item,.mat-list-base .mat-list-option{display:block;height:48px;-webkit-tap-highlight-color:transparent;width:100%;padding:0}.mat-list-base .mat-list-item .mat-list-item-content,.mat-list-base .mat-list-option .mat-list-item-content{display:flex;flex-direction:row;align-items:center;box-sizing:border-box;padding:0 16px;position:relative;height:inherit}.mat-list-base .mat-list-item .mat-list-item-content-reverse,.mat-list-base .mat-list-option .mat-list-item-content-reverse{display:flex;align-items:center;padding:0 16px;flex-direction:row-reverse;justify-content:space-around}.mat-list-base .mat-list-item .mat-list-item-ripple,.mat-list-base .mat-list-option .mat-list-item-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.mat-list-base .mat-list-item.mat-list-item-with-avatar,.mat-list-base .mat-list-option.mat-list-item-with-avatar{height:56px}.mat-list-base .mat-list-item.mat-2-line,.mat-list-base .mat-list-option.mat-2-line{height:72px}.mat-list-base .mat-list-item.mat-3-line,.mat-list-base .mat-list-option.mat-3-line{height:88px}.mat-list-base .mat-list-item.mat-multi-line,.mat-list-base .mat-list-option.mat-multi-line{height:auto}.mat-list-base .mat-list-item.mat-multi-line .mat-list-item-content,.mat-list-base .mat-list-option.mat-multi-line .mat-list-item-content{padding-top:16px;padding-bottom:16px}.mat-list-base .mat-list-item .mat-list-text,.mat-list-base .mat-list-option .mat-list-text{display:flex;flex-direction:column;flex:auto;box-sizing:border-box;overflow:hidden;padding:0}.mat-list-base .mat-list-item .mat-list-text>*,.mat-list-base .mat-list-option .mat-list-text>*{margin:0;padding:0;font-weight:normal;font-size:inherit}.mat-list-base .mat-list-item .mat-list-text:empty,.mat-list-base .mat-list-option .mat-list-text:empty{display:none}.mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:0;padding-left:16px}[dir=rtl] .mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:0}.mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-left:0;padding-right:16px}[dir=rtl] .mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-right:0;padding-left:16px}.mat-list-base .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:16px}.mat-list-base .mat-list-item .mat-list-avatar,.mat-list-base .mat-list-option .mat-list-avatar{flex-shrink:0;width:40px;height:40px;border-radius:50%;object-fit:cover}.mat-list-base .mat-list-item .mat-list-avatar~.mat-divider-inset,.mat-list-base .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:72px;width:calc(100% - 72px)}[dir=rtl] .mat-list-base .mat-list-item .mat-list-avatar~.mat-divider-inset,[dir=rtl] .mat-list-base .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:auto;margin-right:72px}.mat-list-base .mat-list-item .mat-list-icon,.mat-list-base .mat-list-option .mat-list-icon{flex-shrink:0;width:24px;height:24px;font-size:24px;box-sizing:content-box;border-radius:50%;padding:4px}.mat-list-base .mat-list-item .mat-list-icon~.mat-divider-inset,.mat-list-base .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:64px;width:calc(100% - 64px)}[dir=rtl] .mat-list-base .mat-list-item .mat-list-icon~.mat-divider-inset,[dir=rtl] .mat-list-base .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:auto;margin-right:64px}.mat-list-base .mat-list-item .mat-divider,.mat-list-base .mat-list-option .mat-divider{position:absolute;bottom:0;left:0;width:100%;margin:0}[dir=rtl] .mat-list-base .mat-list-item .mat-divider,[dir=rtl] .mat-list-base .mat-list-option .mat-divider{margin-left:auto;margin-right:0}.mat-list-base .mat-list-item .mat-divider.mat-divider-inset,.mat-list-base .mat-list-option .mat-divider.mat-divider-inset{position:absolute}.mat-list-base[dense]{padding-top:4px;display:block}.mat-list-base[dense] .mat-subheader{height:40px;line-height:8px}.mat-list-base[dense] .mat-subheader:first-child{margin-top:-4px}.mat-list-base[dense] .mat-list-item,.mat-list-base[dense] .mat-list-option{display:block;height:40px;-webkit-tap-highlight-color:transparent;width:100%;padding:0}.mat-list-base[dense] .mat-list-item .mat-list-item-content,.mat-list-base[dense] .mat-list-option .mat-list-item-content{display:flex;flex-direction:row;align-items:center;box-sizing:border-box;padding:0 16px;position:relative;height:inherit}.mat-list-base[dense] .mat-list-item .mat-list-item-content-reverse,.mat-list-base[dense] .mat-list-option .mat-list-item-content-reverse{display:flex;align-items:center;padding:0 16px;flex-direction:row-reverse;justify-content:space-around}.mat-list-base[dense] .mat-list-item .mat-list-item-ripple,.mat-list-base[dense] .mat-list-option .mat-list-item-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar{height:48px}.mat-list-base[dense] .mat-list-item.mat-2-line,.mat-list-base[dense] .mat-list-option.mat-2-line{height:60px}.mat-list-base[dense] .mat-list-item.mat-3-line,.mat-list-base[dense] .mat-list-option.mat-3-line{height:76px}.mat-list-base[dense] .mat-list-item.mat-multi-line,.mat-list-base[dense] .mat-list-option.mat-multi-line{height:auto}.mat-list-base[dense] .mat-list-item.mat-multi-line .mat-list-item-content,.mat-list-base[dense] .mat-list-option.mat-multi-line .mat-list-item-content{padding-top:16px;padding-bottom:16px}.mat-list-base[dense] .mat-list-item .mat-list-text,.mat-list-base[dense] .mat-list-option .mat-list-text{display:flex;flex-direction:column;flex:auto;box-sizing:border-box;overflow:hidden;padding:0}.mat-list-base[dense] .mat-list-item .mat-list-text>*,.mat-list-base[dense] .mat-list-option .mat-list-text>*{margin:0;padding:0;font-weight:normal;font-size:inherit}.mat-list-base[dense] .mat-list-item .mat-list-text:empty,.mat-list-base[dense] .mat-list-option .mat-list-text:empty{display:none}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:0;padding-left:16px}[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:0}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-left:0;padding-right:16px}[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-right:0;padding-left:16px}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:16px}.mat-list-base[dense] .mat-list-item .mat-list-avatar,.mat-list-base[dense] .mat-list-option .mat-list-avatar{flex-shrink:0;width:36px;height:36px;border-radius:50%;object-fit:cover}.mat-list-base[dense] .mat-list-item .mat-list-avatar~.mat-divider-inset,.mat-list-base[dense] .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:68px;width:calc(100% - 68px)}[dir=rtl] .mat-list-base[dense] .mat-list-item .mat-list-avatar~.mat-divider-inset,[dir=rtl] .mat-list-base[dense] .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:auto;margin-right:68px}.mat-list-base[dense] .mat-list-item .mat-list-icon,.mat-list-base[dense] .mat-list-option .mat-list-icon{flex-shrink:0;width:20px;height:20px;font-size:20px;box-sizing:content-box;border-radius:50%;padding:4px}.mat-list-base[dense] .mat-list-item .mat-list-icon~.mat-divider-inset,.mat-list-base[dense] .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:60px;width:calc(100% - 60px)}[dir=rtl] .mat-list-base[dense] .mat-list-item .mat-list-icon~.mat-divider-inset,[dir=rtl] .mat-list-base[dense] .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:auto;margin-right:60px}.mat-list-base[dense] .mat-list-item .mat-divider,.mat-list-base[dense] .mat-list-option .mat-divider{position:absolute;bottom:0;left:0;width:100%;margin:0}[dir=rtl] .mat-list-base[dense] .mat-list-item .mat-divider,[dir=rtl] .mat-list-base[dense] .mat-list-option .mat-divider{margin-left:auto;margin-right:0}.mat-list-base[dense] .mat-list-item .mat-divider.mat-divider-inset,.mat-list-base[dense] .mat-list-option .mat-divider.mat-divider-inset{position:absolute}.mat-nav-list a{text-decoration:none;color:inherit}.mat-nav-list .mat-list-item{cursor:pointer;outline:none}mat-action-list button{background:none;color:inherit;border:none;font:inherit;outline:inherit;-webkit-tap-highlight-color:transparent;text-align:left}[dir=rtl] mat-action-list button{text-align:right}mat-action-list button::-moz-focus-inner{border:0}mat-action-list .mat-list-item{cursor:pointer;outline:inherit}.mat-list-option:not(.mat-list-item-disabled){cursor:pointer;outline:none}.mat-list-item-disabled{pointer-events:none}.cdk-high-contrast-active .mat-list-item-disabled{opacity:.5}.cdk-high-contrast-active :host .mat-list-item-disabled{opacity:.5}.cdk-high-contrast-active .mat-selection-list:focus{outline-style:dotted}.cdk-high-contrast-active .mat-list-option:hover,.cdk-high-contrast-active .mat-list-option:focus,.cdk-high-contrast-active .mat-nav-list .mat-list-item:hover,.cdk-high-contrast-active .mat-nav-list .mat-list-item:focus,.cdk-high-contrast-active mat-action-list .mat-list-item:hover,.cdk-high-contrast-active mat-action-list .mat-list-item:focus{outline:dotted 1px;z-index:1}.cdk-high-contrast-active .mat-list-single-selected-option::after{content:\\\"\\\";position:absolute;top:50%;right:16px;transform:translateY(-50%);width:10px;height:0;border-bottom:solid 10px;border-radius:10px}.cdk-high-contrast-active [dir=rtl] .mat-list-single-selected-option::after{right:auto;left:16px}@media(hover: none){.mat-list-option:not(.mat-list-single-selected-option):not(.mat-list-item-disabled):hover,.mat-nav-list .mat-list-item:not(.mat-list-item-disabled):hover,.mat-action-list .mat-list-item:not(.mat-list-item-disabled):hover{background:none}}\\n\"] }]\n        }], ctorParameters: function () {\n        return [{ type: i0.ElementRef }, { type: undefined, decorators: [{\n                        type: Attribute,\n                        args: ['tabindex']\n                    }] }, { type: i0.ChangeDetectorRef }, { type: i3.FocusMonitor }];\n    }, propDecorators: { options: [{\n                type: ContentChildren,\n                args: [MatListOption, { descendants: true }]\n            }], selectionChange: [{\n                type: Output\n            }], tabIndex: [{\n                type: Input\n            }], color: [{\n                type: Input\n            }], compareWith: [{\n                type: Input\n            }], disabled: [{\n                type: Input\n            }], multiple: [{\n                type: Input\n            }] } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass MatListModule {\n}\nMatListModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatListModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nMatListModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatListModule, declarations: [MatList,\n        MatNavList,\n        MatListItem,\n        MatListAvatarCssMatStyler,\n        MatListIconCssMatStyler,\n        MatListSubheaderCssMatStyler,\n        MatSelectionList,\n        MatListOption], imports: [MatLineModule, MatRippleModule, MatCommonModule, MatPseudoCheckboxModule, CommonModule], exports: [MatList,\n        MatNavList,\n        MatListItem,\n        MatListAvatarCssMatStyler,\n        MatLineModule,\n        MatCommonModule,\n        MatListIconCssMatStyler,\n        MatListSubheaderCssMatStyler,\n        MatPseudoCheckboxModule,\n        MatSelectionList,\n        MatListOption,\n        MatDividerModule] });\nMatListModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatListModule, imports: [[MatLineModule, MatRippleModule, MatCommonModule, MatPseudoCheckboxModule, CommonModule], MatLineModule,\n        MatCommonModule,\n        MatPseudoCheckboxModule,\n        MatDividerModule] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatListModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [MatLineModule, MatRippleModule, MatCommonModule, MatPseudoCheckboxModule, CommonModule],\n                    exports: [\n                        MatList,\n                        MatNavList,\n                        MatListItem,\n                        MatListAvatarCssMatStyler,\n                        MatLineModule,\n                        MatCommonModule,\n                        MatListIconCssMatStyler,\n                        MatListSubheaderCssMatStyler,\n                        MatPseudoCheckboxModule,\n                        MatSelectionList,\n                        MatListOption,\n                        MatDividerModule,\n                    ],\n                    declarations: [\n                        MatList,\n                        MatNavList,\n                        MatListItem,\n                        MatListAvatarCssMatStyler,\n                        MatListIconCssMatStyler,\n                        MatListSubheaderCssMatStyler,\n                        MatSelectionList,\n                        MatListOption,\n                    ],\n                }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_LIST, MAT_NAV_LIST, MAT_SELECTION_LIST_VALUE_ACCESSOR, MatList, MatListAvatarCssMatStyler, MatListIconCssMatStyler, MatListItem, MatListModule, MatListOption, MatListSubheaderCssMatStyler, MatNavList, MatSelectionList, MatSelectionListChange };\n","import * as i1 from '@angular/cdk/a11y';\nimport { FocusKeyManager, isFakeTouchstartFromScreenReader, isFakeMousedownFromScreenReader } from '@angular/cdk/a11y';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { UP_ARROW, DOWN_ARROW, RIGHT_ARROW, LEFT_ARROW, ESCAPE, hasModifierKey, ENTER, SPACE } from '@angular/cdk/keycodes';\nimport * as i0 from '@angular/core';\nimport { InjectionToken, Directive, Inject, Component, ChangeDetectionStrategy, ViewEncapsulation, Optional, Input, QueryList, EventEmitter, TemplateRef, ContentChildren, ViewChild, ContentChild, Output, Self, NgModule } from '@angular/core';\nimport { Subject, Subscription, merge, of, asapScheduler } from 'rxjs';\nimport { startWith, switchMap, take, filter, takeUntil, delay } from 'rxjs/operators';\nimport { trigger, state, style, transition, animate } from '@angular/animations';\nimport { TemplatePortal, DomPortalOutlet } from '@angular/cdk/portal';\nimport * as i3 from '@angular/common';\nimport { DOCUMENT, CommonModule } from '@angular/common';\nimport * as i2 from '@angular/material/core';\nimport { mixinDisableRipple, mixinDisabled, MatCommonModule, MatRippleModule } from '@angular/material/core';\nimport * as i1$1 from '@angular/cdk/overlay';\nimport { Overlay, OverlayConfig, OverlayModule } from '@angular/cdk/overlay';\nimport { normalizePassiveListenerOptions } from '@angular/cdk/platform';\nimport * as i3$1 from '@angular/cdk/bidi';\nimport { CdkScrollableModule } from '@angular/cdk/scrolling';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Animations used by the mat-menu component.\n * Animation duration and timing values are based on:\n * https://material.io/guidelines/components/menus.html#menus-usage\n * @docs-private\n */\nconst matMenuAnimations = {\n    /**\n     * This animation controls the menu panel's entry and exit from the page.\n     *\n     * When the menu panel is added to the DOM, it scales in and fades in its border.\n     *\n     * When the menu panel is removed from the DOM, it simply fades out after a brief\n     * delay to display the ripple.\n     */\n    transformMenu: trigger('transformMenu', [\n        state('void', style({\n            opacity: 0,\n            transform: 'scale(0.8)',\n        })),\n        transition('void => enter', animate('120ms cubic-bezier(0, 0, 0.2, 1)', style({\n            opacity: 1,\n            transform: 'scale(1)',\n        }))),\n        transition('* => void', animate('100ms 25ms linear', style({ opacity: 0 }))),\n    ]),\n    /**\n     * This animation fades in the background color and content of the menu panel\n     * after its containing element is scaled in.\n     */\n    fadeInItems: trigger('fadeInItems', [\n        // TODO(crisbeto): this is inside the `transformMenu`\n        // now. Remove next time we do breaking changes.\n        state('showing', style({ opacity: 1 })),\n        transition('void => *', [\n            style({ opacity: 0 }),\n            animate('400ms 100ms cubic-bezier(0.55, 0, 0.55, 0.2)'),\n        ]),\n    ]),\n};\n/**\n * @deprecated\n * @breaking-change 8.0.0\n * @docs-private\n */\nconst fadeInItems = matMenuAnimations.fadeInItems;\n/**\n * @deprecated\n * @breaking-change 8.0.0\n * @docs-private\n */\nconst transformMenu = matMenuAnimations.transformMenu;\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Injection token that can be used to reference instances of `MatMenuContent`. It serves\n * as alternative token to the actual `MatMenuContent` class which could cause unnecessary\n * retention of the class and its directive metadata.\n */\nconst MAT_MENU_CONTENT = new InjectionToken('MatMenuContent');\nclass _MatMenuContentBase {\n    constructor(_template, _componentFactoryResolver, _appRef, _injector, _viewContainerRef, _document, _changeDetectorRef) {\n        this._template = _template;\n        this._componentFactoryResolver = _componentFactoryResolver;\n        this._appRef = _appRef;\n        this._injector = _injector;\n        this._viewContainerRef = _viewContainerRef;\n        this._document = _document;\n        this._changeDetectorRef = _changeDetectorRef;\n        /** Emits when the menu content has been attached. */\n        this._attached = new Subject();\n    }\n    /**\n     * Attaches the content with a particular context.\n     * @docs-private\n     */\n    attach(context = {}) {\n        if (!this._portal) {\n            this._portal = new TemplatePortal(this._template, this._viewContainerRef);\n        }\n        this.detach();\n        if (!this._outlet) {\n            this._outlet = new DomPortalOutlet(this._document.createElement('div'), this._componentFactoryResolver, this._appRef, this._injector);\n        }\n        const element = this._template.elementRef.nativeElement;\n        // Because we support opening the same menu from different triggers (which in turn have their\n        // own `OverlayRef` panel), we have to re-insert the host element every time, otherwise we\n        // risk it staying attached to a pane that's no longer in the DOM.\n        element.parentNode.insertBefore(this._outlet.outletElement, element);\n        // When `MatMenuContent` is used in an `OnPush` component, the insertion of the menu\n        // content via `createEmbeddedView` does not cause the content to be seen as \"dirty\"\n        // by Angular. This causes the `@ContentChildren` for menu items within the menu to\n        // not be updated by Angular. By explicitly marking for check here, we tell Angular that\n        // it needs to check for new menu items and update the `@ContentChild` in `MatMenu`.\n        // @breaking-change 9.0.0 Make change detector ref required\n        if (this._changeDetectorRef) {\n            this._changeDetectorRef.markForCheck();\n        }\n        this._portal.attach(this._outlet, context);\n        this._attached.next();\n    }\n    /**\n     * Detaches the content.\n     * @docs-private\n     */\n    detach() {\n        if (this._portal.isAttached) {\n            this._portal.detach();\n        }\n    }\n    ngOnDestroy() {\n        if (this._outlet) {\n            this._outlet.dispose();\n        }\n    }\n}\n_MatMenuContentBase.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: _MatMenuContentBase, deps: [{ token: i0.TemplateRef }, { token: i0.ComponentFactoryResolver }, { token: i0.ApplicationRef }, { token: i0.Injector }, { token: i0.ViewContainerRef }, { token: DOCUMENT }, { token: i0.ChangeDetectorRef }], target: i0.ɵɵFactoryTarget.Directive });\n_MatMenuContentBase.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.1.0\", type: _MatMenuContentBase, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: _MatMenuContentBase, decorators: [{\n            type: Directive\n        }], ctorParameters: function () {\n        return [{ type: i0.TemplateRef }, { type: i0.ComponentFactoryResolver }, { type: i0.ApplicationRef }, { type: i0.Injector }, { type: i0.ViewContainerRef }, { type: undefined, decorators: [{\n                        type: Inject,\n                        args: [DOCUMENT]\n                    }] }, { type: i0.ChangeDetectorRef }];\n    } });\n/**\n * Menu content that will be rendered lazily once the menu is opened.\n */\nclass MatMenuContent extends _MatMenuContentBase {\n}\nMatMenuContent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatMenuContent, deps: null, target: i0.ɵɵFactoryTarget.Directive });\nMatMenuContent.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.1.0\", type: MatMenuContent, selector: \"ng-template[matMenuContent]\", providers: [{ provide: MAT_MENU_CONTENT, useExisting: MatMenuContent }], usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatMenuContent, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'ng-template[matMenuContent]',\n                    providers: [{ provide: MAT_MENU_CONTENT, useExisting: MatMenuContent }],\n                }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Throws an exception for the case when menu trigger doesn't have a valid mat-menu instance\n * @docs-private\n */\nfunction throwMatMenuMissingError() {\n    throw Error(`matMenuTriggerFor: must pass in an mat-menu instance.\n\n    Example:\n      <mat-menu #menu=\"matMenu\"></mat-menu>\n      <button [matMenuTriggerFor]=\"menu\"></button>`);\n}\n/**\n * Throws an exception for the case when menu's x-position value isn't valid.\n * In other words, it doesn't match 'before' or 'after'.\n * @docs-private\n */\nfunction throwMatMenuInvalidPositionX() {\n    throw Error(`xPosition value must be either 'before' or after'.\n      Example: <mat-menu xPosition=\"before\" #menu=\"matMenu\"></mat-menu>`);\n}\n/**\n * Throws an exception for the case when menu's y-position value isn't valid.\n * In other words, it doesn't match 'above' or 'below'.\n * @docs-private\n */\nfunction throwMatMenuInvalidPositionY() {\n    throw Error(`yPosition value must be either 'above' or below'.\n      Example: <mat-menu yPosition=\"above\" #menu=\"matMenu\"></mat-menu>`);\n}\n/**\n * Throws an exception for the case when a menu is assigned\n * to a trigger that is placed inside the same menu.\n * @docs-private\n */\nfunction throwMatMenuRecursiveError() {\n    throw Error(`matMenuTriggerFor: menu cannot contain its own trigger. Assign a menu that is ` +\n        `not a parent of the trigger or move the trigger outside of the menu.`);\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Injection token used to provide the parent menu to menu-specific components.\n * @docs-private\n */\nconst MAT_MENU_PANEL = new InjectionToken('MAT_MENU_PANEL');\n\n// Boilerplate for applying mixins to MatMenuItem.\n/** @docs-private */\nconst _MatMenuItemBase = mixinDisableRipple(mixinDisabled(class {\n}));\n/**\n * Single item inside of a `mat-menu`. Provides the menu item styling and accessibility treatment.\n */\nclass MatMenuItem extends _MatMenuItemBase {\n    constructor(_elementRef, \n    /**\n     * @deprecated `_document` parameter is no longer being used and will be removed.\n     * @breaking-change 12.0.0\n     */\n    _document, _focusMonitor, _parentMenu, \n    /**\n     * @deprecated `_changeDetectorRef` to become a required parameter.\n     * @breaking-change 14.0.0\n     */\n    _changeDetectorRef) {\n        // @breaking-change 8.0.0 make `_focusMonitor` and `document` required params.\n        super();\n        this._elementRef = _elementRef;\n        this._focusMonitor = _focusMonitor;\n        this._parentMenu = _parentMenu;\n        this._changeDetectorRef = _changeDetectorRef;\n        /** ARIA role for the menu item. */\n        this.role = 'menuitem';\n        /** Stream that emits when the menu item is hovered. */\n        this._hovered = new Subject();\n        /** Stream that emits when the menu item is focused. */\n        this._focused = new Subject();\n        /** Whether the menu item is highlighted. */\n        this._highlighted = false;\n        /** Whether the menu item acts as a trigger for a sub-menu. */\n        this._triggersSubmenu = false;\n        if (_parentMenu && _parentMenu.addItem) {\n            _parentMenu.addItem(this);\n        }\n    }\n    /** Focuses the menu item. */\n    focus(origin, options) {\n        if (this._focusMonitor && origin) {\n            this._focusMonitor.focusVia(this._getHostElement(), origin, options);\n        }\n        else {\n            this._getHostElement().focus(options);\n        }\n        this._focused.next(this);\n    }\n    ngAfterViewInit() {\n        if (this._focusMonitor) {\n            // Start monitoring the element so it gets the appropriate focused classes. We want\n            // to show the focus style for menu items only when the focus was not caused by a\n            // mouse or touch interaction.\n            this._focusMonitor.monitor(this._elementRef, false);\n        }\n    }\n    ngOnDestroy() {\n        if (this._focusMonitor) {\n            this._focusMonitor.stopMonitoring(this._elementRef);\n        }\n        if (this._parentMenu && this._parentMenu.removeItem) {\n            this._parentMenu.removeItem(this);\n        }\n        this._hovered.complete();\n        this._focused.complete();\n    }\n    /** Used to set the `tabindex`. */\n    _getTabIndex() {\n        return this.disabled ? '-1' : '0';\n    }\n    /** Returns the host DOM element. */\n    _getHostElement() {\n        return this._elementRef.nativeElement;\n    }\n    /** Prevents the default element actions if it is disabled. */\n    _checkDisabled(event) {\n        if (this.disabled) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n    }\n    /** Emits to the hover stream. */\n    _handleMouseEnter() {\n        this._hovered.next(this);\n    }\n    /** Gets the label to be used when determining whether the option should be focused. */\n    getLabel() {\n        var _a;\n        const clone = this._elementRef.nativeElement.cloneNode(true);\n        const icons = clone.querySelectorAll('mat-icon, .material-icons');\n        // Strip away icons so they don't show up in the text.\n        for (let i = 0; i < icons.length; i++) {\n            icons[i].remove();\n        }\n        return ((_a = clone.textContent) === null || _a === void 0 ? void 0 : _a.trim()) || '';\n    }\n    _setHighlighted(isHighlighted) {\n        var _a;\n        // We need to mark this for check for the case where the content is coming from a\n        // `matMenuContent` whose change detection tree is at the declaration position,\n        // not the insertion position. See #23175.\n        // @breaking-change 14.0.0 Remove null check for `_changeDetectorRef`.\n        this._highlighted = isHighlighted;\n        (_a = this._changeDetectorRef) === null || _a === void 0 ? void 0 : _a.markForCheck();\n    }\n}\nMatMenuItem.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatMenuItem, deps: [{ token: i0.ElementRef }, { token: DOCUMENT }, { token: i1.FocusMonitor }, { token: MAT_MENU_PANEL, optional: true }, { token: i0.ChangeDetectorRef }], target: i0.ɵɵFactoryTarget.Component });\nMatMenuItem.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: MatMenuItem, selector: \"[mat-menu-item]\", inputs: { disabled: \"disabled\", disableRipple: \"disableRipple\", role: \"role\" }, host: { listeners: { \"click\": \"_checkDisabled($event)\", \"mouseenter\": \"_handleMouseEnter()\" }, properties: { \"attr.role\": \"role\", \"class.mat-menu-item\": \"true\", \"class.mat-menu-item-highlighted\": \"_highlighted\", \"class.mat-menu-item-submenu-trigger\": \"_triggersSubmenu\", \"attr.tabindex\": \"_getTabIndex()\", \"attr.aria-disabled\": \"disabled.toString()\", \"attr.disabled\": \"disabled || null\" }, classAttribute: \"mat-focus-indicator\" }, exportAs: [\"matMenuItem\"], usesInheritance: true, ngImport: i0, template: \"<ng-content></ng-content>\\n<div class=\\\"mat-menu-ripple\\\" matRipple\\n     [matRippleDisabled]=\\\"disableRipple || disabled\\\"\\n     [matRippleTrigger]=\\\"_getHostElement()\\\">\\n</div>\\n\\n<svg\\n  *ngIf=\\\"_triggersSubmenu\\\"\\n  class=\\\"mat-menu-submenu-icon\\\"\\n  viewBox=\\\"0 0 5 10\\\"\\n  focusable=\\\"false\\\"><polygon points=\\\"0,0 5,5 0,10\\\"/></svg>\\n\", directives: [{ type: i2.MatRipple, selector: \"[mat-ripple], [matRipple]\", inputs: [\"matRippleColor\", \"matRippleUnbounded\", \"matRippleCentered\", \"matRippleRadius\", \"matRippleAnimation\", \"matRippleDisabled\", \"matRippleTrigger\"], exportAs: [\"matRipple\"] }, { type: i3.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatMenuItem, decorators: [{\n            type: Component,\n            args: [{ selector: '[mat-menu-item]', exportAs: 'matMenuItem', inputs: ['disabled', 'disableRipple'], host: {\n                        '[attr.role]': 'role',\n                        '[class.mat-menu-item]': 'true',\n                        '[class.mat-menu-item-highlighted]': '_highlighted',\n                        '[class.mat-menu-item-submenu-trigger]': '_triggersSubmenu',\n                        '[attr.tabindex]': '_getTabIndex()',\n                        '[attr.aria-disabled]': 'disabled.toString()',\n                        '[attr.disabled]': 'disabled || null',\n                        'class': 'mat-focus-indicator',\n                        '(click)': '_checkDisabled($event)',\n                        '(mouseenter)': '_handleMouseEnter()',\n                    }, changeDetection: ChangeDetectionStrategy.OnPush, encapsulation: ViewEncapsulation.None, template: \"<ng-content></ng-content>\\n<div class=\\\"mat-menu-ripple\\\" matRipple\\n     [matRippleDisabled]=\\\"disableRipple || disabled\\\"\\n     [matRippleTrigger]=\\\"_getHostElement()\\\">\\n</div>\\n\\n<svg\\n  *ngIf=\\\"_triggersSubmenu\\\"\\n  class=\\\"mat-menu-submenu-icon\\\"\\n  viewBox=\\\"0 0 5 10\\\"\\n  focusable=\\\"false\\\"><polygon points=\\\"0,0 5,5 0,10\\\"/></svg>\\n\" }]\n        }], ctorParameters: function () {\n        return [{ type: i0.ElementRef }, { type: undefined, decorators: [{\n                        type: Inject,\n                        args: [DOCUMENT]\n                    }] }, { type: i1.FocusMonitor }, { type: undefined, decorators: [{\n                        type: Inject,\n                        args: [MAT_MENU_PANEL]\n                    }, {\n                        type: Optional\n                    }] }, { type: i0.ChangeDetectorRef }];\n    }, propDecorators: { role: [{\n                type: Input\n            }] } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Injection token to be used to override the default options for `mat-menu`. */\nconst MAT_MENU_DEFAULT_OPTIONS = new InjectionToken('mat-menu-default-options', {\n    providedIn: 'root',\n    factory: MAT_MENU_DEFAULT_OPTIONS_FACTORY,\n});\n/** @docs-private */\nfunction MAT_MENU_DEFAULT_OPTIONS_FACTORY() {\n    return {\n        overlapTrigger: false,\n        xPosition: 'after',\n        yPosition: 'below',\n        backdropClass: 'cdk-overlay-transparent-backdrop',\n    };\n}\nlet menuPanelUid = 0;\n/** Base class with all of the `MatMenu` functionality. */\nclass _MatMenuBase {\n    constructor(_elementRef, _ngZone, _defaultOptions) {\n        this._elementRef = _elementRef;\n        this._ngZone = _ngZone;\n        this._defaultOptions = _defaultOptions;\n        this._xPosition = this._defaultOptions.xPosition;\n        this._yPosition = this._defaultOptions.yPosition;\n        /** Only the direct descendant menu items. */\n        this._directDescendantItems = new QueryList();\n        /** Subscription to tab events on the menu panel */\n        this._tabSubscription = Subscription.EMPTY;\n        /** Config object to be passed into the menu's ngClass */\n        this._classList = {};\n        /** Current state of the panel animation. */\n        this._panelAnimationState = 'void';\n        /** Emits whenever an animation on the menu completes. */\n        this._animationDone = new Subject();\n        /** Class or list of classes to be added to the overlay panel. */\n        this.overlayPanelClass = this._defaultOptions.overlayPanelClass || '';\n        /** Class to be added to the backdrop element. */\n        this.backdropClass = this._defaultOptions.backdropClass;\n        this._overlapTrigger = this._defaultOptions.overlapTrigger;\n        this._hasBackdrop = this._defaultOptions.hasBackdrop;\n        /** Event emitted when the menu is closed. */\n        this.closed = new EventEmitter();\n        /**\n         * Event emitted when the menu is closed.\n         * @deprecated Switch to `closed` instead\n         * @breaking-change 8.0.0\n         */\n        this.close = this.closed;\n        this.panelId = `mat-menu-panel-${menuPanelUid++}`;\n    }\n    /** Position of the menu in the X axis. */\n    get xPosition() {\n        return this._xPosition;\n    }\n    set xPosition(value) {\n        if (value !== 'before' &&\n            value !== 'after' &&\n            (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throwMatMenuInvalidPositionX();\n        }\n        this._xPosition = value;\n        this.setPositionClasses();\n    }\n    /** Position of the menu in the Y axis. */\n    get yPosition() {\n        return this._yPosition;\n    }\n    set yPosition(value) {\n        if (value !== 'above' && value !== 'below' && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throwMatMenuInvalidPositionY();\n        }\n        this._yPosition = value;\n        this.setPositionClasses();\n    }\n    /** Whether the menu should overlap its trigger. */\n    get overlapTrigger() {\n        return this._overlapTrigger;\n    }\n    set overlapTrigger(value) {\n        this._overlapTrigger = coerceBooleanProperty(value);\n    }\n    /** Whether the menu has a backdrop. */\n    get hasBackdrop() {\n        return this._hasBackdrop;\n    }\n    set hasBackdrop(value) {\n        this._hasBackdrop = coerceBooleanProperty(value);\n    }\n    /**\n     * This method takes classes set on the host mat-menu element and applies them on the\n     * menu template that displays in the overlay container.  Otherwise, it's difficult\n     * to style the containing menu from outside the component.\n     * @param classes list of class names\n     */\n    set panelClass(classes) {\n        const previousPanelClass = this._previousPanelClass;\n        if (previousPanelClass && previousPanelClass.length) {\n            previousPanelClass.split(' ').forEach((className) => {\n                this._classList[className] = false;\n            });\n        }\n        this._previousPanelClass = classes;\n        if (classes && classes.length) {\n            classes.split(' ').forEach((className) => {\n                this._classList[className] = true;\n            });\n            this._elementRef.nativeElement.className = '';\n        }\n    }\n    /**\n     * This method takes classes set on the host mat-menu element and applies them on the\n     * menu template that displays in the overlay container.  Otherwise, it's difficult\n     * to style the containing menu from outside the component.\n     * @deprecated Use `panelClass` instead.\n     * @breaking-change 8.0.0\n     */\n    get classList() {\n        return this.panelClass;\n    }\n    set classList(classes) {\n        this.panelClass = classes;\n    }\n    ngOnInit() {\n        this.setPositionClasses();\n    }\n    ngAfterContentInit() {\n        this._updateDirectDescendants();\n        this._keyManager = new FocusKeyManager(this._directDescendantItems)\n            .withWrap()\n            .withTypeAhead()\n            .withHomeAndEnd();\n        this._tabSubscription = this._keyManager.tabOut.subscribe(() => this.closed.emit('tab'));\n        // If a user manually (programmatically) focuses a menu item, we need to reflect that focus\n        // change back to the key manager. Note that we don't need to unsubscribe here because _focused\n        // is internal and we know that it gets completed on destroy.\n        this._directDescendantItems.changes\n            .pipe(startWith(this._directDescendantItems), switchMap(items => merge(...items.map((item) => item._focused))))\n            .subscribe(focusedItem => this._keyManager.updateActiveItem(focusedItem));\n    }\n    ngOnDestroy() {\n        this._directDescendantItems.destroy();\n        this._tabSubscription.unsubscribe();\n        this.closed.complete();\n    }\n    /** Stream that emits whenever the hovered menu item changes. */\n    _hovered() {\n        // Coerce the `changes` property because Angular types it as `Observable<any>`\n        const itemChanges = this._directDescendantItems.changes;\n        return itemChanges.pipe(startWith(this._directDescendantItems), switchMap(items => merge(...items.map((item) => item._hovered))));\n    }\n    /*\n     * Registers a menu item with the menu.\n     * @docs-private\n     * @deprecated No longer being used. To be removed.\n     * @breaking-change 9.0.0\n     */\n    addItem(_item) { }\n    /**\n     * Removes an item from the menu.\n     * @docs-private\n     * @deprecated No longer being used. To be removed.\n     * @breaking-change 9.0.0\n     */\n    removeItem(_item) { }\n    /** Handle a keyboard event from the menu, delegating to the appropriate action. */\n    _handleKeydown(event) {\n        const keyCode = event.keyCode;\n        const manager = this._keyManager;\n        switch (keyCode) {\n            case ESCAPE:\n                if (!hasModifierKey(event)) {\n                    event.preventDefault();\n                    this.closed.emit('keydown');\n                }\n                break;\n            case LEFT_ARROW:\n                if (this.parentMenu && this.direction === 'ltr') {\n                    this.closed.emit('keydown');\n                }\n                break;\n            case RIGHT_ARROW:\n                if (this.parentMenu && this.direction === 'rtl') {\n                    this.closed.emit('keydown');\n                }\n                break;\n            default:\n                if (keyCode === UP_ARROW || keyCode === DOWN_ARROW) {\n                    manager.setFocusOrigin('keyboard');\n                }\n                manager.onKeydown(event);\n        }\n    }\n    /**\n     * Focus the first item in the menu.\n     * @param origin Action from which the focus originated. Used to set the correct styling.\n     */\n    focusFirstItem(origin = 'program') {\n        // When the content is rendered lazily, it takes a bit before the items are inside the DOM.\n        if (this.lazyContent) {\n            this._ngZone.onStable.pipe(take(1)).subscribe(() => this._focusFirstItem(origin));\n        }\n        else {\n            this._focusFirstItem(origin);\n        }\n    }\n    /**\n     * Actual implementation that focuses the first item. Needs to be separated\n     * out so we don't repeat the same logic in the public `focusFirstItem` method.\n     */\n    _focusFirstItem(origin) {\n        const manager = this._keyManager;\n        manager.setFocusOrigin(origin).setFirstItemActive();\n        // If there's no active item at this point, it means that all the items are disabled.\n        // Move focus to the menu panel so keyboard events like Escape still work. Also this will\n        // give _some_ feedback to screen readers.\n        if (!manager.activeItem && this._directDescendantItems.length) {\n            let element = this._directDescendantItems.first._getHostElement().parentElement;\n            // Because the `mat-menu` is at the DOM insertion point, not inside the overlay, we don't\n            // have a nice way of getting a hold of the menu panel. We can't use a `ViewChild` either\n            // because the panel is inside an `ng-template`. We work around it by starting from one of\n            // the items and walking up the DOM.\n            while (element) {\n                if (element.getAttribute('role') === 'menu') {\n                    element.focus();\n                    break;\n                }\n                else {\n                    element = element.parentElement;\n                }\n            }\n        }\n    }\n    /**\n     * Resets the active item in the menu. This is used when the menu is opened, allowing\n     * the user to start from the first option when pressing the down arrow.\n     */\n    resetActiveItem() {\n        this._keyManager.setActiveItem(-1);\n    }\n    /**\n     * Sets the menu panel elevation.\n     * @param depth Number of parent menus that come before the menu.\n     */\n    setElevation(depth) {\n        // The elevation starts at the base and increases by one for each level.\n        // Capped at 24 because that's the maximum elevation defined in the Material design spec.\n        const elevation = Math.min(this._baseElevation + depth, 24);\n        const newElevation = `${this._elevationPrefix}${elevation}`;\n        const customElevation = Object.keys(this._classList).find(className => {\n            return className.startsWith(this._elevationPrefix);\n        });\n        if (!customElevation || customElevation === this._previousElevation) {\n            if (this._previousElevation) {\n                this._classList[this._previousElevation] = false;\n            }\n            this._classList[newElevation] = true;\n            this._previousElevation = newElevation;\n        }\n    }\n    /**\n     * Adds classes to the menu panel based on its position. Can be used by\n     * consumers to add specific styling based on the position.\n     * @param posX Position of the menu along the x axis.\n     * @param posY Position of the menu along the y axis.\n     * @docs-private\n     */\n    setPositionClasses(posX = this.xPosition, posY = this.yPosition) {\n        const classes = this._classList;\n        classes['mat-menu-before'] = posX === 'before';\n        classes['mat-menu-after'] = posX === 'after';\n        classes['mat-menu-above'] = posY === 'above';\n        classes['mat-menu-below'] = posY === 'below';\n    }\n    /** Starts the enter animation. */\n    _startAnimation() {\n        // @breaking-change 8.0.0 Combine with _resetAnimation.\n        this._panelAnimationState = 'enter';\n    }\n    /** Resets the panel animation to its initial state. */\n    _resetAnimation() {\n        // @breaking-change 8.0.0 Combine with _startAnimation.\n        this._panelAnimationState = 'void';\n    }\n    /** Callback that is invoked when the panel animation completes. */\n    _onAnimationDone(event) {\n        this._animationDone.next(event);\n        this._isAnimating = false;\n    }\n    _onAnimationStart(event) {\n        this._isAnimating = true;\n        // Scroll the content element to the top as soon as the animation starts. This is necessary,\n        // because we move focus to the first item while it's still being animated, which can throw\n        // the browser off when it determines the scroll position. Alternatively we can move focus\n        // when the animation is done, however moving focus asynchronously will interrupt screen\n        // readers which are in the process of reading out the menu already. We take the `element`\n        // from the `event` since we can't use a `ViewChild` to access the pane.\n        if (event.toState === 'enter' && this._keyManager.activeItemIndex === 0) {\n            event.element.scrollTop = 0;\n        }\n    }\n    /**\n     * Sets up a stream that will keep track of any newly-added menu items and will update the list\n     * of direct descendants. We collect the descendants this way, because `_allItems` can include\n     * items that are part of child menus, and using a custom way of registering items is unreliable\n     * when it comes to maintaining the item order.\n     */\n    _updateDirectDescendants() {\n        this._allItems.changes\n            .pipe(startWith(this._allItems))\n            .subscribe((items) => {\n            this._directDescendantItems.reset(items.filter(item => item._parentMenu === this));\n            this._directDescendantItems.notifyOnChanges();\n        });\n    }\n}\n_MatMenuBase.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: _MatMenuBase, deps: [{ token: i0.ElementRef }, { token: i0.NgZone }, { token: MAT_MENU_DEFAULT_OPTIONS }], target: i0.ɵɵFactoryTarget.Directive });\n_MatMenuBase.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.1.0\", type: _MatMenuBase, inputs: { backdropClass: \"backdropClass\", ariaLabel: [\"aria-label\", \"ariaLabel\"], ariaLabelledby: [\"aria-labelledby\", \"ariaLabelledby\"], ariaDescribedby: [\"aria-describedby\", \"ariaDescribedby\"], xPosition: \"xPosition\", yPosition: \"yPosition\", overlapTrigger: \"overlapTrigger\", hasBackdrop: \"hasBackdrop\", panelClass: [\"class\", \"panelClass\"], classList: \"classList\" }, outputs: { closed: \"closed\", close: \"close\" }, queries: [{ propertyName: \"lazyContent\", first: true, predicate: MAT_MENU_CONTENT, descendants: true }, { propertyName: \"_allItems\", predicate: MatMenuItem, descendants: true }, { propertyName: \"items\", predicate: MatMenuItem }], viewQueries: [{ propertyName: \"templateRef\", first: true, predicate: TemplateRef, descendants: true }], ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: _MatMenuBase, decorators: [{\n            type: Directive\n        }], ctorParameters: function () {\n        return [{ type: i0.ElementRef }, { type: i0.NgZone }, { type: undefined, decorators: [{\n                        type: Inject,\n                        args: [MAT_MENU_DEFAULT_OPTIONS]\n                    }] }];\n    }, propDecorators: { _allItems: [{\n                type: ContentChildren,\n                args: [MatMenuItem, { descendants: true }]\n            }], backdropClass: [{\n                type: Input\n            }], ariaLabel: [{\n                type: Input,\n                args: ['aria-label']\n            }], ariaLabelledby: [{\n                type: Input,\n                args: ['aria-labelledby']\n            }], ariaDescribedby: [{\n                type: Input,\n                args: ['aria-describedby']\n            }], xPosition: [{\n                type: Input\n            }], yPosition: [{\n                type: Input\n            }], templateRef: [{\n                type: ViewChild,\n                args: [TemplateRef]\n            }], items: [{\n                type: ContentChildren,\n                args: [MatMenuItem, { descendants: false }]\n            }], lazyContent: [{\n                type: ContentChild,\n                args: [MAT_MENU_CONTENT]\n            }], overlapTrigger: [{\n                type: Input\n            }], hasBackdrop: [{\n                type: Input\n            }], panelClass: [{\n                type: Input,\n                args: ['class']\n            }], classList: [{\n                type: Input\n            }], closed: [{\n                type: Output\n            }], close: [{\n                type: Output\n            }] } });\n/** @docs-public MatMenu */\nclass MatMenu extends _MatMenuBase {\n    constructor(elementRef, ngZone, defaultOptions) {\n        super(elementRef, ngZone, defaultOptions);\n        this._elevationPrefix = 'mat-elevation-z';\n        this._baseElevation = 4;\n    }\n}\nMatMenu.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatMenu, deps: [{ token: i0.ElementRef }, { token: i0.NgZone }, { token: MAT_MENU_DEFAULT_OPTIONS }], target: i0.ɵɵFactoryTarget.Component });\nMatMenu.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: MatMenu, selector: \"mat-menu\", host: { properties: { \"attr.aria-label\": \"null\", \"attr.aria-labelledby\": \"null\", \"attr.aria-describedby\": \"null\" } }, providers: [{ provide: MAT_MENU_PANEL, useExisting: MatMenu }], exportAs: [\"matMenu\"], usesInheritance: true, ngImport: i0, template: \"<ng-template>\\n  <div\\n    class=\\\"mat-menu-panel\\\"\\n    [id]=\\\"panelId\\\"\\n    [ngClass]=\\\"_classList\\\"\\n    (keydown)=\\\"_handleKeydown($event)\\\"\\n    (click)=\\\"closed.emit('click')\\\"\\n    [@transformMenu]=\\\"_panelAnimationState\\\"\\n    (@transformMenu.start)=\\\"_onAnimationStart($event)\\\"\\n    (@transformMenu.done)=\\\"_onAnimationDone($event)\\\"\\n    tabindex=\\\"-1\\\"\\n    role=\\\"menu\\\"\\n    [attr.aria-label]=\\\"ariaLabel || null\\\"\\n    [attr.aria-labelledby]=\\\"ariaLabelledby || null\\\"\\n    [attr.aria-describedby]=\\\"ariaDescribedby || null\\\">\\n    <div class=\\\"mat-menu-content\\\">\\n      <ng-content></ng-content>\\n    </div>\\n  </div>\\n</ng-template>\\n\", styles: [\"mat-menu{display:none}.mat-menu-panel{min-width:112px;max-width:280px;overflow:auto;-webkit-overflow-scrolling:touch;max-height:calc(100vh - 48px);border-radius:4px;outline:0;min-height:64px}.mat-menu-panel.ng-animating{pointer-events:none}.cdk-high-contrast-active .mat-menu-panel{outline:solid 1px}.mat-menu-content:not(:empty){padding-top:8px;padding-bottom:8px}.mat-menu-item{-webkit-user-select:none;-moz-user-select:none;user-select:none;cursor:pointer;outline:none;border:none;-webkit-tap-highlight-color:transparent;white-space:nowrap;overflow:hidden;text-overflow:ellipsis;display:block;line-height:48px;height:48px;padding:0 16px;text-align:left;text-decoration:none;max-width:100%;position:relative}.mat-menu-item::-moz-focus-inner{border:0}.mat-menu-item[disabled]{cursor:default}[dir=rtl] .mat-menu-item{text-align:right}.mat-menu-item .mat-icon{margin-right:16px;vertical-align:middle}.mat-menu-item .mat-icon svg{vertical-align:top}[dir=rtl] .mat-menu-item .mat-icon{margin-left:16px;margin-right:0}.mat-menu-item[disabled]{pointer-events:none}.cdk-high-contrast-active .mat-menu-item{margin-top:1px}.cdk-high-contrast-active .mat-menu-item.cdk-program-focused,.cdk-high-contrast-active .mat-menu-item.cdk-keyboard-focused,.cdk-high-contrast-active .mat-menu-item-highlighted{outline:dotted 1px}.mat-menu-item-submenu-trigger{padding-right:32px}[dir=rtl] .mat-menu-item-submenu-trigger{padding-right:16px;padding-left:32px}.mat-menu-submenu-icon{position:absolute;top:50%;right:16px;transform:translateY(-50%);width:5px;height:10px;fill:currentColor}[dir=rtl] .mat-menu-submenu-icon{right:auto;left:16px;transform:translateY(-50%) scaleX(-1)}.cdk-high-contrast-active .mat-menu-submenu-icon{fill:CanvasText}button.mat-menu-item{width:100%}.mat-menu-item .mat-menu-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}\\n\"], directives: [{ type: i3.NgClass, selector: \"[ngClass]\", inputs: [\"class\", \"ngClass\"] }], animations: [matMenuAnimations.transformMenu, matMenuAnimations.fadeInItems], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatMenu, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-menu', changeDetection: ChangeDetectionStrategy.OnPush, encapsulation: ViewEncapsulation.None, exportAs: 'matMenu', host: {\n                        '[attr.aria-label]': 'null',\n                        '[attr.aria-labelledby]': 'null',\n                        '[attr.aria-describedby]': 'null',\n                    }, animations: [matMenuAnimations.transformMenu, matMenuAnimations.fadeInItems], providers: [{ provide: MAT_MENU_PANEL, useExisting: MatMenu }], template: \"<ng-template>\\n  <div\\n    class=\\\"mat-menu-panel\\\"\\n    [id]=\\\"panelId\\\"\\n    [ngClass]=\\\"_classList\\\"\\n    (keydown)=\\\"_handleKeydown($event)\\\"\\n    (click)=\\\"closed.emit('click')\\\"\\n    [@transformMenu]=\\\"_panelAnimationState\\\"\\n    (@transformMenu.start)=\\\"_onAnimationStart($event)\\\"\\n    (@transformMenu.done)=\\\"_onAnimationDone($event)\\\"\\n    tabindex=\\\"-1\\\"\\n    role=\\\"menu\\\"\\n    [attr.aria-label]=\\\"ariaLabel || null\\\"\\n    [attr.aria-labelledby]=\\\"ariaLabelledby || null\\\"\\n    [attr.aria-describedby]=\\\"ariaDescribedby || null\\\">\\n    <div class=\\\"mat-menu-content\\\">\\n      <ng-content></ng-content>\\n    </div>\\n  </div>\\n</ng-template>\\n\", styles: [\"mat-menu{display:none}.mat-menu-panel{min-width:112px;max-width:280px;overflow:auto;-webkit-overflow-scrolling:touch;max-height:calc(100vh - 48px);border-radius:4px;outline:0;min-height:64px}.mat-menu-panel.ng-animating{pointer-events:none}.cdk-high-contrast-active .mat-menu-panel{outline:solid 1px}.mat-menu-content:not(:empty){padding-top:8px;padding-bottom:8px}.mat-menu-item{-webkit-user-select:none;-moz-user-select:none;user-select:none;cursor:pointer;outline:none;border:none;-webkit-tap-highlight-color:transparent;white-space:nowrap;overflow:hidden;text-overflow:ellipsis;display:block;line-height:48px;height:48px;padding:0 16px;text-align:left;text-decoration:none;max-width:100%;position:relative}.mat-menu-item::-moz-focus-inner{border:0}.mat-menu-item[disabled]{cursor:default}[dir=rtl] .mat-menu-item{text-align:right}.mat-menu-item .mat-icon{margin-right:16px;vertical-align:middle}.mat-menu-item .mat-icon svg{vertical-align:top}[dir=rtl] .mat-menu-item .mat-icon{margin-left:16px;margin-right:0}.mat-menu-item[disabled]{pointer-events:none}.cdk-high-contrast-active .mat-menu-item{margin-top:1px}.cdk-high-contrast-active .mat-menu-item.cdk-program-focused,.cdk-high-contrast-active .mat-menu-item.cdk-keyboard-focused,.cdk-high-contrast-active .mat-menu-item-highlighted{outline:dotted 1px}.mat-menu-item-submenu-trigger{padding-right:32px}[dir=rtl] .mat-menu-item-submenu-trigger{padding-right:16px;padding-left:32px}.mat-menu-submenu-icon{position:absolute;top:50%;right:16px;transform:translateY(-50%);width:5px;height:10px;fill:currentColor}[dir=rtl] .mat-menu-submenu-icon{right:auto;left:16px;transform:translateY(-50%) scaleX(-1)}.cdk-high-contrast-active .mat-menu-submenu-icon{fill:CanvasText}button.mat-menu-item{width:100%}.mat-menu-item .mat-menu-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}\\n\"] }]\n        }], ctorParameters: function () {\n        return [{ type: i0.ElementRef }, { type: i0.NgZone }, { type: undefined, decorators: [{\n                        type: Inject,\n                        args: [MAT_MENU_DEFAULT_OPTIONS]\n                    }] }];\n    } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Injection token that determines the scroll handling while the menu is open. */\nconst MAT_MENU_SCROLL_STRATEGY = new InjectionToken('mat-menu-scroll-strategy');\n/** @docs-private */\nfunction MAT_MENU_SCROLL_STRATEGY_FACTORY(overlay) {\n    return () => overlay.scrollStrategies.reposition();\n}\n/** @docs-private */\nconst MAT_MENU_SCROLL_STRATEGY_FACTORY_PROVIDER = {\n    provide: MAT_MENU_SCROLL_STRATEGY,\n    deps: [Overlay],\n    useFactory: MAT_MENU_SCROLL_STRATEGY_FACTORY,\n};\n/** Default top padding of the menu panel. */\nconst MENU_PANEL_TOP_PADDING = 8;\n/** Options for binding a passive event listener. */\nconst passiveEventListenerOptions = normalizePassiveListenerOptions({ passive: true });\n// TODO(andrewseguin): Remove the kebab versions in favor of camelCased attribute selectors\nclass _MatMenuTriggerBase {\n    constructor(_overlay, _element, _viewContainerRef, scrollStrategy, parentMenu, \n    // `MatMenuTrigger` is commonly used in combination with a `MatMenuItem`.\n    // tslint:disable-next-line: lightweight-tokens\n    _menuItemInstance, _dir, \n    // TODO(crisbeto): make the _focusMonitor required when doing breaking changes.\n    // @breaking-change 8.0.0\n    _focusMonitor) {\n        this._overlay = _overlay;\n        this._element = _element;\n        this._viewContainerRef = _viewContainerRef;\n        this._menuItemInstance = _menuItemInstance;\n        this._dir = _dir;\n        this._focusMonitor = _focusMonitor;\n        this._overlayRef = null;\n        this._menuOpen = false;\n        this._closingActionsSubscription = Subscription.EMPTY;\n        this._hoverSubscription = Subscription.EMPTY;\n        this._menuCloseSubscription = Subscription.EMPTY;\n        /**\n         * Handles touch start events on the trigger.\n         * Needs to be an arrow function so we can easily use addEventListener and removeEventListener.\n         */\n        this._handleTouchStart = (event) => {\n            if (!isFakeTouchstartFromScreenReader(event)) {\n                this._openedBy = 'touch';\n            }\n        };\n        // Tracking input type is necessary so it's possible to only auto-focus\n        // the first item of the list when the menu is opened via the keyboard\n        this._openedBy = undefined;\n        /**\n         * Whether focus should be restored when the menu is closed.\n         * Note that disabling this option can have accessibility implications\n         * and it's up to you to manage focus, if you decide to turn it off.\n         */\n        this.restoreFocus = true;\n        /** Event emitted when the associated menu is opened. */\n        this.menuOpened = new EventEmitter();\n        /**\n         * Event emitted when the associated menu is opened.\n         * @deprecated Switch to `menuOpened` instead\n         * @breaking-change 8.0.0\n         */\n        // tslint:disable-next-line:no-output-on-prefix\n        this.onMenuOpen = this.menuOpened;\n        /** Event emitted when the associated menu is closed. */\n        this.menuClosed = new EventEmitter();\n        /**\n         * Event emitted when the associated menu is closed.\n         * @deprecated Switch to `menuClosed` instead\n         * @breaking-change 8.0.0\n         */\n        // tslint:disable-next-line:no-output-on-prefix\n        this.onMenuClose = this.menuClosed;\n        this._scrollStrategy = scrollStrategy;\n        this._parentMaterialMenu = parentMenu instanceof _MatMenuBase ? parentMenu : undefined;\n        _element.nativeElement.addEventListener('touchstart', this._handleTouchStart, passiveEventListenerOptions);\n        if (_menuItemInstance) {\n            _menuItemInstance._triggersSubmenu = this.triggersSubmenu();\n        }\n    }\n    /**\n     * @deprecated\n     * @breaking-change 8.0.0\n     */\n    get _deprecatedMatMenuTriggerFor() {\n        return this.menu;\n    }\n    set _deprecatedMatMenuTriggerFor(v) {\n        this.menu = v;\n    }\n    /** References the menu instance that the trigger is associated with. */\n    get menu() {\n        return this._menu;\n    }\n    set menu(menu) {\n        if (menu === this._menu) {\n            return;\n        }\n        this._menu = menu;\n        this._menuCloseSubscription.unsubscribe();\n        if (menu) {\n            if (menu === this._parentMaterialMenu && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n                throwMatMenuRecursiveError();\n            }\n            this._menuCloseSubscription = menu.close.subscribe((reason) => {\n                this._destroyMenu(reason);\n                // If a click closed the menu, we should close the entire chain of nested menus.\n                if ((reason === 'click' || reason === 'tab') && this._parentMaterialMenu) {\n                    this._parentMaterialMenu.closed.emit(reason);\n                }\n            });\n        }\n    }\n    ngAfterContentInit() {\n        this._checkMenu();\n        this._handleHover();\n    }\n    ngOnDestroy() {\n        if (this._overlayRef) {\n            this._overlayRef.dispose();\n            this._overlayRef = null;\n        }\n        this._element.nativeElement.removeEventListener('touchstart', this._handleTouchStart, passiveEventListenerOptions);\n        this._menuCloseSubscription.unsubscribe();\n        this._closingActionsSubscription.unsubscribe();\n        this._hoverSubscription.unsubscribe();\n    }\n    /** Whether the menu is open. */\n    get menuOpen() {\n        return this._menuOpen;\n    }\n    /** The text direction of the containing app. */\n    get dir() {\n        return this._dir && this._dir.value === 'rtl' ? 'rtl' : 'ltr';\n    }\n    /** Whether the menu triggers a sub-menu or a top-level one. */\n    triggersSubmenu() {\n        return !!(this._menuItemInstance && this._parentMaterialMenu);\n    }\n    /** Toggles the menu between the open and closed states. */\n    toggleMenu() {\n        return this._menuOpen ? this.closeMenu() : this.openMenu();\n    }\n    /** Opens the menu. */\n    openMenu() {\n        if (this._menuOpen) {\n            return;\n        }\n        this._checkMenu();\n        const overlayRef = this._createOverlay();\n        const overlayConfig = overlayRef.getConfig();\n        this._setPosition(overlayConfig.positionStrategy);\n        overlayConfig.hasBackdrop =\n            this.menu.hasBackdrop == null ? !this.triggersSubmenu() : this.menu.hasBackdrop;\n        overlayRef.attach(this._getPortal());\n        if (this.menu.lazyContent) {\n            this.menu.lazyContent.attach(this.menuData);\n        }\n        this._closingActionsSubscription = this._menuClosingActions().subscribe(() => this.closeMenu());\n        this._initMenu();\n        if (this.menu instanceof _MatMenuBase) {\n            this.menu._startAnimation();\n        }\n    }\n    /** Closes the menu. */\n    closeMenu() {\n        this.menu.close.emit();\n    }\n    /**\n     * Focuses the menu trigger.\n     * @param origin Source of the menu trigger's focus.\n     */\n    focus(origin, options) {\n        if (this._focusMonitor && origin) {\n            this._focusMonitor.focusVia(this._element, origin, options);\n        }\n        else {\n            this._element.nativeElement.focus(options);\n        }\n    }\n    /**\n     * Updates the position of the menu to ensure that it fits all options within the viewport.\n     */\n    updatePosition() {\n        var _a;\n        (_a = this._overlayRef) === null || _a === void 0 ? void 0 : _a.updatePosition();\n    }\n    /** Closes the menu and does the necessary cleanup. */\n    _destroyMenu(reason) {\n        if (!this._overlayRef || !this.menuOpen) {\n            return;\n        }\n        const menu = this.menu;\n        this._closingActionsSubscription.unsubscribe();\n        this._overlayRef.detach();\n        // Always restore focus if the user is navigating using the keyboard or the menu was opened\n        // programmatically. We don't restore for non-root triggers, because it can prevent focus\n        // from making it back to the root trigger when closing a long chain of menus by clicking\n        // on the backdrop.\n        if (this.restoreFocus && (reason === 'keydown' || !this._openedBy || !this.triggersSubmenu())) {\n            this.focus(this._openedBy);\n        }\n        this._openedBy = undefined;\n        if (menu instanceof _MatMenuBase) {\n            menu._resetAnimation();\n            if (menu.lazyContent) {\n                // Wait for the exit animation to finish before detaching the content.\n                menu._animationDone\n                    .pipe(filter(event => event.toState === 'void'), take(1), \n                // Interrupt if the content got re-attached.\n                takeUntil(menu.lazyContent._attached))\n                    .subscribe({\n                    next: () => menu.lazyContent.detach(),\n                    // No matter whether the content got re-attached, reset the menu.\n                    complete: () => this._setIsMenuOpen(false),\n                });\n            }\n            else {\n                this._setIsMenuOpen(false);\n            }\n        }\n        else {\n            this._setIsMenuOpen(false);\n            if (menu.lazyContent) {\n                menu.lazyContent.detach();\n            }\n        }\n    }\n    /**\n     * This method sets the menu state to open and focuses the first item if\n     * the menu was opened via the keyboard.\n     */\n    _initMenu() {\n        this.menu.parentMenu = this.triggersSubmenu() ? this._parentMaterialMenu : undefined;\n        this.menu.direction = this.dir;\n        this._setMenuElevation();\n        this.menu.focusFirstItem(this._openedBy || 'program');\n        this._setIsMenuOpen(true);\n    }\n    /** Updates the menu elevation based on the amount of parent menus that it has. */\n    _setMenuElevation() {\n        if (this.menu.setElevation) {\n            let depth = 0;\n            let parentMenu = this.menu.parentMenu;\n            while (parentMenu) {\n                depth++;\n                parentMenu = parentMenu.parentMenu;\n            }\n            this.menu.setElevation(depth);\n        }\n    }\n    // set state rather than toggle to support triggers sharing a menu\n    _setIsMenuOpen(isOpen) {\n        this._menuOpen = isOpen;\n        this._menuOpen ? this.menuOpened.emit() : this.menuClosed.emit();\n        if (this.triggersSubmenu()) {\n            this._menuItemInstance._setHighlighted(isOpen);\n        }\n    }\n    /**\n     * This method checks that a valid instance of MatMenu has been passed into\n     * matMenuTriggerFor. If not, an exception is thrown.\n     */\n    _checkMenu() {\n        if (!this.menu && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throwMatMenuMissingError();\n        }\n    }\n    /**\n     * This method creates the overlay from the provided menu's template and saves its\n     * OverlayRef so that it can be attached to the DOM when openMenu is called.\n     */\n    _createOverlay() {\n        if (!this._overlayRef) {\n            const config = this._getOverlayConfig();\n            this._subscribeToPositions(config.positionStrategy);\n            this._overlayRef = this._overlay.create(config);\n            // Consume the `keydownEvents` in order to prevent them from going to another overlay.\n            // Ideally we'd also have our keyboard event logic in here, however doing so will\n            // break anybody that may have implemented the `MatMenuPanel` themselves.\n            this._overlayRef.keydownEvents().subscribe();\n        }\n        return this._overlayRef;\n    }\n    /**\n     * This method builds the configuration object needed to create the overlay, the OverlayState.\n     * @returns OverlayConfig\n     */\n    _getOverlayConfig() {\n        return new OverlayConfig({\n            positionStrategy: this._overlay\n                .position()\n                .flexibleConnectedTo(this._element)\n                .withLockedPosition()\n                .withGrowAfterOpen()\n                .withTransformOriginOn('.mat-menu-panel, .mat-mdc-menu-panel'),\n            backdropClass: this.menu.backdropClass || 'cdk-overlay-transparent-backdrop',\n            panelClass: this.menu.overlayPanelClass,\n            scrollStrategy: this._scrollStrategy(),\n            direction: this._dir,\n        });\n    }\n    /**\n     * Listens to changes in the position of the overlay and sets the correct classes\n     * on the menu based on the new position. This ensures the animation origin is always\n     * correct, even if a fallback position is used for the overlay.\n     */\n    _subscribeToPositions(position) {\n        if (this.menu.setPositionClasses) {\n            position.positionChanges.subscribe(change => {\n                const posX = change.connectionPair.overlayX === 'start' ? 'after' : 'before';\n                const posY = change.connectionPair.overlayY === 'top' ? 'below' : 'above';\n                this.menu.setPositionClasses(posX, posY);\n            });\n        }\n    }\n    /**\n     * Sets the appropriate positions on a position strategy\n     * so the overlay connects with the trigger correctly.\n     * @param positionStrategy Strategy whose position to update.\n     */\n    _setPosition(positionStrategy) {\n        let [originX, originFallbackX] = this.menu.xPosition === 'before' ? ['end', 'start'] : ['start', 'end'];\n        let [overlayY, overlayFallbackY] = this.menu.yPosition === 'above' ? ['bottom', 'top'] : ['top', 'bottom'];\n        let [originY, originFallbackY] = [overlayY, overlayFallbackY];\n        let [overlayX, overlayFallbackX] = [originX, originFallbackX];\n        let offsetY = 0;\n        if (this.triggersSubmenu()) {\n            // When the menu is a sub-menu, it should always align itself\n            // to the edges of the trigger, instead of overlapping it.\n            overlayFallbackX = originX = this.menu.xPosition === 'before' ? 'start' : 'end';\n            originFallbackX = overlayX = originX === 'end' ? 'start' : 'end';\n            offsetY = overlayY === 'bottom' ? MENU_PANEL_TOP_PADDING : -MENU_PANEL_TOP_PADDING;\n        }\n        else if (!this.menu.overlapTrigger) {\n            originY = overlayY === 'top' ? 'bottom' : 'top';\n            originFallbackY = overlayFallbackY === 'top' ? 'bottom' : 'top';\n        }\n        positionStrategy.withPositions([\n            { originX, originY, overlayX, overlayY, offsetY },\n            { originX: originFallbackX, originY, overlayX: overlayFallbackX, overlayY, offsetY },\n            {\n                originX,\n                originY: originFallbackY,\n                overlayX,\n                overlayY: overlayFallbackY,\n                offsetY: -offsetY,\n            },\n            {\n                originX: originFallbackX,\n                originY: originFallbackY,\n                overlayX: overlayFallbackX,\n                overlayY: overlayFallbackY,\n                offsetY: -offsetY,\n            },\n        ]);\n    }\n    /** Returns a stream that emits whenever an action that should close the menu occurs. */\n    _menuClosingActions() {\n        const backdrop = this._overlayRef.backdropClick();\n        const detachments = this._overlayRef.detachments();\n        const parentClose = this._parentMaterialMenu ? this._parentMaterialMenu.closed : of();\n        const hover = this._parentMaterialMenu\n            ? this._parentMaterialMenu._hovered().pipe(filter(active => active !== this._menuItemInstance), filter(() => this._menuOpen))\n            : of();\n        return merge(backdrop, parentClose, hover, detachments);\n    }\n    /** Handles mouse presses on the trigger. */\n    _handleMousedown(event) {\n        if (!isFakeMousedownFromScreenReader(event)) {\n            // Since right or middle button clicks won't trigger the `click` event,\n            // we shouldn't consider the menu as opened by mouse in those cases.\n            this._openedBy = event.button === 0 ? 'mouse' : undefined;\n            // Since clicking on the trigger won't close the menu if it opens a sub-menu,\n            // we should prevent focus from moving onto it via click to avoid the\n            // highlight from lingering on the menu item.\n            if (this.triggersSubmenu()) {\n                event.preventDefault();\n            }\n        }\n    }\n    /** Handles key presses on the trigger. */\n    _handleKeydown(event) {\n        const keyCode = event.keyCode;\n        // Pressing enter on the trigger will trigger the click handler later.\n        if (keyCode === ENTER || keyCode === SPACE) {\n            this._openedBy = 'keyboard';\n        }\n        if (this.triggersSubmenu() &&\n            ((keyCode === RIGHT_ARROW && this.dir === 'ltr') ||\n                (keyCode === LEFT_ARROW && this.dir === 'rtl'))) {\n            this._openedBy = 'keyboard';\n            this.openMenu();\n        }\n    }\n    /** Handles click events on the trigger. */\n    _handleClick(event) {\n        if (this.triggersSubmenu()) {\n            // Stop event propagation to avoid closing the parent menu.\n            event.stopPropagation();\n            this.openMenu();\n        }\n        else {\n            this.toggleMenu();\n        }\n    }\n    /** Handles the cases where the user hovers over the trigger. */\n    _handleHover() {\n        // Subscribe to changes in the hovered item in order to toggle the panel.\n        if (!this.triggersSubmenu() || !this._parentMaterialMenu) {\n            return;\n        }\n        this._hoverSubscription = this._parentMaterialMenu\n            ._hovered()\n            // Since we might have multiple competing triggers for the same menu (e.g. a sub-menu\n            // with different data and triggers), we have to delay it by a tick to ensure that\n            // it won't be closed immediately after it is opened.\n            .pipe(filter(active => active === this._menuItemInstance && !active.disabled), delay(0, asapScheduler))\n            .subscribe(() => {\n            this._openedBy = 'mouse';\n            // If the same menu is used between multiple triggers, it might still be animating\n            // while the new trigger tries to re-open it. Wait for the animation to finish\n            // before doing so. Also interrupt if the user moves to another item.\n            if (this.menu instanceof _MatMenuBase && this.menu._isAnimating) {\n                // We need the `delay(0)` here in order to avoid\n                // 'changed after checked' errors in some cases. See #12194.\n                this.menu._animationDone\n                    .pipe(take(1), delay(0, asapScheduler), takeUntil(this._parentMaterialMenu._hovered()))\n                    .subscribe(() => this.openMenu());\n            }\n            else {\n                this.openMenu();\n            }\n        });\n    }\n    /** Gets the portal that should be attached to the overlay. */\n    _getPortal() {\n        // Note that we can avoid this check by keeping the portal on the menu panel.\n        // While it would be cleaner, we'd have to introduce another required method on\n        // `MatMenuPanel`, making it harder to consume.\n        if (!this._portal || this._portal.templateRef !== this.menu.templateRef) {\n            this._portal = new TemplatePortal(this.menu.templateRef, this._viewContainerRef);\n        }\n        return this._portal;\n    }\n}\n_MatMenuTriggerBase.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: _MatMenuTriggerBase, deps: [{ token: i1$1.Overlay }, { token: i0.ElementRef }, { token: i0.ViewContainerRef }, { token: MAT_MENU_SCROLL_STRATEGY }, { token: MAT_MENU_PANEL, optional: true }, { token: MatMenuItem, optional: true, self: true }, { token: i3$1.Directionality, optional: true }, { token: i1.FocusMonitor }], target: i0.ɵɵFactoryTarget.Directive });\n_MatMenuTriggerBase.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.1.0\", type: _MatMenuTriggerBase, inputs: { _deprecatedMatMenuTriggerFor: [\"mat-menu-trigger-for\", \"_deprecatedMatMenuTriggerFor\"], menu: [\"matMenuTriggerFor\", \"menu\"], menuData: [\"matMenuTriggerData\", \"menuData\"], restoreFocus: [\"matMenuTriggerRestoreFocus\", \"restoreFocus\"] }, outputs: { menuOpened: \"menuOpened\", onMenuOpen: \"onMenuOpen\", menuClosed: \"menuClosed\", onMenuClose: \"onMenuClose\" }, host: { attributes: { \"aria-haspopup\": \"true\" }, listeners: { \"click\": \"_handleClick($event)\", \"mousedown\": \"_handleMousedown($event)\", \"keydown\": \"_handleKeydown($event)\" }, properties: { \"attr.aria-expanded\": \"menuOpen || null\", \"attr.aria-controls\": \"menuOpen ? menu.panelId : null\" } }, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: _MatMenuTriggerBase, decorators: [{\n            type: Directive,\n            args: [{\n                    host: {\n                        'aria-haspopup': 'true',\n                        '[attr.aria-expanded]': 'menuOpen || null',\n                        '[attr.aria-controls]': 'menuOpen ? menu.panelId : null',\n                        '(click)': '_handleClick($event)',\n                        '(mousedown)': '_handleMousedown($event)',\n                        '(keydown)': '_handleKeydown($event)',\n                    },\n                }]\n        }], ctorParameters: function () {\n        return [{ type: i1$1.Overlay }, { type: i0.ElementRef }, { type: i0.ViewContainerRef }, { type: undefined, decorators: [{\n                        type: Inject,\n                        args: [MAT_MENU_SCROLL_STRATEGY]\n                    }] }, { type: undefined, decorators: [{\n                        type: Inject,\n                        args: [MAT_MENU_PANEL]\n                    }, {\n                        type: Optional\n                    }] }, { type: MatMenuItem, decorators: [{\n                        type: Optional\n                    }, {\n                        type: Self\n                    }] }, { type: i3$1.Directionality, decorators: [{\n                        type: Optional\n                    }] }, { type: i1.FocusMonitor }];\n    }, propDecorators: { _deprecatedMatMenuTriggerFor: [{\n                type: Input,\n                args: ['mat-menu-trigger-for']\n            }], menu: [{\n                type: Input,\n                args: ['matMenuTriggerFor']\n            }], menuData: [{\n                type: Input,\n                args: ['matMenuTriggerData']\n            }], restoreFocus: [{\n                type: Input,\n                args: ['matMenuTriggerRestoreFocus']\n            }], menuOpened: [{\n                type: Output\n            }], onMenuOpen: [{\n                type: Output\n            }], menuClosed: [{\n                type: Output\n            }], onMenuClose: [{\n                type: Output\n            }] } });\n/** Directive applied to an element that should trigger a `mat-menu`. */\nclass MatMenuTrigger extends _MatMenuTriggerBase {\n}\nMatMenuTrigger.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatMenuTrigger, deps: null, target: i0.ɵɵFactoryTarget.Directive });\nMatMenuTrigger.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.1.0\", type: MatMenuTrigger, selector: \"[mat-menu-trigger-for], [matMenuTriggerFor]\", host: { classAttribute: \"mat-menu-trigger\" }, exportAs: [\"matMenuTrigger\"], usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatMenuTrigger, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: `[mat-menu-trigger-for], [matMenuTriggerFor]`,\n                    host: {\n                        'class': 'mat-menu-trigger',\n                    },\n                    exportAs: 'matMenuTrigger',\n                }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass MatMenuModule {\n}\nMatMenuModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatMenuModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nMatMenuModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatMenuModule, declarations: [MatMenu, MatMenuItem, MatMenuTrigger, MatMenuContent], imports: [CommonModule, MatCommonModule, MatRippleModule, OverlayModule], exports: [CdkScrollableModule,\n        MatCommonModule,\n        MatMenu,\n        MatMenuItem,\n        MatMenuTrigger,\n        MatMenuContent] });\nMatMenuModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatMenuModule, providers: [MAT_MENU_SCROLL_STRATEGY_FACTORY_PROVIDER], imports: [[CommonModule, MatCommonModule, MatRippleModule, OverlayModule], CdkScrollableModule,\n        MatCommonModule] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatMenuModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [CommonModule, MatCommonModule, MatRippleModule, OverlayModule],\n                    exports: [\n                        CdkScrollableModule,\n                        MatCommonModule,\n                        MatMenu,\n                        MatMenuItem,\n                        MatMenuTrigger,\n                        MatMenuContent,\n                    ],\n                    declarations: [MatMenu, MatMenuItem, MatMenuTrigger, MatMenuContent],\n                    providers: [MAT_MENU_SCROLL_STRATEGY_FACTORY_PROVIDER],\n                }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_MENU_CONTENT, MAT_MENU_DEFAULT_OPTIONS, MAT_MENU_PANEL, MAT_MENU_SCROLL_STRATEGY, MatMenu, MatMenuContent, MatMenuItem, MatMenuModule, MatMenuTrigger, _MatMenuBase, _MatMenuContentBase, _MatMenuTriggerBase, fadeInItems, matMenuAnimations, transformMenu };\n","import * as i3 from '@angular/cdk/platform';\nimport { PlatformModule } from '@angular/cdk/platform';\nimport * as i1 from '@angular/cdk/scrolling';\nimport { CdkScrollable, CdkScrollableModule } from '@angular/cdk/scrolling';\nimport * as i5 from '@angular/common';\nimport { DOCUMENT, CommonModule } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { InjectionToken, forwardRef, Component, ChangeDetectionStrategy, ViewEncapsulation, Inject, EventEmitter, Optional, Input, Output, QueryList, ContentChildren, ContentChild, ViewChild, NgModule } from '@angular/core';\nimport { MatCommonModule } from '@angular/material/core';\nimport { coerceBooleanProperty, coerceNumberProperty } from '@angular/cdk/coercion';\nimport { ESCAPE, hasModifierKey } from '@angular/cdk/keycodes';\nimport { Subject, fromEvent, merge } from 'rxjs';\nimport { filter, map, mapTo, takeUntil, distinctUntilChanged, take, startWith, debounceTime } from 'rxjs/operators';\nimport { trigger, state, style, transition, animate } from '@angular/animations';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\nimport * as i2 from '@angular/cdk/a11y';\nimport * as i4 from '@angular/cdk/bidi';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Animations used by the Material drawers.\n * @docs-private\n */\nconst matDrawerAnimations = {\n    /** Animation that slides a drawer in and out. */\n    transformDrawer: trigger('transform', [\n        // We remove the `transform` here completely, rather than setting it to zero, because:\n        // 1. Having a transform can cause elements with ripples or an animated\n        //    transform to shift around in Chrome with an RTL layout (see #10023).\n        // 2. 3d transforms causes text to appear blurry on IE and Edge.\n        state('open, open-instant', style({\n            'transform': 'none',\n            'visibility': 'visible',\n        })),\n        state('void', style({\n            // Avoids the shadow showing up when closed in SSR.\n            'box-shadow': 'none',\n            'visibility': 'hidden',\n        })),\n        transition('void => open-instant', animate('0ms')),\n        transition('void <=> open, open-instant => void', animate('400ms cubic-bezier(0.25, 0.8, 0.25, 1)')),\n    ]),\n};\n\n/**\n * Throws an exception when two MatDrawer are matching the same position.\n * @docs-private\n */\nfunction throwMatDuplicatedDrawerError(position) {\n    throw Error(`A drawer was already declared for 'position=\"${position}\"'`);\n}\n/** Configures whether drawers should use auto sizing by default. */\nconst MAT_DRAWER_DEFAULT_AUTOSIZE = new InjectionToken('MAT_DRAWER_DEFAULT_AUTOSIZE', {\n    providedIn: 'root',\n    factory: MAT_DRAWER_DEFAULT_AUTOSIZE_FACTORY,\n});\n/**\n * Used to provide a drawer container to a drawer while avoiding circular references.\n * @docs-private\n */\nconst MAT_DRAWER_CONTAINER = new InjectionToken('MAT_DRAWER_CONTAINER');\n/** @docs-private */\nfunction MAT_DRAWER_DEFAULT_AUTOSIZE_FACTORY() {\n    return false;\n}\nclass MatDrawerContent extends CdkScrollable {\n    constructor(_changeDetectorRef, _container, elementRef, scrollDispatcher, ngZone) {\n        super(elementRef, scrollDispatcher, ngZone);\n        this._changeDetectorRef = _changeDetectorRef;\n        this._container = _container;\n    }\n    ngAfterContentInit() {\n        this._container._contentMarginChanges.subscribe(() => {\n            this._changeDetectorRef.markForCheck();\n        });\n    }\n}\nMatDrawerContent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatDrawerContent, deps: [{ token: i0.ChangeDetectorRef }, { token: forwardRef(() => MatDrawerContainer) }, { token: i0.ElementRef }, { token: i1.ScrollDispatcher }, { token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Component });\nMatDrawerContent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: MatDrawerContent, selector: \"mat-drawer-content\", host: { properties: { \"style.margin-left.px\": \"_container._contentMargins.left\", \"style.margin-right.px\": \"_container._contentMargins.right\" }, classAttribute: \"mat-drawer-content\" }, usesInheritance: true, ngImport: i0, template: '<ng-content></ng-content>', isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatDrawerContent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'mat-drawer-content',\n                    template: '<ng-content></ng-content>',\n                    host: {\n                        'class': 'mat-drawer-content',\n                        '[style.margin-left.px]': '_container._contentMargins.left',\n                        '[style.margin-right.px]': '_container._contentMargins.right',\n                    },\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    encapsulation: ViewEncapsulation.None,\n                }]\n        }], ctorParameters: function () {\n        return [{ type: i0.ChangeDetectorRef }, { type: MatDrawerContainer, decorators: [{\n                        type: Inject,\n                        args: [forwardRef(() => MatDrawerContainer)]\n                    }] }, { type: i0.ElementRef }, { type: i1.ScrollDispatcher }, { type: i0.NgZone }];\n    } });\n/**\n * This component corresponds to a drawer that can be opened on the drawer container.\n */\nclass MatDrawer {\n    constructor(_elementRef, _focusTrapFactory, _focusMonitor, _platform, _ngZone, _interactivityChecker, _doc, _container) {\n        this._elementRef = _elementRef;\n        this._focusTrapFactory = _focusTrapFactory;\n        this._focusMonitor = _focusMonitor;\n        this._platform = _platform;\n        this._ngZone = _ngZone;\n        this._interactivityChecker = _interactivityChecker;\n        this._doc = _doc;\n        this._container = _container;\n        this._elementFocusedBeforeDrawerWasOpened = null;\n        /** Whether the drawer is initialized. Used for disabling the initial animation. */\n        this._enableAnimations = false;\n        this._position = 'start';\n        this._mode = 'over';\n        this._disableClose = false;\n        this._opened = false;\n        /** Emits whenever the drawer has started animating. */\n        this._animationStarted = new Subject();\n        /** Emits whenever the drawer is done animating. */\n        this._animationEnd = new Subject();\n        /** Current state of the sidenav animation. */\n        this._animationState = 'void';\n        /** Event emitted when the drawer open state is changed. */\n        this.openedChange =\n            // Note this has to be async in order to avoid some issues with two-bindings (see #8872).\n            new EventEmitter(/* isAsync */ true);\n        /** Event emitted when the drawer has been opened. */\n        this._openedStream = this.openedChange.pipe(filter(o => o), map(() => { }));\n        /** Event emitted when the drawer has started opening. */\n        this.openedStart = this._animationStarted.pipe(filter(e => e.fromState !== e.toState && e.toState.indexOf('open') === 0), mapTo(undefined));\n        /** Event emitted when the drawer has been closed. */\n        this._closedStream = this.openedChange.pipe(filter(o => !o), map(() => { }));\n        /** Event emitted when the drawer has started closing. */\n        this.closedStart = this._animationStarted.pipe(filter(e => e.fromState !== e.toState && e.toState === 'void'), mapTo(undefined));\n        /** Emits when the component is destroyed. */\n        this._destroyed = new Subject();\n        /** Event emitted when the drawer's position changes. */\n        // tslint:disable-next-line:no-output-on-prefix\n        this.onPositionChanged = new EventEmitter();\n        /**\n         * An observable that emits when the drawer mode changes. This is used by the drawer container to\n         * to know when to when the mode changes so it can adapt the margins on the content.\n         */\n        this._modeChanged = new Subject();\n        this.openedChange.subscribe((opened) => {\n            if (opened) {\n                if (this._doc) {\n                    this._elementFocusedBeforeDrawerWasOpened = this._doc.activeElement;\n                }\n                this._takeFocus();\n            }\n            else if (this._isFocusWithinDrawer()) {\n                this._restoreFocus(this._openedVia || 'program');\n            }\n        });\n        /**\n         * Listen to `keydown` events outside the zone so that change detection is not run every\n         * time a key is pressed. Instead we re-enter the zone only if the `ESC` key is pressed\n         * and we don't have close disabled.\n         */\n        this._ngZone.runOutsideAngular(() => {\n            fromEvent(this._elementRef.nativeElement, 'keydown')\n                .pipe(filter(event => {\n                return event.keyCode === ESCAPE && !this.disableClose && !hasModifierKey(event);\n            }), takeUntil(this._destroyed))\n                .subscribe(event => this._ngZone.run(() => {\n                this.close();\n                event.stopPropagation();\n                event.preventDefault();\n            }));\n        });\n        // We need a Subject with distinctUntilChanged, because the `done` event\n        // fires twice on some browsers. See https://github.com/angular/angular/issues/24084\n        this._animationEnd\n            .pipe(distinctUntilChanged((x, y) => {\n            return x.fromState === y.fromState && x.toState === y.toState;\n        }))\n            .subscribe((event) => {\n            const { fromState, toState } = event;\n            if ((toState.indexOf('open') === 0 && fromState === 'void') ||\n                (toState === 'void' && fromState.indexOf('open') === 0)) {\n                this.openedChange.emit(this._opened);\n            }\n        });\n    }\n    /** The side that the drawer is attached to. */\n    get position() {\n        return this._position;\n    }\n    set position(value) {\n        // Make sure we have a valid value.\n        value = value === 'end' ? 'end' : 'start';\n        if (value != this._position) {\n            this._position = value;\n            this.onPositionChanged.emit();\n        }\n    }\n    /** Mode of the drawer; one of 'over', 'push' or 'side'. */\n    get mode() {\n        return this._mode;\n    }\n    set mode(value) {\n        this._mode = value;\n        this._updateFocusTrapState();\n        this._modeChanged.next();\n    }\n    /** Whether the drawer can be closed with the escape key or by clicking on the backdrop. */\n    get disableClose() {\n        return this._disableClose;\n    }\n    set disableClose(value) {\n        this._disableClose = coerceBooleanProperty(value);\n    }\n    /**\n     * Whether the drawer should focus the first focusable element automatically when opened.\n     * Defaults to false in when `mode` is set to `side`, otherwise defaults to `true`. If explicitly\n     * enabled, focus will be moved into the sidenav in `side` mode as well.\n     * @breaking-change 14.0.0 Remove boolean option from autoFocus. Use string or AutoFocusTarget\n     * instead.\n     */\n    get autoFocus() {\n        const value = this._autoFocus;\n        // Note that usually we don't allow autoFocus to be set to `first-tabbable` in `side` mode,\n        // because we don't know how the sidenav is being used, but in some cases it still makes\n        // sense to do it. The consumer can explicitly set `autoFocus`.\n        if (value == null) {\n            if (this.mode === 'side') {\n                return 'dialog';\n            }\n            else {\n                return 'first-tabbable';\n            }\n        }\n        return value;\n    }\n    set autoFocus(value) {\n        if (value === 'true' || value === 'false' || value == null) {\n            value = coerceBooleanProperty(value);\n        }\n        this._autoFocus = value;\n    }\n    /**\n     * Whether the drawer is opened. We overload this because we trigger an event when it\n     * starts or end.\n     */\n    get opened() {\n        return this._opened;\n    }\n    set opened(value) {\n        this.toggle(coerceBooleanProperty(value));\n    }\n    /**\n     * Focuses the provided element. If the element is not focusable, it will add a tabIndex\n     * attribute to forcefully focus it. The attribute is removed after focus is moved.\n     * @param element The element to focus.\n     */\n    _forceFocus(element, options) {\n        if (!this._interactivityChecker.isFocusable(element)) {\n            element.tabIndex = -1;\n            // The tabindex attribute should be removed to avoid navigating to that element again\n            this._ngZone.runOutsideAngular(() => {\n                element.addEventListener('blur', () => element.removeAttribute('tabindex'));\n                element.addEventListener('mousedown', () => element.removeAttribute('tabindex'));\n            });\n        }\n        element.focus(options);\n    }\n    /**\n     * Focuses the first element that matches the given selector within the focus trap.\n     * @param selector The CSS selector for the element to set focus to.\n     */\n    _focusByCssSelector(selector, options) {\n        let elementToFocus = this._elementRef.nativeElement.querySelector(selector);\n        if (elementToFocus) {\n            this._forceFocus(elementToFocus, options);\n        }\n    }\n    /**\n     * Moves focus into the drawer. Note that this works even if\n     * the focus trap is disabled in `side` mode.\n     */\n    _takeFocus() {\n        if (!this._focusTrap) {\n            return;\n        }\n        const element = this._elementRef.nativeElement;\n        // When autoFocus is not on the sidenav, if the element cannot be focused or does\n        // not exist, focus the sidenav itself so the keyboard navigation still works.\n        // We need to check that `focus` is a function due to Universal.\n        switch (this.autoFocus) {\n            case false:\n            case 'dialog':\n                return;\n            case true:\n            case 'first-tabbable':\n                this._focusTrap.focusInitialElementWhenReady().then(hasMovedFocus => {\n                    if (!hasMovedFocus && typeof this._elementRef.nativeElement.focus === 'function') {\n                        element.focus();\n                    }\n                });\n                break;\n            case 'first-heading':\n                this._focusByCssSelector('h1, h2, h3, h4, h5, h6, [role=\"heading\"]');\n                break;\n            default:\n                this._focusByCssSelector(this.autoFocus);\n                break;\n        }\n    }\n    /**\n     * Restores focus to the element that was originally focused when the drawer opened.\n     * If no element was focused at that time, the focus will be restored to the drawer.\n     */\n    _restoreFocus(focusOrigin) {\n        if (this.autoFocus === 'dialog') {\n            return;\n        }\n        if (this._elementFocusedBeforeDrawerWasOpened) {\n            this._focusMonitor.focusVia(this._elementFocusedBeforeDrawerWasOpened, focusOrigin);\n        }\n        else {\n            this._elementRef.nativeElement.blur();\n        }\n        this._elementFocusedBeforeDrawerWasOpened = null;\n    }\n    /** Whether focus is currently within the drawer. */\n    _isFocusWithinDrawer() {\n        var _a;\n        const activeEl = (_a = this._doc) === null || _a === void 0 ? void 0 : _a.activeElement;\n        return !!activeEl && this._elementRef.nativeElement.contains(activeEl);\n    }\n    ngAfterContentInit() {\n        this._focusTrap = this._focusTrapFactory.create(this._elementRef.nativeElement);\n        this._updateFocusTrapState();\n    }\n    ngAfterContentChecked() {\n        // Enable the animations after the lifecycle hooks have run, in order to avoid animating\n        // drawers that are open by default. When we're on the server, we shouldn't enable the\n        // animations, because we don't want the drawer to animate the first time the user sees\n        // the page.\n        if (this._platform.isBrowser) {\n            this._enableAnimations = true;\n        }\n    }\n    ngOnDestroy() {\n        if (this._focusTrap) {\n            this._focusTrap.destroy();\n        }\n        this._animationStarted.complete();\n        this._animationEnd.complete();\n        this._modeChanged.complete();\n        this._destroyed.next();\n        this._destroyed.complete();\n    }\n    /**\n     * Open the drawer.\n     * @param openedVia Whether the drawer was opened by a key press, mouse click or programmatically.\n     * Used for focus management after the sidenav is closed.\n     */\n    open(openedVia) {\n        return this.toggle(true, openedVia);\n    }\n    /** Close the drawer. */\n    close() {\n        return this.toggle(false);\n    }\n    /** Closes the drawer with context that the backdrop was clicked. */\n    _closeViaBackdropClick() {\n        // If the drawer is closed upon a backdrop click, we always want to restore focus. We\n        // don't need to check whether focus is currently in the drawer, as clicking on the\n        // backdrop causes blurs the active element.\n        return this._setOpen(/* isOpen */ false, /* restoreFocus */ true, 'mouse');\n    }\n    /**\n     * Toggle this drawer.\n     * @param isOpen Whether the drawer should be open.\n     * @param openedVia Whether the drawer was opened by a key press, mouse click or programmatically.\n     * Used for focus management after the sidenav is closed.\n     */\n    toggle(isOpen = !this.opened, openedVia) {\n        // If the focus is currently inside the drawer content and we are closing the drawer,\n        // restore the focus to the initially focused element (when the drawer opened).\n        if (isOpen && openedVia) {\n            this._openedVia = openedVia;\n        }\n        const result = this._setOpen(isOpen, \n        /* restoreFocus */ !isOpen && this._isFocusWithinDrawer(), this._openedVia || 'program');\n        if (!isOpen) {\n            this._openedVia = null;\n        }\n        return result;\n    }\n    /**\n     * Toggles the opened state of the drawer.\n     * @param isOpen Whether the drawer should open or close.\n     * @param restoreFocus Whether focus should be restored on close.\n     * @param focusOrigin Origin to use when restoring focus.\n     */\n    _setOpen(isOpen, restoreFocus, focusOrigin) {\n        this._opened = isOpen;\n        if (isOpen) {\n            this._animationState = this._enableAnimations ? 'open' : 'open-instant';\n        }\n        else {\n            this._animationState = 'void';\n            if (restoreFocus) {\n                this._restoreFocus(focusOrigin);\n            }\n        }\n        this._updateFocusTrapState();\n        return new Promise(resolve => {\n            this.openedChange.pipe(take(1)).subscribe(open => resolve(open ? 'open' : 'close'));\n        });\n    }\n    _getWidth() {\n        return this._elementRef.nativeElement ? this._elementRef.nativeElement.offsetWidth || 0 : 0;\n    }\n    /** Updates the enabled state of the focus trap. */\n    _updateFocusTrapState() {\n        if (this._focusTrap) {\n            // The focus trap is only enabled when the drawer is open in any mode other than side.\n            this._focusTrap.enabled = this.opened && this.mode !== 'side';\n        }\n    }\n}\nMatDrawer.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatDrawer, deps: [{ token: i0.ElementRef }, { token: i2.FocusTrapFactory }, { token: i2.FocusMonitor }, { token: i3.Platform }, { token: i0.NgZone }, { token: i2.InteractivityChecker }, { token: DOCUMENT, optional: true }, { token: MAT_DRAWER_CONTAINER, optional: true }], target: i0.ɵɵFactoryTarget.Component });\nMatDrawer.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: MatDrawer, selector: \"mat-drawer\", inputs: { position: \"position\", mode: \"mode\", disableClose: \"disableClose\", autoFocus: \"autoFocus\", opened: \"opened\" }, outputs: { openedChange: \"openedChange\", _openedStream: \"opened\", openedStart: \"openedStart\", _closedStream: \"closed\", closedStart: \"closedStart\", onPositionChanged: \"positionChanged\" }, host: { attributes: { \"tabIndex\": \"-1\" }, listeners: { \"@transform.start\": \"_animationStarted.next($event)\", \"@transform.done\": \"_animationEnd.next($event)\" }, properties: { \"attr.align\": \"null\", \"class.mat-drawer-end\": \"position === \\\"end\\\"\", \"class.mat-drawer-over\": \"mode === \\\"over\\\"\", \"class.mat-drawer-push\": \"mode === \\\"push\\\"\", \"class.mat-drawer-side\": \"mode === \\\"side\\\"\", \"class.mat-drawer-opened\": \"opened\", \"@transform\": \"_animationState\" }, classAttribute: \"mat-drawer\" }, exportAs: [\"matDrawer\"], ngImport: i0, template: \"<div class=\\\"mat-drawer-inner-container\\\" cdkScrollable>\\r\\n  <ng-content></ng-content>\\r\\n</div>\\r\\n\", directives: [{ type: i1.CdkScrollable, selector: \"[cdk-scrollable], [cdkScrollable]\" }], animations: [matDrawerAnimations.transformDrawer], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatDrawer, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-drawer', exportAs: 'matDrawer', animations: [matDrawerAnimations.transformDrawer], host: {\n                        'class': 'mat-drawer',\n                        // must prevent the browser from aligning text based on value\n                        '[attr.align]': 'null',\n                        '[class.mat-drawer-end]': 'position === \"end\"',\n                        '[class.mat-drawer-over]': 'mode === \"over\"',\n                        '[class.mat-drawer-push]': 'mode === \"push\"',\n                        '[class.mat-drawer-side]': 'mode === \"side\"',\n                        '[class.mat-drawer-opened]': 'opened',\n                        'tabIndex': '-1',\n                        '[@transform]': '_animationState',\n                        '(@transform.start)': '_animationStarted.next($event)',\n                        '(@transform.done)': '_animationEnd.next($event)',\n                    }, changeDetection: ChangeDetectionStrategy.OnPush, encapsulation: ViewEncapsulation.None, template: \"<div class=\\\"mat-drawer-inner-container\\\" cdkScrollable>\\r\\n  <ng-content></ng-content>\\r\\n</div>\\r\\n\" }]\n        }], ctorParameters: function () {\n        return [{ type: i0.ElementRef }, { type: i2.FocusTrapFactory }, { type: i2.FocusMonitor }, { type: i3.Platform }, { type: i0.NgZone }, { type: i2.InteractivityChecker }, { type: undefined, decorators: [{\n                        type: Optional\n                    }, {\n                        type: Inject,\n                        args: [DOCUMENT]\n                    }] }, { type: MatDrawerContainer, decorators: [{\n                        type: Optional\n                    }, {\n                        type: Inject,\n                        args: [MAT_DRAWER_CONTAINER]\n                    }] }];\n    }, propDecorators: { position: [{\n                type: Input\n            }], mode: [{\n                type: Input\n            }], disableClose: [{\n                type: Input\n            }], autoFocus: [{\n                type: Input\n            }], opened: [{\n                type: Input\n            }], openedChange: [{\n                type: Output\n            }], _openedStream: [{\n                type: Output,\n                args: ['opened']\n            }], openedStart: [{\n                type: Output\n            }], _closedStream: [{\n                type: Output,\n                args: ['closed']\n            }], closedStart: [{\n                type: Output\n            }], onPositionChanged: [{\n                type: Output,\n                args: ['positionChanged']\n            }] } });\n/**\n * `<mat-drawer-container>` component.\n *\n * This is the parent component to one or two `<mat-drawer>`s that validates the state internally\n * and coordinates the backdrop and content styling.\n */\nclass MatDrawerContainer {\n    constructor(_dir, _element, _ngZone, _changeDetectorRef, viewportRuler, defaultAutosize = false, _animationMode) {\n        this._dir = _dir;\n        this._element = _element;\n        this._ngZone = _ngZone;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._animationMode = _animationMode;\n        /** Drawers that belong to this container. */\n        this._drawers = new QueryList();\n        /** Event emitted when the drawer backdrop is clicked. */\n        this.backdropClick = new EventEmitter();\n        /** Emits when the component is destroyed. */\n        this._destroyed = new Subject();\n        /** Emits on every ngDoCheck. Used for debouncing reflows. */\n        this._doCheckSubject = new Subject();\n        /**\n         * Margins to be applied to the content. These are used to push / shrink the drawer content when a\n         * drawer is open. We use margin rather than transform even for push mode because transform breaks\n         * fixed position elements inside of the transformed element.\n         */\n        this._contentMargins = { left: null, right: null };\n        this._contentMarginChanges = new Subject();\n        // If a `Dir` directive exists up the tree, listen direction changes\n        // and update the left/right properties to point to the proper start/end.\n        if (_dir) {\n            _dir.change.pipe(takeUntil(this._destroyed)).subscribe(() => {\n                this._validateDrawers();\n                this.updateContentMargins();\n            });\n        }\n        // Since the minimum width of the sidenav depends on the viewport width,\n        // we need to recompute the margins if the viewport changes.\n        viewportRuler\n            .change()\n            .pipe(takeUntil(this._destroyed))\n            .subscribe(() => this.updateContentMargins());\n        this._autosize = defaultAutosize;\n    }\n    /** The drawer child with the `start` position. */\n    get start() {\n        return this._start;\n    }\n    /** The drawer child with the `end` position. */\n    get end() {\n        return this._end;\n    }\n    /**\n     * Whether to automatically resize the container whenever\n     * the size of any of its drawers changes.\n     *\n     * **Use at your own risk!** Enabling this option can cause layout thrashing by measuring\n     * the drawers on every change detection cycle. Can be configured globally via the\n     * `MAT_DRAWER_DEFAULT_AUTOSIZE` token.\n     */\n    get autosize() {\n        return this._autosize;\n    }\n    set autosize(value) {\n        this._autosize = coerceBooleanProperty(value);\n    }\n    /**\n     * Whether the drawer container should have a backdrop while one of the sidenavs is open.\n     * If explicitly set to `true`, the backdrop will be enabled for drawers in the `side`\n     * mode as well.\n     */\n    get hasBackdrop() {\n        if (this._backdropOverride == null) {\n            return !this._start || this._start.mode !== 'side' || !this._end || this._end.mode !== 'side';\n        }\n        return this._backdropOverride;\n    }\n    set hasBackdrop(value) {\n        this._backdropOverride = value == null ? null : coerceBooleanProperty(value);\n    }\n    /** Reference to the CdkScrollable instance that wraps the scrollable content. */\n    get scrollable() {\n        return this._userContent || this._content;\n    }\n    ngAfterContentInit() {\n        this._allDrawers.changes\n            .pipe(startWith(this._allDrawers), takeUntil(this._destroyed))\n            .subscribe((drawer) => {\n            this._drawers.reset(drawer.filter(item => !item._container || item._container === this));\n            this._drawers.notifyOnChanges();\n        });\n        this._drawers.changes.pipe(startWith(null)).subscribe(() => {\n            this._validateDrawers();\n            this._drawers.forEach((drawer) => {\n                this._watchDrawerToggle(drawer);\n                this._watchDrawerPosition(drawer);\n                this._watchDrawerMode(drawer);\n            });\n            if (!this._drawers.length ||\n                this._isDrawerOpen(this._start) ||\n                this._isDrawerOpen(this._end)) {\n                this.updateContentMargins();\n            }\n            this._changeDetectorRef.markForCheck();\n        });\n        // Avoid hitting the NgZone through the debounce timeout.\n        this._ngZone.runOutsideAngular(() => {\n            this._doCheckSubject\n                .pipe(debounceTime(10), // Arbitrary debounce time, less than a frame at 60fps\n            takeUntil(this._destroyed))\n                .subscribe(() => this.updateContentMargins());\n        });\n    }\n    ngOnDestroy() {\n        this._contentMarginChanges.complete();\n        this._doCheckSubject.complete();\n        this._drawers.destroy();\n        this._destroyed.next();\n        this._destroyed.complete();\n    }\n    /** Calls `open` of both start and end drawers */\n    open() {\n        this._drawers.forEach(drawer => drawer.open());\n    }\n    /** Calls `close` of both start and end drawers */\n    close() {\n        this._drawers.forEach(drawer => drawer.close());\n    }\n    /**\n     * Recalculates and updates the inline styles for the content. Note that this should be used\n     * sparingly, because it causes a reflow.\n     */\n    updateContentMargins() {\n        // 1. For drawers in `over` mode, they don't affect the content.\n        // 2. For drawers in `side` mode they should shrink the content. We do this by adding to the\n        //    left margin (for left drawer) or right margin (for right the drawer).\n        // 3. For drawers in `push` mode the should shift the content without resizing it. We do this by\n        //    adding to the left or right margin and simultaneously subtracting the same amount of\n        //    margin from the other side.\n        let left = 0;\n        let right = 0;\n        if (this._left && this._left.opened) {\n            if (this._left.mode == 'side') {\n                left += this._left._getWidth();\n            }\n            else if (this._left.mode == 'push') {\n                const width = this._left._getWidth();\n                left += width;\n                right -= width;\n            }\n        }\n        if (this._right && this._right.opened) {\n            if (this._right.mode == 'side') {\n                right += this._right._getWidth();\n            }\n            else if (this._right.mode == 'push') {\n                const width = this._right._getWidth();\n                right += width;\n                left -= width;\n            }\n        }\n        // If either `right` or `left` is zero, don't set a style to the element. This\n        // allows users to specify a custom size via CSS class in SSR scenarios where the\n        // measured widths will always be zero. Note that we reset to `null` here, rather\n        // than below, in order to ensure that the types in the `if` below are consistent.\n        left = left || null;\n        right = right || null;\n        if (left !== this._contentMargins.left || right !== this._contentMargins.right) {\n            this._contentMargins = { left, right };\n            // Pull back into the NgZone since in some cases we could be outside. We need to be careful\n            // to do it only when something changed, otherwise we can end up hitting the zone too often.\n            this._ngZone.run(() => this._contentMarginChanges.next(this._contentMargins));\n        }\n    }\n    ngDoCheck() {\n        // If users opted into autosizing, do a check every change detection cycle.\n        if (this._autosize && this._isPushed()) {\n            // Run outside the NgZone, otherwise the debouncer will throw us into an infinite loop.\n            this._ngZone.runOutsideAngular(() => this._doCheckSubject.next());\n        }\n    }\n    /**\n     * Subscribes to drawer events in order to set a class on the main container element when the\n     * drawer is open and the backdrop is visible. This ensures any overflow on the container element\n     * is properly hidden.\n     */\n    _watchDrawerToggle(drawer) {\n        drawer._animationStarted\n            .pipe(filter((event) => event.fromState !== event.toState), takeUntil(this._drawers.changes))\n            .subscribe((event) => {\n            // Set the transition class on the container so that the animations occur. This should not\n            // be set initially because animations should only be triggered via a change in state.\n            if (event.toState !== 'open-instant' && this._animationMode !== 'NoopAnimations') {\n                this._element.nativeElement.classList.add('mat-drawer-transition');\n            }\n            this.updateContentMargins();\n            this._changeDetectorRef.markForCheck();\n        });\n        if (drawer.mode !== 'side') {\n            drawer.openedChange\n                .pipe(takeUntil(this._drawers.changes))\n                .subscribe(() => this._setContainerClass(drawer.opened));\n        }\n    }\n    /**\n     * Subscribes to drawer onPositionChanged event in order to\n     * re-validate drawers when the position changes.\n     */\n    _watchDrawerPosition(drawer) {\n        if (!drawer) {\n            return;\n        }\n        // NOTE: We need to wait for the microtask queue to be empty before validating,\n        // since both drawers may be swapping positions at the same time.\n        drawer.onPositionChanged.pipe(takeUntil(this._drawers.changes)).subscribe(() => {\n            this._ngZone.onMicrotaskEmpty.pipe(take(1)).subscribe(() => {\n                this._validateDrawers();\n            });\n        });\n    }\n    /** Subscribes to changes in drawer mode so we can run change detection. */\n    _watchDrawerMode(drawer) {\n        if (drawer) {\n            drawer._modeChanged\n                .pipe(takeUntil(merge(this._drawers.changes, this._destroyed)))\n                .subscribe(() => {\n                this.updateContentMargins();\n                this._changeDetectorRef.markForCheck();\n            });\n        }\n    }\n    /** Toggles the 'mat-drawer-opened' class on the main 'mat-drawer-container' element. */\n    _setContainerClass(isAdd) {\n        const classList = this._element.nativeElement.classList;\n        const className = 'mat-drawer-container-has-open';\n        if (isAdd) {\n            classList.add(className);\n        }\n        else {\n            classList.remove(className);\n        }\n    }\n    /** Validate the state of the drawer children components. */\n    _validateDrawers() {\n        this._start = this._end = null;\n        // Ensure that we have at most one start and one end drawer.\n        this._drawers.forEach(drawer => {\n            if (drawer.position == 'end') {\n                if (this._end != null && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n                    throwMatDuplicatedDrawerError('end');\n                }\n                this._end = drawer;\n            }\n            else {\n                if (this._start != null && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n                    throwMatDuplicatedDrawerError('start');\n                }\n                this._start = drawer;\n            }\n        });\n        this._right = this._left = null;\n        // Detect if we're LTR or RTL.\n        if (this._dir && this._dir.value === 'rtl') {\n            this._left = this._end;\n            this._right = this._start;\n        }\n        else {\n            this._left = this._start;\n            this._right = this._end;\n        }\n    }\n    /** Whether the container is being pushed to the side by one of the drawers. */\n    _isPushed() {\n        return ((this._isDrawerOpen(this._start) && this._start.mode != 'over') ||\n            (this._isDrawerOpen(this._end) && this._end.mode != 'over'));\n    }\n    _onBackdropClicked() {\n        this.backdropClick.emit();\n        this._closeModalDrawersViaBackdrop();\n    }\n    _closeModalDrawersViaBackdrop() {\n        // Close all open drawers where closing is not disabled and the mode is not `side`.\n        [this._start, this._end]\n            .filter(drawer => drawer && !drawer.disableClose && this._canHaveBackdrop(drawer))\n            .forEach(drawer => drawer._closeViaBackdropClick());\n    }\n    _isShowingBackdrop() {\n        return ((this._isDrawerOpen(this._start) && this._canHaveBackdrop(this._start)) ||\n            (this._isDrawerOpen(this._end) && this._canHaveBackdrop(this._end)));\n    }\n    _canHaveBackdrop(drawer) {\n        return drawer.mode !== 'side' || !!this._backdropOverride;\n    }\n    _isDrawerOpen(drawer) {\n        return drawer != null && drawer.opened;\n    }\n}\nMatDrawerContainer.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatDrawerContainer, deps: [{ token: i4.Directionality, optional: true }, { token: i0.ElementRef }, { token: i0.NgZone }, { token: i0.ChangeDetectorRef }, { token: i1.ViewportRuler }, { token: MAT_DRAWER_DEFAULT_AUTOSIZE }, { token: ANIMATION_MODULE_TYPE, optional: true }], target: i0.ɵɵFactoryTarget.Component });\nMatDrawerContainer.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: MatDrawerContainer, selector: \"mat-drawer-container\", inputs: { autosize: \"autosize\", hasBackdrop: \"hasBackdrop\" }, outputs: { backdropClick: \"backdropClick\" }, host: { properties: { \"class.mat-drawer-container-explicit-backdrop\": \"_backdropOverride\" }, classAttribute: \"mat-drawer-container\" }, providers: [\n        {\n            provide: MAT_DRAWER_CONTAINER,\n            useExisting: MatDrawerContainer,\n        },\n    ], queries: [{ propertyName: \"_content\", first: true, predicate: MatDrawerContent, descendants: true }, { propertyName: \"_allDrawers\", predicate: MatDrawer, descendants: true }], viewQueries: [{ propertyName: \"_userContent\", first: true, predicate: MatDrawerContent, descendants: true }], exportAs: [\"matDrawerContainer\"], ngImport: i0, template: \"<div class=\\\"mat-drawer-backdrop\\\" (click)=\\\"_onBackdropClicked()\\\" *ngIf=\\\"hasBackdrop\\\"\\n     [class.mat-drawer-shown]=\\\"_isShowingBackdrop()\\\"></div>\\n\\n<ng-content select=\\\"mat-drawer\\\"></ng-content>\\n\\n<ng-content select=\\\"mat-drawer-content\\\">\\n</ng-content>\\n<mat-drawer-content *ngIf=\\\"!_content\\\">\\n  <ng-content></ng-content>\\n</mat-drawer-content>\\n\", styles: [\".mat-drawer-container{position:relative;z-index:1;box-sizing:border-box;-webkit-overflow-scrolling:touch;display:block;overflow:hidden}.mat-drawer-container[fullscreen]{top:0;left:0;right:0;bottom:0;position:absolute}.mat-drawer-container[fullscreen].mat-drawer-container-has-open{overflow:hidden}.mat-drawer-container.mat-drawer-container-explicit-backdrop .mat-drawer-side{z-index:3}.mat-drawer-container.ng-animate-disabled .mat-drawer-backdrop,.mat-drawer-container.ng-animate-disabled .mat-drawer-content,.ng-animate-disabled .mat-drawer-container .mat-drawer-backdrop,.ng-animate-disabled .mat-drawer-container .mat-drawer-content{transition:none}.mat-drawer-backdrop{top:0;left:0;right:0;bottom:0;position:absolute;display:block;z-index:3;visibility:hidden}.mat-drawer-backdrop.mat-drawer-shown{visibility:visible}.mat-drawer-transition .mat-drawer-backdrop{transition-duration:400ms;transition-timing-function:cubic-bezier(0.25, 0.8, 0.25, 1);transition-property:background-color,visibility}.cdk-high-contrast-active .mat-drawer-backdrop{opacity:.5}.mat-drawer-content{position:relative;z-index:1;display:block;height:100%;overflow:auto}.mat-drawer-transition .mat-drawer-content{transition-duration:400ms;transition-timing-function:cubic-bezier(0.25, 0.8, 0.25, 1);transition-property:transform,margin-left,margin-right}.mat-drawer{position:relative;z-index:4;display:block;position:absolute;top:0;bottom:0;z-index:3;outline:0;box-sizing:border-box;overflow-y:auto;transform:translate3d(-100%, 0, 0)}.cdk-high-contrast-active .mat-drawer,.cdk-high-contrast-active [dir=rtl] .mat-drawer.mat-drawer-end{border-right:solid 1px currentColor}.cdk-high-contrast-active [dir=rtl] .mat-drawer,.cdk-high-contrast-active .mat-drawer.mat-drawer-end{border-left:solid 1px currentColor;border-right:none}.mat-drawer.mat-drawer-side{z-index:2}.mat-drawer.mat-drawer-end{right:0;transform:translate3d(100%, 0, 0)}[dir=rtl] .mat-drawer{transform:translate3d(100%, 0, 0)}[dir=rtl] .mat-drawer.mat-drawer-end{left:0;right:auto;transform:translate3d(-100%, 0, 0)}.mat-drawer-inner-container{width:100%;height:100%;overflow:auto;-webkit-overflow-scrolling:touch}.mat-sidenav-fixed{position:fixed}\\n\"], components: [{ type: MatDrawerContent, selector: \"mat-drawer-content\" }], directives: [{ type: i5.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatDrawerContainer, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-drawer-container', exportAs: 'matDrawerContainer', host: {\n                        'class': 'mat-drawer-container',\n                        '[class.mat-drawer-container-explicit-backdrop]': '_backdropOverride',\n                    }, changeDetection: ChangeDetectionStrategy.OnPush, encapsulation: ViewEncapsulation.None, providers: [\n                        {\n                            provide: MAT_DRAWER_CONTAINER,\n                            useExisting: MatDrawerContainer,\n                        },\n                    ], template: \"<div class=\\\"mat-drawer-backdrop\\\" (click)=\\\"_onBackdropClicked()\\\" *ngIf=\\\"hasBackdrop\\\"\\n     [class.mat-drawer-shown]=\\\"_isShowingBackdrop()\\\"></div>\\n\\n<ng-content select=\\\"mat-drawer\\\"></ng-content>\\n\\n<ng-content select=\\\"mat-drawer-content\\\">\\n</ng-content>\\n<mat-drawer-content *ngIf=\\\"!_content\\\">\\n  <ng-content></ng-content>\\n</mat-drawer-content>\\n\", styles: [\".mat-drawer-container{position:relative;z-index:1;box-sizing:border-box;-webkit-overflow-scrolling:touch;display:block;overflow:hidden}.mat-drawer-container[fullscreen]{top:0;left:0;right:0;bottom:0;position:absolute}.mat-drawer-container[fullscreen].mat-drawer-container-has-open{overflow:hidden}.mat-drawer-container.mat-drawer-container-explicit-backdrop .mat-drawer-side{z-index:3}.mat-drawer-container.ng-animate-disabled .mat-drawer-backdrop,.mat-drawer-container.ng-animate-disabled .mat-drawer-content,.ng-animate-disabled .mat-drawer-container .mat-drawer-backdrop,.ng-animate-disabled .mat-drawer-container .mat-drawer-content{transition:none}.mat-drawer-backdrop{top:0;left:0;right:0;bottom:0;position:absolute;display:block;z-index:3;visibility:hidden}.mat-drawer-backdrop.mat-drawer-shown{visibility:visible}.mat-drawer-transition .mat-drawer-backdrop{transition-duration:400ms;transition-timing-function:cubic-bezier(0.25, 0.8, 0.25, 1);transition-property:background-color,visibility}.cdk-high-contrast-active .mat-drawer-backdrop{opacity:.5}.mat-drawer-content{position:relative;z-index:1;display:block;height:100%;overflow:auto}.mat-drawer-transition .mat-drawer-content{transition-duration:400ms;transition-timing-function:cubic-bezier(0.25, 0.8, 0.25, 1);transition-property:transform,margin-left,margin-right}.mat-drawer{position:relative;z-index:4;display:block;position:absolute;top:0;bottom:0;z-index:3;outline:0;box-sizing:border-box;overflow-y:auto;transform:translate3d(-100%, 0, 0)}.cdk-high-contrast-active .mat-drawer,.cdk-high-contrast-active [dir=rtl] .mat-drawer.mat-drawer-end{border-right:solid 1px currentColor}.cdk-high-contrast-active [dir=rtl] .mat-drawer,.cdk-high-contrast-active .mat-drawer.mat-drawer-end{border-left:solid 1px currentColor;border-right:none}.mat-drawer.mat-drawer-side{z-index:2}.mat-drawer.mat-drawer-end{right:0;transform:translate3d(100%, 0, 0)}[dir=rtl] .mat-drawer{transform:translate3d(100%, 0, 0)}[dir=rtl] .mat-drawer.mat-drawer-end{left:0;right:auto;transform:translate3d(-100%, 0, 0)}.mat-drawer-inner-container{width:100%;height:100%;overflow:auto;-webkit-overflow-scrolling:touch}.mat-sidenav-fixed{position:fixed}\\n\"] }]\n        }], ctorParameters: function () {\n        return [{ type: i4.Directionality, decorators: [{\n                        type: Optional\n                    }] }, { type: i0.ElementRef }, { type: i0.NgZone }, { type: i0.ChangeDetectorRef }, { type: i1.ViewportRuler }, { type: undefined, decorators: [{\n                        type: Inject,\n                        args: [MAT_DRAWER_DEFAULT_AUTOSIZE]\n                    }] }, { type: undefined, decorators: [{\n                        type: Optional\n                    }, {\n                        type: Inject,\n                        args: [ANIMATION_MODULE_TYPE]\n                    }] }];\n    }, propDecorators: { _allDrawers: [{\n                type: ContentChildren,\n                args: [MatDrawer, {\n                        // We need to use `descendants: true`, because Ivy will no longer match\n                        // indirect descendants if it's left as false.\n                        descendants: true,\n                    }]\n            }], _content: [{\n                type: ContentChild,\n                args: [MatDrawerContent]\n            }], _userContent: [{\n                type: ViewChild,\n                args: [MatDrawerContent]\n            }], autosize: [{\n                type: Input\n            }], hasBackdrop: [{\n                type: Input\n            }], backdropClick: [{\n                type: Output\n            }] } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass MatSidenavContent extends MatDrawerContent {\n    constructor(changeDetectorRef, container, elementRef, scrollDispatcher, ngZone) {\n        super(changeDetectorRef, container, elementRef, scrollDispatcher, ngZone);\n    }\n}\nMatSidenavContent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatSidenavContent, deps: [{ token: i0.ChangeDetectorRef }, { token: forwardRef(() => MatSidenavContainer) }, { token: i0.ElementRef }, { token: i1.ScrollDispatcher }, { token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Component });\nMatSidenavContent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: MatSidenavContent, selector: \"mat-sidenav-content\", host: { properties: { \"style.margin-left.px\": \"_container._contentMargins.left\", \"style.margin-right.px\": \"_container._contentMargins.right\" }, classAttribute: \"mat-drawer-content mat-sidenav-content\" }, usesInheritance: true, ngImport: i0, template: '<ng-content></ng-content>', isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatSidenavContent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'mat-sidenav-content',\n                    template: '<ng-content></ng-content>',\n                    host: {\n                        'class': 'mat-drawer-content mat-sidenav-content',\n                        '[style.margin-left.px]': '_container._contentMargins.left',\n                        '[style.margin-right.px]': '_container._contentMargins.right',\n                    },\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    encapsulation: ViewEncapsulation.None,\n                }]\n        }], ctorParameters: function () {\n        return [{ type: i0.ChangeDetectorRef }, { type: MatSidenavContainer, decorators: [{\n                        type: Inject,\n                        args: [forwardRef(() => MatSidenavContainer)]\n                    }] }, { type: i0.ElementRef }, { type: i1.ScrollDispatcher }, { type: i0.NgZone }];\n    } });\nclass MatSidenav extends MatDrawer {\n    constructor() {\n        super(...arguments);\n        this._fixedInViewport = false;\n        this._fixedTopGap = 0;\n        this._fixedBottomGap = 0;\n    }\n    /** Whether the sidenav is fixed in the viewport. */\n    get fixedInViewport() {\n        return this._fixedInViewport;\n    }\n    set fixedInViewport(value) {\n        this._fixedInViewport = coerceBooleanProperty(value);\n    }\n    /**\n     * The gap between the top of the sidenav and the top of the viewport when the sidenav is in fixed\n     * mode.\n     */\n    get fixedTopGap() {\n        return this._fixedTopGap;\n    }\n    set fixedTopGap(value) {\n        this._fixedTopGap = coerceNumberProperty(value);\n    }\n    /**\n     * The gap between the bottom of the sidenav and the bottom of the viewport when the sidenav is in\n     * fixed mode.\n     */\n    get fixedBottomGap() {\n        return this._fixedBottomGap;\n    }\n    set fixedBottomGap(value) {\n        this._fixedBottomGap = coerceNumberProperty(value);\n    }\n}\nMatSidenav.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatSidenav, deps: null, target: i0.ɵɵFactoryTarget.Component });\nMatSidenav.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: MatSidenav, selector: \"mat-sidenav\", inputs: { fixedInViewport: \"fixedInViewport\", fixedTopGap: \"fixedTopGap\", fixedBottomGap: \"fixedBottomGap\" }, host: { attributes: { \"tabIndex\": \"-1\" }, properties: { \"attr.align\": \"null\", \"class.mat-drawer-end\": \"position === \\\"end\\\"\", \"class.mat-drawer-over\": \"mode === \\\"over\\\"\", \"class.mat-drawer-push\": \"mode === \\\"push\\\"\", \"class.mat-drawer-side\": \"mode === \\\"side\\\"\", \"class.mat-drawer-opened\": \"opened\", \"class.mat-sidenav-fixed\": \"fixedInViewport\", \"style.top.px\": \"fixedInViewport ? fixedTopGap : null\", \"style.bottom.px\": \"fixedInViewport ? fixedBottomGap : null\" }, classAttribute: \"mat-drawer mat-sidenav\" }, exportAs: [\"matSidenav\"], usesInheritance: true, ngImport: i0, template: \"<div class=\\\"mat-drawer-inner-container\\\" cdkScrollable>\\r\\n  <ng-content></ng-content>\\r\\n</div>\\r\\n\", directives: [{ type: i1.CdkScrollable, selector: \"[cdk-scrollable], [cdkScrollable]\" }], animations: [matDrawerAnimations.transformDrawer], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatSidenav, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-sidenav', exportAs: 'matSidenav', animations: [matDrawerAnimations.transformDrawer], host: {\n                        'class': 'mat-drawer mat-sidenav',\n                        'tabIndex': '-1',\n                        // must prevent the browser from aligning text based on value\n                        '[attr.align]': 'null',\n                        '[class.mat-drawer-end]': 'position === \"end\"',\n                        '[class.mat-drawer-over]': 'mode === \"over\"',\n                        '[class.mat-drawer-push]': 'mode === \"push\"',\n                        '[class.mat-drawer-side]': 'mode === \"side\"',\n                        '[class.mat-drawer-opened]': 'opened',\n                        '[class.mat-sidenav-fixed]': 'fixedInViewport',\n                        '[style.top.px]': 'fixedInViewport ? fixedTopGap : null',\n                        '[style.bottom.px]': 'fixedInViewport ? fixedBottomGap : null',\n                    }, changeDetection: ChangeDetectionStrategy.OnPush, encapsulation: ViewEncapsulation.None, template: \"<div class=\\\"mat-drawer-inner-container\\\" cdkScrollable>\\r\\n  <ng-content></ng-content>\\r\\n</div>\\r\\n\" }]\n        }], propDecorators: { fixedInViewport: [{\n                type: Input\n            }], fixedTopGap: [{\n                type: Input\n            }], fixedBottomGap: [{\n                type: Input\n            }] } });\nclass MatSidenavContainer extends MatDrawerContainer {\n}\nMatSidenavContainer.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatSidenavContainer, deps: null, target: i0.ɵɵFactoryTarget.Component });\nMatSidenavContainer.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: MatSidenavContainer, selector: \"mat-sidenav-container\", host: { properties: { \"class.mat-drawer-container-explicit-backdrop\": \"_backdropOverride\" }, classAttribute: \"mat-drawer-container mat-sidenav-container\" }, providers: [\n        {\n            provide: MAT_DRAWER_CONTAINER,\n            useExisting: MatSidenavContainer,\n        },\n    ], queries: [{ propertyName: \"_content\", first: true, predicate: MatSidenavContent, descendants: true }, { propertyName: \"_allDrawers\", predicate: MatSidenav, descendants: true }], exportAs: [\"matSidenavContainer\"], usesInheritance: true, ngImport: i0, template: \"<div class=\\\"mat-drawer-backdrop\\\" (click)=\\\"_onBackdropClicked()\\\" *ngIf=\\\"hasBackdrop\\\"\\n     [class.mat-drawer-shown]=\\\"_isShowingBackdrop()\\\"></div>\\n\\n<ng-content select=\\\"mat-sidenav\\\"></ng-content>\\n\\n<ng-content select=\\\"mat-sidenav-content\\\">\\n</ng-content>\\n<mat-sidenav-content *ngIf=\\\"!_content\\\" cdkScrollable>\\n  <ng-content></ng-content>\\n</mat-sidenav-content>\\n\", styles: [\".mat-drawer-container{position:relative;z-index:1;box-sizing:border-box;-webkit-overflow-scrolling:touch;display:block;overflow:hidden}.mat-drawer-container[fullscreen]{top:0;left:0;right:0;bottom:0;position:absolute}.mat-drawer-container[fullscreen].mat-drawer-container-has-open{overflow:hidden}.mat-drawer-container.mat-drawer-container-explicit-backdrop .mat-drawer-side{z-index:3}.mat-drawer-container.ng-animate-disabled .mat-drawer-backdrop,.mat-drawer-container.ng-animate-disabled .mat-drawer-content,.ng-animate-disabled .mat-drawer-container .mat-drawer-backdrop,.ng-animate-disabled .mat-drawer-container .mat-drawer-content{transition:none}.mat-drawer-backdrop{top:0;left:0;right:0;bottom:0;position:absolute;display:block;z-index:3;visibility:hidden}.mat-drawer-backdrop.mat-drawer-shown{visibility:visible}.mat-drawer-transition .mat-drawer-backdrop{transition-duration:400ms;transition-timing-function:cubic-bezier(0.25, 0.8, 0.25, 1);transition-property:background-color,visibility}.cdk-high-contrast-active .mat-drawer-backdrop{opacity:.5}.mat-drawer-content{position:relative;z-index:1;display:block;height:100%;overflow:auto}.mat-drawer-transition .mat-drawer-content{transition-duration:400ms;transition-timing-function:cubic-bezier(0.25, 0.8, 0.25, 1);transition-property:transform,margin-left,margin-right}.mat-drawer{position:relative;z-index:4;display:block;position:absolute;top:0;bottom:0;z-index:3;outline:0;box-sizing:border-box;overflow-y:auto;transform:translate3d(-100%, 0, 0)}.cdk-high-contrast-active .mat-drawer,.cdk-high-contrast-active [dir=rtl] .mat-drawer.mat-drawer-end{border-right:solid 1px currentColor}.cdk-high-contrast-active [dir=rtl] .mat-drawer,.cdk-high-contrast-active .mat-drawer.mat-drawer-end{border-left:solid 1px currentColor;border-right:none}.mat-drawer.mat-drawer-side{z-index:2}.mat-drawer.mat-drawer-end{right:0;transform:translate3d(100%, 0, 0)}[dir=rtl] .mat-drawer{transform:translate3d(100%, 0, 0)}[dir=rtl] .mat-drawer.mat-drawer-end{left:0;right:auto;transform:translate3d(-100%, 0, 0)}.mat-drawer-inner-container{width:100%;height:100%;overflow:auto;-webkit-overflow-scrolling:touch}.mat-sidenav-fixed{position:fixed}\\n\"], components: [{ type: MatSidenavContent, selector: \"mat-sidenav-content\" }], directives: [{ type: i5.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: i1.CdkScrollable, selector: \"[cdk-scrollable], [cdkScrollable]\" }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatSidenavContainer, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-sidenav-container', exportAs: 'matSidenavContainer', host: {\n                        'class': 'mat-drawer-container mat-sidenav-container',\n                        '[class.mat-drawer-container-explicit-backdrop]': '_backdropOverride',\n                    }, changeDetection: ChangeDetectionStrategy.OnPush, encapsulation: ViewEncapsulation.None, providers: [\n                        {\n                            provide: MAT_DRAWER_CONTAINER,\n                            useExisting: MatSidenavContainer,\n                        },\n                    ], template: \"<div class=\\\"mat-drawer-backdrop\\\" (click)=\\\"_onBackdropClicked()\\\" *ngIf=\\\"hasBackdrop\\\"\\n     [class.mat-drawer-shown]=\\\"_isShowingBackdrop()\\\"></div>\\n\\n<ng-content select=\\\"mat-sidenav\\\"></ng-content>\\n\\n<ng-content select=\\\"mat-sidenav-content\\\">\\n</ng-content>\\n<mat-sidenav-content *ngIf=\\\"!_content\\\" cdkScrollable>\\n  <ng-content></ng-content>\\n</mat-sidenav-content>\\n\", styles: [\".mat-drawer-container{position:relative;z-index:1;box-sizing:border-box;-webkit-overflow-scrolling:touch;display:block;overflow:hidden}.mat-drawer-container[fullscreen]{top:0;left:0;right:0;bottom:0;position:absolute}.mat-drawer-container[fullscreen].mat-drawer-container-has-open{overflow:hidden}.mat-drawer-container.mat-drawer-container-explicit-backdrop .mat-drawer-side{z-index:3}.mat-drawer-container.ng-animate-disabled .mat-drawer-backdrop,.mat-drawer-container.ng-animate-disabled .mat-drawer-content,.ng-animate-disabled .mat-drawer-container .mat-drawer-backdrop,.ng-animate-disabled .mat-drawer-container .mat-drawer-content{transition:none}.mat-drawer-backdrop{top:0;left:0;right:0;bottom:0;position:absolute;display:block;z-index:3;visibility:hidden}.mat-drawer-backdrop.mat-drawer-shown{visibility:visible}.mat-drawer-transition .mat-drawer-backdrop{transition-duration:400ms;transition-timing-function:cubic-bezier(0.25, 0.8, 0.25, 1);transition-property:background-color,visibility}.cdk-high-contrast-active .mat-drawer-backdrop{opacity:.5}.mat-drawer-content{position:relative;z-index:1;display:block;height:100%;overflow:auto}.mat-drawer-transition .mat-drawer-content{transition-duration:400ms;transition-timing-function:cubic-bezier(0.25, 0.8, 0.25, 1);transition-property:transform,margin-left,margin-right}.mat-drawer{position:relative;z-index:4;display:block;position:absolute;top:0;bottom:0;z-index:3;outline:0;box-sizing:border-box;overflow-y:auto;transform:translate3d(-100%, 0, 0)}.cdk-high-contrast-active .mat-drawer,.cdk-high-contrast-active [dir=rtl] .mat-drawer.mat-drawer-end{border-right:solid 1px currentColor}.cdk-high-contrast-active [dir=rtl] .mat-drawer,.cdk-high-contrast-active .mat-drawer.mat-drawer-end{border-left:solid 1px currentColor;border-right:none}.mat-drawer.mat-drawer-side{z-index:2}.mat-drawer.mat-drawer-end{right:0;transform:translate3d(100%, 0, 0)}[dir=rtl] .mat-drawer{transform:translate3d(100%, 0, 0)}[dir=rtl] .mat-drawer.mat-drawer-end{left:0;right:auto;transform:translate3d(-100%, 0, 0)}.mat-drawer-inner-container{width:100%;height:100%;overflow:auto;-webkit-overflow-scrolling:touch}.mat-sidenav-fixed{position:fixed}\\n\"] }]\n        }], propDecorators: { _allDrawers: [{\n                type: ContentChildren,\n                args: [MatSidenav, {\n                        // We need to use `descendants: true`, because Ivy will no longer match\n                        // indirect descendants if it's left as false.\n                        descendants: true,\n                    }]\n            }], _content: [{\n                type: ContentChild,\n                args: [MatSidenavContent]\n            }] } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass MatSidenavModule {\n}\nMatSidenavModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatSidenavModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nMatSidenavModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatSidenavModule, declarations: [MatDrawer,\n        MatDrawerContainer,\n        MatDrawerContent,\n        MatSidenav,\n        MatSidenavContainer,\n        MatSidenavContent], imports: [CommonModule, MatCommonModule, PlatformModule, CdkScrollableModule], exports: [CdkScrollableModule,\n        MatCommonModule,\n        MatDrawer,\n        MatDrawerContainer,\n        MatDrawerContent,\n        MatSidenav,\n        MatSidenavContainer,\n        MatSidenavContent] });\nMatSidenavModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatSidenavModule, imports: [[CommonModule, MatCommonModule, PlatformModule, CdkScrollableModule], CdkScrollableModule,\n        MatCommonModule] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatSidenavModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [CommonModule, MatCommonModule, PlatformModule, CdkScrollableModule],\n                    exports: [\n                        CdkScrollableModule,\n                        MatCommonModule,\n                        MatDrawer,\n                        MatDrawerContainer,\n                        MatDrawerContent,\n                        MatSidenav,\n                        MatSidenavContainer,\n                        MatSidenavContent,\n                    ],\n                    declarations: [\n                        MatDrawer,\n                        MatDrawerContainer,\n                        MatDrawerContent,\n                        MatSidenav,\n                        MatSidenavContainer,\n                        MatSidenavContent,\n                    ],\n                }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_DRAWER_DEFAULT_AUTOSIZE, MAT_DRAWER_DEFAULT_AUTOSIZE_FACTORY, MatDrawer, MatDrawerContainer, MatDrawerContent, MatSidenav, MatSidenavContainer, MatSidenavContent, MatSidenavModule, matDrawerAnimations, throwMatDuplicatedDrawerError };\n","import * as i0 from '@angular/core';\nimport { Directive, Component, ChangeDetectionStrategy, ViewEncapsulation, Inject, ContentChildren, NgModule } from '@angular/core';\nimport { mixinColor, MatCommonModule } from '@angular/material/core';\nimport { DOCUMENT } from '@angular/common';\nimport * as i1 from '@angular/cdk/platform';\n\n// Boilerplate for applying mixins to MatToolbar.\n/** @docs-private */\nconst _MatToolbarBase = mixinColor(class {\n    constructor(_elementRef) {\n        this._elementRef = _elementRef;\n    }\n});\nclass MatToolbarRow {\n}\nMatToolbarRow.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatToolbarRow, deps: [], target: i0.ɵɵFactoryTarget.Directive });\nMatToolbarRow.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.1.0\", type: MatToolbarRow, selector: \"mat-toolbar-row\", host: { classAttribute: \"mat-toolbar-row\" }, exportAs: [\"matToolbarRow\"], ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatToolbarRow, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'mat-toolbar-row',\n                    exportAs: 'matToolbarRow',\n                    host: { 'class': 'mat-toolbar-row' },\n                }]\n        }] });\nclass MatToolbar extends _MatToolbarBase {\n    constructor(elementRef, _platform, document) {\n        super(elementRef);\n        this._platform = _platform;\n        // TODO: make the document a required param when doing breaking changes.\n        this._document = document;\n    }\n    ngAfterViewInit() {\n        if (this._platform.isBrowser) {\n            this._checkToolbarMixedModes();\n            this._toolbarRows.changes.subscribe(() => this._checkToolbarMixedModes());\n        }\n    }\n    /**\n     * Throws an exception when developers are attempting to combine the different toolbar row modes.\n     */\n    _checkToolbarMixedModes() {\n        if (this._toolbarRows.length && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            // Check if there are any other DOM nodes that can display content but aren't inside of\n            // a <mat-toolbar-row> element.\n            const isCombinedUsage = Array.from(this._elementRef.nativeElement.childNodes)\n                .filter(node => !(node.classList && node.classList.contains('mat-toolbar-row')))\n                .filter(node => node.nodeType !== (this._document ? this._document.COMMENT_NODE : 8))\n                .some(node => !!(node.textContent && node.textContent.trim()));\n            if (isCombinedUsage) {\n                throwToolbarMixedModesError();\n            }\n        }\n    }\n}\nMatToolbar.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatToolbar, deps: [{ token: i0.ElementRef }, { token: i1.Platform }, { token: DOCUMENT }], target: i0.ɵɵFactoryTarget.Component });\nMatToolbar.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: MatToolbar, selector: \"mat-toolbar\", inputs: { color: \"color\" }, host: { properties: { \"class.mat-toolbar-multiple-rows\": \"_toolbarRows.length > 0\", \"class.mat-toolbar-single-row\": \"_toolbarRows.length === 0\" }, classAttribute: \"mat-toolbar\" }, queries: [{ propertyName: \"_toolbarRows\", predicate: MatToolbarRow, descendants: true }], exportAs: [\"matToolbar\"], usesInheritance: true, ngImport: i0, template: \"<ng-content></ng-content>\\n<ng-content select=\\\"mat-toolbar-row\\\"></ng-content>\\n\", styles: [\".cdk-high-contrast-active .mat-toolbar{outline:solid 1px}.mat-toolbar-row,.mat-toolbar-single-row{display:flex;box-sizing:border-box;padding:0 16px;width:100%;flex-direction:row;align-items:center;white-space:nowrap}.mat-toolbar-multiple-rows{display:flex;box-sizing:border-box;flex-direction:column;width:100%}\\n\"], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatToolbar, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-toolbar', exportAs: 'matToolbar', inputs: ['color'], host: {\n                        'class': 'mat-toolbar',\n                        '[class.mat-toolbar-multiple-rows]': '_toolbarRows.length > 0',\n                        '[class.mat-toolbar-single-row]': '_toolbarRows.length === 0',\n                    }, changeDetection: ChangeDetectionStrategy.OnPush, encapsulation: ViewEncapsulation.None, template: \"<ng-content></ng-content>\\n<ng-content select=\\\"mat-toolbar-row\\\"></ng-content>\\n\", styles: [\".cdk-high-contrast-active .mat-toolbar{outline:solid 1px}.mat-toolbar-row,.mat-toolbar-single-row{display:flex;box-sizing:border-box;padding:0 16px;width:100%;flex-direction:row;align-items:center;white-space:nowrap}.mat-toolbar-multiple-rows{display:flex;box-sizing:border-box;flex-direction:column;width:100%}\\n\"] }]\n        }], ctorParameters: function () {\n        return [{ type: i0.ElementRef }, { type: i1.Platform }, { type: undefined, decorators: [{\n                        type: Inject,\n                        args: [DOCUMENT]\n                    }] }];\n    }, propDecorators: { _toolbarRows: [{\n                type: ContentChildren,\n                args: [MatToolbarRow, { descendants: true }]\n            }] } });\n/**\n * Throws an exception when attempting to combine the different toolbar row modes.\n * @docs-private\n */\nfunction throwToolbarMixedModesError() {\n    throw Error('MatToolbar: Attempting to combine different toolbar modes. ' +\n        'Either specify multiple `<mat-toolbar-row>` elements explicitly or just place content ' +\n        'inside of a `<mat-toolbar>` for a single row.');\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass MatToolbarModule {\n}\nMatToolbarModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatToolbarModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nMatToolbarModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatToolbarModule, declarations: [MatToolbar, MatToolbarRow], imports: [MatCommonModule], exports: [MatToolbar, MatToolbarRow, MatCommonModule] });\nMatToolbarModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatToolbarModule, imports: [[MatCommonModule], MatCommonModule] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatToolbarModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [MatCommonModule],\n                    exports: [MatToolbar, MatToolbarRow, MatCommonModule],\n                    declarations: [MatToolbar, MatToolbarRow],\n                }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MatToolbar, MatToolbarModule, MatToolbarRow, throwToolbarMixedModesError };\n"],"names":["i1","ScrollingModule","CdkScrollable","ScrollDispatcher","ViewportRuler","i6","DOCUMENT","i0","Injectable","Inject","ElementRef","ApplicationRef","InjectionToken","Directive","EventEmitter","Optional","Input","Output","NgModule","coerceCssPixelValue","coerceArray","coerceBooleanProperty","i1$1","supportsScrollBehavior","_isTestEnvironment","_getEventTarget","i5","BidiModule","DomPortalOutlet","TemplatePortal","PortalModule","Subject","Subscription","merge","take","takeUntil","takeWhile","ESCAPE","hasModifierKey","scrollBehaviorSupported","BlockScrollStrategy","constructor","_viewportRuler","document","_previousHTMLStyles","top","left","_isEnabled","_document","attach","enable","_canBeEnabled","root","documentElement","_previousScrollPosition","getViewportScrollPosition","style","classList","add","disable","html","body","htmlStyle","bodyStyle","previousHtmlScrollBehavior","scrollBehavior","previousBodyScrollBehavior","remove","window","scroll","contains","viewport","getViewportSize","scrollHeight","height","scrollWidth","width","getMatScrollStrategyAlreadyAttachedError","Error","CloseScrollStrategy","_scrollDispatcher","_ngZone","_config","_scrollSubscription","_detach","_overlayRef","hasAttached","run","detach","overlayRef","ngDevMode","stream","scrolled","threshold","_initialScrollPosition","subscribe","scrollPosition","Math","abs","updatePosition","unsubscribe","NoopScrollStrategy","isElementScrolledOutsideView","element","scrollContainers","some","containerBounds","outsideAbove","bottom","outsideBelow","outsideLeft","right","outsideRight","isElementClippedByScrolling","scrollContainerRect","clippedAbove","clippedBelow","clippedLeft","clippedRight","RepositionScrollStrategy","throttle","scrollThrottle","autoClose","overlayRect","overlayElement","getBoundingClientRect","parentRects","ScrollStrategyOptions","noop","close","config","block","reposition","ɵfac","NgZone","ɵprov","type","args","providedIn","undefined","decorators","OverlayConfig","scrollStrategy","panelClass","hasBackdrop","backdropClass","disposeOnNavigation","configKeys","Object","keys","key","ConnectionPositionPair","origin","overlay","offsetX","offsetY","originX","originY","overlayX","overlayY","ScrollingVisibility","ConnectedOverlayPositionChange","connectionPair","scrollableViewProperties","validateVerticalPosition","property","value","validateHorizontalPosition","OverlayRef","_portalOutlet","_host","_pane","_keyboardDispatcher","_location","_outsideClickDispatcher","_backdropElement","_backdropClick","_attachments","_detachments","_locationChanges","EMPTY","_backdropClickHandler","event","next","_keydownEvents","_outsidePointerEvents","_scrollStrategy","_positionStrategy","positionStrategy","backdropElement","hostElement","portal","attachResult","parentElement","_previousHostParent","appendChild","_updateStackingOrder","_updateElementSize","_updateElementDirection","onStable","pipe","_togglePointerEvents","_attachBackdrop","_toggleClasses","dispose","detachBackdrop","detachmentResult","_detachContentWhenStable","_a","isAttached","_disposeScrollStrategy","_disposeBackdrop","complete","backdropClick","attachments","detachments","keydownEvents","outsidePointerEvents","getConfig","apply","updatePositionStrategy","strategy","updateSize","sizeConfig","assign","setDirection","dir","direction","addPanelClass","classes","removePanelClass","getDirection","updateScrollStrategy","setAttribute","minWidth","minHeight","maxWidth","maxHeight","enablePointer","pointerEvents","showingClass","createElement","insertBefore","addEventListener","requestAnimationFrame","runOutsideAngular","nextSibling","parentNode","backdropToDetach","timeoutId","finishDetach","removeEventListener","clearTimeout","setTimeout","cssClasses","isAdd","filter","c","length","subscription","children","backdrop","OverlayContainer","_platform","ngOnDestroy","_containerElement","getContainerElement","_createContainer","containerClass","isBrowser","oppositePlatformContainers","querySelectorAll","i","container","Platform","boundingBoxClass","cssUnitPattern","FlexibleConnectedPositionStrategy","connectedTo","_overlayContainer","_lastBoundingBoxSize","_isPushed","_canPush","_growAfterOpen","_hasFlexibleDimensions","_positionLocked","_viewportMargin","_scrollables","_preferredPositions","_positionChanges","_resizeSubscription","_offsetX","_offsetY","_appliedPanelClasses","positionChanges","setOrigin","positions","_validatePositions","_boundingBox","_isDisposed","_isInitialRender","_lastPosition","change","reapplyLastPosition","_clearPanelClasses","_resetOverlayElementStyles","_resetBoundingBoxStyles","_viewportRect","_getNarrowedViewportRect","_originRect","_getOriginRect","_overlayRect","originRect","viewportRect","flexibleFits","fallback","pos","originPoint","_getOriginPoint","overlayPoint","_getOverlayPoint","overlayFit","_getOverlayFit","isCompletelyWithinViewport","_applyPosition","_canFitWithFlexibleDimensions","push","position","boundingBoxRect","_calculateBoundingBoxRect","visibleArea","bestFit","bestScore","fit","score","weight","_previousPushAmount","extendStyles","alignItems","justifyContent","lastPosition","withScrollableContainers","scrollables","withPositions","indexOf","withViewportMargin","margin","withFlexibleDimensions","flexibleDimensions","withGrowAfterOpen","growAfterOpen","withPush","canPush","withLockedPosition","isLocked","_origin","withDefaultOffsetX","offset","withDefaultOffsetY","withTransformOriginOn","selector","_transformOriginSelector","x","startX","_isRtl","endX","y","overlayStartX","overlayStartY","point","rawOverlayRect","getRoundedBoundingClientRect","_getOffset","leftOverflow","rightOverflow","topOverflow","bottomOverflow","visibleWidth","_subtractOverflows","visibleHeight","fitsInViewportVertically","fitsInViewportHorizontally","availableHeight","availableWidth","getPixelValue","verticalFit","horizontalFit","_pushOverlayOnScreen","start","overflowRight","max","overflowBottom","overflowTop","overflowLeft","pushX","pushY","_setTransformOrigin","_setOverlayElementStyles","_setBoundingBoxStyles","_addPanelClasses","observers","_getScrollVisibility","changeEvent","elements","xOrigin","yOrigin","transformOrigin","isRtl","smallestDistanceToViewportEdge","min","previousHeight","isBoundedByRightViewportEdge","isBoundedByLeftViewportEdge","previousWidth","styles","_hasExactPosition","transform","hasExactPosition","hasFlexibleDimensions","_getExactOverlayY","_getExactOverlayX","transformString","trim","virtualKeyboardOffset","documentHeight","clientHeight","horizontalStyleProperty","documentWidth","clientWidth","originBounds","overlayBounds","scrollContainerBounds","map","scrollable","getElementRef","nativeElement","isOriginClipped","isOriginOutsideView","isOverlayClipped","isOverlayOutsideView","overflows","reduce","currentValue","currentOverflow","axis","forEach","pair","cssClass","Element","destination","source","hasOwnProperty","input","units","split","parseFloat","clientRect","floor","wrapperClass","GlobalPositionStrategy","_cssPosition","_topOffset","_bottomOffset","_leftOffset","_rightOffset","_alignItems","_justifyContent","_width","_height","centerHorizontally","centerVertically","parentStyles","shouldBeFlushHorizontally","shouldBeFlushVertically","marginLeft","marginTop","marginBottom","marginRight","parent","OverlayPositionBuilder","global","flexibleConnectedTo","BaseOverlayDispatcher","_attachedOverlays","index","splice","OverlayKeyboardDispatcher","_keydownListener","overlays","_isAttached","OverlayOutsideClickDispatcher","_cursorStyleIsSet","_pointerDownListener","_pointerDownEventTarget","_clickListener","target","slice","IOS","_cursorOriginalValue","cursor","nextUniqueId","Overlay","scrollStrategies","_componentFactoryResolver","_positionBuilder","_injector","_directionality","create","host","_createHostElement","pane","_createPaneElement","portalOutlet","_createPortalOutlet","overlayConfig","id","_appRef","get","ComponentFactoryResolver","Injector","Directionality","Location","defaultPositionList","CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY","CdkOverlayOrigin","elementRef","ɵdir","exportAs","CdkConnectedOverlay","_overlay","templateRef","viewContainerRef","scrollStrategyFactory","_dir","_hasBackdrop","_lockPosition","_flexibleDimensions","_push","_backdropSubscription","_attachSubscription","_detachSubscription","_positionSubscription","viewportMargin","open","disableClose","positionChange","overlayKeydown","overlayOutsideClick","_templatePortal","_scrollStrategyFactory","_position","_updatePositionStrategy","lockPosition","ngOnChanges","changes","_attachOverlay","_detachOverlay","_createOverlay","_buildConfig","emit","keyCode","preventDefault","_createPositionStrategy","currentPosition","_getFlexibleConnectedPositionStrategyOrigin","transformOriginSelector","TemplateRef","ViewContainerRef","CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY_PROVIDER_FACTORY","CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY_PROVIDER","provide","deps","useFactory","OverlayModule","ɵmod","ɵinj","imports","exports","declarations","providers","FullscreenOverlayContainer","platform","_fullScreenEventName","_fullScreenListener","_adjustParentForFullscreenChange","_addFullscreenChangeListener","fullscreenElement","getFullscreenElement","fn","eventName","_getEventName","fullscreenEnabled","webkitFullscreenEnabled","mozFullScreenEnabled","msFullscreenEnabled","webkitFullscreenElement","mozFullScreenElement","msFullscreenElement","Component","ViewEncapsulation","ChangeDetectionStrategy","MatCommonModule","MatDivider","_vertical","_inset","vertical","inset","ɵcmp","template","encapsulation","None","changeDetection","OnPush","MatDividerModule","SecurityContext","SkipSelf","ErrorHandler","inject","Attribute","mixinColor","of","throwError","forkJoin","tap","catchError","finalize","share","HttpClient","i2","DomSanitizer","policy","getPolicy","ttWindow","trustedTypes","createPolicy","createHTML","s","trustedHTMLFromString","getMatIconNameNotFoundError","iconName","getMatIconNoHttpProviderError","getMatIconFailedToSanitizeUrlError","url","getMatIconFailedToSanitizeLiteralError","literal","SvgIconConfig","svgText","options","MatIconRegistry","_httpClient","_sanitizer","_errorHandler","_svgIconConfigs","Map","_iconSetConfigs","_cachedIconsByUrl","_inProgressUrlFetches","_fontCssClassesByAlias","_resolvers","_defaultFontSetClass","addSvgIcon","addSvgIconInNamespace","addSvgIconLiteral","addSvgIconLiteralInNamespace","namespace","_addSvgIconConfig","addSvgIconResolver","resolver","cleanLiteral","sanitize","HTML","trustedLiteral","addSvgIconSet","addSvgIconSetInNamespace","addSvgIconSetLiteral","addSvgIconSetLiteralInNamespace","_addSvgIconSetConfig","registerFontClassAlias","alias","className","set","classNameForFontAlias","setDefaultFontSetClass","getDefaultFontSetClass","getSvgIconFromUrl","safeUrl","RESOURCE_URL","cachedIcon","cloneSvg","_loadSvgIconFromConfig","svg","getNamedSvgIcon","name","iconKey","_getSvgFromConfig","_getIconConfigFromResolvers","iconSetConfigs","_getSvgFromIconSetConfigs","clear","_svgElementFromConfig","namedIcon","_extractIconWithNameFromAnySet","iconSetFetchRequests","iconSetConfig","_loadSvgIconSetFromConfig","err","errorMessage","message","handleError","foundIcon","toString","_extractSvgIconFromSet","_fetchIcon","iconSet","iconSource","querySelector","iconElement","cloneNode","removeAttribute","nodeName","toLowerCase","_setSvgAttributes","_toSvgElement","_svgElementFromString","str","div","innerHTML","attributes","childNodes","nodeType","ELEMENT_NODE","viewBox","iconConfig","withCredentials","inProgressFetch","req","responseType","delete","configNamespace","svgElement","result","isSafeUrlWithOptions","ICON_REGISTRY_PROVIDER_FACTORY","parentRegistry","httpClient","sanitizer","errorHandler","ICON_REGISTRY_PROVIDER","_MatIconBase","_elementRef","MAT_ICON_LOCATION","factory","MAT_ICON_LOCATION_FACTORY","location","getPathname","pathname","search","funcIriAttributes","funcIriAttributeSelector","attr","join","funcIriPattern","MatIcon","_iconRegistry","ariaHidden","_inline","_currentIconFetch","inline","svgIcon","_svgIcon","_updateSvgIcon","_clearSvgElement","fontSet","_fontSet","newValue","_cleanupFontValue","_updateFontIconClasses","fontIcon","_fontIcon","_splitIconName","parts","ngOnInit","ngAfterViewChecked","cachedElements","_elementsWithExternalReferences","size","newPath","_previousPath","_prependPathToReferences","_usingFontIcon","_setSvgElement","styleTags","textContent","path","_cacheChildrenWithExternalReferences","layoutElement","childCount","child","elem","fontSetClass","_previousFontSetClass","_previousFontIconClass","attrs","elementsWithFuncIri","elementWithReference","getAttribute","match","rawName","_svgNamespace","_svgName","inputs","MatIconModule","CommonModule","ContentChildren","ContentChild","forwardRef","ViewChild","mixinDisabled","mixinDisableRipple","setLines","MatLine","MatLineModule","MatRippleModule","MatPseudoCheckboxModule","startWith","i3","FocusKeyManager","SelectionModel","A","ENTER","SPACE","UP_ARROW","DOWN_ARROW","NG_VALUE_ACCESSOR","_MatListBase","_MatListItemMixinBase","MAT_LIST","MAT_NAV_LIST","MatNavList","arguments","_stateChanges","useExisting","MatList","_getListType","MatListAvatarCssMatStyler","MatListIconCssMatStyler","MatListSubheaderCssMatStyler","MatListItem","_element","_changeDetectorRef","navList","list","_isInteractiveList","_destroyed","_disabled","_list","_getHostElement","hasAttribute","markForCheck","disabled","ngAfterContentInit","_lines","_isRippleDisabled","disableRipple","ChangeDetectorRef","MatRipple","descendants","_avatar","_icon","_MatSelectionListBase","_MatListOptionBase","MAT_SELECTION_LIST_VALUE_ACCESSOR","MatSelectionList","multi","MatSelectionListChange","option","MatListOption","_changeDetector","selectionList","_selected","_hasFocus","selectedChange","checkboxPosition","_inputsInitialized","color","_color","_value","selected","compareWith","selectedOptions","isSelected","_setSelected","multiple","_reportValueChange","wasSelected","Promise","resolve","then","hadFocus","newActiveItem","_removeOptionFromList","focus","toggle","getLabel","_text","_handleClick","_emitChangeEvent","_handleFocus","_setFocusedOption","_handleBlur","_onTouched","select","deselect","_markForCheck","NgIf","MatPseudoCheckbox","tabIndex","_focusMonitor","_multiple","_contentInitialized","selectionChange","a1","a2","_tabIndex","_onChange","_","_markOptionsForCheck","_keyManager","withWrap","withTypeAhead","withHomeAndEnd","skipPredicate","withAllowedModifierKeys","_setOptionsFromValues","tabOut","_allowFocusEscape","_updateTabIndex","changed","added","item","removed","monitor","toFocus","setActiveItem","disableRippleChanges","colorChanges","firstChange","stopMonitoring","_isDestroyed","selectAll","_setAllOptionsSelected","deselectAll","updateActiveItem","optionIndex","_getOptionIndex","activeItemIndex","activeItem","_keydown","manager","previousFocusIndex","hasModifier","isTyping","_toggleFocusedOption","shouldSelect","onKeydown","shiftKey","_getSelectedOptionValues","writeValue","values","setDisabledState","isDisabled","registerOnChange","registerOnTouched","correspondingOption","find","focusedIndex","_isValidIndex","focusedOption","toArray","skipDisabled","isUserInput","changedOptions","FocusMonitor","MatListModule","isFakeTouchstartFromScreenReader","isFakeMousedownFromScreenReader","RIGHT_ARROW","LEFT_ARROW","QueryList","Self","asapScheduler","switchMap","delay","trigger","state","transition","animate","normalizePassiveListenerOptions","i3$1","CdkScrollableModule","matMenuAnimations","transformMenu","opacity","fadeInItems","MAT_MENU_CONTENT","_MatMenuContentBase","_template","_viewContainerRef","_attached","context","_portal","_outlet","outletElement","MatMenuContent","throwMatMenuMissingError","throwMatMenuInvalidPositionX","throwMatMenuInvalidPositionY","throwMatMenuRecursiveError","MAT_MENU_PANEL","_MatMenuItemBase","MatMenuItem","_parentMenu","role","_hovered","_focused","_highlighted","_triggersSubmenu","addItem","focusVia","ngAfterViewInit","removeItem","_getTabIndex","_checkDisabled","stopPropagation","_handleMouseEnter","clone","icons","_setHighlighted","isHighlighted","MAT_MENU_DEFAULT_OPTIONS","MAT_MENU_DEFAULT_OPTIONS_FACTORY","overlapTrigger","xPosition","yPosition","menuPanelUid","_MatMenuBase","_defaultOptions","_xPosition","_yPosition","_directDescendantItems","_tabSubscription","_classList","_panelAnimationState","_animationDone","overlayPanelClass","_overlapTrigger","closed","panelId","setPositionClasses","previousPanelClass","_previousPanelClass","_updateDirectDescendants","items","focusedItem","destroy","itemChanges","_item","_handleKeydown","parentMenu","setFocusOrigin","focusFirstItem","lazyContent","_focusFirstItem","setFirstItemActive","first","resetActiveItem","setElevation","depth","elevation","_baseElevation","newElevation","_elevationPrefix","customElevation","startsWith","_previousElevation","posX","posY","_startAnimation","_resetAnimation","_onAnimationDone","_isAnimating","_onAnimationStart","toState","scrollTop","_allItems","reset","notifyOnChanges","ariaLabel","ariaLabelledby","ariaDescribedby","MatMenu","ngZone","defaultOptions","NgClass","animations","MAT_MENU_SCROLL_STRATEGY","MAT_MENU_SCROLL_STRATEGY_FACTORY","MAT_MENU_SCROLL_STRATEGY_FACTORY_PROVIDER","MENU_PANEL_TOP_PADDING","passiveEventListenerOptions","passive","_MatMenuTriggerBase","_menuItemInstance","_menuOpen","_closingActionsSubscription","_hoverSubscription","_menuCloseSubscription","_handleTouchStart","_openedBy","restoreFocus","menuOpened","onMenuOpen","menuClosed","onMenuClose","_parentMaterialMenu","triggersSubmenu","_deprecatedMatMenuTriggerFor","menu","v","_menu","reason","_destroyMenu","_checkMenu","_handleHover","menuOpen","toggleMenu","closeMenu","openMenu","_setPosition","_getPortal","menuData","_menuClosingActions","_initMenu","_setIsMenuOpen","_setMenuElevation","isOpen","_getOverlayConfig","_subscribeToPositions","originFallbackX","overlayFallbackY","originFallbackY","overlayFallbackX","parentClose","hover","active","_handleMousedown","button","MatMenuTrigger","MatMenuModule","PlatformModule","coerceNumberProperty","fromEvent","mapTo","distinctUntilChanged","debounceTime","ANIMATION_MODULE_TYPE","i4","matDrawerAnimations","transformDrawer","throwMatDuplicatedDrawerError","MAT_DRAWER_DEFAULT_AUTOSIZE","MAT_DRAWER_DEFAULT_AUTOSIZE_FACTORY","MAT_DRAWER_CONTAINER","MatDrawerContent","_container","scrollDispatcher","_contentMarginChanges","MatDrawerContainer","MatDrawer","_focusTrapFactory","_interactivityChecker","_doc","_elementFocusedBeforeDrawerWasOpened","_enableAnimations","_mode","_disableClose","_opened","_animationStarted","_animationEnd","_animationState","openedChange","_openedStream","o","openedStart","e","fromState","_closedStream","closedStart","onPositionChanged","_modeChanged","opened","activeElement","_takeFocus","_isFocusWithinDrawer","_restoreFocus","_openedVia","mode","_updateFocusTrapState","autoFocus","_autoFocus","_forceFocus","isFocusable","_focusByCssSelector","elementToFocus","_focusTrap","focusInitialElementWhenReady","hasMovedFocus","focusOrigin","blur","activeEl","ngAfterContentChecked","openedVia","_closeViaBackdropClick","_setOpen","_getWidth","offsetWidth","enabled","FocusTrapFactory","InteractivityChecker","viewportRuler","defaultAutosize","_animationMode","_drawers","_doCheckSubject","_contentMargins","_validateDrawers","updateContentMargins","_autosize","_start","end","_end","autosize","_backdropOverride","_userContent","_content","_allDrawers","drawer","_watchDrawerToggle","_watchDrawerPosition","_watchDrawerMode","_isDrawerOpen","_left","_right","ngDoCheck","_setContainerClass","onMicrotaskEmpty","_onBackdropClicked","_closeModalDrawersViaBackdrop","_canHaveBackdrop","_isShowingBackdrop","MatSidenavContent","changeDetectorRef","MatSidenavContainer","MatSidenav","_fixedInViewport","_fixedTopGap","_fixedBottomGap","fixedInViewport","fixedTopGap","fixedBottomGap","MatSidenavModule","_MatToolbarBase","MatToolbarRow","MatToolbar","_checkToolbarMixedModes","_toolbarRows","isCombinedUsage","Array","from","node","COMMENT_NODE","throwToolbarMixedModesError","MatToolbarModule"],"sourceRoot":"webpack:///"}